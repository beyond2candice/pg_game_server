!function () {
  'use strict';

  var Bc = {
    AudioAdapterConstant: "AudioAdapterConstant",
    Utils: "Utils"
  };
  var Bb = {
    AudioManager: "AudioManager",
    BGMHandler: "BGMHandler",
    GConstants: "GConstants",
    GeneralAudioConstant: "GeneralAudioConstant",
    SlotProperties: "SlotProperties",
    SymbolImageHandler: "SymbolImageHandler",
    Utils: "Utils"
  };
  var Bn = {
    AnimParticleSystemUtils: "AnimParticleSystemUtils"
  };
  var Bu = {
    AdapterEventEmitter: "AdapterEventEmitter",
    AudioAdapterConstant: "AudioAdapterConstant",
    AudioFactory: "AudioFactory",
    ResRC: "ResRC"
  };
  var Bk = {
    AudioAdapterConstant: "AudioAdapterConstant"
  };
  var BD = {
    GameAudioAdapter: "GameAudioAdapter",
    GeneralAudioConstant: "GeneralAudioConstant",
    NoSoundAdapter: "NoSoundAdapter",
    RtConfig: "RtConfig",
    SettingMenuHelper: "SettingMenuHelper"
  };
  var Br = {
    GameEventHandler: "GameEventHandler"
  };
  var Bx = {
    AudioManager: "AudioManager",
    GConstants: "GConstants",
    Utils: "Utils"
  };
  var Be = {
    Utils: "Utils"
  };
  var BG = {
    AudioManager: "AudioManager",
    AutomationDecorator: "AutomationDecorator",
    BGMHandler: "BGMHandler",
    GConstants: "GConstants",
    GSlotTransactionModel: "GSlotTransactionModel",
    GameUtils: "GameUtils",
    GeneralAudioConstant: "GeneralAudioConstant",
    InfoboardController: "InfoboardController",
    SettingMenuHelper: "SettingMenuHelper",
    SkipHandler: "SkipHandler",
    SpaceBarInterrupter: "SpaceBarInterrupter",
    TweaksData: "TweaksData",
    Utils: "Utils",
    "WinLine.spec": "WinLine.spec"
  };
  var BY = {
    GenericSettingButton: "GenericSettingButton",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var Bm = {
    SymbolImageHandler: "SymbolImageHandler",
    Utils: "Utils"
  };
  var Bi = {
    AnalyticsHelper: "AnalyticsHelper",
    AutomationDecorator: "AutomationDecorator",
    BGMHandler: "BGMHandler",
    "BigWinController.spec": "BigWinController.spec",
    BigWinFireworkController: "BigWinFireworkController",
    GConstants: "GConstants",
    GDataSource: "GDataSource"
  };
  Bi.GameEventHandler = "GameEventHandler";
  Bi.SkipHandler = "SkipHandler";
  Bi.SpaceBarInterrupter = "SpaceBarInterrupter";
  Bi.Utils = "Utils";
  var BW = {
    ScrollViewEx: "ScrollViewEx"
  };
  var BF = {
    UIAppearanceHelper: "UIAppearanceHelper"
  };
  var Ba = {
    UIAppearanceHelper: "UIAppearanceHelper"
  };
  var BE = {
    AnimParticleSystem: "AnimParticleSystem"
  };
  var Bv = {
    ResourceLoader: "ResourceLoader",
    SettingMenuHelper: "SettingMenuHelper"
  };
  var BI = {
    BaseScroller: "BaseScroller"
  };
  var Bw = {
    BaseScroller: "BaseScroller"
  };
  var Bt = {
    SymbolImageHandler: "SymbolImageHandler"
  };
  var Bj = {
    Utils: "Utils"
  };
  var BZ = {
    GConstants: "GConstants"
  };
  var BX = {
    APIClient: "APIClient",
    "APIClient.spec": "APIClient.spec",
    AutomationDecorator: "AutomationDecorator",
    GDataSource: "GDataSource",
    TweaksData: "TweaksData",
    Utils: "Utils"
  };
  var BV = {
    DataSource: "DataSource",
    GSlotTransactionModel: "GSlotTransactionModel",
    PlayerModel: "PlayerModel",
    RtConfig: "RtConfig",
    SlotSystemModel: "SlotSystemModel"
  };
  var BH = {
    IdleState: "IdleState",
    ReplayModeHandler: "ReplayModeHandler",
    SlotGameConstants: "SlotGameConstants",
    TransactionStateMachineHandler: "TransactionStateMachineHandler"
  };
  var Bz = {
    GIdleState: "GIdleState",
    GNormalResultState: "GNormalResultState",
    GPrizeState: "GPrizeState",
    GResultDecorator: "GResultDecorator",
    GSlotTransactionModel: "GSlotTransactionModel",
    GSpinState: "GSpinState",
    NormalPrizeDecorator: "NormalPrizeDecorator",
    NormalSpinDecorator: "NormalSpinDecorator",
    NormalUIHelper: "NormalUIHelper",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Utils: "Utils"
  };
  var Bd = {
    GSlotTransactionModel: "GSlotTransactionModel",
    RespinReelStatusHandler: "RespinReelStatusHandler",
    ResultState: "ResultState",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotAnalyticsHelper: "SlotAnalyticsHelper",
    SlotProperties: "SlotProperties",
    SlotStateMachine: "SlotStateMachine",
    SpinConfigHandler: "SpinConfigHandler",
    TransactionStateMachineHandler: "TransactionStateMachineHandler"
  };
  var BP = {
    AudioManager: "AudioManager",
    BaseScroller: "BaseScroller",
    DefaultStopScroller: "DefaultStopScroller",
    GeneralAudioConstant: "GeneralAudioConstant",
    SlotProperties: "SlotProperties"
  };
  var Bp = {
    AudioManager: "AudioManager",
    GConstants: "GConstants",
    GeneralAudioConstant: "GeneralAudioConstant",
    PopOutItem: "PopOutItem",
    SlotProperties: "SlotProperties",
    SpineConfigHandler: "SpineConfigHandler"
  };
  var BO = {
    GSlotTransactionModel: "GSlotTransactionModel",
    PrizeState: "PrizeState",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Utils: "Utils"
  };
  var BL = {
    AudioManager: "AudioManager",
    AutoSpinHandler: "AutoSpinHandler",
    BGMHandler: "BGMHandler",
    GApiClient: "GApiClient",
    GDataSource: "GDataSource",
    GSlotTransactionModel: "GSlotTransactionModel",
    RefreshWorldHandler: "RefreshWorldHandler",
    Utils: "Utils"
  };
  var BU = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant",
    NormalSpinDecorator: "NormalSpinDecorator"
  };
  var BT = {
    GPrizeState: "GPrizeState",
    GRespinDecorator: "GRespinDecorator"
  };
  BT.GRespinResultState = "GRespinResultState";
  BT.GRespinState = "GRespinState";
  BT.GSlotTransactionModel = "GSlotTransactionModel";
  BT.NormalPrizeDecorator = "NormalPrizeDecorator";
  BT.NormalResultDecorator = "NormalResultDecorator";
  BT.ReplayModeHandler = "ReplayModeHandler";
  BT.RespinUIHelper = "RespinUIHelper";
  BT.TransactionStateMachineHandler = "TransactionStateMachineHandler";
  BT.Utils = "Utils";
  var Bg = {
    RespinReelStatusHandler: "RespinReelStatusHandler",
    ResultState: "ResultState",
    TransactionStateMachineHandler: "TransactionStateMachineHandler"
  };
  var R0 = {
    AutoSpinHandler: "AutoSpinHandler",
    GApiClient: "GApiClient",
    RequestHandler: "RequestHandler",
    SpinState: "SpinState",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Utils: "Utils"
  };
  var R1 = {
    NormalResultDecorator: "NormalResultDecorator"
  };
  var R2 = {
    SlotHelper: "SlotHelper",
    SlotProperties: "SlotProperties"
  };
  var R3 = {
    NodePoolHandler: "NodePoolHandler",
    SlotItemPool: "SlotItemPool"
  };
  var R4 = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant",
    NodePoolHandler: "NodePoolHandler",
    SlotItem: "SlotItem",
    SlotProperties: "SlotProperties",
    SpineConfigHandler: "SpineConfigHandler"
  };
  var R5 = {
    SlotTransactionModel: "SlotTransactionModel"
  };
  var R6 = {
    AudioManager: "AudioManager",
    AutomationDecorator: "AutomationDecorator",
    GConstants: "GConstants",
    GeneralAudioConstant: "GeneralAudioConstant",
    SpinButtonController: "SpinButtonController",
    "SpinButtonController.spec": "SpinButtonController.spec"
  };
  var R7 = {
    AutoSpinHandler: "AutoSpinHandler",
    GApiClient: "GApiClient",
    RequestHandler: "RequestHandler",
    SpinState: "SpinState",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Utils: "Utils"
  };
  var R8 = {
    AudioAdapter: "AudioAdapter",
    AudioAdapterConstant: "AudioAdapterConstant",
    AudioManager: "AudioManager"
  };
  var R9 = {
    Preference: "Preference",
    RtConfig: "RtConfig"
  };
  var Rh = {
    CreatorTweaks: "CreatorTweaks",
    TweaksConfig: "TweaksConfig",
    TweaksData: "TweaksData"
  };
  var RM = {
    ButtonTheme: "ButtonTheme",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var RB = {
    ScrollViewEx: "ScrollViewEx"
  };
  var RR = {
    AnalyticsHelper: "AnalyticsHelper",
    AutoSpinHandler: "AutoSpinHandler",
    ButtonHitTest: "ButtonHitTest",
    GameEventHandler: "GameEventHandler",
    JakeSlotGameTemplate: "JakeSlotGameTemplate",
    SettingMenuHelper: "SettingMenuHelper",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotGameConstants: "SlotGameConstants",
    SpinButtonController: "SpinButtonController",
    SystemFeatureHandler: "SystemFeatureHandler",
    Utils: "Utils",
    WalletHelper: "WalletHelper"
  };
  var Rl = {
    AnalyticsHelper: "AnalyticsHelper",
    AudioManager: "AudioManager",
    GConstants: "GConstants",
    GeneralAudioConstant: "GeneralAudioConstant",
    InfoboardMessageController: "InfoboardMessageController",
    SkipHandler: "SkipHandler",
    SymbolImageHandler: "SymbolImageHandler",
    Utils: "Utils"
  };
  var RQ = {
    AutomationDecorator: "AutomationDecorator",
    "InfoboardMessageController.spec": "InfoboardMessageController.spec",
    NumberDisplayController: "NumberDisplayController",
    NumberRollController: "NumberRollController",
    Utils: "Utils"
  };
  var RC = {
    ResRC: "ResRC",
    ResourceQualifierHelper: "ResourceQualifierHelper",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var RK = {
    SettingInfoFooterController: "SettingInfoFooterController",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var RS = {
    CanvasResizeBroadcaster: "CanvasResizeBroadcaster",
    SettingMenuController: "SettingMenuController",
    UIAppearanceHelper: "UIAppearanceHelper"
  };
  var Rq = {
    SoundButton: "SoundButton",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var RN = {
    LineController: "LineController"
  };
  var Rf = {
    ListViewEnum: "ListViewEnum"
  };
  var Ro = {
    AnalyticsHelper: "AnalyticsHelper",
    AudioAssetConfig: "AudioAssetConfig",
    AudioManager: "AudioManager",
    BVFrameworkEnum: "BVFrameworkEnum",
    CustomAssetConfig: "CustomAssetConfig",
    ErrorHandler: "ErrorHandler",
    GameAudioAdapter: "GameAudioAdapter",
    GeneralAssetConfig: "GeneralAssetConfig",
    LaunchConfig: "LaunchConfig",
    NoSoundAdapter: "NoSoundAdapter",
    QuitGameWithEvent: "QuitGameWithEvent",
    ResourceLoader: "ResourceLoader",
    SettingMenuHelper: "SettingMenuHelper",
    SpineConfigHandler: "SpineConfigHandler",
    SymbolImageHandler: "SymbolImageHandler"
  };
  var Rs = {
    AnalyticsHelper: "AnalyticsHelper",
    AudioManager: "AudioManager",
    BGMHandler: "BGMHandler",
    GApiClient: "GApiClient",
    GConstants: "GConstants",
    GDataSource: "GDataSource",
    GNormalGameState: "GNormalGameState",
    GRefreshWorldHandler: "GRefreshWorldHandler",
    GRespinGameState: "GRespinGameState",
    GSlotTransactionModel: "GSlotTransactionModel",
    GameEventHandler: "GameEventHandler",
    GameInitializationHandler: "GameInitializationHandler",
    GameLayout: "GameLayout",
    GeneralAudioConstant: "GeneralAudioConstant",
    JakeSlotGameTemplate: "JakeSlotGameTemplate",
    MultiResHandler: "MultiResHandler",
    NotifyHelper: "NotifyHelper",
    ReplayModeHandler: "ReplayModeHandler",
    RequestHandler: "RequestHandler",
    SettingMenuHandlers: "SettingMenuHandlers",
    SettingMenuHelper: "SettingMenuHelper",
    SlotProperties: "SlotProperties",
    SpaceBarInterrupter: "SpaceBarInterrupter",
    SpinConfigHandler: "SpinConfigHandler",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Transitions: "Transitions",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils",
    WalletHandlers: "WalletHandlers",
    WalletHelper: "WalletHelper"
  };
  var RJ = {
    BetModifierButton: "BetModifierButton",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var RA = {
    NavigationBar: "NavigationBar",
    NavigationDefaultTransition: "NavigationDefaultTransition",
    TabBarItem: "TabBarItem",
    TransitionContext: "TransitionContext",
    TransitionEnum: "TransitionEnum",
    UIKit: "UIKit",
    ViewController: "ViewController"
  };
  var Ry = {
    ViewControllerTransition: "ViewControllerTransition"
  };
  var Rc = {
    AudioAdapter: "AudioAdapter",
    Utils: "Utils"
  };
  var Rb = {
    AutoSpinHandler: "AutoSpinHandler",
    ButtonHitTest: "ButtonHitTest",
    JakeSlotGameTemplate: "JakeSlotGameTemplate",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotGameConstants: "SlotGameConstants"
  };
  var Rn = {
    AutoSpinHandler: "AutoSpinHandler",
    ButtonHitTest: "ButtonHitTest",
    JakeSlotGameTemplate: "JakeSlotGameTemplate",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotGameConstants: "SlotGameConstants",
    SlotStateMachine: "SlotStateMachine",
    SpinConfigHandler: "SpinConfigHandler"
  };
  var Ru = {
    AudioManager: "AudioManager",
    GNormalStopScroller: "GNormalStopScroller",
    GeneralAudioConstant: "GeneralAudioConstant",
    SlotHandler: "SlotHandler",
    SlotProperties: "SlotProperties",
    Utils: "Utils"
  };
  var Rk = {
    AutoSpinHandler: "AutoSpinHandler",
    ButtonHitTest: "ButtonHitTest",
    JakeSlotGameTemplate: "JakeSlotGameTemplate",
    SettingMenuHelper: "SettingMenuHelper",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotGameConstants: "SlotGameConstants",
    SlotStateMachine: "SlotStateMachine",
    SpinConfigHandler: "SpinConfigHandler"
  };
  var RD = {
    AudioManager: "AudioManager",
    BaseUIHelper: "BaseUIHelper",
    GConstants: "GConstants",
    GSlotTransactionModel: "GSlotTransactionModel",
    GeneralAudioConstant: "GeneralAudioConstant",
    SettingMenuHelper: "SettingMenuHelper",
    SlotProperties: "SlotProperties",
    SlotStateMachine: "SlotStateMachine",
    Utils: "Utils"
  };
  var Rr = {
    NumberDisplayController: "NumberDisplayController"
  };
  var Rx = {
    NumberDisplayInterface: "NumberDisplayInterface",
    Utils: "Utils"
  };
  var Re = {
    Utils: "Utils"
  };
  var RG = {
    Utils: "Utils"
  };
  var RY = {
    NumberDisplayInterface: "NumberDisplayInterface",
    Utils: "Utils"
  };
  var Rm = {
    NumberDisplayInterface: "NumberDisplayInterface"
  };
  var Ri = {
    NumberDisplayController: "NumberDisplayController",
    NumberRollBaseController: "NumberRollBaseController"
  };
  var RW = {
    NumberCurvedController: "NumberCurvedController",
    NumberRollBaseController: "NumberRollBaseController"
  };
  var RF = {
    NumberLabelController: "NumberLabelController",
    NumberRollBaseController: "NumberRollBaseController"
  };
  var Ra = {
    Button: "Button"
  };
  var RE = {
    PageControlButton: "PageControlButton"
  };
  var Rv = {
    Line: "Line",
    SlotProperties: "SlotProperties"
  };
  var RI = {
    GConstants: "GConstants"
  };
  var Rw = {
    PayLineNumberItem: "PayLineNumberItem"
  };
  var Rt = {
    AudioManager: "AudioManager",
    GConstants: "GConstants",
    GeneralAudioConstant: "GeneralAudioConstant",
    SlotProperties: "SlotProperties",
    SpineConfigHandler: "SpineConfigHandler",
    Utils: "Utils"
  };
  var Rj = {
    GConstants: "GConstants",
    Utils: "Utils"
  };
  var RZ = {
    GameEventHandler: "GameEventHandler",
    SettingMenuHelper: "SettingMenuHelper",
    TweaksData: "TweaksData",
    Utils: "Utils"
  };
  var RX = {
    RequestHandler: "RequestHandler",
    SettingMenuHelper: "SettingMenuHelper",
    Utils: "Utils",
    WalletHelper: "WalletHelper"
  };
  var RV = {
    SpaceBarInterrupter: "SpaceBarInterrupter",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Utils: "Utils"
  };
  var RH = {
    ResRC: "ResRC",
    ResourceQualifierHelper: "ResourceQualifierHelper",
    RetryHandler: "RetryHandler"
  };
  var Rz = {
    SlotProperties: "SlotProperties"
  };
  var Rd = {
    AudioManager: "AudioManager",
    AutomationDecorator: "AutomationDecorator",
    BGMHandler: "BGMHandler",
    BaseUIHelper: "BaseUIHelper",
    GSlotTransactionModel: "GSlotTransactionModel",
    GeneralAudioConstant: "GeneralAudioConstant",
    Utils: "Utils",
    "WinLine.spec": "WinLine.spec"
  };
  var RP = {
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotAnalyticsHelper: "SlotAnalyticsHelper",
    SlotStateMachine: "SlotStateMachine",
    SpinConfigHandler: "SpinConfigHandler",
    Utils: "Utils"
  };
  var Rp = {
    LaunchConfig: "LaunchConfig"
  };
  var RO = {
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var RL = {
    BVFramework: "BVFramework",
    CanvasResizeBroadcaster: "CanvasResizeBroadcaster",
    HitPassThrough: "HitPassThrough",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var RU = {
    AnalyticsHelper: "AnalyticsHelper",
    LaunchConfig: "LaunchConfig",
    QuitGameWithEvent: "QuitGameWithEvent"
  };
  var RT = {
    BVFramework: "BVFramework",
    GameEventHandler: "GameEventHandler",
    NotifyHelper: "NotifyHelper",
    Preference: "Preference",
    SettingMenuButtonHelper: "SettingMenuButtonHelper",
    Utils: "Utils"
  };
  var Rg = {
    Utils: "Utils"
  };
  var l0 = {
    Utils: "Utils"
  };
  var l1 = {
    GenericSettingButton: "GenericSettingButton",
    TurboButtonEffect: "TurboButtonEffect",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var l2 = {
    AnalyticsHelper: "AnalyticsHelper"
  };
  var l3 = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant",
    NodePoolHandler: "NodePoolHandler",
    NormalSlotHandler: "NormalSlotHandler",
    SlotProperties: "SlotProperties",
    SlotStateMachine: "SlotStateMachine"
  };
  var l4 = {
    SlotScrollerController: "SlotScrollerController",
    SlotView: "SlotView"
  };
  var l5 = {
    GSlotHelper: "GSlotHelper",
    GSlotItem: "GSlotItem",
    GSlotItemPool: "GSlotItemPool",
    SlotDataHandler: "SlotDataHandler",
    SlotGenerator: "SlotGenerator",
    SlotHelper: "SlotHelper",
    SlotProperties: "SlotProperties",
    SlotScrollerController: "SlotScrollerController",
    SlotView: "SlotView",
    Utils: "Utils"
  };
  var l6 = {
    BaseScroller: "BaseScroller",
    DefaultStartScroller: "DefaultStartScroller",
    DefaultStopScroller: "DefaultStopScroller",
    SlotDataHandler: "SlotDataHandler",
    SlotItem: "SlotItem",
    SlotItemHandler: "SlotItemHandler",
    SlotItemPool: "SlotItemPool"
  };
  var l7 = {
    SlotSymbol: "SlotSymbol"
  };
  var l8 = {
    AutomationDecorator: "AutomationDecorator",
    "SlotScrollerController.spec": "SlotScrollerController.spec"
  };
  var l9 = {
    Utils: "Utils"
  };
  var lh = {
    BVFramework: "BVFramework"
  };
  var lM = {
    SystemModel: "SystemModel",
    WinThresholdsModel: "WinThresholdsModel"
  };
  var lB = {
    BetRepository: "BetRepository",
    TransactionModel: "TransactionModel",
    WinLinesModel: "WinLinesModel",
    WinValuesModel: "WinValuesModel"
  };
  var lR = {
    GenericSettingButton: "GenericSettingButton"
  };
  var ll = {
    BVFramework: "BVFramework"
  };
  var lQ = {
    ButtonHitTest: "ButtonHitTest",
    SettingMenuHelper: "SettingMenuHelper"
  };
  var lC = {
    GenericSettingButton: "GenericSettingButton",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var lK = {
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotAnalyticsHelper: "SlotAnalyticsHelper",
    SpinConfigHandler: "SpinConfigHandler",
    Utils: "Utils"
  };
  var lS = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant",
    SlotProperties: "SlotProperties",
    Utils: "Utils"
  };
  var lq = {
    GConstants: "GConstants",
    SymbolImageHandler: "SymbolImageHandler"
  };
  var lN = {
    SlotProperties: "SlotProperties"
  };
  var lf = {
    PopOutItemHandler: "PopOutItemHandler",
    SinglePayoutModel: "SinglePayoutModel",
    SymbolPayoutPanelGenerator: "SymbolPayoutPanelGenerator",
    Utils: "Utils"
  };
  var lo = {
    ButtonController: "ButtonController"
  };
  var ls = {
    ErrorHandler: "ErrorHandler",
    LaunchConfig: "LaunchConfig",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    Utils: "Utils"
  };
  var lJ = {
    TabBar: "TabBar",
    TabBarItem: "TabBarItem",
    TransitionContext: "TransitionContext",
    ViewController: "ViewController"
  };
  var lA = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant",
    Utils: "Utils"
  };
  var ly = {
    NumberDisplayInterface: "NumberDisplayInterface"
  };
  var lc = {
    NumberDisplayController: "NumberDisplayController",
    TimedWinRollBaseController: "TimedWinRollBaseController"
  };
  var lb = {
    NumberCurvedController: "NumberCurvedController",
    TimedWinRollBaseController: "TimedWinRollBaseController"
  };
  var ln = {
    NumberLabelController: "NumberLabelController",
    TimedWinRollBaseController: "TimedWinRollBaseController"
  };
  var lu = {
    SlotProperties: "SlotProperties"
  };
  var lk = {
    GConstants: "GConstants",
    Utils: "Utils"
  };
  var lD = {
    GDataSource: "GDataSource",
    SettingMenuHelper: "SettingMenuHelper",
    Utils: "Utils"
  };
  var lr = {
    CreatorTweaks: "CreatorTweaks",
    GamePreference: "GamePreference",
    Printer: "Printer",
    QuitGame: "QuitGame",
    RtConfig: "RtConfig",
    TweaksData: "TweaksData",
    Utils: "Utils"
  };
  var lx = {
    BACKUP_DATA: "BACKUP_DATA"
  };
  var le = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant"
  };
  var lG = {
    UIKit: "UIKit",
    UIKitUtils: "UIKitUtils"
  };
  var lY = {
    BVFramework: "BVFramework",
    SettingInfoFooterController: "SettingInfoFooterController",
    Utils: "Utils"
  };
  var lm = {
    Utils: "Utils"
  };
  var li = {
    Utils: "Utils"
  };
  var lW = {
    NumberDisplayInterface: "NumberDisplayInterface"
  };
  var lF = {
    NumberDisplayController: "NumberDisplayController",
    WinRollBaseController: "WinRollBaseController"
  };
  var la = {
    NumberCurvedController: "NumberCurvedController",
    WinRollBaseController: "WinRollBaseController"
  };
  var lE = {
    NumberLabelController: "NumberLabelController",
    WinRollBaseController: "WinRollBaseController"
  };
  var lv = {
    Utils: "Utils"
  };
  window.__require = function t(h, M, Q) {
    var C = function () {
      var N = true;
      return function (f, J) {
        var A = N ? function () {
          if (J) {
            var y = J.apply(f, arguments);
            J = null;
            return y;
          }
        } : function () {};
        N = false;
        return A;
      };
    }();
    function K(N, f) {
      var J = C(this, function () {
        return J.toString().search("(((.+)+)+)+$").toString().constructor(J).search("(((.+)+)+)+$");
      });
      J();
      if (!M[N]) {
        if (!h[N]) {
          var A = N.split('/');
          A = A[A.length - 0x1];
          if (!h[A]) {
            var y = "function" == typeof __require && __require;
            if (!f && y) {
              return y(A, true);
            }
            if (S) {
              return S(A, true);
            }
            throw Error("Cannot find module '" + N + "'");
          }
          N = A;
        }
        var b = {
          exports: {}
        };
        var k = M[N] = b;
        h[N][0x0].call(k.exports, function (D) {
          return K(h[N][0x1][D] || D);
        }, k, k.exports, t, h, M, Q);
      }
      return M[N].exports;
    }
    var S = "function" == typeof __require && __require;
    for (var q = 0x0; q < Q.length; q++) {
      K(Q[q]);
    }
    return K;
  }({
    'APIClient.spec': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "8c9a3eRJFFM1bXVQ+/Kcvdf", "APIClient.spec")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.onRequestSent = Q.onRequestReceived = undefined;
        Q.onRequestReceived = function (K, S) {
          var q = System.get("automation") && System.get("automation").GameData;
          var N = {
            error: K,
            result: S
          };
          if (q) {
            q.emit("RequestReceived", N);
          }
        };
        Q.onRequestSent = function () {
          var K = System.get("automation") && System.get("automation").GameData;
          if (K) {
            K.emit("RequestSent");
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'APIClient': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "d34ca2GoqVBUbdLTDYW//l7", "APIClient")) {
        var B = System.get("bvframework").APIClient;
        M.exports["default"] = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'AdapterEventEmitter': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "4a843d9tZpBC5Aag4RGjJxr", "AdapterEventEmitter")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("Utils");
        M("AudioAdapterConstant");
        var S = function () {
          function N() {
            this.t = Object.create(null);
            this.i = K.deferCallback(this);
          }
          N.prototype.once = function (f, J, A) {
            this.on(f, J, A, true);
          };
          N.prototype.emit = function (f, J, A, y) {
            if (undefined === y) {
              y = false;
            }
            var b = this.t;
            var k = b[f];
            if (!k) {
              k = b[f] = [];
            }
            var D = 0x0;
            var x = function (W) {
              var F = k[W];
              if (!(F.id && F.id !== J)) {
                D = W;
                G.i(function () {
                  var E = F.fn;
                  if (E !== K.emptyFunc) {
                    if (F.once) {
                      this.off(f, E, F.id);
                    }
                    E(J, A);
                  }
                  if (W === D && undefined !== J && y) {
                    this.off(J);
                  }
                });
              }
            };
            var G = this;
            var Y = 0x0;
            for (var m = k.length; Y < m; Y++) {
              x(Y);
            }
          };
          N.prototype.on = function (f, J, A, y) {
            var b = this.t;
            var u = b[f];
            if (!u) {
              u = b[f] = [];
            }
            var k = 0x0;
            for (var D = u.length; k < D; k++) {
              var x = u[k];
              if (x.fn === J) {
                if (x.id === A) {
                  return;
                }
                if (!A || !x.id) {
                  return;
                }
              }
            }
            var G = {
              'id': A,
              'fn': J,
              once: !!y
            };
            u.push(G);
          };
          N.prototype.off = function (f, J, A) {
            if (undefined !== f) {
              switch (typeof f) {
                case "number":
                  return this.o(undefined, f);
                case "function":
                  return this.o(f, J);
                default:
                  if ("number" == typeof J) {
                    A = J;
                    J = undefined;
                  }
                  return this.h(f, J, A);
              }
            } else {
              for (var y in this.t) this.t[y].length = 0x0;
            }
          };
          N.prototype.h = function (f, J, A) {
            var y = this.t[f];
            if (y) {
              if (undefined !== J || undefined !== A) {
                this.t[f] = y.filter(function (c) {
                  return q(c, J, A);
                });
              } else {
                y.length = 0x0;
              }
            }
          };
          N.prototype.o = function (f, J) {
            for (var A in this.t) this.t[A] = this.t[A].filter(function (y) {
              return q(y, f, J);
            });
          };
          return N;
        }();
        Q["default"] = S;
        cc._RF.pop();
      }
      function q(N, f, J) {
        return !!(J && J !== N.id || f && f !== N.fn) || (N.fn = K.emptyFunc, false);
      }
    }, Bc],
    'AnalyticsHelper': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "d1d41tYvBBPX6KJU88DFlLq", "AnalyticsHelper")) {
        var B = System.get("bvframework").AnalyticsHelper;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'AngpaoController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "ece0aQbOgFN+bkuMghw2lwd", "AngpaoController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = B("GConstants");
        var N = B("GeneralAudioConstant");
        var J = B("BGMHandler");
        var A = B("SlotProperties");
        var y = B("SymbolImageHandler");
        var k = B("AudioManager");
        var D = cc._decorator;
        var x = D.ccclass;
        var G = D.property;
        var Y = cc.v2(0x0, 0x23a);
        var W = cc.v2(-0x25, 0x2a8);
        var F = cc.v2(-0xfa, 0x316);
        var E = [cc.v2(-0x140, 0x1f4), cc.v2(0x0, 0x1f4), cc.v2(0x140, 0x1f4)];
        var I = [cc.v2(-0x140, 0x3e8), cc.v2(0x0, 0x3e8), cc.v2(0x140, 0x3e8)];
        var w = function (j) {
          function Z() {
            var X = null !== j && j.apply(this, arguments) || this;
            X.angpaoNode = undefined;
            X.openAngpaoNode = undefined;
            X.multHolder = undefined;
            X.shakeNode = undefined;
            X.shine = undefined;
            X.symbolNode = undefined;
            X.sparkle = undefined;
            X.circleSparkle = undefined;
            X.multiplierNode = undefined;
            X.multiplierShine = undefined;
            X.particle = undefined;
            X.spinShine = undefined;
            X.u = [];
            X.l = undefined;
            X._ = undefined;
            X.flyParticle = undefined;
            return X;
          }
          __extends(Z, j);
          Z.prototype.init = function (X) {
            this._ = new cc.NodePool();
            for (var V = 0x0; V < 0x3; V++) {
              var H = cc.instantiate(this.flyParticle);
              this._.put(H);
            }
            this.l = X;
          };
          Z.prototype.playRespin = function (X, V, H) {
            var z = this;
            var P = N.GENERAL_AUDIO.featureAngpauFly.key;
            k.stopAudioIfPlaying(P);
            k.playAudioIfNotPlaying(P);
            this.symbolNode.getComponent(cc.Sprite).spriteFrame = y.symbolImageHandler.symbolImages[X];
            this.node.stopAllActions();
            this.node.runAction(cc.sequence(cc.targetedAction(this.angpaoNode, cc.sequence(cc.spawn(cc.delayTime(0.4), cc.fadeIn(0.2)), cc.spawn(cc.bezierTo(0.5, [F, W, Y]), cc.sequence(cc.delayTime(0.25), cc.scaleTo(0.25, 1.87), cc.callFunc(this.m.bind(this))), cc.rotateTo(0.3, 0x0)), cc.scaleTo(0.25, 1.7), cc.delayTime(0.25), cc.callFunc(this.p.bind(this)), cc.scaleTo(0.1, 1.7, 2.15), cc.callFunc(function () {
              var O = N.GENERAL_AUDIO.featureAngpauReveal.key;
              k.stopAudioIfPlaying(O);
              k.playAudioIfNotPlaying(O);
              J.crossFadePlayNormalBGMtoRespin();
              z.angpaoNode.rotation = 0x0;
              z.openAngpaoNode.active = true;
              z.shine.node.runAction(cc.fadeIn(0.3));
              z.symbolNode.opacity = 0x28;
              z.sparkle.play();
              z.shine.play();
            }))), cc.targetedAction(this.symbolNode, cc.spawn(cc.fadeTo(0.1, 0xff), cc.sequence(cc.scaleTo(0.125, 1.03), cc.scaleTo(0.375, 0.7)), cc.targetedAction(this.angpaoNode, cc.sequence(cc.scaleTo(0.25, 0x1), cc.fadeOut(0.3))), cc.callFunc(function () {
              z.spinShine.runAction(cc.rotateBy(0x14, 0x168).repeatForever());
            }), cc.sequence(cc.moveTo(0.125, cc.v2(0x0, 0x398)), cc.moveTo(0.375, cc.v2(0x0, 0x23a)).easing(cc.easeCircleActionIn()), cc.moveTo(0.125, cc.v2(0x0, 0x244)), cc.moveTo(0.2, cc.v2(0x0, 0x23a))), cc.sequence(cc.delayTime(0.5), cc.callFunc(function () {
              z.circleSparkle.play();
            })))), cc.delayTime(0.6), cc.spawn(cc.sequence(cc.delayTime(0.15), cc.callFunc(function () {
              var O = N.GENERAL_AUDIO.featureMultiAppear.key;
              k.stopAudioIfPlaying(O);
              k.playAudioIfNotPlaying(O);
            }), cc.callFunc(this.S.bind(this, V))), cc.targetedAction(this.symbolNode, cc.spawn(cc.scaleTo(0.3, 0.7).easing(cc.easeCubicActionInOut()), cc.fadeOut(0.3))), cc.targetedAction(this.multiplierNode, cc.spawn(cc.callFunc(function () {
              z.multiplierShine.play();
              z.particle.play();
              z.multiplierNode.parent = z.l;
            }), cc.sequence(cc.spawn(cc.scaleTo(0.5, 2.6).easing(cc.easeCubicActionInOut()), cc.fadeIn(0.2)), cc.scaleTo(0.5, 2.5), cc.moveTo(0.5, cc.v2(0x0, 0x20d)).easing(cc.easeCubicActionIn()))))), cc.callFunc(function () {
              if (H) {
                H();
              }
            })));
          };
          Z.prototype.stopRespin = function (X) {
            var V = this;
            this.multiplierNode.stopAllActions();
            this.spinShine.stopAllActions();
            this.multiplierNode.runAction(cc.fadeOut(0.3));
            this.spinShine.runAction(cc.tintTo(0.3, q.BLACK));
            this.multiplierShine.stop();
            this.multiplierShine.setCurrentTime(0x0);
            this.particle.stop();
            this.particle.setCurrentTime(0x0);
            this.particle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            S.delayCallback(0.3)(function () {
              if (X) {
                X();
              }
              V.multiplierNode.parent = V.multHolder;
              V.reset();
            });
          };
          Z.prototype.reset = function () {
            var X = this;
            this.u.forEach(function (V) {
              V.stopAllActions();
              V.children[0x0].opacity = 0xff;
              X._.put(V);
            });
            this.u = [];
            this.node.stopAllActions();
            this.angpaoNode.position = F;
            this.angpaoNode.opacity = 0x0;
            this.angpaoNode.scale = 0.5;
            this.angpaoNode.rotation = -0x1e;
            this.openAngpaoNode.active = false;
            this.shine.node.opacity = 0x0;
            this.shine.node.stopAllActions();
            this.sparkle.stop();
            this.sparkle.setCurrentTime(0x0);
            this.sparkle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.shine.stop();
            this.shine.setCurrentTime(0x0);
            this.shine.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.symbolNode.position = cc.v3(0x0, 0x384);
            this.symbolNode.scale = 0.7;
            this.symbolNode.opacity = 0x0;
            this.spinShine.color = q.BLACK;
            this.spinShine.stopAllActions();
            this.circleSparkle.stop();
            this.circleSparkle.setCurrentTime(0x0);
            this.circleSparkle.node.getComponent(cc.Sprite).spriteFrame = 0x0;
            this.circleSparkle.stop();
            this.circleSparkle.setCurrentTime(0x0);
            this.circleSparkle.node.getComponent(cc.Sprite).spriteFrame = 0x0;
            this.multiplierShine.stop();
            this.multiplierShine.setCurrentTime(0x0);
            this.particle.stop();
            this.particle.setCurrentTime(0x0);
            this.particle.node.getComponent(cc.Sprite).spriteFrame = 0x0;
            this.multiplierNode.scale = 1.5;
            this.multiplierNode.opacity = 0x0;
            this.multiplierNode.parent = this.multHolder;
            this.multiplierNode.position = cc.v3(0x0, 0x23a);
          };
          Z.prototype.S = function (X) {
            var V = this;
            for (var H = 0x0; H < 0x3; H++) {
              this.u.push(this.C());
            }
            var z = 0x0;
            var P = function () {
              if (++z >= 0x3) {
                V.u.forEach(function (O) {
                  O.stopAllActions();
                  O.getComponent(cc.ParticleSystem).stopSystem();
                  O.children[0x0].runAction(cc.fadeOut(0.5));
                });
              }
              if (X) {
                X();
              }
            };
            this.u.forEach(function (O, L) {
              O.parent = V.node;
              O.getComponent(cc.ParticleSystem).resetSystem();
              O.position = cc.v3(0x0, 0x23a);
              O.runAction(cc.sequence(cc.bezierTo(0.4, [O.position, I[L], E[L]]), cc.callFunc(P)));
            });
          };
          Z.prototype.C = function () {
            return this._.size() > 0x0 ? this._.get() : cc.instantiate(this.flyParticle);
          };
          Z.prototype.m = function () {
            this.shakeNode.stopAllActions();
            this.shakeNode.runAction(cc.repeatForever(A.createSymbolShake()));
          };
          Z.prototype.p = function () {
            this.shakeNode.stopAllActions();
            this.shakeNode.position = cc.v3();
          };
          Z.prototype.shake10 = function () {
            var X = this;
            var V = 0.001 * (0x64 * Math.floor(Math.random()) + 0x1e);
            this.multiplierNode.stopAllActions();
            this.multiplierNode.runAction(cc.sequence(cc.moveBy(V, cc.v2(-1.5, 0x0)), cc.moveBy(V, cc.v2(0x4, 1.5)), cc.moveBy(V, cc.v2(-0x1, -0x4)), cc.moveBy(V, cc.v2(-0x2, 4.5)), cc.moveBy(V, cc.v2(4.5, -0x2)), cc.moveBy(V, cc.v2(-4.5, -1.5)), cc.moveBy(V, cc.v2(-0x1, 2.5)), cc.moveBy(V, cc.v2(0x3, -0x1)), cc.moveBy(V, cc.v2(-1.5, 0x0)), cc.moveBy(V, cc.v2(0x4, 1.5)), cc.moveBy(V, cc.v2(-0x1, -0x4)), cc.moveBy(V, cc.v2(-0x2, 4.5)), cc.moveBy(V, cc.v2(4.5, -0x2)), cc.moveBy(V, cc.v2(-4.5, -1.5)), cc.moveBy(V, cc.v2(-0x1, 2.5)), cc.moveBy(V, cc.v2(0x3, -0x1)), cc.callFunc(function () {
              X.multiplierNode.position = cc.v3(0x0, 0x20d);
            })));
          };
          Z.prototype.win10 = function () {
            var X = 0.001 * (0x64 * Math.floor(Math.random()) + 0x1e);
            this.multiplierNode.runAction(cc.sequence(cc.moveBy(X, cc.v2(-8.5, 0x0)), cc.moveBy(X, cc.v2(0xb, 1.5)), cc.moveBy(X, cc.v2(-0x7, -0x4)), cc.moveBy(X, cc.v2(-0x9, 4.5)), cc.moveBy(X, cc.v2(0xa, -0x2)), cc.moveBy(X, cc.v2(-0xa, -1.5)), cc.moveBy(X, cc.v2(-0x1, 2.5)), cc.moveBy(X, cc.v2(8.5, -0x1)), cc.moveBy(X, cc.v2(0xa, -0x2)), cc.moveBy(X, cc.v2(-0xa, -1.5)), cc.moveBy(X, cc.v2(-0x1, 2.5)), cc.moveBy(X, cc.v2(8.5, -0x1)), cc.spawn(cc.sequence(cc.moveTo(0.15, cc.v2(0x0, 0x280)).easing(cc.easeCubicActionInOut()), cc.moveTo(0.15, cc.v2(0x0, 0x258))), cc.sequence(cc.scaleTo(0.15, 0x4), cc.scaleTo(0.15, 3.5)))));
          };
          Z.prototype.hide10 = function () {
            this.multiplierNode.opacity = 0x0;
          };
          Z.prototype.setupToRespinState = function () {
            this.multiplierNode.scale = 2.5;
            this.multiplierNode.opacity = 0xff;
            this.multiplierNode.parent = this.l;
            this.multiplierNode.position = cc.v3(0x0, 0x20d);
            this.multiplierShine.play();
            this.spinShine.color = q.WHITE;
            this.spinShine.runAction(cc.rotateBy(0x14, 0x168).repeatForever());
            this.particle.play();
          };
          Z.prototype.setupToNormalState = function () {
            this.reset();
          };
          __decorate([G(cc.Node)], Z.prototype, "angpaoNode", undefined);
          __decorate([G(cc.Node)], Z.prototype, "openAngpaoNode", undefined);
          __decorate([G(cc.Node)], Z.prototype, "multHolder", undefined);
          __decorate([G(cc.Node)], Z.prototype, "shakeNode", undefined);
          __decorate([G(cc.Animation)], Z.prototype, "shine", undefined);
          __decorate([G(cc.Node)], Z.prototype, "symbolNode", undefined);
          __decorate([G(cc.Animation)], Z.prototype, "sparkle", undefined);
          __decorate([G(cc.Animation)], Z.prototype, "circleSparkle", undefined);
          __decorate([G(cc.Node)], Z.prototype, "multiplierNode", undefined);
          __decorate([G(cc.Animation)], Z.prototype, "multiplierShine", undefined);
          __decorate([G(cc.Animation)], Z.prototype, "particle", undefined);
          __decorate([G(cc.Node)], Z.prototype, "spinShine", undefined);
          __decorate([G(cc.Prefab)], Z.prototype, "flyParticle", undefined);
          return __decorate([x], Z);
        }(cc.Component);
        C["default"] = w;
        cc._RF.pop();
      }
    }, Bb],
    'AnimParticleSystemPoolHandler': [function (h, M, B) {
      'use strict';

      if (!cc._RF.push(M, "90167wb5w5JpKAkqWQq6cj8", "AnimParticleSystemPoolHandler")) {
        B.__esModule = true;
        B["default"] = undefined;
        var Q = cc.Class({
          'extends': cc.Component,
          'unuse': function () {
            var C = this.node.getComponent(cc.Animation);
            if (C) {
              C.stop();
            }
          }
        });
        B["default"] = Q;
        M.exports = B["default"];
        cc._RF.pop();
      }
    }, {}],
    'AnimParticleSystemUtils': [function (h, M, B) {
      'use strict';

      if (!cc._RF.push(M, "cbd06HrkTNFtbM/q+8lJvnc", "AnimParticleSystemUtils")) {
        B.__esModule = true;
        B.getAccelerationDistance = function (Q, C) {
          return 0.5 * Q * C * C;
        };
        B.getRandomFromRange = function (Q, C) {
          return Q + C * (Math.random() - 0.5) * 0x2;
        };
        cc._RF.pop();
      }
    }, {}],
    'AnimParticleSystem': [function (Q, C, K) {
      'use strict';

      if (!cc._RF.push(C, "3142aQR/shASo2uVaU35yUL", "AnimParticleSystem")) {
        K.__esModule = true;
        K["default"] = undefined;
        var S = {
          LINEAR: 0x0,
          GRAVITY: 0x1
        };
        var q = {
          None: 0x0,
          EaseIn: 0x1,
          EaseOut: 0x2,
          EaseInOut: 0x3,
          EaseSineIn: 0x4,
          EaseSineOut: 0x5,
          EaseSineInOut: 0x6,
          EaseCubicActionIn: 0x7,
          EaseCubicActionOut: 0x8,
          EaseCubicActionInOut: 0x9,
          EaseQuinticActionIn: 0xa,
          EaseQuinticActionOut: 0xb,
          EaseQuinticActionInOut: 0xc,
          EaseCircleActionIn: 0xd,
          EaseCircleActionOut: 0xe,
          EaseCircleActionInOut: 0xf,
          EaseElasticIn: 0x10,
          EaseElasticOut: 0x11,
          EaseElasticInOut: 0x12,
          EaseQuadraticActionIn: 0x13,
          EaseQuadraticActionOut: 0x14,
          EaseQuadraticActionInOut: 0x15,
          EaseQuarticActionIn: 0x16,
          EaseQuarticActionOut: 0x17,
          EaseQuarticActionInOut: 0x18,
          EaseExponentialIn: 0x19,
          EaseExponentialOut: 0x1a,
          EaseExponentialInOut: 0x1b,
          EaseBackIn: 0x1c,
          EaseBackOut: 0x1d,
          EaseBackInOut: 0x1e,
          EaseBounceIn: 0x1f,
          EaseBounceOut: 0x20,
          EaseBounceInOut: 0x21
        };
        var N = Q("AnimParticleSystemUtils");
        var f = cc.Enum(S);
        var J = [undefined, {
          'proto': cc.easeIn,
          'needParam': true
        }, {
          'proto': cc.easeOut,
          'needParam': true
        }, {
          'proto': cc.easeInOut,
          'needParam': true
        }, {
          'proto': cc.easeSineIn
        }, {
          'proto': cc.easeSineOut
        }, {
          'proto': cc.easeSineInOut
        }, {
          'proto': cc.easeCubicActionIn
        }, {
          'proto': cc.easeCubicActionOut
        }, {
          'proto': cc.easeCubicActionInOut
        }, {
          'proto': cc.easeQuinticActionIn
        }, {
          'proto': cc.easeQuinticActionOut
        }, {
          'proto': cc.easeQuinticActionInOut
        }, {
          'proto': cc.easeCircleActionIn
        }, {
          'proto': cc.easeCircleActionOut
        }, {
          'proto': cc.easeCircleActionInOut
        }, {
          'proto': cc.easeElasticIn,
          'needParam': true
        }, {
          'proto': cc.easeElasticOut,
          'needParam': true
        }, {
          'proto': cc.easeElasticInOut,
          'needParam': true
        }, {
          'proto': cc.easeQuadraticActionIn
        }, {
          'proto': cc.easeQuadraticActionOut
        }, {
          'proto': cc.easeQuadraticActionInOut
        }, {
          'proto': cc.easeQuarticActionIn
        }, {
          'proto': cc.easeQuarticActionOut
        }, {
          'proto': cc.easeQuarticActionInOut
        }, {
          'proto': cc.easeExponentialIn
        }, {
          'proto': cc.easeExponentialOut
        }, {
          'proto': cc.easeExponentialInOut
        }, {
          'proto': cc.easeBackIn
        }, {
          'proto': cc.easeBackOut
        }, {
          'proto': cc.easeBackInOut
        }, {
          'proto': cc.easeBounceIn
        }, {
          'proto': cc.easeBounceOut
        }, {
          'proto': cc.easeBounceInOut
        }];
        var A = cc.Enum(q);
        var y = false;
        var b = cc.Class({
          'extends': cc.Component,
          'properties': {
            'particlePrefab': {
              'type': cc.Prefab,
              'tooltip': false,
              'default': undefined
            },
            'duration': {
              'type': cc.Float,
              'tooltip': false,
              'default': -0x1
            },
            'emissionRate': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x14,
              'min': 0.1
            },
            'life': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x1,
              'min': 0.1
            },
            'lifeVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'particleCount': {
              'type': cc.Integer,
              'tooltip': false,
              'default': 0xa,
              'min': 0x1
            },
            'particleMovementEasing': {
              'type': A,
              'tooltip': false,
              'default': A.None
            },
            'particleMovementParam': {
              'visible': function () {
                var u;
                return true === (null == (u = J[this.particleMovementEasing]) ? undefined : u.needParam);
              },
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0,
              'min': 0x0
            },
            'startColor': {
              'tooltip': false,
              'default': cc.Color.WHITE
            },
            'startColorVar': {
              'tooltip': false,
              'default': cc.Color.BLACK
            },
            'endColor': {
              'tooltip': false,
              'default': cc.Color.WHITE
            },
            'endColorVar': {
              'tooltip': false,
              'default': cc.Color.BLACK
            },
            'colorDelayRatio': {
              'visible': function () {
                return !this.startColor.equals(this.endColor) || !this.startColorVar.equals(this.endColorVar);
              },
              'type': cc.Float,
              'tooltip': false,
              'range': [0x0, 0x1, 0.01],
              'default': 0x0
            },
            'colorEasing': {
              'visible': function () {
                return !this.startColor.equals(this.endColor) || !this.startColorVar.equals(this.endColorVar);
              },
              'type': A,
              'tooltip': false,
              'default': A.None
            },
            'colorEasingParam': {
              'visible': function () {
                var u;
                return true === (null == (u = J[this.colorEasing]) ? undefined : u.needParam);
              },
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0,
              'min': 0x0
            },
            'startAlpha': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0xff,
              'min': 0x0
            },
            'startAlphaVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'endAlpha': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0xff,
              'min': 0x0
            },
            'endAlphaVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'alphaDelayRatio': {
              'visible': function () {
                return this.startAlpha !== this.endAlpha || this.startAlphaVar !== this.endAlphaVar;
              },
              'type': cc.Float,
              'tooltip': false,
              'range': [0x0, 0x1, 0.01],
              'default': 0x0
            },
            'alphaEasing': {
              'visible': function () {
                return this.startAlpha !== this.endAlpha || this.startAlphaVar !== this.endAlphaVar;
              },
              'type': A,
              'tooltip': false,
              'default': A.None
            },
            'alphaEasingParam': {
              'visible': function () {
                var u;
                return true === (null == (u = J[this.alphaEasing]) ? undefined : u.needParam);
              },
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0,
              'min': 0x0
            },
            'speed': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'speedVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'angle': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x5a
            },
            'angleVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x14
            },
            'startScale': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x1
            },
            'startScaleVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'endScale': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x1
            },
            'endScaleVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'endScaleIsFactor': {
              'visible': function () {
                return this.startScale !== this.endScale || this.startScaleVar !== this.endScaleVar;
              },
              'default': false
            },
            'scaleDelayRatio': {
              'visible': function () {
                return this.startScale !== this.endScale || this.startScaleVar !== this.endScaleVar;
              },
              'type': cc.Float,
              'tooltip': false,
              'range': [0x0, 0x1, 0.01],
              'default': 0x0
            },
            'scaleEasing': {
              'visible': function () {
                return this.startScale !== this.endScale || this.startScaleVar !== this.endScaleVar;
              },
              'type': A,
              'tooltip': false,
              'default': A.None
            },
            'scaleEasingParam': {
              'visible': function () {
                var u;
                return true === (null == (u = J[this.scaleEasing]) ? undefined : u.needParam);
              },
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0,
              'min': 0x0
            },
            'startSpin': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'startSpinVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'endSpin': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'endSpinVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'spinDelayRatio': {
              'visible': function () {
                return this.startSpin !== this.endSpin || this.startSpinVar !== this.endSpinVar;
              },
              'type': cc.Float,
              'tooltip': false,
              'range': [0x0, 0x1, 0.01],
              'default': 0x0
            },
            'spinEasing': {
              'visible': function () {
                return this.startSpin !== this.endSpin || this.startSpinVar !== this.endSpinVar;
              },
              'type': A,
              'tooltip': false,
              'default': A.None
            },
            'spinEasingParam': {
              'visible': function () {
                var u;
                return true === (null == (u = J[this.spinEasing]) ? undefined : u.needParam);
              },
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0,
              'min': 0x0
            },
            'sourcePos': {
              'tooltip': false,
              'default': cc.v2(0x0, 0x0)
            },
            'sourcePosVar': {
              'tooltip': false,
              'default': cc.v2(0x0, 0x0)
            },
            'emitterMode': {
              'tooltip': false,
              'default': f.LINEAR,
              'type': f
            },
            'gravityVec': {
              'visible': function () {
                return this.emitterMode === f.GRAVITY;
              },
              'tooltip': false,
              'default': cc.v2(0x0, 0x0)
            },
            'gravityVecVar': {
              'visible': function () {
                return this.emitterMode === f.GRAVITY;
              },
              'tooltip': false,
              'default': cc.v2(0x0, 0x0)
            },
            'nodePool': {
              'visible': false,
              'get': function () {
                if (!this.M) {
                  this.M = new cc.NodePool("AnimParticleSystemPoolHandler");
                }
                return this.M;
              }
            },
            'A': []
          },
          'resetSystem': function (u) {
            if (undefined === u) {
              u = true;
            }
            if (u) {
              this.stopSystem(true);
            }
            var k = 0x1 / this.emissionRate;
            this.unschedule(this.I);
            var D = this.duration;
            if (0x0 !== D) {
              this.schedule(this.I, k);
              if (D > 0x0) {
                this.unschedule(this.stopSystem);
                this.scheduleOnce(this.stopSystem, D);
              }
            }
          },
          'stopSystem': function (u) {
            var k = this;
            if (undefined === u) {
              u = false;
            }
            this.unschedule(this.I);
            this.unschedule(this.stopSystem);
            if (true === u) {
              this.A.forEach(function (D) {
                D.stopAllActions();
                k.nodePool.put(D);
              });
              this.A = [];
            }
          },
          'I': function () {
            if (!(this.A.length >= this.particleCount)) {
              var u = this.nodePool.get();
              if (!u) {
                u = cc.instantiate(this.particlePrefab);
              }
              this.O(u);
              u.getComponent(cc.Animation).play();
            }
          },
          'getLife': function (u, k) {
            0x0;
            return N.getRandomFromRange(u, k);
          },
          'getSpeed': function (u, k) {
            0x0;
            return N.getRandomFromRange(u, k);
          },
          'getEmissionAngle': function (u, k) {
            0x0;
            return N.getRandomFromRange(u, k);
          },
          'getSourceStartScale': function (u, k) {
            0x0;
            return N.getRandomFromRange(u, k);
          },
          'getSourceStartSpinAngle': function (u, k) {
            0x0;
            return N.getRandomFromRange(u, k);
          },
          'getSourceStartAlpha': function (u, k) {
            0x0;
            return N.getRandomFromRange(u, k);
          },
          'getSourceStartColor': function (u, k) {
            return k.equals(cc.Color.BLACK) ? u : new cc.Color((0x0, N.getRandomFromRange)(u.getR(), k.getR()), (0x0, N.getRandomFromRange)(u.getG(), k.getG()), (0x0, N.getRandomFromRange)(u.getB(), k.getB()));
          },
          'getSourceStartPosition': function (u, k) {
            0x0;
            0x0;
            return cc.v2(N.getRandomFromRange(u.x, k.x), N.getRandomFromRange(u.y, k.y));
          },
          'getSourceEndScale': function (u, k, D, x) {
            0x0;
            return (x ? u : 0x1) * N.getRandomFromRange(k, D);
          },
          'getSourceEndSpinAngle': function (u, k, D) {
            0x0;
            return N.getRandomFromRange(k, D);
          },
          'getSourceEndAlpha': function (u, k, D) {
            0x0;
            return N.getRandomFromRange(k, D);
          },
          'getSourceEndColor': function (u, k, D) {
            return D.equals(cc.Color.BLACK) ? k : new cc.Color((0x0, N.getRandomFromRange)(k.getR(), D.getR()), (0x0, N.getRandomFromRange)(k.getG(), D.getG()), (0x0, N.getRandomFromRange)(k.getB(), D.getB()));
          },
          'getSourceEndPositionLinear': function (u, k, D, x) {
            var G = Math.cos(D / 0xb4 * Math.PI) * k * x;
            var Y = Math.sin(D / 0xb4 * Math.PI) * k * x;
            return cc.v2(u.x + G, u.y + Y);
          },
          'getSourceEndPositionGravity': function (k, D, x, G, Y, W) {
            var F = Math.cos(x / 0xb4 * Math.PI) * D * G;
            var E = Math.sin(x / 0xb4 * Math.PI) * D * G;
            0x0;
            var j = N.getRandomFromRange(Y.x, W.x);
            0x0;
            var Z = N.getRandomFromRange(Y.y, W.y);
            var X = k.x + F / 0x3;
            var V = k.y + E / 0x3;
            var H = k.x + F / 0x3 * 0x2;
            var z = k.y + E / 0x3 * 0x2;
            var P = k.x + F;
            var O = k.y + E;
            var L = 0x3c * G / 0x3;
            0x0;
            var U = N.getAccelerationDistance(j, L);
            0x0;
            var T = N.getAccelerationDistance(Z, L);
            var h0 = 0x2 * L;
            0x0;
            var h1 = N.getAccelerationDistance(j, h0);
            0x0;
            var h2 = N.getAccelerationDistance(Z, h0);
            var h3 = 0x3 * L;
            0x0;
            var h4 = N.getAccelerationDistance(j, h3);
            0x0;
            var h5 = N.getAccelerationDistance(Z, h3);
            var h6 = P > 0x0 ? 0x1 : -0x1;
            return [cc.v2(X - U * h6, V - T), cc.v2(H - h1 * h6, z - h2), cc.v2(P - h4 * h6, O - h5)];
          },
          'getMoveAction': function (u, k, D, x, G) {
            var Y = cc.moveTo(D, k);
            return x ? Y.easing(x(G)) : Y;
          },
          'getBezierAction': function (u, k, D, x, G) {
            var Y = cc.bezierTo(D, k);
            return x ? Y.easing(x(G)) : Y;
          },
          'getScaleAction': function (u, k, D, x, G, Y) {
            if (!G) {
              return 0x0 === x ? cc.scaleTo(D, k) : cc.sequence(cc.delayTime(x * D), cc.scaleTo(D - x * D, k));
            }
            var m = G(Y);
            return 0x0 === x ? cc.scaleTo(D, k).easing(m) : cc.sequence(cc.delayTime(x * D), cc.scaleTo(D - x * D, k).easing(m));
          },
          'getRotateAction': function (u, k, D, x, G, Y) {
            if (!G) {
              return 0x0 === x ? cc.rotateTo(D, -k) : cc.sequence(cc.delayTime(x * D), cc.rotateTo(D - x * D, -k));
            }
            var m = G(Y);
            return 0x0 === x ? cc.rotateTo(D, -k).easing(m) : cc.sequence(cc.delayTime(x * D), cc.rotateTo(D - x * D, -k).easing(m));
          },
          'getFadeAction': function (u, k, D, x, G, Y) {
            if (!G) {
              return 0x0 === x ? cc.fadeTo(D, k) : cc.sequence(cc.delayTime(x * D), cc.fadeTo(D - x * D, k));
            }
            var m = G(Y);
            return 0x0 === x ? cc.fadeTo(D, k).easing(m) : cc.sequence(cc.delayTime(x * D), cc.fadeTo(D - x * D, k).easing(m));
          },
          'getTintAction': function (u, k, D, x, G, Y) {
            if (!G) {
              return 0x0 === x ? cc.tintTo(D, k) : cc.sequence(cc.delayTime(x * D), cc.tintTo(D - x * D, k));
            }
            var m = G(Y);
            return 0x0 === x ? cc.tintTo(D, k).easing(m) : cc.sequence(cc.delayTime(x * D), cc.tintTo(D - x * D, k).easing(m));
          },
          'O': function (k) {
            var D = this;
            var x = this.getLife(this.life, this.lifeVar);
            var G = this.getSourceStartPosition(this.sourcePos, this.sourcePosVar);
            k.setPosition(G);
            var Y = this.getSpeed(this.speed, this.speedVar);
            var W = this.getEmissionAngle(this.angle, this.angleVar);
            var F = [];
            if (this.emitterMode === f.LINEAR) {
              var E;
              var j = this.getSourceEndPositionLinear(G, Y, W, x);
              F.push(this.getMoveAction(k.position, j, x, null == (E = J[this.particleMovementEasing]) ? undefined : E.proto, this.particleMovementEasingParam));
            } else if (this.emitterMode === f.GRAVITY) {
              var Z;
              var X = this.getSourceEndPositionGravity(G, Y, W, x, this.gravityVec, this.gravityVecVar);
              F.push(this.getBezierAction(k.position, X, x, null == (Z = J[this.particleMovementEasing]) ? undefined : Z.proto, this.particleMovementEasingParam));
            }
            var V;
            var H = k.scale = this.getSourceStartScale(this.startScale, this.startScaleVar);
            var z = this.getSourceEndScale(H, this.endScale, this.endScaleVar, this.endScaleIsFactor);
            if (H !== z && this.scaleDelayRatio < 0x1) {
              F.push(this.getScaleAction(H, z, x, this.scaleDelayRatio, null == (V = J[this.scaleEasing]) ? undefined : V.proto, this.scaleEasingParam));
            }
            var P;
            var O = k.angle = this.getSourceStartSpinAngle(-this.startSpin, -this.startSpinVar);
            var L = this.getSourceEndSpinAngle(O, -this.endSpin, -this.endSpinVar);
            if (O !== L && this.spinDelayRatio < 0x1) {
              F.push(this.getRotateAction(O, L, x, this.spinDelayRatio, null == (P = J[this.spinEasing]) ? undefined : P.proto, this.spinEasingParam));
            }
            var U;
            var T = k.opacity = this.getSourceStartAlpha(this.startAlpha, this.startAlphaVar);
            var h0 = this.getSourceEndAlpha(T, this.endAlpha, this.endAlphaVar);
            if (T !== h0 && this.alphaDelayRatio < 0x1) {
              F.push(this.getFadeAction(T, h0, x, this.alphaDelayRatio, null == (U = J[this.alphaEasing]) ? undefined : U.proto, this.alphaEasingParam));
            }
            if (!(this.startColor.equals(cc.Color.WHITE) && this.startColorVar.equals(cc.Color.BLACK) && this.endColor.equals(cc.Color.WHITE) && this.endColorVar.equals(cc.Color.BLACK))) {
              var h1;
              var h2 = k.color = this.getSourceStartColor(this.startColor, this.startColorVar);
              var h3 = this.getSourceEndColor(h2, this.endColor, this.endColorVar);
              if (!h2.equals(h3) && this.colorDelayRatio < 0x1) {
                F.push(this.getTintAction(h2, h3, x, this.colorDelayRatio, null == (h1 = J[this.colorEasing]) ? undefined : h1.proto, this.colorEasingParam));
              }
            }
            var h4;
            var h5 = F.length;
            if (h5 > 0x1) {
              h4 = cc.sequence(cc.spawn(F), cc.callFunc(function () {
                D.H(k);
              }, this));
            } else if (0x1 === h5) {
              h4 = cc.sequence(F[0x0], cc.callFunc(function () {
                D.H(k);
              }, this));
            }
            this.A.push(k);
            this.node.addChild(k);
            k.runAction(h4);
          },
          'B': function (u, k) {
            if (!y) {
              y = true;
            }
            return 0.5 * u * k * k;
          },
          'H': function (u) {
            var k = this.A;
            var D = k.indexOf(u);
            if (D > -0x1) {
              k.splice(D, 0x1);
            }
            this.nodePool.put(u);
          }
        });
        K["default"] = b;
        C.exports = K["default"];
        cc._RF.pop();
      }
    }, Bn],
    'Appearance': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "dec3c3clmFKpaYEDuWXqsW2", "Appearance")) {
        cc._RF.pop();
      }
    }, {}],
    'AudioAdapterConstant': [function (Q, C, K) {
      'use strict';

      var S = {
        value: true
      };
      var q = {
        LOADED: "load",
        LOAD_ERROR: "loaderror",
        PLAY: "play",
        STOP: "stop",
        END: "end",
        PAUSE: "pause",
        RESUME: "resume",
        FADED: "fade",
        SEEK: "seek",
        PLAY_ERROR: "playerror",
        RATE: "rate",
        VOLUME: "volume",
        MUTE: "mute"
      };
      var N = {
        UNLOADED: "unloaded",
        LODING: "loading",
        LOADED: "loaded"
      };
      if (!cc._RF.push(C, "a20c0AJc1VFmKnv1lBJKugX", "AudioAdapterConstant")) {
        Object.defineProperty(K, "__esModule", S);
        K.MAX_INSTANCE_NUMBER = K.MAX_STACK_SOUND = K.DEFAULT_SPRITE = K.AUDIO_ADAPTER_STATE = K.AUDIO_ADAPTER_EVENT = undefined;
        K.AUDIO_ADAPTER_EVENT = q;
        K.AUDIO_ADAPTER_STATE = N;
        K.DEFAULT_SPRITE = "__default";
        K.MAX_STACK_SOUND = 0x32;
        K.MAX_INSTANCE_NUMBER = 0x18;
        cc._RF.pop();
      }
    }, {}],
    'AudioAdapter': [function (Q, C, K) {
      'use strict';

      if (!cc._RF.push(C, "5c3d2SrYLxJYqXl2p30apID", "AudioAdapter")) {
        var S = {
          value: true
        };
        Object.defineProperty(K, "__esModule", S);
        var q;
        var N;
        var f = Q("ResRC");
        var J = Q("AudioAdapterConstant");
        var A = Q("AdapterEventEmitter");
        var y = Q("AudioFactory");
        q = 0x0;
        var b = function () {
          return ++q;
        };
        (function (G) {
          G.G = "_audio";
        })(N || (N = {}));
        var k = {
          load: f.load,
          unload: f.release
        };
        var x = function () {
          function G(Y) {
            var m = this;
            this.N = false;
            this.T = Object.create(null);
            this.P = 0x0;
            this.L = J.AUDIO_ADAPTER_STATE.UNLOADED;
            this.R = false;
            this.maxInstance = J.MAX_INSTANCE_NUMBER;
            this.k = Y.src;
            this.U = "number" == typeof Y.volume ? Y.volume : 0x1;
            this.j = "number" == typeof Y.rate ? Y.rate : 0x1;
            this.D = !!Y.mute;
            this.W = !!Y.loop;
            this.F = Y.sprite;
            this.V = Y.loader || k;
            this.factory = Y.soundFactory || new y["default"]();
            var W = Y.eventEmitter || new A["default"]();
            this.on = function (F, E, v, I) {
              if (!(null != v && v in m.T == 0x0)) {
                W.on(F, E, v, I);
              }
            };
            this.off = W.off.bind(W);
            this.once = function (F, E, v) {
              if (!(null != v && v in m.T == 0x0)) {
                W.once(F, E, v);
              }
            };
            this.J = W.emit.bind(W);
            if (Y.preload) {
              setTimeout(this.load.bind(this), 0x0);
            }
          }
          G.prototype.load = function () {
            if (this.L !== J.AUDIO_ADAPTER_STATE.LOADED && this.L !== J.AUDIO_ADAPTER_STATE.LODING) {
              this.V.load(this.k, this.q.bind(this));
              this.L = J.AUDIO_ADAPTER_STATE.LODING;
            }
          };
          G.prototype.q = function (Y, m) {
            if (Y) {
              this.J(J.AUDIO_ADAPTER_EVENT.LOAD_ERROR, undefined, Y.message || Y);
              this.R = false;
              this.L = J.AUDIO_ADAPTER_STATE.UNLOADED;
            } else {
              this.L = J.AUDIO_ADAPTER_STATE.LOADED;
              if (m) {
                this.K = m[N.G];
              }
              this.J(J.AUDIO_ADAPTER_EVENT.LOADED);
              if (this.R) {
                this.unload();
              }
            }
          };
          G.prototype.unload = function () {
            if (this.L !== J.AUDIO_ADAPTER_STATE.UNLOADED) {
              if (this.L !== J.AUDIO_ADAPTER_STATE.LODING) {
                if (0x0 !== this.P) {
                  this.stop();
                }
                this.K = undefined;
                this.V.unload(this.k);
                this.R = false;
                this.L = J.AUDIO_ADAPTER_STATE.UNLOADED;
              } else {
                this.R = true;
              }
            }
          };
          G.prototype.play = function (Y) {
            var m = this;
            if (this.L !== J.AUDIO_ADAPTER_STATE.LOADED) {
              throw Error("Audio Adapter:: play : audio not yet loaded!");
            }
            var W = "number" == typeof Y;
            var F = !W && "string" == typeof Y;
            if (this.N || W) {
              this.resume(Y);
              return W ? Y : -0x1;
            }
            var E = this.T;
            if (this.P >= this.maxInstance) {
              var I = undefined;
              for (var w in E) {
                I = w;
                break;
              }
              var j = this.T[I];
              j.stop();
              delete this.T[I];
              this.P--;
              this.off(I);
              this.addAudioToPool(j);
            }
            var Z = this.getAudioFromPool();
            var X = {
              loop: this.W,
              muted: this.D,
              volume: this.U,
              rate: this.j
            };
            Z.reset(X);
            var V = F && this.F ? this.F[Y] : undefined;
            var H = 0x0;
            var z = 0x0;
            if (V) {
              H = V.from;
              z = V.to - H;
            }
            var P = ++q;
            Z.play(H, z);
            Z.once(shell.WebAudioEvent.ENDED, function () {
              if (!m.T[P]) {
                throw Error("AudioAdapter :: play : audio doesn't exist on this adapter anymore");
              }
              delete m.T[P];
              m.P--;
              m.J(J.AUDIO_ADAPTER_EVENT.END, P, undefined, true);
              m.addAudioToPool(Z);
            });
            E[P] = Z;
            this.P++;
            this.J(J.AUDIO_ADAPTER_EVENT.PLAY, P);
            return P;
          };
          G.prototype.stop = function (Y) {
            if (this.L !== J.AUDIO_ADAPTER_STATE.LOADED) {
              throw Error("Audio Adapter :: stop : Attemp to stop not loaded audio!");
            }
            if (0x0 !== this.P) {
              if ("number" == typeof Y) {
                if (W = this.T[Y]) {
                  delete this.T[Y];
                  this.P--;
                  W.stop();
                  this.J(J.AUDIO_ADAPTER_EVENT.STOP, Y, undefined, true);
                  this.addAudioToPool(W);
                }
              } else {
                for (var m in this.T) {
                  var W;
                  (W = this.T[m]).stop();
                  this.J(J.AUDIO_ADAPTER_EVENT.STOP, +m, undefined, true);
                  this.addAudioToPool(W);
                }
                this.T = Object.create(null);
                this.P = 0x0;
              }
            }
          };
          G.prototype.pause = function (Y) {
            if ("number" == typeof Y) {
              if ((W = this.T[Y]) && W.playing) {
                W.pause();
                this.J(J.AUDIO_ADAPTER_EVENT.PAUSE, Y);
              }
            } else {
              this.N = true;
              if (0x0 === this.P) {
                return;
              }
              for (var m in this.T) {
                var W;
                if ((W = this.T[m]).playing) {
                  W.pause();
                  this.J(J.AUDIO_ADAPTER_EVENT.PAUSE, +m);
                }
              }
            }
          };
          G.prototype.resume = function (Y) {
            if ("number" == typeof Y) {
              if ((W = this.T[Y]) && W.paused) {
                W.resume();
                this.J(J.AUDIO_ADAPTER_EVENT.RESUME, Y);
              }
            } else {
              this.N = false;
              if (0x0 === this.P) {
                return;
              }
              for (var m in this.T) {
                var W;
                if ((W = this.T[m]).paused) {
                  W.resume();
                  this.J(J.AUDIO_ADAPTER_EVENT.RESUME, +m);
                }
              }
            }
          };
          G.prototype.setMute = function (Y, m) {
            if ("number" == typeof m) {
              if ((F = this.T[m]) && F.muted !== Y) {
                F.muted = Y;
                this.J(J.AUDIO_ADAPTER_EVENT.MUTE, m);
              }
            } else {
              this.D = Y;
              if (0x0 === this.P) {
                return;
              }
              for (var W in this.T) {
                var F;
                if ((F = this.T[W]).muted !== Y) {
                  F.muted = Y;
                  this.J(J.AUDIO_ADAPTER_EVENT.MUTE, +W);
                }
              }
            }
          };
          G.prototype.isMute = function (Y) {
            if ("number" == typeof Y) {
              var m = this.T[Y];
              return !!m && m.muted;
            }
            return this.D;
          };
          G.prototype.setVolume = function (Y, m) {
            if ("number" == typeof m) {
              if ((F = this.T[m]) && F.volume !== Y) {
                F.volume = Y;
                this.J(J.AUDIO_ADAPTER_EVENT.VOLUME, m);
              }
            } else {
              this.U = Y;
              if (0x0 === this.P) {
                return;
              }
              for (var W in this.T) {
                var F;
                if ((F = this.T[W]).volume !== Y) {
                  F.volume = Y;
                  this.J(J.AUDIO_ADAPTER_EVENT.VOLUME, +W);
                }
              }
            }
          };
          G.prototype.getVolume = function (Y) {
            if ("number" == typeof Y) {
              var m = this.T[Y];
              return m ? m.volume : 0x0;
            }
            return this.U;
          };
          G.prototype.getInstantVolume = function (Y) {
            var m = this.T[Y];
            return m ? m.instantVolume : 0x0;
          };
          G.prototype.fade = function (Y, m, W, F) {
            var E = this;
            if (this.L !== J.AUDIO_ADAPTER_STATE.LOADED) {
              throw Error("Audio Adpater :: fade : Audio not loaded!");
            }
            if (0x0 !== this.P) {
              if ("number" == typeof F) {
                var v = this.T[F];
                if (v) {
                  v.off(shell.WebAudioEvent.FADED);
                  v.once(shell.WebAudioEvent.FADED, function () {
                    E.J(J.AUDIO_ADAPTER_EVENT.FADED, F);
                  });
                  v.fade(Y, m, W);
                }
              } else {
                this.U = m;
                var I = function (Z) {
                  var X = w.T[Z];
                  X.off(shell.WebAudioEvent.FADED);
                  X.once(shell.WebAudioEvent.FADED, function () {
                    E.J(J.AUDIO_ADAPTER_EVENT.FADED, +Z);
                  });
                  X.fade(Y, m, W);
                };
                var w = this;
                for (var j in this.T) I(j);
              }
            }
          };
          G.prototype.setLoop = function (Y, m) {
            if ("number" == typeof m) {
              if (F = this.T[m]) {
                F.loop = Y;
              }
            } else {
              this.W = Y;
              if (0x0 === this.P) {
                return;
              }
              for (var W in this.T) {
                var F;
                (F = this.T[W]).loop = Y;
              }
            }
          };
          G.prototype.isLoop = function (Y) {
            if ("number" == typeof Y) {
              var m = this.T[Y];
              return !!m && m.loop;
            }
            return this.W;
          };
          G.prototype.setRate = function (Y, m) {
            if ("number" == typeof m) {
              if (F = this.T[m]) {
                F.rate = Y;
              }
            } else {
              this.j = Y;
              if (0x0 === this.P) {
                return;
              }
              for (var W in this.T) {
                var F;
                (F = this.T[W]).rate = Y;
              }
            }
          };
          G.prototype.getRate = function (Y) {
            if ("number" == typeof Y) {
              var m = this.T[Y];
              if (m) {
                return m.rate;
              }
            }
            return this.j;
          };
          G.prototype.isPlaying = function (Y) {
            if ("number" == typeof Y) {
              var m = this.T[Y];
              return undefined !== m && m.playing;
            }
            return this.P > 0x0 && false === this.N;
          };
          G.prototype.getDuration = function (Y) {
            if ("number" == typeof Y) {
              var m = this.T[Y];
              if (m) {
                return m.duration;
              }
            } else if (this.K) {
              return this.K.duration;
            }
            return 0x0;
          };
          G.prototype.getState = function () {
            return this.L;
          };
          G.prototype.getCurrentTime = function (Y) {
            var m = this.T[Y];
            return m ? m.currentTime : 0x0;
          };
          G.prototype.seek = function (Y, m) {
            var W = this;
            if (this.L !== J.AUDIO_ADAPTER_STATE.LOADED) {
              throw Error("Audio Adapter:: seek : audio not yet loaded!");
            }
            if (0x0 !== this.P) {
              if ("number" == typeof m) {
                var F = this.T[m];
                if (F) {
                  F.once(shell.WebAudioEvent.SEEK, function () {
                    W.J(J.AUDIO_ADAPTER_EVENT.SEEK, m);
                  });
                  F.seek(Y);
                  F.off(shell.WebAudioEvent.SEEK);
                }
              } else {
                if (0x0 === this.P) {
                  return;
                }
                this.N = false;
                var E = __assign({}, this.T);
                var v = function (w) {
                  var j = E[w];
                  j.once(shell.WebAudioEvent.SEEK, function () {
                    W.J(J.AUDIO_ADAPTER_EVENT.SEEK, +w);
                  });
                  j.seek(Y);
                  j.off(shell.WebAudioEvent.SEEK);
                };
                for (var I in E) v(I);
              }
            }
          };
          G.prototype.getAudioFromPool = function () {
            return this.factory.get() || new shell.WebAudio(this.K);
          };
          G.prototype.addAudioToPool = function (Y) {
            Y.reset();
            Y.removeAll();
            if (!this.factory.put(Y)) {
              Y.destroy();
            }
          };
          G.prototype.stereo = function () {};
          G.getNewId = b;
          return G;
        }();
        K["default"] = x;
        cc._RF.pop();
      }
    }, Bu],
    'AudioAssetConfig': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "459f6wrPeZPgrrnRpcbVwxL", "AudioAssetConfig")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.audioAssetConfig = undefined;
        Q.audioAssetConfig = [];
        cc._RF.pop();
      }
    }, {}],
    'AudioFactory': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "bf4b5cdVNdI7rQp2MPM3CWN", "AudioFactory")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("AudioAdapterConstant");
        var S = function () {
          function q() {
            this.maxStackSound = K.MAX_STACK_SOUND;
            this.Y = [];
          }
          q.prototype.put = function (N) {
            return this.Y.length < this.maxStackSound && (this.Y.push(N), true);
          };
          q.prototype.get = function () {
            return this.Y.pop();
          };
          q.prototype.size = function () {
            return this.Y.length;
          };
          q.prototype.destroy = function () {
            this.Y.forEach(function (N) {
              N.destroy();
            });
            this.Y = [];
          };
          return q;
        }();
        Q["default"] = S;
        cc._RF.pop();
      }
    }, Bk],
    'AudioManager': [function (K, q, N) {
      'use strict';

      if (!cc._RF.push(q, "75629TEJFxDq6gs0ecfGPkG", "AudioManager")) {
        var J = {
          value: true
        };
        Object.defineProperty(N, "__esModule", J);
        N.updatePlayRate = N.generalGameAudio = N.stopSfx = N.fadeOutAudioIfPlaying = N.stopAudioIfPlaying = N.playAudioIfNotPlaying = N.audioId = N.crossFadeAudio = N.toggleEffectMuted = N.toggleMusicMuted = N.GeneralAudioPool = N.releaseAudio = N.loadAudio = N.toggleAudioGameStarted = N.unregisterAudio = N.registerAudio = N.init = N.AUDIO_TYPE = undefined;
        var k = K("GameAudioAdapter");
        var D = K("SettingMenuHelper");
        var x = K("RtConfig");
        var G = K("NoSoundAdapter");
        var Y = K("GeneralAudioConstant");
        var W = Object.create(null);
        N.GeneralAudioPool = W;
        var F = Object.create(null);
        N.audioId = F;
        var E = {
          SOUND: 0x0,
          MUSIC: 0x1
        };
        var j = Object.create(null);
        N.AUDIO_TYPE = E;
        var X = false;
        var V = false;
        var H = 0x1;
        var z = [];
        W.bgm_mg = undefined;
        W.bgm_mg_b = undefined;
        W.bgm_bigwin_coins = undefined;
        W.bgm_bigwin_end = undefined;
        W.bgm_bigwin_firework = undefined;
        W.bgm_bigwin_main = undefined;
        var O;
        var L = ["bgm_mg", "bgm_mg_b"];
        N.generalGameAudio = O;
        N.init = function () {
          cc.game.on(cc.game.EVENT_HIDE, h1);
          cc.game.on(cc.game.EVENT_SHOW, h2);
          Object.keys(W).forEach(function (h7) {
            var h8 = -0x1 !== L.indexOf(h7) ? 0x1 : 0x0;
            W[h7] = h0(h7, h8);
          });
          W.bgm_mg.setLoop(true);
          W.bgm_mg_b.setLoop(true);
          N.generalGameAudio = O = T("GeneralAudio", false, Y.GENERAL_AUDIO);
          h4(true);
          h5(true);
        };
        N.playAudioIfNotPlaying = function (h6, h7, h8, h9) {
          if (undefined === h7) {
            h7 = false;
          }
          if (undefined === h8) {
            h8 = 0x0;
          }
          if (undefined === h9) {
            h9 = false;
          }
          if (Y.GENERAL_AUDIO.hasOwnProperty(h6)) {
            if (!(O.isPlaying(F[h6]) && undefined !== F[h6])) {
              F[h6] = O.play(h6);
              if (h7) {
                O.fade(0x0, 0x1, h8, F[h6]);
              }
              if (h9) {
                O.setLoop(true, F[h6]);
              }
            }
          }
        };
        N.stopAudioIfPlaying = U;
        N.fadeOutAudioIfPlaying = function (h6, h7) {
          if (undefined === h7) {
            h7 = 0x0;
          }
          if (Y.GENERAL_AUDIO.hasOwnProperty(h6) && F[h6] && O.isPlaying(F[h6])) {
            var h8 = O.getInstantVolume(F[h6]);
            O.fade(h8, 0x0, h7, F[h6]);
            O.once("fade", function () {
              O.stop(F[h6]);
            }, F[h6]);
          }
        };
        N.registerAudio = function (h6, h7) {
          var h8 = h7 ? 0x1 : 0x0;
          if (X) {
            var h9 = D.settingMenuHelper.soundEnable;
            h6.setMute(h9);
          }
          if (!j[h8]) {
            j[h8] = [];
          }
          j[h8].push(h6);
          h6.setRate(H);
          return h8;
        };
        N.unregisterAudio = function (h6, h7) {
          var h8 = j[h7];
          var h9 = h8.indexOf(h6);
          if (-0x1 === h9) {
            throw Error("Audio Manager :: unRegisterAudio : audio not found");
          }
          h8.splice(h9, 0x1);
        };
        N.updatePlayRate = function (h6) {
          H = h6;
          for (var h7 in j) if (j[h7]) {
            var h8 = j[h7];
            var h9 = 0x0;
            for (var hh = h8.length; h9 < hh; h9++) {
              h8[h9].setRate(h6);
            }
          }
        };
        N.toggleAudioGameStarted = function () {
          X = true;
          h4(!D.settingMenuHelper.soundEnable);
          h5(!D.settingMenuHelper.soundEnable);
        };
        N.toggleMusicMuted = h4;
        N.toggleEffectMuted = h5;
        N.crossFadeAudio = function (h6, h7, h8) {
          if (undefined === h8) {
            h8 = 0x1;
          }
          h7.setVolume(0x0);
          h7.play();
          h7.fade(0x0, h8, 0x3e8);
          if (0x0 === h6.getVolume()) {
            h6.stop();
          } else {
            h6.fade(h6.getVolume(), 0x0, 0x3e8);
            h6.once("fade", function () {
              h6.stop();
            });
          }
        };
        N.loadAudio = function (h6, h7) {
          var h8 = function () {
            h6.off("loaderror", h9);
            if (h7) {
              h7();
            }
          };
          var h9 = function (hh, hM) {
            h6.off("load", h8);
            if (h7) {
              h7(hM, hh);
            }
          };
          h6.once("load", h8);
          h6.once("loaderror", h9);
          return h6.load();
        };
        N.releaseAudio = function (h6) {
          return h6.unload();
        };
        N.stopSfx = function (h6, h7, h8) {
          if (undefined === h7) {
            h7 = false;
          }
          if (undefined === h8) {
            h8 = 0x0;
          }
          U(h6.key, h7, h8);
        };
        cc._RF.pop();
      }
      function U(h6, h7, h8) {
        if (undefined === h7) {
          h7 = false;
        }
        if (undefined === h8) {
          h8 = 0x0;
        }
        if (Y.GENERAL_AUDIO.hasOwnProperty(h6) && F[h6] && O.isPlaying(F[h6])) {
          if (h7) {
            O.fade(0x1, 0x0, h8, F[h6]);
            O.once("fade", function () {
              O.stop(F[h6]);
            }, F[h6]);
          } else {
            O.stop(F[h6]);
          }
        }
      }
      function T(h6, h7, h8) {
        if (undefined === h7) {
          h7 = 0x0;
        }
        var h9 = {
          'preload': false,
          'src': "audio/" + h6,
          'mute': true,
          'sprite': h8
        };
        return '1' === x.cs_Launch.noAudio ? new G["default"](h9) : new k["default"](h9, h7);
      }
      function h0(h6, h7) {
        if (undefined === h7) {
          h7 = 0x0;
        }
        var h8 = {
          'preload': false,
          'src': "audio/" + h6,
          'mute': true
        };
        return '1' === x.cs_Launch.noAudio ? new G["default"](h8) : new k["default"](h8, h7);
      }
      function h1() {
        if (!V) {
          V = true;
          for (var h6 in j) if (j[h6]) {
            var h7 = j[h6];
            var h8 = 0x0;
            for (var h9 = h7.length; h8 < h9; h8++) {
              if (h7[h8].isPlaying()) {
                h7[h8].pause();
                z.push(h7[h8]);
              }
            }
          }
        }
      }
      function h2() {
        var h6;
        var h7;
        if (V) {
          V = false;
          try {
            var h8 = __values(z);
            for (var h9 = h8.next(); !h9.done; h9 = h8.next()) {
              h9.value.play();
            }
          } catch (hM) {
            var hh = {
              error: hM
            };
            h6 = hh;
          } finally {
            try {
              if (h9 && !h9.done && (h7 = h8["return"])) {
                h7.call(h8);
              }
            } finally {
              if (h6) {
                throw h6.error;
              }
            }
          }
          z.length = 0x0;
        }
      }
      function h4(h6) {
        if (undefined === h6) {
          h6 = false;
        }
        if (j[0x1]) {
          j[0x1].map(function (h7) {
            h7.setMute(h6);
          });
        }
      }
      function h5(h6) {
        if (undefined === h6) {
          h6 = false;
        }
        if (j[0x0]) {
          j[0x0].map(function (h7) {
            h7.setMute(h6);
          });
        }
      }
    }, BD],
    'AutoSpinHandler': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "6a62eVFmd1Ng5ghvfVXBlUq", "AutoSpinHandler")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.exitAutoSpin = Q.decrementAutoSpinCount = Q.resetAutoSpinCount = Q.startAutoSpin = Q.getAutoSpinCount = Q.shouldAutoSpin = undefined;
        var K = M("GameEventHandler");
        var S = -0x1;
        Q.shouldAutoSpin = function () {
          return S > 0x0;
        };
        Q.getAutoSpinCount = function () {
          return S;
        };
        Q.startAutoSpin = function (N, f, J) {
          S = N;
          f.enterAutoSpinMode(N, J);
          K.emitAutoplayStarted(function () {
            q(f);
          });
        };
        Q.resetAutoSpinCount = function () {
          S = -0x1;
        };
        Q.decrementAutoSpinCount = function (N) {
          S -= 0x1;
          N.updateAutoSpinCount(S);
        };
        Q.exitAutoSpin = function (N) {
          q(N);
          K.emitAutoplayStopped();
        };
        cc._RF.pop();
      }
      function q(N) {
        S = -0x1;
        N.exitAutoSpinMode();
      }
    }, Br],
    'AutomationDecorator': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "607a1pUyWBLsphZz1avN+BH", "AutomationDecorator")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.automationDec = undefined;
        Q.automationDec = function (K) {
          return function (S, q, N) {
            if (!N) {
              return N;
            }
            var f = N.value;
            N.value = function () {
              var J = [];
              for (var A = 0x0; A < arguments.length; A++) {
                J[A] = arguments[A];
              }
              var y = System.get("automation");
              if (y) {
                K.func.apply(K, __spread(J));
              }
              var c = f.apply(this, J);
              return c;
            };
            return N;
          };
        };
        cc._RF.pop();
      }
    }, {}],
    'BACKUP_DATA': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "4dc392lxVJArKflo+rU3j23", "BACKUP_DATA")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = {
          default_font: "Arial"
        };
        var q = new cc.Color(0xff, 0xc8, 0x24, 0xff);
        var N = new cc.Color(0xff, 0xff, 0xff, 0xff);
        var f = Object.freeze({
          'game': {
            'theme_color': q,
            'theme_font_family': "Arial",
            'white_color': N
          },
          'game_title': S,
          'setting': {
            'theme_color': q,
            'theme_font': "Arial",
            'slider_switch_color': {
              'false': new cc.Color(0x90, 0x90, 0x96, 0xff),
              'true': q
            },
            'slider_line_color': {
              'false': new cc.Color(0x90, 0x90, 0x96, 0x14),
              'true': q
            },
            'label_switch_color_a': {
              'false': N,
              'true': q
            },
            'label_switch_color_b': {
              'false': new cc.Color(0x90, 0x90, 0x96, 0x52),
              'true': q
            },
            'label_switch_color_c': {
              'false': new cc.Color(0xff, 0xff, 0xff, 0x1e),
              'true': q
            },
            'button_switch_color_a': {
              'false': new cc.Color(N.r, N.g, N.b, 0x4f),
              'true': q
            },
            'color_button_transition_a': {
              'normal': q,
              'pressed': new cc.Color(q.r, q.g, q.b, 0x80),
              'hover': q,
              'disabled': new cc.Color(q.r, q.g, q.b, 0x42)
            },
            'white_button_transition_a': {
              'normal': N,
              'pressed': new cc.Color(N.r, N.g, N.b, 0x80),
              'hover': N,
              'disabled': new cc.Color(N.r, N.g, N.b, 0x42)
            },
            'grey_button_transition_a': {
              'normal': new cc.Color(N.r, N.g, N.b, 0x99),
              'pressed': new cc.Color(0x85, 0x85, 0x85, 0x99),
              'hover': new cc.Color(N.r, N.g, N.b, 0x99),
              'disabled': new cc.Color(0x85, 0x85, 0x85, 0x99)
            },
            'spin_start_label': new cc.Color(0xff, 0xff, 0xff, 0xc9)
          },
          'login': {
            'theme_color': q,
            'default_font': "Arial"
          },
          'history': {
            'grey_button_transition_b': {
              'normal': N,
              'pressed': new cc.Color(0x85, 0x85, 0x85),
              'hover': N,
              'disabled': new cc.Color(0x85, 0x85, 0x85)
            },
            'white_button_transition_a': {
              'normal': N,
              'pressed': new cc.Color(0xff, 0xff, 0xff, 0x80),
              'hover': N,
              'disabled': new cc.Color(0xff, 0xff, 0xff, 0x42)
            },
            'calendar_title_select': {
              'true': q,
              'false': new cc.Color(0xff, 0xff, 0xff, 0x4d)
            },
            'calendar_selection_line': new cc.Color(0x28, 0x28, 0x34, 0xeb),
            'calendar_title_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff),
            'calendar_content_bg': new cc.Color(0x28, 0x28, 0x34, 0xeb),
            'calendar_custom_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff),
            'calendar_custom_line_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff),
            'calendar_custom_title': new cc.Color(0xff, 0xff, 0xff, 0x99),
            'calendar_custom_dot': new cc.Color(0xff, 0xff, 0xff, 0xff),
            'calendar_custom_btn': {
              'normal': q,
              'pressed': new cc.Color(0x77, 0x77, 0x77, 0xff),
              'hover': q,
              'disabled': new cc.Color(0x57, 0x57, 0x57, 0xff)
            },
            'calendar_datepicker_default_font': new cc.Color(0xff, 0xff, 0xff, 0x4d),
            'calendar_datepicker_highlight_font': q,
            'calendar_datepicker_highlight_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff),
            'calendar_datepicker_line': new cc.Color(0x28, 0x28, 0x34, 0xff),
            'theme_color': q,
            'theme_font': "Arial",
            'color_theme_opacity_a': new cc.Color(q.r, q.g, q.b, 0x99),
            'navigator_bg': new cc.Color(0x30, 0x30, 0x3c),
            'navigator_bar_bg': new cc.Color(0x28, 0x28, 0x34),
            'history_bar_item_bg': {
              'normal': new cc.Color(0x30, 0x30, 0x3c),
              'pressed': new cc.Color(0x39, 0x39, 0x4b, 0x3c),
              'hover': new cc.Color(0x30, 0x30, 0x3c),
              'disabled': new cc.Color(0x28, 0x28, 0x34)
            },
            'history_bar_item_font_bg': {
              'false': N,
              'true': q
            },
            'history_main_title': new cc.Color(0xf1, 0xba, 0x5b, 0xff),
            'history_list_item_arrow': new cc.Color(0xff, 0xff, 0xff, 0x40),
            'history_list_item_bg_odd': new cc.Color(0x28, 0x28, 0x34),
            'history_list_item_bg_even': new cc.Color(0x2d, 0x2d, 0x39),
            'history_list_item_bg_pressed': new cc.Color(0x3c, 0x3c, 0x46),
            'history_list_item_special_font': q,
            'history_list_item_value_font': new cc.Color(0xff, 0xff, 0xff, 0x99),
            'history_list_item_date_time_font': new cc.Color(0xff, 0xff, 0xff, 0x99),
            'history_list_item_line': new cc.Color(0xff, 0xff, 0xff, 0x0),
            'history_list_item_free_games_icon': q,
            'history_list_header_bg': new cc.Color(0x28, 0x28, 0x34, 0xff),
            'history_list_header_title_font': new cc.Color(0xff, 0xff, 0xff, 0x4d),
            'history_list_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff),
            'history_list_bottom_circle_loading': N,
            'history_list_middle_circle_loading': new cc.Color(0xff, 0xff, 0xff, 0x4d),
            'history_list_bottom_label_color': N,
            'history_list_middle_label_color': new cc.Color(0xff, 0xff, 0xff, 0x4d),
            'history_list_retry': q,
            'history_list_message_title': new cc.Color(0xdc, 0xdc, 0xdc, 0x99),
            'history_list_message_message': new cc.Color(0xdc, 0xdc, 0xdc, 0x4d),
            'history_list_title_date': new cc.Color(0xff, 0xff, 0xff, 0x99),
            'history_list_middle_loading_front': q,
            'history_list_middle_loading_back': new cc.Color(0.5 * q.r, 0.5 * q.g, 0.5 * q.b),
            'history_list_middle_loading_font_color': q,
            'history_list_bottom_loading_front': q,
            'history_list_bottom_loading_back': new cc.Color(0.5 * q.r, 0.5 * q.g, 0.5 * q.b),
            'history_summary_bg': new cc.Color(0x28, 0x28, 0x34, 0xff),
            'history_summary_title_font': q,
            'history_summary_record_font': new cc.Color(0xff, 0xff, 0xff, 0x99),
            'history_summary_amount_font': N,
            'history_detail_header_title_font': q,
            'history_detail_header_value_font': new cc.Color(0x78, 0x78, 0x78, 0xff),
            'history_detail_header_bg': new cc.Color(0x28, 0x28, 0x34, 0xff),
            'history_detail_down_arrow': q,
            'history_detail_line': new cc.Color(0x28, 0x28, 0x34, 0xff),
            'history_detail_payout_font': new cc.Color(0xff, 0xff, 0xff, 0x42),
            'history_detail_win_line_value_font': N,
            'history_detail_content_bg': new cc.Color(0x30, 0x30, 0x3c),
            'history_detail_no_win_combination_font': new cc.Color(0xff, 0xff, 0xff, 0xcc),
            'history_detail_title_font': N,
            'history_detail_page_arrow': q,
            'history_detail_page_arrow_bg': new cc.Color(0x0, 0x0, 0x0, 0x64),
            'history_bar_close_font': new cc.Color(0xff, 0xff, 0xff, 0xcc),
            'history_bar_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff)
          },
          'alert': {
            'default_title_color': N,
            'default_message_color': N,
            'default_button_title_color': N,
            'default_button_color': q,
            'default_font': "Arial"
          },
          'free_game': {
            'theme_color': q,
            'theme_font': "Arial"
          },
          'bonus_wallet': {
            'theme_color': q,
            'theme_font': "Arial"
          },
          'setting_rules': {
            'title_color': new cc.Color(0xff, 0xff, 0xff),
            'desc_color': new cc.Color(0xcc, 0xcc, 0xcc),
            'font_style': "Arial"
          },
          'setting_payout': {
            'title_color': new cc.Color(0xff, 0xff, 0xff),
            'value_color': new cc.Color(0xff, 0xff, 0xff),
            'value_color_red': new cc.Color(0xc0, 0x26, 0x30),
            'desc_color': new cc.Color(0xcc, 0xcc, 0xcc),
            'font_style': "Arial"
          },
          'loading': {
            'front_icon_color': q,
            'back_icon_color': new cc.Color(0.5 * q.r, 0.5 * q.g, 0.5 * q.b),
            'background_color': new cc.Color(0x0, 0x0, 0x0, 0x0),
            'font_color': q,
            'font_style': "Arial"
          }
        });
        C["default"] = f;
        cc._RF.pop();
      }
    }, {}],
    'BGMHandler': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "bdbf5PQ29hIk57h6/UXPSV2", "BGMHandler")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.stopBigWinEndFirework = C.stopBigWinEndCoin = C.playBigWinEndFirework = C.playBigWinEndCoin = C.skipBigWinEnd = C.playNormalBGMFromBigWinEnd = C.playBigWinBGM = C.fadeInNormalBGM = C.fadeOutNormalBGM = C.crossFadePlayRespinBGMtoNormal = C.crossFadePlayNormalBGMtoRespin = C.muteAllBGM = C.muteNormalBGM = C.instantPlayRespinBGM = C.instantPlayNormalBGM = C.BGM_STATE = undefined;
        var S;
        var q = B("AudioManager");
        var N = B("Utils");
        var f = B("GConstants");
        (function (D) {
          D[D.NONE = 0x0] = "NONE";
          D[D.MAIN_LOOP = 0x1] = "MAIN_LOOP";
          D[D.RESPIN = 0x2] = "RESPIN";
          D[D.BIG_WIN = 0x3] = "BIG_WIN";
          D[D.BIG_WIN_END = 0x4] = "BIG_WIN_END";
        })(S = C.BGM_STATE || (C.BGM_STATE = {}));
        var J = 0x0;
        var A = -0x1;
        var y = void S.NONE;
        C.instantPlayNormalBGM = function () {
          var D = b(S.MAIN_LOOP);
          D.stop();
          D.setVolume(0x1);
          J = D.play();
          var x = b(S.RESPIN);
          x.stop();
          x.setVolume(0x0);
          A = x.play();
          S.MAIN_LOOP;
        };
        C.instantPlayRespinBGM = function () {
          var D = b(S.MAIN_LOOP);
          D.stop();
          D.setVolume(0x0);
          J = D.play();
          var x = b(S.RESPIN);
          x.stop();
          x.setVolume(0x1);
          A = x.play();
          S.MAIN_LOOP;
        };
        C.muteNormalBGM = k;
        C.muteAllBGM = function () {
          k();
        };
        C.crossFadePlayNormalBGMtoRespin = function () {
          var D = b(S.MAIN_LOOP);
          var x = b(S.RESPIN);
          D.fade(0x1, 0x0, f.AUDIO_RELATED_TIMING.BGM_NORMAL_TO_RESPIN);
          x.fade(0x0, 0x1, f.AUDIO_RELATED_TIMING.BGM_NORMAL_TO_RESPIN);
          S.MAIN_LOOP;
        };
        C.crossFadePlayRespinBGMtoNormal = function () {
          var D = b(S.MAIN_LOOP);
          var x = b(S.RESPIN);
          var G = x.getInstantVolume(A);
          var Y = D.getInstantVolume(J);
          D.fade(Y, 0x1, f.AUDIO_RELATED_TIMING.BGM_RESPIN_TO_NORMAL);
          x.fade(G, 0x0, f.AUDIO_RELATED_TIMING.BGM_RESPIN_TO_NORMAL);
          S.RESPIN;
        };
        C.fadeOutNormalBGM = function (D) {
          var x = b(S.MAIN_LOOP);
          var G = x.getInstantVolume(J);
          x.fade(G, 0.5, D);
        };
        C.fadeInNormalBGM = function (D) {
          var x = b(S.MAIN_LOOP);
          var G = x.getInstantVolume(J);
          x.fade(G, 0x1, D);
        };
        C.playBigWinBGM = function () {
          var D = b(S.MAIN_LOOP);
          var x = b(S.RESPIN);
          if (y) {
            y();
          }
          var G = D.getInstantVolume(J);
          var Y = x.getInstantVolume(A);
          if (G > 0x0) {
            D.fade(0x1, 0x0, 0.2);
          }
          if (Y > 0x0) {
            x.fade(0x1, 0x0, 0.2);
          }
          var m = b(S.BIG_WIN);
          if (m.isPlaying()) {
            m.stop();
          }
          m.play();
          m.setVolume(0x1);
          S.BIG_WIN;
        };
        C.playNormalBGMFromBigWinEnd = function () {
          var D = b(S.MAIN_LOOP);
          if (y) {
            y();
          }
          var x = b(S.BIG_WIN);
          var G = b(S.BIG_WIN_END);
          if (x.isPlaying()) {
            x.stop();
          }
          if (G.isPlaying()) {
            G.stop();
          }
          G.play();
          G.setVolume(0x1);
          S.BIG_WIN_END;
          y = N.delayCallback(0x2)(function () {
            var Y = D.getInstantVolume(J);
            D.fade(Y, 0x1, 0x2);
            S.MAIN_LOOP;
          });
        };
        C.skipBigWinEnd = function () {
          var D = y;
          y = undefined;
          if (D) {
            D();
          }
          var x = b(S.MAIN_LOOP);
          var G = b(S.BIG_WIN_END);
          y = N.delayCallback(0.5)(function () {
            var Y = x.getInstantVolume(J);
            x.fade(Y, 0x1, 0.5);
            S.MAIN_LOOP;
          });
          G.fade(0x1, 0x0, 0x2);
          N.delayCallback(0x2)(function () {
            if (G.isPlaying()) {
              G.stop();
            }
          });
        };
        C.playBigWinEndCoin = function () {
          var D = q.GeneralAudioPool.bgm_bigwin_coins;
          if (D.isPlaying()) {
            D.stop();
          }
          D.play();
          D.setVolume(0x1);
        };
        C.playBigWinEndFirework = function () {
          var D = q.GeneralAudioPool.bgm_bigwin_firework;
          if (D.isPlaying()) {
            D.stop();
          }
          D.play();
          D.setVolume(0x1);
        };
        C.stopBigWinEndCoin = function () {
          var D = q.GeneralAudioPool.bgm_bigwin_coins;
          D.fade(0x1, 0x0, 0x2);
          N.delayCallback(0x2)(function () {
            if (D.isPlaying()) {
              D.stop();
            }
          });
        };
        C.stopBigWinEndFirework = function () {
          var D = q.GeneralAudioPool.bgm_bigwin_firework;
          D.fade(0x1, 0x0, 0x2);
          N.delayCallback(0x2)(function () {
            if (D.isPlaying()) {
              D.stop();
            }
          });
        };
        cc._RF.pop();
      }
      function b(D) {
        switch (D) {
          case S.MAIN_LOOP:
            return q.GeneralAudioPool.bgm_mg;
          case S.RESPIN:
            return q.GeneralAudioPool.bgm_mg_b;
          case S.BIG_WIN:
            return q.GeneralAudioPool.bgm_bigwin_main;
          case S.BIG_WIN_END:
            return q.GeneralAudioPool.bgm_bigwin_end;
          default:
            return;
        }
      }
      function k() {
        b(S.MAIN_LOOP).setVolume(0x0);
        b(S.RESPIN).setVolume(0x0);
      }
    }, Bx],
    'BVFrameworkEnum': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "ec7f7EEHK9MYKQtN9oOrPGU", "BVFrameworkEnum")) {
        var B = System.get("bvframework").BVFrameworkEnum;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'BVFramework': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "a9a1dZAV2tCnpP1jdguoThD", "BVFramework")) {
        var B = System.get("bvframework").getGameContext;
        M.exports.getGameContext = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'BackgroundControllerTwo': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "31ca9PU5j1LtaQhk68hUyoK", "BackgroundControllerTwo")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.bgLeft = undefined;
            b.bgRight = undefined;
            b.shine = undefined;
            b.particles = [];
            return b;
          }
          __extends(y, A);
          y.prototype.init = function () {};
          y.prototype.setupToNormalState = function () {
            this.bgLeft.active = false;
            this.bgRight.active = false;
            this.bgLeft.stopAllActions();
            this.bgRight.stopAllActions();
            this.shine.stopAllActions();
            this.shine.opacity = 0x0;
            this.bgLeft.position = cc.v3(this.bgLeft.position.x, 0x154);
            this.bgRight.position = cc.v3(this.bgRight.position.x, 0x154);
            this.particles.forEach(function (b) {
              b.node.opacity = 0x0;
              b.play();
            });
          };
          y.prototype.setupToRespinState = function () {
            this.bgLeft.active = true;
            this.bgRight.active = true;
            this.bgLeft.stopAllActions();
            this.bgRight.stopAllActions();
            this.bgLeft.position = cc.v3(this.bgLeft.position.x, 0x19a);
            this.bgRight.position = cc.v3(this.bgRight.position.x, 0x19a);
            this.shine.stopAllActions();
            this.shine.opacity = 0xff;
            this.shine.runAction(cc.repeatForever(cc.rotateBy(0x14, 0x168)));
            this.particles.forEach(function (b) {
              b.node.opacity = 0xff;
              b.play();
            });
          };
          y.prototype.zoomOut = function () {
            this.bgLeft.active = true;
            this.bgRight.active = true;
            this.bgLeft.runAction(cc.moveTo(2.1, cc.v2(this.bgLeft.position.x, 0x19a)).easing(cc.easeCubicActionInOut()));
            this.bgRight.runAction(cc.moveTo(2.1, cc.v2(this.bgRight.position.x, 0x19a)).easing(cc.easeCubicActionInOut()));
            this.shine.stopAllActions();
            this.shine.runAction(cc.sequence(cc.delayTime(0.75), cc.fadeTo(1.75, 0x9b)));
            this.shine.runAction(cc.repeatForever(cc.rotateBy(0xf, 0x168)));
            this.particles.forEach(function (b) {
              b.node.stopAllActions();
              b.node.opacity = 0x0;
              b.node.runAction(cc.fadeIn(0x1));
              b.play();
            });
          };
          y.prototype.zoomIn = function () {
            var b = this;
            this.bgLeft.runAction(cc.moveTo(2.1, cc.v2(this.bgLeft.position.x, 0x154)).easing(cc.easeCubicActionInOut()));
            this.bgRight.runAction(cc.moveTo(2.1, cc.v2(this.bgRight.position.x, 0x154)).easing(cc.easeCubicActionInOut()));
            this.shine.stopAllActions();
            this.shine.runAction(cc.fadeOut(0x1));
            this.particles.forEach(function (u) {
              u.node.stopAllActions();
              u.node.opacity = 0x0;
              u.stop();
              u.setCurrentTime(0x0);
              u.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
            S.delayCallback(2.1)(function () {
              b.bgLeft.active = false;
              b.bgRight.active = false;
            });
          };
          y.prototype.teaseZoomOut = function () {
            this.bgLeft.active = true;
            this.bgRight.active = true;
            this.bgLeft.position = cc.v3(this.bgLeft.position.x, 0x154);
            this.bgRight.position = cc.v3(this.bgRight.position.x, 0x154);
            this.bgLeft.runAction(cc.moveTo(0x1, cc.v2(this.bgLeft.position.x, 0x177)).easing(cc.easeCubicActionInOut()));
            this.bgRight.runAction(cc.moveTo(0x1, cc.v2(this.bgRight.position.x, 0x177)).easing(cc.easeCubicActionInOut()));
          };
          y.prototype.teaseZoomIn = function () {
            var b = this;
            this.bgLeft.position = cc.v3(this.bgLeft.position.x, 0x177);
            this.bgRight.position = cc.v3(this.bgRight.position.x, 0x177);
            this.bgLeft.runAction(cc.moveTo(0x1, cc.v2(this.bgLeft.position.x, 0x154)).easing(cc.easeCubicActionInOut()));
            this.bgRight.runAction(cc.moveTo(0x1, cc.v2(this.bgRight.position.x, 0x154)).easing(cc.easeCubicActionInOut()));
            S.delayCallback(0x1)(function () {
              b.bgLeft.active = false;
              b.bgRight.active = false;
            });
          };
          y.prototype.destroy = function () {
            return A.prototype.destroy.call(this);
          };
          __decorate([f(cc.Node)], y.prototype, "bgLeft", undefined);
          __decorate([f(cc.Node)], y.prototype, "bgRight", undefined);
          __decorate([f(cc.Node)], y.prototype, "shine", undefined);
          __decorate([f([cc.Animation])], y.prototype, "particles", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, Be],
    'BackgroundController': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "f5ddfUyhRhBBK/0KJeh/j0H", "BackgroundController")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.bg1 = undefined;
            A.bg2 = undefined;
            A.shine2 = undefined;
            A.leaf = undefined;
            A.leafBlur = undefined;
            A.bgAnim = undefined;
            A.petalAnimHolder = [];
            return A;
          }
          __extends(J, f);
          J.prototype.init = function () {
            this.petalAnimHolder.forEach(function (A) {
              A.getComponent("AnimParticleSystem").resetSystem();
            });
          };
          J.prototype.setupToNormalState = function () {
            this.bg1.stopAllActions();
            this.bg2.stopAllActions();
            this.bg1.scale = 0x1;
            this.bg2.position = cc.v3(0x0, 0xe6);
            this.bg2.scale = 0x1;
            this.shine2.stopAllActions();
            this.shine2.scale = 0x1;
            this.shine2.opacity = 0x0;
            this.leaf.scale = 1.43;
            this.leaf.position = cc.v3(0x0, 0x230);
            this.leafBlur.scale = 2.4;
            this.leafBlur.position = cc.v3(0x0, -0x158);
          };
          J.prototype.setupToRespinState = function () {
            this.bg1.stopAllActions();
            this.bg2.stopAllActions();
            this.shine2.stopAllActions();
            this.shine2.opacity = 0xff;
            this.shine2.scale = 0x2;
            this.bg1.scale = 0.95;
            this.bg2.position = cc.v3(0x0, 0xaa);
            this.bg2.scale = 0.9;
            this.leaf.scale = 1.33;
            this.leaf.position = cc.v3(0x0, 0x1f4);
            this.leafBlur.scale = 2.3;
            this.leafBlur.position = cc.v3(0x0, -0x194);
          };
          J.prototype.zoomOut = function (A) {
            this.bgAnim.play("background_out");
            this.bgAnim.once(cc.Animation.EventType.FINISHED, function () {
              if (A) {
                A();
              }
            });
            this.shine2.stopAllActions();
            this.shine2.runAction(cc.sequence(cc.delayTime(2.2), cc.spawn(cc.scaleTo(0.75, 0x2), cc.fadeIn(0.95))));
          };
          J.prototype.zoomIn = function (A) {
            this.bgAnim.play("background_in");
            this.bgAnim.once(cc.Animation.EventType.FINISHED, function () {
              if (A) {
                A();
              }
            });
            this.shine2.stopAllActions();
            this.shine2.runAction(cc.sequence(cc.delayTime(0.2), cc.fadeOut(0.9)));
          };
          J.prototype.teaseZoomOut = function (A) {
            this.X = A;
            this.bgAnim.play("background_tease_out");
            this.bgAnim.once(cc.Animation.EventType.FINISHED, function () {
              if (A) {
                A();
              }
            });
          };
          J.prototype.teaseZoomIn = function (A) {
            this.Z = A;
            this.bgAnim.play("background_tease_in");
            this.bgAnim.once(cc.Animation.EventType.FINISHED, function () {
              if (A) {
                A();
              }
            });
          };
          J.prototype.destroy = function () {
            return f.prototype.destroy.call(this);
          };
          __decorate([q(cc.Node)], J.prototype, "bg1", undefined);
          __decorate([q(cc.Node)], J.prototype, "bg2", undefined);
          __decorate([q(cc.Node)], J.prototype, "shine2", undefined);
          __decorate([q(cc.Node)], J.prototype, "leaf", undefined);
          __decorate([q(cc.Node)], J.prototype, "leafBlur", undefined);
          __decorate([q(cc.Animation)], J.prototype, "bgAnim", undefined);
          __decorate([q([cc.Node])], J.prototype, "petalAnimHolder", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'BaseListViewCell': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "24d8a0AiVJMa4yCegaay2ry", "BaseListViewCell")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.label = undefined;
            A.sprite = undefined;
            A.selectedBackgroundColor = undefined;
            A.normalBackgroundColor = undefined;
            A.endPos = undefined;
            return A;
          }
          __extends(J, f);
          J.prototype.onLoad = function () {
            this.setupTouchAction();
          };
          J.prototype.setupTouchAction = function () {
            this.node.on(cc.Node.EventType.TOUCH_START, this.$, this);
            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
            this.node.on(cc.Node.EventType.TOUCH_END, this.it, this);
            this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.st, this);
            this.node.on(cc.Node.EventType.MOUSE_ENTER, this.et, this);
            this.node.on(cc.Node.EventType.MOUSE_LEAVE, this.nt, this);
          };
          J.prototype.removeTouchAction = function () {
            this.node.off(cc.Node.EventType.TOUCH_START, this.$, this);
            this.node.off(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
            this.node.off(cc.Node.EventType.TOUCH_END, this.it, this);
            this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.st, this);
            this.node.off(cc.Node.EventType.MOUSE_ENTER, this.et, this);
            this.node.off(cc.Node.EventType.MOUSE_LEAVE, this.nt, this);
          };
          J.prototype.et = function (A) {
            if (this.mouseEnterAction) {
              this.mouseEnterAction(A);
            }
          };
          J.prototype.nt = function (A) {
            if (this.mouseLeaveAction) {
              this.mouseLeaveAction(A);
            }
          };
          J.prototype.$ = function (A) {
            var y = A.touch;
            var b = cc.v2(y.getLocation().x, y.getLocation().y);
            this.startPos = b;
            this.node.color = this.selectedBackgroundColor;
            if (this.touchStartAction) {
              this.touchStartAction(A);
            }
          };
          J.prototype.tt = function (A) {
            this.node.color = this.normalBackgroundColor;
            if (this.touchMoveAction) {
              this.touchMoveAction(A);
            }
          };
          J.prototype.it = function (A) {
            var y = A.touch;
            var b = cc.v2(y.getLocation().x, y.getLocation().y);
            this.endPos = b;
            this.node.color = this.normalBackgroundColor;
            A.stopPropagationImmediate();
            if (this.touchEndAction) {
              this.touchEndAction(A);
            }
          };
          J.prototype.st = function (A) {
            var y = A.touch;
            var b = cc.v2(y.getLocation().x, y.getLocation().y);
            this.endPos = b;
            this.node.color = this.normalBackgroundColor;
            A.stopPropagationImmediate();
            if (this.touchCancelAction) {
              this.touchCancelAction(A);
            }
          };
          J.prototype.destroy = function () {
            this.removeTouchAction();
            f.prototype.destroy.call(this);
          };
          __decorate([q(cc.Label)], J.prototype, "label", undefined);
          __decorate([q(cc.Sprite)], J.prototype, "sprite", undefined);
          __decorate([q(cc.Color)], J.prototype, "selectedBackgroundColor", undefined);
          __decorate([q(cc.Color)], J.prototype, "normalBackgroundColor", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'BaseScroller': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "7a55d+EM2dKr590KKrgiTXR", "BaseScroller")) {
        var K;
        var S = {
          value: true
        };
        var q = {
          RUN: "run",
          END: "end",
          ACCELERATE: "accelerate",
          DECELERATE: "decelerate"
        };
        Object.defineProperty(C, "__esModule", S);
        C.SCROLLER_EVENT = C.ScrollerState = undefined;
        (function (f) {
          f[f.IDLE = 0x0] = "IDLE";
          f[f.RUNNING = 0x1] = "RUNNING";
          f[f.ENDED = 0x2] = "ENDED";
        })(K = C.ScrollerState || (C.ScrollerState = {}));
        C.SCROLLER_EVENT = Object.freeze(q);
        var N = function (f) {
          function o(y) {
            var c = f.call(this) || this;
            c.state = K.IDLE;
            c.config = undefined;
            c.runtimeConfig = undefined;
            c.config = y;
            c.runtimeConfig = __assign({}, y);
            return c;
          }
          var J = {
            get: function () {
              return this.state === K.RUNNING;
            },
            enumerable: false,
            configurable: true
          };
          var A = {
            get: function () {
              return this.state === K.ENDED;
            },
            enumerable: false,
            configurable: true
          };
          __extends(o, f);
          Object.defineProperty(o.prototype, "isPlaying", J);
          Object.defineProperty(o.prototype, "isEnded", A);
          o.prototype.setConfig = function (y) {
            Object.assign(this.config, y);
          };
          o.prototype.updateRunTimeConfig = function (y) {
            Object.assign(this.runtimeConfig, y);
          };
          o.prototype.getRunTimeConfig = function () {
            return __assign({}, this.runtimeConfig);
          };
          o.prototype.reset = function () {
            this.state = K.IDLE;
            this.runtimeConfig = __assign({}, this.config);
            this.onReset();
          };
          o.prototype.run = function () {
            if (this.state === K.IDLE) {
              this.state = K.RUNNING;
              this.onRun();
            }
          };
          o.prototype.end = function () {
            if (this.state !== K.ENDED) {
              this.state = K.ENDED;
              this.onEnd();
            }
          };
          o.prototype.onReset = function () {};
          o.prototype.onRun = function () {};
          o.prototype.onEnd = function () {};
          o.prototype.emitEvent = function (y, c) {
            var b = {
              scroller: this,
              speedFactor: c
            };
            this.emit(y, b);
          };
          return o;
        }(cc.EventTarget);
        C["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'BaseUIHelper': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "6c985/s6btKVqrcmkuEBQ1t", "BaseUIHelper")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        B("TweaksData");
        var S = B("Utils");
        var q = B("SettingMenuHelper");
        var N = B("SkipHandler");
        var J = B("BGMHandler");
        var A = B("InfoboardController");
        var y = B("GConstants");
        var b = B("SpaceBarInterrupter");
        var k = B("WinLine.spec");
        var D = B("AutomationDecorator");
        var x = B("GSlotTransactionModel");
        var G = B("GameUtils");
        var Y = B("GeneralAudioConstant");
        var W = B("AudioManager");
        var F = function () {
          function E(I, w) {
            this.name = "Base UI Helper";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.ot = undefined;
            this.ct = 0x0;
            this.ht = undefined;
            this.generalControllers = w;
            this.dataSource = I;
          }
          E.prototype.destroy = function () {
            this.generalControllers = undefined;
            this.dataSource = undefined;
          };
          E.prototype.onStateFullyIdle = function () {
            var I = this.dataSource.transactionModel;
            var w = I.winLines;
            var j = I.winValues;
            var Z = I.reels;
            var X = I.wildCount;
            var V = this.generalControllers;
            var H = V.paySelectEffectController;
            var z = V.slotTintController;
            var P = V.symbolPopoutController;
            var p = V.tigerController;
            var O = [];
            Z.forEach(function (L, U) {
              if (-0x1 === L) {
                O.push(U);
              }
            });
            P.enablePanel();
            P.setupButtonEvent(O);
            if (w) {
              z.fadeIn(0.2);
              H.playAlternateLines(w, j);
            } else {
              this.ct++;
              if (this.ct > 0x5) {
                p.noWin(X);
                this.ct = 0x0;
              }
              this.ht = S.delayCallback(0x14)(function () {
                p.noSpin(X);
              });
            }
          };
          E.prototype.preSpinningCleanup = function (I) {
            var w = this;
            var j = this.generalControllers;
            var Z = j.infoboardController;
            var X = j.slotTintController;
            var V = j.symbolPopoutController;
            var H = j.slotController;
            var z = this.dataSource.transactionModel;
            var P = z.winLines;
            var p = z.accumulatedWinAmount;
            var O = z.featureWinSymbol;
            if (P || p > 0x0) {
              Z.hideMediumWinEffect();
              this.ot = S.delayCallback(y.INFOBOARD_TIMING.DELAY_RESET)(function () {
                var U = w.dataSource.transactionModel;
                var T = U.stateTransitionFrom;
                var g = U.stateTransitionTo;
                if (T === x.SpinType.RESPIN) {
                  Z.playRespin(O);
                } else if (T === x.SpinType.NORMAL && g === x.SpinType.RESPIN) {
                  Z.playZoom();
                } else {
                  Z.resetInfoboard(false);
                }
                Z.resumeInfoboard();
              });
              X.fadeOut(0.1);
              H.setSlotItemsVisible(true, [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8]);
              this.extraPreSpinningCleanup(I);
            } else {
              this.extraPreSpinningCleanup(I);
            }
            V.hidePopOutItem();
            var L = this.ht;
            this.ht = undefined;
            if (L) {
              L();
            }
          };
          E.prototype.extraPreSpinningCleanup = function (I) {
            if (I) {
              I();
            }
          };
          E.prototype.playSlotSpinEffect = function () {};
          E.prototype.setAvailablePrizeAction = function () {
            var I = this.generalControllers.infoboardController;
            var w = this.dataSource.transactionModel.accumulatedWinAmount;
            if (I.infoboardState === A.InfoBoardState.SHOWING_WIN && 0x0 === w) {
              var j = this.ot;
              this.ot = undefined;
              if (j) {
                j();
              }
              I.resetInfoboard(false);
              I.resumeInfoboard();
            }
          };
          E.prototype.renderFeatureBeforePrize = function (I) {
            var w = this.dataSource.transactionModel;
            var j = w.winLines;
            var Z = w.stateTransitionTo;
            var X = w.stateTransitionFrom;
            var V = w.reels;
            var H = this.generalControllers;
            var z = H.stickyController;
            var P = H.slotController;
            var p = H.slotTintController;
            var O = H.paySelectEffectController;
            var L = H.angpaoController;
            var U = H.tigerController;
            if (X === x.SpinType.RESPIN && Z === x.SpinType.NORMAL) {
              z.playWin(j);
              p.fadeIn(0.2);
              P.reloadData(V);
              S.delayCallback(0.4)(function () {
                U.playRespinWin();
              });
            }
            S.delayCallback(0.2)(function () {
              z.playLargeSymbol(V, j, function () {
                L.win10();
                P.setSlotItemsVisible(false, [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8]);
                O.stopPaySelect(false);
              }, I);
            });
          };
          E.prototype.clearLargeSymbol = function (I) {
            var w = this.generalControllers;
            var j = w.stickyController;
            w.slotController.setSlotItemsVisible(true, [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8]);
            j.clearLargeSymbol(I);
          };
          E.prototype.playAllLines = function (I) {
            var w = this.dataSource.transactionModel;
            var j = w.winLines;
            var Z = w.stateTransitionTo;
            var X = w.reels;
            var V = w.featureWinSymbol;
            var H = this.generalControllers;
            var z = H.paySelectEffectController;
            var P = H.slotTintController;
            var O = H.stickyController;
            var L = H.payLineNumberController;
            var U = H.payLineController;
            var T = q.settingMenuHelper.turboSpinOn;
            var g = T ? 0.2 * (0x1 - y.TURBO_SPIN_SPEEDUP_FACTOR) : 0.2;
            var h0 = function () {
              if (I) {
                I();
              }
            };
            if (j) {
              if (Z === x.SpinType.NORMAL) {
                this.extraPlayAllLinesAction();
                P.fadeIn(g);
                z.playAllLines(j, true, T, h0);
              } else {
                var h1 = j.winPositions;
                h1.forEach(function (h2, h3) {
                  h1[h3] = parseInt(h2, 0xa);
                });
                L.show(h1);
                U.showLine(h1);
                O.playSticky(X, j, V, h0);
              }
            } else {
              h0();
            }
          };
          E.prototype.playSmallWin = function (I, w) {
            var j = this.generalControllers;
            var Z = j.infoboardController;
            var X = j.tigerController;
            var V = this.dataSource.transactionModel;
            var H = V.wildCount;
            var z = V.stateTransitionTo;
            var P = V.stateTransitionFrom;
            this.updateBalance();
            var p = function () {
              if (w) {
                w();
              }
            };
            if (G.checkOperatorProfit(I, this.dataSource)) {
              if (z === x.SpinType.NORMAL && P === x.SpinType.NORMAL) {
                X.playWin(H);
              }
              Z.playSmallWin(I, p);
              var O = Y.GENERAL_AUDIO.prizeSmalwin.key;
              W.stopAudioIfPlaying(O);
              W.playAudioIfNotPlaying(O);
            } else {
              Z.resetInfoboard();
              if (p) {
                p();
              }
            }
            var L = this.ot;
            this.ot = undefined;
            if (L) {
              L();
            }
            this.extraSmallWinAction();
          };
          E.prototype.playMediumWin = function (I, w) {
            var j = this;
            var Z = this.generalControllers;
            var X = Z.infoboardController;
            var V = Z.slotController;
            var H = Z.clickEffectController;
            var z = Z.tigerController;
            var P = this.dataSource.transactionModel;
            var p = P.wildCount;
            var O = P.stateTransitionFrom;
            var L = P.stateTransitionTo;
            if (O === x.SpinType.NORMAL && L === x.SpinType.NORMAL) {
              z.playBigWin(p);
            }
            N["default"].init(V.node, H);
            X.playMediumWin(0x0, I, function () {
              j.updateBalance();
              b.spaceBarInterrupter.unsubscribeEventInterrupter("medium_win");
              S.delayCallback(0.7)(w);
            });
            b.spaceBarInterrupter.subscribeEventInterrupter("medium_win", undefined, X.quickStopMediumWin.bind(X));
            var U = this.ot;
            this.ot = undefined;
            if (U) {
              U();
            }
            this.extraMediumWinAction();
          };
          E.prototype.playBigWin = function (w, j, Z) {
            var X = this;
            var V = this.generalControllers;
            var H = V.infoboardController;
            var z = V.bigWinController;
            var P = V.clickEffectController;
            var O = V.tigerController;
            var L = V.slotController;
            var U = V.angpaoController;
            var T = this.dataSource.transactionModel;
            var h0 = T.wildCount;
            var h1 = T.winLines;
            var h2 = T.stateTransitionFrom;
            var h3 = T.stateTransitionTo;
            var h4 = function () {
              N["default"].init(L.node, P);
              var h7 = Y.GENERAL_AUDIO.infobarAfterBigwin.key;
              W.stopAudioIfPlaying(h7);
              W.playAudioIfNotPlaying(h7);
              H.playBigWin(w);
              X.updateBalance();
              S.delayCallback(0x1)(Z);
            };
            var h5 = 0x0;
            if (h1 && h1.winPositions) {
              for (var h6 = 0x0; h6 < h1.winPositions.length; h6++) {
                if (h1.winPositions[h6] >= 0x1 && h1.winPositions[h6] <= 0x3) {
                  h5++;
                }
              }
            }
            if (h1 && h1.winPositions && h5 >= 0x3) {
              S.sequenceCallback(function (h7) {
                X.extraBigWinAction();
                H.playSmallWin(w / 0xa, h7);
                if (h2 === x.SpinType.NORMAL && h3 === x.SpinType.NORMAL) {
                  O.playBigWin(h0);
                }
                var h8 = Y.GENERAL_AUDIO.prizeSmalwin.key;
                W.stopAudioIfPlaying(h8);
                W.playAudioIfNotPlaying(h8);
              }, function (h7) {
                if (h2 === x.SpinType.NORMAL && h3 === x.SpinType.NORMAL) {
                  H.playNormalMultiplier(h7);
                } else {
                  U.hide10();
                  H.playMultiplier(O.getTigerPosition(), h7);
                }
              }, function (h7) {
                N["default"].init(z.node, P);
                J.playBigWinBGM();
                z.play(w, j, h7);
                z.initBigWinOutSoundEffect(J.playNormalBGMFromBigWinEnd);
                var h8 = X.ot;
                X.ot = undefined;
                if (h8) {
                  h8();
                }
              })(h4);
            } else {
              N["default"].init(z.node, P);
              S.delayCallback(y.BIG_WIN_TIMING.BIG_WIN_DELAY)(function () {
                J.playBigWinBGM();
                X.extraBigWinAction();
                z.play(w, j, h4);
                z.initBigWinOutSoundEffect(J.playNormalBGMFromBigWinEnd);
                var h7 = X.ot;
                X.ot = undefined;
                if (h7) {
                  h7();
                }
              });
            }
          };
          E.prototype.updateBalance = function (I) {
            var w = this.dataSource.playerModel.balance;
            var j = this.dataSource.transactionModel.accumulatedWinAmount;
            if (j > 0x0) {
              q.settingMenuHelper.setWinAmount(j);
            }
            q.settingMenuHelper.setBalance(w);
            if (I) {
              I();
            }
          };
          E.prototype.setWinThreshold = function (I) {
            this.generalControllers.infoboardController.setThreshold(I);
          };
          E.prototype.extraSmallWinAction = function () {};
          E.prototype.extraMediumWinAction = function () {};
          E.prototype.extraBigWinAction = function () {};
          E.prototype.extraPlayAllLinesAction = function () {};
          __decorate([D.automationDec({
            'func': k.winHighlightShown
          })], E.prototype, "playAllLines", null);
          return E;
        }();
        C["default"] = F;
        cc._RF.pop();
      }
    }, BG],
    'BetModifierButton': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "076aehdcx9HQI7+9hg7FlGu", "BetModifierButton")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("GenericSettingButton");
        var q = B("UIAppearanceHelper");
        var N = B("Utils");
        var f = cc._decorator;
        var J = f.ccclass;
        var A = f.property;
        var y = function (b) {
          function u() {
            var k = null !== b && b.apply(this, arguments) || this;
            k.isIncreaseBet = false;
            return k;
          }
          __extends(u, b);
          u.prototype.setShowSettingToastCallback = function (k) {
            this.rt = k;
          };
          Object.defineProperty(u.prototype, "showSettingToast", {
            'get': function () {
              if (!this.rt) {
                throw Error("BetModifierButton :: showSettingToast is undefined. Please set it using setShowSettingToastCallback");
              }
              return this.rt;
            },
            'enumerable': false,
            'configurable': true
          });
          u.prototype.setHideSettingToastCallback = function (k) {
            this.at = k;
          };
          Object.defineProperty(u.prototype, "hideSettingToast", {
            'get': function () {
              if (!this.at) {
                throw Error("BetModifierButton :: hideSettingToast is undefined. Please set it using setHideSettingToastCallback");
              }
              return this.at;
            },
            'enumerable': false,
            'configurable': true
          });
          u.prototype.increaseBet = function (k, D, x) {
            if (undefined === D) {
              for (var Y = 0x0; Y < k.length; Y++) {
                if (parseFloat(k[Y]) > parseFloat(x)) {
                  D = Y - 0x1;
                  x = k[Y - 0x1];
                  break;
                }
              }
            } else if (D >= k.length - 0x1) {
              this.showSettingToast(shell.I18n.t("SettingMenu.BiggestBet"), 0x2);
              return {
                'selectedBet': D,
                'selectedBetAmount': x
              };
            }
            if (undefined === D) {
              throw Error("BetModifierButton :: increaseBet : selectedBet is undefined and cannot be located from selectedBetAmount ");
            }
            x = k[++D];
            if (D >= k.length - 0x1) {
              this.showSettingToast(shell.I18n.t("SettingMenu.BiggestBet"), 0x2);
            } else {
              this.hideSettingToast();
            }
            return {
              'selectedBet': D,
              'selectedBetAmount': x
            };
          };
          u.prototype.decreaseBet = function (k, D, x) {
            if (undefined === D) {
              for (var G = k.length - 0x1; G >= 0x0; G--) {
                if (parseFloat(k[G]) < parseFloat(x)) {
                  D = G + 0x1;
                  x = k[G + 0x1];
                  break;
                }
              }
            } else if (D <= 0x0) {
              this.showSettingToast(shell.I18n.t("SettingMenu.SmallestBet"), 0x2);
              return {
                'selectedBet': D,
                'selectedBetAmount': x
              };
            }
            if (undefined === D) {
              throw Error("BetModifierButton :: decreaseBet : selectedBet is undefined and cannot be located from selectedBetAmount ");
            }
            x = k[--D];
            if (D <= 0x0) {
              this.showSettingToast(shell.I18n.t("SettingMenu.SmallestBet"), 0x2);
            } else {
              this.hideSettingToast();
            }
            return {
              'selectedBet': D,
              'selectedBetAmount': x
            };
          };
          u.prototype.updateBetModifierColor = function (k, D) {
            if (this.isIncreaseBet) {
              this.isReachLimit = !!(D && k >= D);
            } else {
              this.isReachLimit = k <= 0x0;
            }
            this.interactableButtonColor(this.isInteractable);
          };
          u.prototype.changeButtonPressedColor = function (k) {
            if (this.buttonTheme) {
              var D = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var x = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".pressed");
              if (this.isReachLimit) {
                var G = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
                N.setNodeColorWithOpacity(this.iconSprite, G);
              } else {
                N.setNodeColorWithOpacity(this.iconSprite, k ? x : D);
              }
            }
          };
          u.prototype.interactableButtonColor = function (k) {
            if (this.buttonTheme) {
              var D = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var x = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              if (this.isReachLimit) {
                N.setNodeColorWithOpacity(this.iconSprite, x);
              } else {
                N.setNodeColorWithOpacity(this.iconSprite, k ? D : x);
              }
            }
          };
          u.prototype.maxBet = function (k) {
            var D = k.length - 0x1;
            var x = k[D];
            var G = {
              selectedBet: D,
              selectedBetAmount: x
            };
            this.showSettingToast(shell.I18n.t("SettingMenu.BiggestBet"), 0x2);
            return G;
          };
          u.prototype.buttonActivate = function (k) {
            if (k) {
              this.node.active = true;
              if (this.node.parent) {
                this.node.parent.active = true;
              }
              N.deferCallback(this)(this.enableTouchInteraction);
            } else {
              this.disableTouchInteraction();
              this.node.active = false;
              if (this.node.parent) {
                this.node.parent.active = false;
              }
            }
          };
          __decorate([A(cc.Boolean)], u.prototype, "isIncreaseBet", undefined);
          return __decorate([J], u);
        }(S["default"]);
        C["default"] = y;
        cc._RF.pop();
      }
    }, BY],
    'BetRepository': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "14dfa+lfKlIS5vAzSig9n4q", "BetRepository")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.BetRepository = undefined;
        var K = function () {
          function S(q, N) {
            this.ut = q;
            this.lt = N;
            this.ft = q;
            this.vt = N;
          }
          Object.defineProperty(S.prototype, "selectedBetLevelValue", {
            'get': function () {
              return this.ft;
            },
            'set': function (q) {
              this.ft = q;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(S.prototype, "selectedBetSizeValue", {
            'get': function () {
              return this.vt;
            },
            'set': function (q) {
              this.vt = q;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(S.prototype, "betLevelValue", {
            'get': function () {
              return this.ut;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(S.prototype, "betSizeValue", {
            'get': function () {
              return this.lt;
            },
            'enumerable': false,
            'configurable': true
          });
          S.prototype.updateRemoteBets = function (q, N) {
            this.ut = this.ft = q;
            this.lt = this.vt = N;
          };
          return S;
        }();
        Q.BetRepository = K;
        cc._RF.pop();
      }
    }, {}],
    'BigSymbolItemController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "2c00cjJGZxN3qABrM8SRtbm", "BigSymbolItemController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = B("SymbolImageHandler");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var u = null !== y && y.apply(this, arguments) || this;
            u.mainAnim = undefined;
            u.symbolSprite = undefined;
            u.mask = undefined;
            u.animSprites = [];
            u.loopAnims = [];
            return u;
          }
          __extends(b, y);
          b.prototype.playBigSymbol = function (u, k) {
            this._t();
            this.symbolSprite.spriteFrame = q.symbolImageHandler.symbolImages[u];
            this.mask.spriteFrame = q.symbolImageHandler.symbolImages[u];
            this.symbolSprite.node.runAction(cc.spawn(cc.fadeIn(0.5), cc.scaleTo(0.5, 0x3).easing(cc.easeBackOut())));
            this.loopAnims.forEach(function (D) {
              D.play();
            });
            this.mainAnim.play();
            S.delayCallback(0.5)(function () {
              if (k) {
                k();
              }
            });
          };
          b.prototype.stopBigSymbol = function (u) {
            this.loopAnims.forEach(function (k) {
              k.stop();
              k.setCurrentTime(0x0);
            });
            this.animSprites.forEach(function (k) {
              k.spriteFrame = undefined;
            });
            this.symbolSprite.node.runAction(cc.sequence(cc.fadeOut(0.2), cc.callFunc(this._t.bind(this), cc.callFunc(function () {
              if (u) {
                u();
              }
            }))));
          };
          b.prototype._t = function () {
            this.symbolSprite.node.stopAllActions();
            this.symbolSprite.node.scale = 2.8;
            this.symbolSprite.node.opacity = 0x0;
            this.mainAnim.stop();
            this.mainAnim.setCurrentTime(0x0);
            this.loopAnims.forEach(function (u) {
              u.stop();
              u.setCurrentTime(0x0);
            });
          };
          __decorate([J(cc.Animation)], b.prototype, "mainAnim", undefined);
          __decorate([J(cc.Sprite)], b.prototype, "symbolSprite", undefined);
          __decorate([J(cc.Mask)], b.prototype, "mask", undefined);
          __decorate([J([cc.Sprite])], b.prototype, "animSprites", undefined);
          __decorate([J([cc.Animation])], b.prototype, "loopAnims", undefined);
          return __decorate([f], b);
        }(cc.Component);
        C["default"] = A;
        cc._RF.pop();
      }
    }, Bm],
    'BigWinController.spec': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "349b6Y3nmhLKrir5iiZi+ry", "BigWinController.spec")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.skipBigWinAnimationEvent = Q.skipBigWinNumberRollEvent = Q.initBigWinControllerNodes = undefined;
        Q.initBigWinControllerNodes = function (K) {
          var S = System.get("automation") && System.get("automation").GameConfigs;
          if (S) {
            S.initNodeConfig(K.skipButtonNode, "big_win_skip_button");
          }
        };
        Q.skipBigWinNumberRollEvent = function () {
          var K = System.get("automation") && System.get("automation").GameData;
          var S = {
            displayState: "SkipNumberRollEnabled"
          };
          if (K) {
            K.emit("BigWin", S);
          }
        };
        Q.skipBigWinAnimationEvent = function () {
          var K = System.get("automation") && System.get("automation").GameData;
          var S = {
            displayState: "SkipAnimationEnabled"
          };
          if (K) {
            K.emit("BigWin", S);
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'BigWinController': [function (N, J, A) {
      'use strict';

      if (!cc._RF.push(J, "0c8afnrBkpKm56g7KUrARGr", "BigWinController")) {
        var k = {
          value: true
        };
        Object.defineProperty(A, "__esModule", k);
        var D = {
          top: 0xfa,
          bottom: -0x161
        };
        var x = {
          top: 0x154,
          bottom: -0x161
        };
        var G = {
          top: 0x1b8,
          bottom: -0x161
        };
        var Y;
        var W = N("AnalyticsHelper");
        var F = N("Utils");
        var E = N("SkipHandler");
        var I = N("GConstants");
        var w = N("BGMHandler");
        var j = N("GameEventHandler");
        var Z = N("SpaceBarInterrupter");
        var X = N("GDataSource");
        var V = N("BigWinController.spec");
        var H = N("AutomationDecorator");
        var z = N("BigWinFireworkController");
        var P = cc._decorator;
        var O = P.ccclass;
        var L = P.property;
        var U = [D, x, G];
        var T = ['bw', 'mw', "smw"];
        var h0 = new cc.color(0xff, 0xff, 0xff);
        (function (h4) {
          h4[h4.BIG_WIN = 0x0] = "BIG_WIN";
          h4[h4.MEGA_WIN = 0x1] = "MEGA_WIN";
          h4[h4.SUPER_MEGA_WIN = 0x2] = "SUPER_MEGA_WIN";
        })(Y || (Y = {}));
        var h1 = I.BIG_WIN_TIMING.DISMISS_BIG_WIN_DELAY;
        var h2 = I.BIG_WIN_TIMING.AUTO_DISMISS_BIG_WIN_DELAY;
        var h3 = function (h4) {
          function h5() {
            var h6 = null !== h4 && h4.apply(this, arguments) || this;
            h6.screenTintNode = undefined;
            h6.titleNode = undefined;
            h6.titleSpriteNode = undefined;
            h6.timedNumberRollNode = undefined;
            h6.numberDisplayNode = undefined;
            h6.coinAnimParticleNode = undefined;
            h6.frame1 = undefined;
            h6.frame2 = undefined;
            h6.particle1 = undefined;
            h6.particle2 = undefined;
            h6.flares = [];
            h6.shine1 = undefined;
            h6.ribbons = [];
            h6.shine2 = undefined;
            h6.petals = undefined;
            h6.coins = undefined;
            h6.coinType = [];
            h6.shine3 = undefined;
            h6.shine4 = undefined;
            h6.shine5 = undefined;
            h6.shine6 = undefined;
            h6.topBar = undefined;
            h6.topBarSpine = undefined;
            h6.bottomBar = undefined;
            h6.frontShine7 = undefined;
            h6.frontNode = undefined;
            h6.lastNode = undefined;
            h6.particles = [];
            h6.frame1Sprites = [];
            h6.shine1Sprites = [];
            h6.shine2Sprites = [];
            h6.shine3Sprites = [];
            h6.shine4Sprites = [];
            h6.shine5Sprites = [];
            h6.shine6Sprites = [];
            h6.frontShine7Sprites = [];
            h6.topBarSprites = [];
            h6.bottomBarSprites = [];
            h6.fireworkController = undefined;
            h6.pt = undefined;
            h6.bt = undefined;
            h6.St = false;
            h6.gt = false;
            h6.Ct = undefined;
            h6.yt = [];
            h6.Mt = undefined;
            h6.At = undefined;
            h6.It = 0x0;
            h6.Ot = undefined;
            h6.Ht = undefined;
            h6.Bt = undefined;
            h6.Gt = false;
            h6.Nt = undefined;
            h6.Tt = undefined;
            h6.Pt = undefined;
            h6.Lt = undefined;
            h6.Rt = undefined;
            return h6;
          }
          __extends(h5, h4);
          h5.prototype.init = function () {
            this.node.active = false;
            this.pt = this.timedNumberRollNode.getComponent("NumberDisplayController");
            this.bt = this.timedNumberRollNode.getComponent("TimedWinRollController");
            this.Nt = this.coinAnimParticleNode.getComponent("AnimParticleSystem");
            this.At = this.titleSpriteNode.getComponent("cc.Sprite");
            this.Mt = this.titleSpriteNode.scale;
            this._t();
            this.Et({
              'skipButtonNode': this.node
            });
          };
          h5.prototype.Et = function () {};
          h5.prototype.setBigWinLocalizedTitleSpriteFrame = function (h6) {
            this.yt[0x0] = h6.getSpriteFrame('bw');
            this.yt[0x1] = h6.getSpriteFrame('mw');
            this.yt[0x2] = h6.getSpriteFrame("smw");
          };
          h5.prototype.initBigWinOutSoundEffect = function (h6) {
            this.Rt = h6;
          };
          h5.prototype.destroy = function () {
            this._t();
            this.node.destroy();
            return h4.prototype.destroy.call(this);
          };
          h5.prototype.play = function (h6, h7, h8) {
            if (true !== this.gt) {
              this.node.active = true;
              this.gt = true;
              this.Ot = h6;
              this.Bt = h7;
              this.Lt = h8;
              this.Pt = undefined;
              this.kt = false;
              var h9 = this.bt;
              h9.setNumbersCallback([h7.bigWinThreshold, h7.megaWinThreshold, h7.superMegaWinThreshold]);
              h9.init({
                'bigWinThreshold': h7.bigWinThreshold,
                'megaWinThreshold': h7.megaWinThreshold,
                'superMegaWinThreshold': h7.superMegaWinThreshold,
                'bigWinDuration': I.BIG_WIN_TIMING.BIG_WIN_ROLL_DURATION,
                'megaWinDuration': I.BIG_WIN_TIMING.MEGA_WIN_ROLL_DURATION,
                'superMegaWinDuration': I.BIG_WIN_TIMING.SUPER_MEGA_WIN_ROLL_DURATION,
                'totalWin': h6
              });
              this.scheduleOnce(this.Ut, I.BIG_WIN_TIMING.SKIP_ROLL_DELAY);
              this.jt();
            }
          };
          h5.prototype.jt = function () {
            this.St = true;
            this.bt.play(this.Dt.bind(this));
            this.Ht = Y.BIG_WIN;
            this.Ct = undefined;
            this.node.opacity = 0xff;
            this.Wt(true);
          };
          h5.prototype.Dt = function (h6) {
            var h7 = this;
            var h8 = this.Bt;
            if (h6 !== this.It && (this.It = h6, h6 === h8.megaWinThreshold ? (this.Ht = Y.MEGA_WIN, this.Wt()) : h6 === h8.superMegaWinThreshold && (this.Ht = Y.SUPER_MEGA_WIN, this.kt = true, this.Wt()), h6 === this.Ot)) {
              var h9 = {
                displayState: "DidUpdate",
                effectType: "BigWin"
              };
              this.St = false;
              j.emitGameEffectStateChangedEvent(h9);
              this.frontShine7.parent = this.lastNode;
              this.frontShine7.scale = 0x3;
              this.frontShine7.getComponent(cc.Sprite).spriteFrame = this.frontShine7Sprites[0x2];
              this.frontShine7.stopAllActions();
              this.frontShine7.runAction(cc.spawn(cc.scaleTo(1.55, 4.55), cc.sequence(cc.fadeIn(0.3), cc.fadeOut(1.25))));
              this.particles.forEach(function (hB) {
                hB.node.parent = h7.lastNode;
                hB.play();
                hB.setCurrentTime(0x0);
              });
              this.xt();
              var hh = this.Rt;
              this.Rt = undefined;
              if (hh) {
                hh();
              }
              if (this.Ht >= Y.MEGA_WIN) {
                w.playBigWinEndCoin();
              }
              if (this.Ht === Y.SUPER_MEGA_WIN) {
                w.playBigWinEndFirework();
              }
              this.scheduleOnce(this.Ut, h1);
              var hM = X.gDataSource.isGameReplaying ? 0x1 : h2;
              this.scheduleOnce(this.Ft, hM);
            }
          };
          h5.prototype.Ft = function () {
            var h6 = this;
            var h7 = {
              displayState: "WillEnd",
              effectType: "BigWin"
            };
            j.emitGameEffectStateChangedEvent(h7);
            this.Vt(function () {
              h6._t();
              E["default"].removeEvent(h6.node);
              var h8 = h6.Lt;
              h6.Lt = undefined;
              if (h8) {
                h8();
              }
            });
          };
          h5.prototype._t = function () {
            this.gt = false;
            this.St = false;
            this.At.spriteFrame = undefined;
            this.It = undefined;
            this.pt.clear();
            this.unschedule(this.Ut);
            this.unschedule(this.Ft);
            this.zt();
            this.Jt();
            this.node.active = false;
          };
          h5.prototype.Wt = function (h6) {
            if (undefined === h6) {
              h6 = false;
            }
            if (h6) {
              this.titleNode.runAction(cc.spawn(cc.sequence(cc.scaleTo(0.2, 1.1), cc.scaleTo(0.85, 0x1)), cc.fadeIn(0.2)));
              this.numberDisplayNode.runAction(cc.spawn(cc.sequence(cc.scaleTo(0.2, 1.1), cc.scaleTo(0.8, 0x1)), cc.fadeIn(0.2)));
              this.screenTintNode.runAction(cc.sequence(cc.delayTime(0.15), cc.fadeTo(0.25, 0xb4)));
            }
            this.qt();
          };
          h5.prototype.qt = function () {
            var h6 = this;
            if (!this.Ct || this.Ht !== this.Ct) {
              this.Ct = this.Ht;
              var h7 = this.Ct;
              var h8 = this.titleSpriteNode;
              var h9 = this.yt[h7];
              var hh = function () {
                h6.At.spriteFrame = h9;
              };
              F.spawnCallback(function (hM) {
                var hB = function () {
                  if (hM) {
                    hM();
                  }
                };
                if (undefined === h6.At.spriteFrame) {
                  hh();
                  hB();
                } else if (h6.At.spriteFrame !== h9) {
                  h6.titleNode.stopAllActions();
                  h6.titleNode.runAction(cc.sequence(cc.scaleTo(0.2, 0x0), cc.callFunc(hh), cc.spawn(cc.sequence(cc.scaleTo(0.2, 1.1), cc.callFunc(hB), cc.scaleTo(0.85, 0x1)), cc.fadeIn(0.2))));
                } else {
                  h8.runAction(cc.sequence(cc.scaleTo(0.2, h6.Mt + 0.1).easing(cc.easeSineOut()), cc.scaleTo(0.4, h6.Mt).easing(cc.easeSineIn()), cc.callFunc(hB)));
                }
              }, function (hM) {
                if (!h6.Gt && h7 >= Y.MEGA_WIN) {
                  h6.Nt.resetSystem();
                  h6.Gt = true;
                }
                if (hM) {
                  hM();
                }
              }, function (hM) {
                h6.frame1.getComponent(cc.Sprite).spriteFrame = h6.frame1Sprites[h7];
                h6.frame1.opacity = 0x0;
                h6.frame1.scale = 0x2;
                h6.frame1.stopAllActions();
                h6.frame1.runAction(cc.spawn(cc.fadeIn(0.45), cc.sequence(cc.scaleTo(0.3, 2.2), cc.scaleTo(0x1, 0x2))));
                h6.frame2.opacity = 0x0;
                h6.frame2.scale = [0x2, 2.2, 2.4][h7];
                h6.frame2.stopAllActions();
                h6.frame2.runAction(cc.fadeIn(0.25));
                h6.frame2.runAction(cc.repeatForever(cc.rotateBy(3.35, 0x32)));
                if (hM) {
                  hM();
                }
              }, function (hM) {
                h6.particle1.resetSystem();
                h6.particle2.resetSystem();
                h6.flares.forEach(function (hQ) {
                  hQ.play();
                });
                h6.ribbons.forEach(function (hQ) {
                  hQ.play();
                  hQ.node.stopAllActions();
                  hQ.node.runAction(cc.fadeIn(0.2));
                });
                h6.shine1.getComponent(cc.Sprite).spriteFrame = h6.shine1Sprites[h7];
                h6.shine1.stopAllActions();
                h6.shine1.runAction(cc.tintTo(0.2, h0));
                h6.shine1.runAction(cc.repeatForever(cc.rotateBy(0x14, 0x168)));
                h6.shine2.getComponent(cc.Sprite).spriteFrame = h6.shine2Sprites[h7];
                h6.shine2.stopAllActions();
                h6.shine2.color = I.BLACK;
                h6.shine2.scale = 1.2;
                h6.shine2.runAction(cc.sequence(cc.delayTime(0.15), cc.tintTo(0.2, 0xff, 0xff, 0xff)));
                h6.shine2.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.5, 0x2), cc.scaleTo(0.5, 1.2))));
                h6.petals.scale = 0x1;
                h6.petals.stopAllActions();
                h6.petals.runAction(cc.fadeIn(0.2));
                h6.petals.runAction(cc.scaleTo(0x1b, 2.8));
                h6.coins.getComponent(cc.Sprite).spriteFrame = h6.coinType[h7];
                h6.coins.scale = 0x1;
                h6.coins.stopAllActions();
                h6.coins.runAction(cc.fadeIn(0.2));
                h6.coins.runAction(cc.scaleTo(0x3c, 1.7));
                h6.shine3.getComponent(cc.Sprite).spriteFrame = h6.shine3Sprites[h7];
                h6.shine3.stopAllActions();
                h6.shine3.runAction(cc.tintTo(0.5, h0));
                h6.shine4.getComponent(cc.Sprite).spriteFrame = h6.shine4Sprites[h7];
                h6.shine4.stopAllActions();
                h6.shine4.runAction(cc.tintTo(0.5, h0));
                h6.shine5.getComponent(cc.Sprite).spriteFrame = h6.shine5Sprites[h7];
                h6.shine5.stopAllActions();
                h6.shine5.runAction(cc.fadeIn(0.55));
                h6.shine6.getComponent(cc.Sprite).spriteFrame = h6.shine6Sprites[h7];
                h6.shine6.stopAllActions();
                h6.shine6.runAction(cc.fadeIn(0.55));
                h6.frontShine7.getComponent(cc.Sprite).spriteFrame = h6.frontShine7Sprites[h7];
                h6.frontShine7.stopAllActions();
                h6.frontShine7.runAction(cc.spawn(cc.scaleTo(1.55, 4.55), cc.sequence(cc.fadeIn(0.3), cc.fadeOut(1.25))));
                h6.particles.forEach(function (hQ) {
                  hQ.play();
                });
                var hB = h6.topBarSpine;
                h6.topBar.getComponent(cc.Sprite).spriteFrame = h6.topBarSprites[h7];
                hB.setAnimation(0x0, T[h7] + "_spawn", false);
                hB.addAnimation(0x0, T[h7] + "_idle", true);
                h6.topBar.stopAllActions();
                h6.topBar.position = cc.v3(0x0, 0x12);
                var hR = U[h7].top;
                h6.topBar.runAction(cc.spawn(cc.fadeIn(0.6), cc.sequence(cc.moveTo(0.25, cc.v2(0x0, 1.08 * hR)), cc.moveTo(0.85, cc.v2(0x0, hR)))));
                h6.bottomBar.getComponent(cc.Sprite).spriteFrame = h6.bottomBarSprites[h7];
                h6.bottomBar.stopAllActions();
                h6.bottomBar.position = cc.v3(0x0, -0xae);
                var hl = U[h7].bottom;
                h6.bottomBar.runAction(cc.spawn(cc.fadeIn(0.6), cc.sequence(cc.moveTo(0.25, cc.v2(0x0, 1.08 * hl)), cc.moveTo(0.85, cc.v2(0x0, hl)))));
                if (hM) {
                  hM();
                }
              }, function (hM) {
                if (h7 === Y.SUPER_MEGA_WIN) {
                  h6.fireworkController.play(0x0, 0.2);
                }
                if (hM) {
                  hM();
                }
              })(function () {
                h6.Ct = undefined;
                var hM = h6.Pt;
                h6.Pt = undefined;
                if (hM) {
                  hM();
                }
              });
            }
          };
          h5.prototype.xt = function () {
            this.zt();
            if (this.Ct) {
              this.Pt = this.Ut.bind(this);
            } else {
              var h6 = this.titleNode;
              var h7 = this.titleNode.scale;
              h6.runAction(cc.sequence(cc.scaleTo(0.25, 1.2 * h7).easing(cc.easeSineOut()), cc.scaleTo(0.2, h7).easing(cc.easeSineIn())));
            }
          };
          h5.prototype.Vt = function (h6) {
            var h7 = this;
            this.fireworkController.cleanup();
            this.screenTintNode.runAction(cc.fadeOut(0.4));
            this.titleNode.runAction(cc.sequence(cc.fadeOut(0.41), cc.callFunc(function () {
              h7.titleNode.stopAllActions();
              if (h6) {
                h6();
              }
            })));
            this.numberDisplayNode.stopAllActions();
            this.numberDisplayNode.runAction(cc.fadeOut(0.41));
            this.screenTintNode.stopAllActions();
            this.screenTintNode.runAction(cc.fadeOut(0.4));
            this.Nt.stopSystem();
            this.frame1.stopAllActions();
            this.frame2.stopAllActions();
            this.frame1.runAction(cc.fadeOut(0.2));
            this.frame2.runAction(cc.fadeOut(0.2));
            this.ribbons.forEach(function (h8) {
              h8.node.runAction(cc.fadeOut(0.2));
            });
            this.shine1.stopAllActions();
            this.shine1.runAction(cc.tintTo(0.2, I.BLACK));
            this.shine2.stopAllActions();
            this.shine2.runAction(cc.tintTo(0.2, I.BLACK));
            this.petals.stopAllActions();
            this.petals.runAction(cc.fadeOut(0.2));
            this.coins.stopAllActions();
            this.coins.runAction(cc.fadeOut(0.2));
            this.shine3.stopAllActions();
            this.shine3.runAction(cc.tintTo(0.2, I.BLACK));
            this.shine4.stopAllActions();
            this.shine4.runAction(cc.tintTo(0.2, I.BLACK));
            this.shine5.stopAllActions();
            this.shine5.runAction(cc.fadeOut(0.2));
            this.shine6.stopAllActions();
            this.shine6.runAction(cc.fadeOut(0.2));
            this.frontShine7.stopAllActions();
            this.frontShine7.runAction(cc.fadeOut(0.2));
            this.topBar.stopAllActions();
            this.topBar.runAction(cc.fadeOut(0.2));
            this.bottomBar.stopAllActions();
            this.bottomBar.runAction(cc.fadeOut(0.2));
            this.Nt.stopSystem();
            this.particle1.stopSystem();
            this.particle2.stopSystem();
          };
          h5.prototype.Jt = function () {
            var h6 = this;
            this.fireworkController.cleanup();
            this.topBar.stopAllActions();
            this.topBar.position = cc.v3(0x0, 0x12);
            this.topBar.opacity = 0x0;
            this.bottomBar.stopAllActions();
            this.bottomBar.position = cc.v3(0x0, -0xae);
            this.bottomBar.opacity = 0x0;
            this.particles.forEach(function (h7) {
              h7.node.parent = h6.frontNode;
              h7.stop();
              h7.setCurrentTime(0x0);
              h7.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
            this.frontShine7.parent = this.frontNode;
            this.frontShine7.stopAllActions();
            this.frontShine7.scale = 0x3;
            this.shine3.stopAllActions();
            this.shine3.color = I.BLACK;
            this.shine4.stopAllActions();
            this.shine4.color = I.BLACK;
            this.shine5.stopAllActions();
            this.shine5.opacity = 0x0;
            this.shine6.stopAllActions();
            this.shine6.opacity = 0x0;
            this.shine2.stopAllActions();
            this.shine2.color = I.BLACK;
            this.shine2.scale = 1.2;
            this.shine4.stopAllActions();
            this.shine4.color = I.BLACK;
            this.shine5.stopAllActions();
            this.shine5.opacity = 0x0;
            this.shine6.stopAllActions();
            this.shine6.opacity = 0x0;
            this.shine1.stopAllActions();
            this.shine1.color = I.BLACK;
            this.petals.stopAllActions();
            this.petals.opacity = 0x0;
            this.petals.scale = 0x1;
            this.coins.stopAllActions();
            this.coins.opacity = 0x0;
            this.coins.scale = 0x1;
            this.flares.forEach(function (h7) {
              h7.stop();
              h7.setCurrentTime(0x0);
              h7.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
            this.ribbons.forEach(function (h7) {
              h7.node.stopAllActions();
              h7.stop();
              h7.setCurrentTime(0x0);
              h7.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
            this.titleNode.stopAllActions();
            this.titleNode.scaleX = this.titleNode.scaleY = 0x0;
            this.titleNode.opacity = 0xff;
            this.numberDisplayNode.stopAllActions();
            this.numberDisplayNode.scale = 0x0;
            this.numberDisplayNode.opacity = 0xff;
            this.screenTintNode.stopAllActions();
            this.screenTintNode.opacity = 0x0;
            this.Kt = false;
            this.Gt = false;
            this.At.spriteFrame = undefined;
            this.frame1.opacity = 0x0;
            this.frame1.scale = 0x2;
            this.frame1.stopAllActions();
            this.frame2.opacity = 0x0;
            this.frame2.scale = 0x2;
            this.frame2.stopAllActions();
          };
          h5.prototype.Ut = function () {
            if (this.Tt) {
              this.Tt();
            }
            this.Tt = E["default"].subscribeOnce(this.Qt.bind(this));
            Z.spaceBarInterrupter.subscribeEventInterrupter("big_win", this.node, this.Qt.bind(this));
          };
          h5.prototype.zt = function () {
            if (this.Tt) {
              this.Tt();
            }
            this.Tt = undefined;
            Z.spaceBarInterrupter.unsubscribeEventInterrupter("big_win");
          };
          h5.prototype.Qt = function () {
            this.zt();
            if (this.gt && this.St) {
              var h6 = this.Ot;
              var h7 = this.Bt;
              var h8 = this.Rt;
              this.Rt = undefined;
              if (h8) {
                h8();
              }
              if (h6 >= h7.superMegaWinThreshold) {
                this.Ht = Y.SUPER_MEGA_WIN;
              } else if (h6 >= h7.megaWinThreshold) {
                this.Ht = Y.MEGA_WIN;
              }
              this.numberDisplayNode.stopAllActions();
              this.St = false;
              this.Wt();
              this.bt.stop();
              this.pt.displayNumber(this.Ot, true);
              this.scheduleOnce(this.Ut, h1);
              var h9 = X.gDataSource.isGameReplaying ? 0x1 : h2;
              this.scheduleOnce(this.Ft, h9);
              if (this.Ht >= Y.MEGA_WIN) {
                w.playBigWinEndCoin();
              }
              if (this.Ht === Y.SUPER_MEGA_WIN) {
                w.playBigWinEndFirework();
              }
              F.delayCallback(0.4)(function () {
                var hh = {
                  displayState: "DidUpdate",
                  effectType: "BigWin"
                };
                j.emitGameEffectStateChangedEvent(hh);
              });
              this.Yt();
            } else {
              this.unschedule(this.Ft);
              this.Ft();
              w.skipBigWinEnd();
              w.stopBigWinEndCoin();
              w.stopBigWinEndFirework();
            }
          };
          h5.prototype.Yt = function () {
            var h6 = shell.ga;
            var h7 = {
              type: "Big Prize"
            };
            W.sendEvent(h6.CATEGORY_GAME, h6.EVENT_SLOT_SKIP_EFFECT, h7);
          };
          h5.prototype.Xt = function (h6) {
            return {
              'easing': function (h7) {
                return (h7 -= 0x1) * h7 * ((h6 + 0x1) * h7 + h6) + 0x1;
              },
              'reverse': function () {
                return _easeBackInObj;
              }
            };
          };
          __decorate([L(cc.Node)], h5.prototype, "screenTintNode", undefined);
          __decorate([L(cc.Node)], h5.prototype, "titleNode", undefined);
          __decorate([L(cc.Node)], h5.prototype, "titleSpriteNode", undefined);
          __decorate([L(cc.Node)], h5.prototype, "timedNumberRollNode", undefined);
          __decorate([L(cc.Node)], h5.prototype, "numberDisplayNode", undefined);
          __decorate([L(cc.Node)], h5.prototype, "coinAnimParticleNode", undefined);
          __decorate([L(cc.Node)], h5.prototype, "frame1", undefined);
          __decorate([L(cc.Node)], h5.prototype, "frame2", undefined);
          __decorate([L(cc.ParticleSystem)], h5.prototype, "particle1", undefined);
          __decorate([L(cc.ParticleSystem)], h5.prototype, "particle2", undefined);
          __decorate([L([cc.Animation])], h5.prototype, "flares", undefined);
          __decorate([L(cc.Node)], h5.prototype, "shine1", undefined);
          __decorate([L([cc.Animation])], h5.prototype, "ribbons", undefined);
          __decorate([L(cc.Node)], h5.prototype, "shine2", undefined);
          __decorate([L(cc.Node)], h5.prototype, "petals", undefined);
          __decorate([L(cc.Node)], h5.prototype, "coins", undefined);
          __decorate([L([cc.SpriteFrame])], h5.prototype, "coinType", undefined);
          __decorate([L(cc.Node)], h5.prototype, "shine3", undefined);
          __decorate([L(cc.Node)], h5.prototype, "shine4", undefined);
          __decorate([L(cc.Node)], h5.prototype, "shine5", undefined);
          __decorate([L(cc.Node)], h5.prototype, "shine6", undefined);
          __decorate([L(cc.Node)], h5.prototype, "topBar", undefined);
          __decorate([L(sp.Skeleton)], h5.prototype, "topBarSpine", undefined);
          __decorate([L(cc.Node)], h5.prototype, "bottomBar", undefined);
          __decorate([L(cc.Node)], h5.prototype, "frontShine7", undefined);
          __decorate([L(cc.Node)], h5.prototype, "frontNode", undefined);
          __decorate([L(cc.Node)], h5.prototype, "lastNode", undefined);
          __decorate([L([cc.Animation])], h5.prototype, "particles", undefined);
          __decorate([L([cc.SpriteFrame])], h5.prototype, "frame1Sprites", undefined);
          __decorate([L([cc.SpriteFrame])], h5.prototype, "shine1Sprites", undefined);
          __decorate([L([cc.SpriteFrame])], h5.prototype, "shine2Sprites", undefined);
          __decorate([L([cc.SpriteFrame])], h5.prototype, "shine3Sprites", undefined);
          __decorate([L([cc.SpriteFrame])], h5.prototype, "shine4Sprites", undefined);
          __decorate([L([cc.SpriteFrame])], h5.prototype, "shine5Sprites", undefined);
          __decorate([L([cc.SpriteFrame])], h5.prototype, "shine6Sprites", undefined);
          __decorate([L([cc.SpriteFrame])], h5.prototype, "frontShine7Sprites", undefined);
          __decorate([L([cc.SpriteFrame])], h5.prototype, "topBarSprites", undefined);
          __decorate([L([cc.SpriteFrame])], h5.prototype, "bottomBarSprites", undefined);
          __decorate([L(z["default"])], h5.prototype, "fireworkController", undefined);
          __decorate([H.automationDec({
            'func': V.initBigWinControllerNodes
          })], h5.prototype, "_initBigWinControllerNodes", null);
          __decorate([H.automationDec({
            'func': V.skipBigWinNumberRollEvent
          })], h5.prototype, "_enableSkipEvent", null);
          __decorate([H.automationDec({
            'func': V.skipBigWinAnimationEvent
          })], h5.prototype, "_skipPlay", null);
          return __decorate([O], h5);
        }(cc.Component);
        A["default"] = h3;
        cc._RF.pop();
      }
    }, Bi],
    'BigWinFireworkController': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "335beYjWYpGvLsBB/D7By8d", "BigWinFireworkController")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.fireworkItemPrefab = undefined;
            A.Zt = new cc.NodePool("BigWinFireworkItem");
            A.$t = [];
            return A;
          }
          __extends(J, f);
          J.prototype.init = function () {
            this.ti(0xf);
          };
          J.prototype.cleanup = function () {
            var A = this;
            this.unscheduleAllCallbacks();
            this.$t.forEach(function (y) {
              A.ii(y.node);
            });
            this.$t = [];
          };
          J.prototype.destroy = function () {
            this.cleanup();
            this.fireworkItemPrefab = undefined;
            this.Zt.clear();
            this.node.destroy();
            return f.prototype.destroy.call(this);
          };
          J.prototype.play = function (A, y) {
            var b = this;
            this.unscheduleAllCallbacks();
            this.schedule(function () {
              var u = b.ei();
              var k = u.node;
              var D = Math.floor(0x438 * Math.random() - 0x21c);
              var r = Math.floor(0xc8 + 0x2a3 * Math.random());
              var x = Math.floor(0x9 + 0x6 * Math.random()) / 0xa;
              b.$t.push(u);
              b.node.addChild(k);
              u.play(cc.v3(D, r), x, b.ii.bind(b, k));
            }, y || 0x1, cc.macro.REPEAT_FOREVER, A);
          };
          J.prototype.ti = function (A) {
            for (var y = 0x0; y < A && !(this.Zt.size() >= 0x1e); y++) {
              var b = cc.instantiate(this.fireworkItemPrefab);
              this.Zt.put(b);
            }
          };
          J.prototype.ei = function () {
            return this.Zt.size() > 0x0 ? this.Zt.get().getComponent("BigWinFireworkItem") : cc.instantiate(this.fireworkItemPrefab).getComponent("BigWinFireworkItem");
          };
          J.prototype.ii = function (A) {
            if (this.Zt.size() >= 0x1e) {
              A.destroy();
            } else {
              this.Zt.put(A);
            }
          };
          __decorate([q(cc.Prefab)], J.prototype, "fireworkItemPrefab", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'BigWinFireworkItem': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "2b1f4Jn+M1ENr3zAA8L1Qzm", "BigWinFireworkItem")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.fireworkAnim = undefined;
            return A;
          }
          __extends(J, f);
          J.prototype.cleanup = function () {
            this.fireworkAnim.off("finished");
            this.fireworkAnim.setCurrentTime(0x0);
            this.fireworkAnim.stop();
            this.node.scale = 0x1;
          };
          J.prototype.play = function (A, y, b) {
            this.cleanup();
            this.node.position = A;
            this.node.scale = y;
            this.fireworkAnim.on("finished", function () {
              if (b) {
                b();
              }
            });
            this.fireworkAnim.play();
          };
          J.prototype.unuse = function () {
            this.cleanup();
          };
          J.prototype.destroy = function () {
            this.cleanup();
            this.node.destroy();
            return f.prototype.destroy.call(this);
          };
          __decorate([q(cc.Animation)], J.prototype, "fireworkAnim", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'BookView': [function (Q, C, K) {
      'use strict';

      if (!cc._RF.push(C, "46ec0uZUDVPMZDgV9Idp1EN", "BookView")) {
        var S = {
          value: true
        };
        Object.defineProperty(K, "__esModule", S);
        var q = {
          LEFT: 0x1,
          RIGHT: 0x2,
          NULL: 0x3
        };
        var N = Q("ScrollViewEx");
        var f = cc.Enum(q);
        var A = cc._decorator;
        var y = A.ccclass;
        A.property;
        var b = function (u) {
          function x() {
            var G = null !== u && u.apply(this, arguments) || this;
            G.ni = {};
            G.oi = {};
            G.ci = undefined;
            return G;
          }
          var k = {
            get: function () {
              return this.ni;
            },
            enumerable: false,
            configurable: true
          };
          var D = {
            get: function () {
              return this.oi;
            },
            enumerable: false,
            configurable: true
          };
          __extends(x, u);
          Object.defineProperty(x.prototype, "nodePools", k);
          Object.defineProperty(x.prototype, "templates", D);
          x.prototype.register = function (G, Y, m) {
            if (this.ni[G]) {
              ;
            } else if (Y) {
              var W;
              W = m ? new cc.NodePool(m) : new cc.NodePool();
              this.oi[G] = Y;
              this.ni[G] = W;
            }
          };
          x.prototype.setDataSource = function (G) {
            if (G !== this.ci) {
              this.ci = G;
            }
          };
          x.prototype.reloadData = function () {
            this.hi();
            this.init(this.ri);
          };
          x.prototype.ai = function () {
            for (this.contentChildsLayout = []; this.content.children.length < 0x3;) {
              var G = this.node.width;
              var Y = this.node.height;
              var m = new cc.Node();
              var W = m.addComponent(cc.Layout);
              W.type = cc.Layout.Type.VERTICAL;
              m.setContentSize(G, Y);
              this.content.addChild(m);
              this.contentChildsLayout.push(W);
            }
          };
          x.prototype.ui = function () {
            var G = this.node.width;
            var Y = this.node.height;
            for (var m = 0x0; m < this.content.children.length; m++) {
              this.content.children[m].setContentSize(G, Y);
            }
            this.cellSize = G;
            this.maxScrollArea = cc.v2(0x0 * -this.cellSize, 0x2 * -this.cellSize);
            var W = this.li >= this.content.children.length ? this.content.children.length : this.li;
            this.distance = this.cellSize;
            var F = this.contentLayout.spacingX / W;
            this.distance += F;
            this.fi(this.currIndex);
          };
          x.prototype.di = function () {
            this.node.on("size-changed", this.ui, this);
          };
          x.prototype.hi = function () {
            this.node.off("size-changed", this.ui, this);
          };
          x.prototype.init = function (G) {
            this.di();
            this.ai();
            this.contentLayout = this.content.getComponent(cc.Layout);
            this.cellSize = this.node.width;
            this.target = 0x0;
            this.originalSpeed = this.speed;
            this.freeCells = [];
            this.dir = f.NULL;
            this.selected = true;
            this.ri = G;
            this.li = 0x0;
            this.constChildList = [];
            this.middleIndex = Math.floor(this.content.children.length / 0x2);
            this.currIndex = 0x0;
            this.itemOffSet = 0x0;
            this.snapPause = false;
            this.maxScrollArea = cc.v2(0x0 * -this.cellSize, 0x2 * -this.cellSize);
            this.li = this.ci.getCount(this, G);
            for (var Y = 0x0; Y < this.content.children.length; Y++) {
              var m = undefined;
              if (Y <= this.li - 0x1) {
                if (this.content.children[Y].children.length) {
                  this.vi(this.content.children[Y].children[0x0]);
                  (m = this.ci.getItem(this, Y, G)).parent = this.content.children[Y];
                  this.content.children[Y].zIndex = Y;
                  m.cellIndex = Y % this.li;
                  this.content.children[Y].slotID = Y;
                  this.constChildList.push(m);
                } else {
                  this.content.children[Y].zIndex = Y;
                  (m = this.ci.getItem(this, Y, G)).parent = this.content.children[Y];
                  this._i(m);
                  m.cellIndex = Y % this.li;
                  this.content.children[Y].slotID = Y;
                  this.constChildList.push(m);
                }
              } else {
                this.content.children[Y].zIndex = Y;
                this.content.children[Y].slotID = Y;
              }
              if (this.li - 0x1 >= Y) {
                this.content.children[Y].active = true;
              } else {
                this.content.children[Y].active = false;
              }
            }
            if (this.li >= this.content.children.length) {
              this.totalItems = this.content.children.length - 0x1;
            } else {
              this.totalItems = this.li - 0x1;
            }
            var W = this.li >= this.content.children.length ? this.content.children.length : this.li;
            this.distance = this.cellSize;
            var F = this.contentLayout.spacingX / W;
            this.distance += F;
            this.fi(this.currIndex);
          };
          x.prototype.toLeftItem = function () {
            var G = this.content.children[0x0].children[0x0].cellIndex - 0x1;
            if (0x2 === this.currIndex) {
              this.currIndex -= 0x1;
              this.fi(this.currIndex);
              return void (this.nextAppearTarget && this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex));
            }
            if (G < 0x0) {
              if (0x0 === this.currIndex) {
                if (this.closeFromLeft) {
                  this.closeFromLeft();
                }
                this.fi(this.currIndex);
              } else {
                this.currIndex = 0x0;
                this.fi(this.currIndex);
                if (this.cancelCloseBook) {
                  this.cancelCloseBook();
                }
                if (this.nextAppearTarget) {
                  this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex);
                }
              }
            } else {
              for (var Y = 0x0; Y < this.content.children.length; Y++) {
                if (Y === this.content.children.length - 0x1) {
                  if (G < 0x0) {
                    G = this.li - 0x1;
                  }
                  this.vi(this.content.children[Y].children[0x0]);
                  var m = this.ci.getItem(this, G, this.ri);
                  this.constChildList[this.content.children[Y].slotID] = m;
                  this.constChildList[this.content.children[Y].slotID].cellIndex = G;
                  this.content.children[Y].zIndex = 0x0;
                  m.parent = this.content.children[Y];
                } else {
                  this.content.children[Y].zIndex += 0x1;
                }
              }
              this.resetLayout = true;
              this.changeIndexTo = 0x0;
              this.currIndex -= 0x1;
              if (this.nextAppearTarget) {
                this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex);
              }
              this.contentLayout.updateLayout();
              this.content.x = this.content.x + this.itemOffSet;
              this.snapDone = false;
              this.currIndex = this.middleIndex;
            }
          };
          x.prototype.toRightItem = function () {
            var G = this.content.children[this.totalItems].children[0x0].cellIndex + 0x1;
            if (0x0 === this.currIndex && this.currIndex < this.totalItems) {
              this.currIndex += 0x1;
              this.fi(this.currIndex);
              return void (this.nextAppearTarget && this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex));
            }
            if (G > this.li - 0x1) {
              if (this.currIndex === this.totalItems) {
                if (this.closeFromRight) {
                  this.closeFromRight();
                }
                this.fi(this.currIndex);
              } else {
                this.currIndex = this.totalItems;
                this.fi(this.currIndex);
                if (this.cancelCloseBook) {
                  this.cancelCloseBook();
                }
                if (this.nextAppearTarget) {
                  this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex);
                }
              }
            } else {
              for (var Y = this.content.children.length - 0x1; Y >= 0x0; Y--) {
                if (0x0 === Y) {
                  if (G >= this.li) {
                    G = 0x0;
                  }
                  this.vi(this.content.children[Y].children[0x0]);
                  var m = this.ci.getItem(this, G, this.ri);
                  this.constChildList[this.content.children[Y].slotID] = m;
                  this.constChildList[this.content.children[Y].slotID].cellIndex = G;
                  this.content.children[Y].zIndex = this.content.children.length - 0x1;
                  m.parent = this.content.children[Y];
                } else {
                  this.content.children[Y].zIndex -= 0x1;
                }
              }
              this.resetLayout = true;
              this.changeIndexTo = 0x2;
              this.currIndex += 0x1;
              if (this.nextAppearTarget) {
                this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex);
              }
              this.contentLayout.updateLayout();
              this.content.x = this.content.x + this.itemOffSet;
              this.snapDone = false;
              this.currIndex = this.middleIndex;
            }
          };
          x.prototype.setElasticLeft = function (G) {
            this.elasticLeft = G;
          };
          x.prototype.setElasticRight = function (G) {
            this.elasticRight = G;
          };
          x.prototype.setClosingFromLeft = function (G) {
            this.closingFromLeft = G;
          };
          x.prototype.setCloseFromLeft = function (G) {
            this.closeFromLeft = G;
          };
          x.prototype.setClosingFromRight = function (G) {
            this.closingFromRight = G;
          };
          x.prototype.setCloseFromRight = function (G) {
            this.closeFromRight = G;
          };
          x.prototype.setCancelCloseBook = function (G) {
            this.cancelCloseBook = G;
          };
          x.prototype.setStartScrolling = function (G) {
            this.startScrolling = G;
          };
          x.prototype.getAllItems = function () {
            var G = [];
            this.content.children.forEach(function (Y) {
              if (Y.children.length) {
                G.push(Y.children[0x0]);
              }
            });
            return G;
          };
          x.prototype.scrollTo = function (G) {
            if (this.snapDone && !this.snapPause) {
              var Y = this.content.children[this.currIndex].children[0x0].cellIndex;
              if (Y !== G && !(G > this.li - 0x1 || G < 0x0)) {
                if (G > Y) {
                  if (G === Y + 0x1) {
                    if (0x0 === this.currIndex) {
                      this.toRightItem();
                    } else {
                      this.dir = f.RIGHT;
                      this.itemOffSet = this.cellSize;
                      this.mi();
                    }
                  } else if (0x0 === this.currIndex) {
                    var m = this.content.children.length - 0x1;
                    this.vi(this.content.children[m].children[0x0]);
                    var W = this.ci.getItem(this, G, this.ri);
                    this.constChildList[this.content.children[m].slotID] = W;
                    this.constChildList[this.content.children[m].slotID].cellIndex = G;
                    W.parent = this.content.children[m];
                    this.speed = 0xa;
                    this.currIndex = 0x2;
                    this.reloadCells = true;
                    this.fi(this.currIndex);
                  } else {
                    var F = G;
                    for (var a = this.content.children.length - 0x1; a >= 0x0; a--) {
                      if (0x0 === a) {
                        this.content.children[a].zIndex = 0x2;
                        this.vi(this.content.children[a].children[0x0]);
                        W = this.ci.getItem(this, F, this.ri);
                        this.constChildList[this.content.children[a].slotID] = W;
                        this.constChildList[this.content.children[a].slotID].cellIndex = F;
                        W.parent = this.content.children[a];
                      } else {
                        this.content.children[a].zIndex = 0x1 === a ? 0x0 : 0x1;
                      }
                    }
                    this.currIndex = 0x0;
                    this.changeIndexTo = 0x2;
                    this.changeContentPos = true;
                  }
                } else if (G === Y - 0x1) {
                  if (0x2 === this.currIndex) {
                    this.toLeftItem();
                  } else {
                    this.dir = f.LEFT;
                    this.itemOffSet = -this.cellSize;
                    this.mi();
                  }
                } else if (this.currIndex === this.content.children.length - 0x1) {
                  F = 0x0;
                  this.vi(this.content.children[F].children[0x0]);
                  W = this.ci.getItem(this, G, this.ri);
                  this.constChildList[this.content.children[F].slotID] = W;
                  this.constChildList[this.content.children[F].slotID].cellIndex = G;
                  W.parent = this.content.children[F];
                  this.speed = 0xa;
                  this.currIndex = 0x0;
                  this.reloadCells = true;
                  this.fi(this.currIndex);
                } else {
                  m = G;
                  for (a = this.content.children.length - 0x1; a >= 0x0; a--) {
                    if (0x2 === a) {
                      this.content.children[a].zIndex = 0x0;
                      this.vi(this.content.children[a].children[0x0]);
                      W = this.ci.getItem(this, m, this.ri);
                      this.constChildList[this.content.children[a].slotID] = W;
                      this.constChildList[this.content.children[a].slotID].cellIndex = m;
                      W.parent = this.content.children[a];
                    } else {
                      this.content.children[a].zIndex = 0x1 === a ? 0x2 : 0x1;
                    }
                  }
                  this.currIndex = 0x2;
                  this.changeIndexTo = 0x0;
                  this.changeContentPos = true;
                }
              }
            }
          };
          x.prototype.dequeueReusableItem = function (G) {
            var Y;
            var m = this.ni[G];
            if (m) {
              if (!(Y = m.get())) {
                var W = this.oi[G];
                Y = cc.instantiate(W);
              }
              Y.lv_type = G;
            }
            return Y;
          };
          x.prototype.vi = function (G) {
            var Y;
            var m = G.lv_type;
            if (m) {
              Y = this.ni[m];
            }
            if (Y) {
              Y.put(G);
            }
          };
          x.prototype.pi = function () {
            var G = this.content.children[this.currIndex].children[0x0].cellIndex;
            if (G === this.li - 0x1) {
              var Y = G - 0x2;
              var m = G - 0x1;
              for (var W = this.content.children.length - 0x1; W >= 0x0; W--) {
                if (0x0 === W) {
                  this.vi(this.content.children[W].children[0x0]);
                  var F = this.ci.getItem(this, Y, this.ri);
                  this.constChildList[this.content.children[W].slotID] = F;
                  this.constChildList[this.content.children[W].slotID].cellIndex = Y;
                  F.parent = this.content.children[W];
                } else if (0x1 === W) {
                  this.vi(this.content.children[W].children[0x0]);
                  F = this.ci.getItem(this, m, this.ri);
                  this.constChildList[this.content.children[W].slotID] = F;
                  this.constChildList[this.content.children[W].slotID].cellIndex = m;
                  F.parent = this.content.children[W];
                }
              }
            } else if (0x0 === G) {
              m = G + 0x1;
              var a = G + 0x2;
              for (W = this.content.children.length - 0x1; W >= 0x0; W--) {
                if (0x1 === W) {
                  this.vi(this.content.children[W].children[0x0]);
                  F = this.ci.getItem(this, m, this.ri);
                  this.constChildList[this.content.children[W].slotID] = F;
                  this.constChildList[this.content.children[W].slotID].cellIndex = m;
                  F.parent = this.content.children[W];
                } else if (0x2 === W) {
                  this.vi(this.content.children[W].children[0x0]);
                  F = this.ci.getItem(this, a, this.ri);
                  this.constChildList[this.content.children[W].slotID] = F;
                  this.constChildList[this.content.children[W].slotID].cellIndex = a;
                  F.parent = this.content.children[W];
                }
              }
            } else if (0x0 === this.currIndex) {
              m = G + 0x1;
              a = G - 0x1;
              for (W = this.content.children.length - 0x1; W >= 0x0; W--) {
                if (0x1 === W) {
                  this.content.children[W].zIndex = 0x2;
                  this.vi(this.content.children[W].children[0x0]);
                  F = this.ci.getItem(this, m, this.ri);
                  this.constChildList[this.content.children[W].slotID] = F;
                  this.constChildList[this.content.children[W].slotID].cellIndex = m;
                  F.parent = this.content.children[W];
                } else if (0x2 === W) {
                  this.content.children[W].zIndex = 0x0;
                  this.vi(this.content.children[W].children[0x0]);
                  F = this.ci.getItem(this, a, this.ri);
                  this.constChildList[this.content.children[W].slotID] = F;
                  this.constChildList[this.content.children[W].slotID].cellIndex = a;
                  F.parent = this.content.children[W];
                } else {
                  this.content.children[W].zIndex = 0x1;
                }
              }
              this.resetContentPos = true;
            } else {
              Y = G + 0x1;
              m = G - 0x1;
              for (W = this.content.children.length - 0x1; W >= 0x0; W--) {
                if (0x0 === W) {
                  this.content.children[W].zIndex = 0x2;
                  this.vi(this.content.children[W].children[0x0]);
                  F = this.ci.getItem(this, Y, this.ri);
                  this.constChildList[this.content.children[W].slotID] = F;
                  this.constChildList[this.content.children[W].slotID].cellIndex = Y;
                  F.parent = this.content.children[W];
                } else if (0x1 === W) {
                  this.content.children[W].zIndex = 0x0;
                  this.vi(this.content.children[W].children[0x0]);
                  F = this.ci.getItem(this, m, this.ri);
                  this.constChildList[this.content.children[W].slotID] = F;
                  this.constChildList[this.content.children[W].slotID].cellIndex = m;
                  F.parent = this.content.children[W];
                } else {
                  this.content.children[W].zIndex = 0x1;
                }
              }
              this.resetContentPos = true;
            }
          };
          x.prototype.fi = function (G) {
            if (!(G > this.totalItems || G < 0x0)) {
              this.currIndex = G;
              this.target = -this.currIndex * this.distance;
              this.snapDone = false;
            }
          };
          x.prototype.mi = function () {
            if (this.dir === f.LEFT && this.content.x > this.maxScrollArea.y) {
              this.toLeftItem();
            } else if (this.dir === f.RIGHT && this.content.x < this.maxScrollArea.x) {
              this.toRightItem();
            }
            this.dir = f.NULL;
          };
          x.prototype.update = function (G) {
            var Y = this;
            if (this.snapDone || this.snapPause) {
              if (this.changeContentPos) {
                this.changeContentPos = false;
                this.target = -this.currIndex * this.distance;
                this.content.x = -this.currIndex * this.distance;
                this.fi(this.changeIndexTo);
                this.reloadCells = true;
              }
            } else {
              this.content.x = this.bi(this.content.x, this.target, G, this.speed, function () {
                if (Y.snapFinish) {
                  Y.snapFinish(Y.constChildList[Y.content.children[Y.currIndex].slotID].cellIndex);
                }
                if (Y.reloadCells) {
                  Y.reloadCells = false;
                  Y.speed = Y.originalSpeed;
                  Y.pi();
                }
              });
              if (this.resetContentPos) {
                this.resetContentPos = false;
                this.currIndex = this.middleIndex;
                this.target = -this.currIndex * this.distance;
                this.content.x = -this.currIndex * this.distance;
              }
              this.content.sortAllChildren();
            }
          };
          x.prototype.Si = function (G, Y) {
            if (!this.reloadCells && this.content.children.length) {
              this.snapPause = true;
              var m = G.touch;
              var W = cc.v2(m.getLocation().x, m.getLocation().y);
              this.startPos = W;
              this.gi(G, Y);
            } else {
              this.startPos = null;
            }
          };
          x.prototype.tt = function (G, Y) {
            var m = G.touch;
            var W = cc.v2(m.getLocation().x, m.getLocation().y);
            if (this.startPos && this.content.children.length) {
              if (this.startPos.x < W.x) {
                if (null != this.elasticLeft) {
                  this.elastic = this.elasticLeft;
                }
                if (0x0 === this.content.children[0x0].children[0x0].cellIndex && 0x0 === this.currIndex) {
                  if (this.selected && this.closingFromLeft) {
                    this.closingFromLeft(this.startPos.x, W.x);
                  }
                  if (0x0 !== this.content.x && this.selected) {
                    this.Ci(G, Y);
                  }
                } else if (this.selected) {
                  this.Ci(G, Y);
                }
              } else {
                if (null != this.elasticRight) {
                  this.elastic = this.elasticRight;
                }
                if (this.content.children[this.totalItems].children[0x0].cellIndex + 0x1 === this.li && this.currIndex === this.totalItems) {
                  if (this.selected && this.closingFromRight) {
                    this.closingFromRight(this.startPos.x, W.x);
                  }
                  if (this.content.x !== this.content.width && this.selected) {
                    this.Ci(G, Y);
                  }
                } else if (this.selected) {
                  this.Ci(G, Y);
                }
              }
              if (this.content.x > 0x0 && null != this.elasticLeft) {
                this.elastic = this.elasticLeft;
              } else if (this.content.x > -this.content.width && null != this.elasticRight) {
                this.elastic = this.elasticRight;
              }
            }
          };
          x.prototype.yi = function (G, Y) {
            if (!this.reloadCells && this.content.children.length) {
              this.dragElastic = false;
              var m = G.touch;
              var W = cc.v2(m.getLocation().x, m.getLocation().y);
              this.currentPos = W;
              if (this.startPos) {
                if (this.Mi(this.startPos.x, this.currentPos.x) && this.selected) {
                  if (this.dir != f.RIGHT && this.startPos.x > this.currentPos.x) {
                    this.dir = f.RIGHT;
                    this.itemOffSet = this.cellSize;
                    this.mi();
                    if (this.cancelCloseBook) {
                      this.cancelCloseBook();
                    }
                  } else if (this.dir != f.LEFT && this.startPos.x < this.currentPos.x) {
                    this.dir = f.LEFT;
                    this.itemOffSet = -this.cellSize;
                    this.mi();
                  } else {
                    this.fi(this.currIndex);
                    if (this.cancelCloseBook) {
                      this.cancelCloseBook();
                    }
                  }
                } else {
                  this.fi(this.currIndex);
                  if (this.cancelCloseBook) {
                    this.cancelCloseBook();
                  }
                }
                this.snapPause = false;
                this.Ai(G, Y);
              }
            }
          };
          x.prototype.Ii = function (G, Y) {
            if (!this.reloadCells && this.content.children.length) {
              this.dragElastic = false;
              var m = G.touch;
              var W = cc.v2(m.getLocation().x, m.getLocation().y);
              this.currentPos = W;
              if (this.startPos) {
                if (this.Mi(this.startPos.x, this.currentPos.x) && this.selected) {
                  if (this.dir != f.RIGHT && this.startPos.x > this.currentPos.x) {
                    this.dir = f.RIGHT;
                    this.itemOffSet = this.cellSize;
                    this.mi();
                    if (this.cancelCloseBook) {
                      this.cancelCloseBook();
                    }
                  } else if (this.dir != f.LEFT && this.startPos.x < this.currentPos.x) {
                    this.dir = f.LEFT;
                    this.itemOffSet = -this.cellSize;
                    this.mi();
                  } else {
                    this.fi(this.currIndex);
                    if (this.cancelCloseBook) {
                      this.cancelCloseBook();
                    }
                  }
                } else {
                  this.fi(this.currIndex);
                  if (this.cancelCloseBook) {
                    this.cancelCloseBook();
                  }
                }
                this.snapPause = false;
                this.wi(G, Y);
              }
            }
          };
          x.prototype.gi = function (G) {
            this.clickBegan = true;
            if (this.enabledInHierarchy) {
              var Y = G.touch;
              if (this.content) {
                this.Oi(Y);
              }
              this.Hi = false;
              this.Bi(G);
            }
          };
          x.prototype.Ci = function (G) {
            if (this.clickBegan) {
              this.clickBegan = false;
              if (this.startScrolling) {
                this.startScrolling();
              }
            }
            if (this.enabledInHierarchy) {
              var Y = G.touch;
              if (this.content) {
                this.Gi(Y);
              }
              if (this.cancelInnerEvents) {
                var m;
                m = Y.getLocation();
                Y.getStartLocation();
                var W = m.mag();
                if (W.sub(undefined) > 0x7 && !this.Hi && G.target !== this.node) {
                  var F = new cc.Event.EventTouch(G.getTouches(), G.bubbles);
                  F.type = cc.Node.EventType.TOUCH_CANCEL;
                  F.touch = G.touch;
                  F.simulate = true;
                  G.target.dispatchEvent(F);
                  this.Hi = true;
                }
                this.Bi(G);
              }
            }
          };
          x.prototype.Ai = function (G) {
            this.clickBegan = false;
            if (this.enabledInHierarchy) {
              var Y = G.touch;
              if (this.content) {
                this.Ni(Y);
              }
              this.Ti("touch-up");
              if (this.Hi) {
                G.stopPropagation();
              } else {
                this.Bi(G);
              }
            }
          };
          x.prototype.wi = function (G) {
            this.clickBegan = false;
            if (this.enabledInHierarchy) {
              if (!G.simulate) {
                var Y = G.touch;
                if (this.content) {
                  this.Ni(Y);
                }
              }
              this.Bi(G);
            }
          };
          x.prototype.Pi = function () {
            if (this.Li && this.Li.getScrollY() > 0x0) {
              this.dir = f.RIGHT;
            } else if (this.Li && this.Li.getScrollY() < 0x0) {
              this.dir = f.LEFT;
            }
          };
          x.prototype.Ri = function () {
            this.snapPause = true;
            this.snapDone = true;
          };
          x.prototype.Ei = function () {
            this.itemOffSet = this.cellSize;
            this.mi();
            this.snapPause = false;
            this.Li = undefined;
          };
          x.prototype.ki = function (G) {
            if (this.content.children.length && this.enabledInHierarchy) {
              this.Li = G;
              var Y = cc.v2(0x0, 0x0);
              if (this.vertical) {
                Y = cc.v2(0x0, -0.1 * G.getScrollY());
              } else if (this.horizontal) {
                Y = cc.v2(-0.1 * G.getScrollY(), 0x0);
                this.Pi();
              }
              this.Ui = 0x0;
              this.ji(Y);
              if (!this.Di) {
                this.Oi();
                this.schedule(this.Wi, 0.016666666666666666);
                this.Di = true;
                this.Ri();
              }
              this.Bi(G);
            }
          };
          x.prototype.Wi = function (G) {
            var Y;
            var m;
            Y = this.xi();
            m = cc.v2(0x0, 0x0);
            0.0001;
            if (!Y.fuzzyEquals(m, 0.0001)) {
              this.Fi();
              this.unschedule(this.Wi);
              this.Di = false;
              return void this.Ei();
            }
            this.Ui += G;
            if (this.Ui > 0.1) {
              this.Vi();
              this.unschedule(this.Wi);
              this.Di = false;
              this.Ei();
            }
          };
          return __decorate([y], x);
        }(N["default"]);
        K["default"] = b;
        cc._RF.pop();
      }
    }, BW],
    'ButtonBackground': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "96252/qWvdGA7VOxWpX5d7v", "ButtonBackground")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("UIAppearanceHelper");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.background = undefined;
            b.backgroundColorKey = '';
            return b;
          }
          __extends(y, A);
          y.prototype.onLoad = function () {
            this.background.color = S.uiAppearanceHelper.v('' + this.backgroundColorKey) ? S.uiAppearanceHelper.v('' + this.backgroundColorKey) : S.uiAppearanceHelper.v("setting.theme_color");
          };
          __decorate([f(cc.Node)], y.prototype, "background", undefined);
          __decorate([f(cc.String)], y.prototype, "backgroundColorKey", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, BF],
    'ButtonController': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "b879fiUzY1Om5HhXaCp7Qrf", "ButtonController")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator.ccclass;
        var S = function (q) {
          function N() {
            var f = null !== q && q.apply(this, arguments) || this;
            f.zi = undefined;
            return f;
          }
          __extends(N, q);
          N.prototype.setClickCallback = function (f) {
            this.zi = f;
          };
          N.prototype.onClick = function () {
            if (this.zi) {
              this.zi();
            }
          };
          N.prototype.clearClickCallback = function () {
            this.zi = undefined;
          };
          N.prototype.getControllerAndHandlerName = function () {
            var f = {
              ControllerName: "ButtonController",
              HandlerName: "onClick"
            };
            return f;
          };
          return __decorate([K], N);
        }(cc.Component);
        Q["default"] = S;
        cc._RF.pop();
      }
    }, {}],
    'ButtonHitTest': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "95aac3PHb1J8pXlbPzijfq9", "ButtonHitTest")) {
        Q.__esModule = true;
        Q.buttonHitTest = function (S) {
          var q = cc.EventListener.ListenerID.TOUCH_ONE_BY_ONE;
          cc.internal.eventManager[K.Ji](q, cc.director.getScene());
          var N = cc.internal.eventManager[K.qi](q);
          if (!N) {
            return false;
          }
          var f;
          var J = N[K.Ki];
          var A = S.parent.convertToWorldSpaceAR(S.getPosition());
          for (var y = 0x0; y < J.length; ++y) {
            if (J[y].owner[K.Qi](A, J[y])) {
              f = J[y].owner;
              break;
            }
          }
          return f && f === S;
        };
        var C = {
          'Ji': "_sortListenersOfSceneGraphPriority",
          'qi': "_getListeners",
          'Qi': "_hitTest",
          'Ki': "_sceneGraphListeners"
        };
        var K = cc.Enum(C);
        cc._RF.pop();
      }
    }, {}],
    'ButtonTheme': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "2a5d1nUeQZE9KCVbljwPCZP", "ButtonTheme")) {
        C.__esModule = true;
        C["default"] = undefined;
        var K = {
          NONE: 0x0,
          COLOR: 0x1,
          SPRITE: 0x2,
          SCALE: 0x3
        };
        var S = {
          tooltip: false,
          "default": ''
        };
        var q = B("UIAppearanceHelper");
        var N = cc.Enum(K);
        var f = cc.Class({
          'extends': cc.Component,
          'ctor': function () {},
          'editor': false,
          'properties': {
            'transition': {
              'default': N.NONE,
              'tooltip': false,
              'type': N,
              'animatable': false,
              'notify': function () {
                this.Yi();
              }
            },
            'domainKey': S,
            'colorKey': {
              'tooltip': false,
              'default': '',
              'notify': function () {
                this.Xi();
              }
            }
          },
          'onLoad': function () {
            this.Zi = this.node.getComponent(cc.Button);
            this.Yi();
            this.Xi();
          },
          'Yi': function () {
            var J = this.Zi;
            if (J) {
              J.transition = this.transition;
            }
          },
          'Xi': function () {
            var J = this.Zi;
            if (J && this.transition == N.COLOR) {
              this.domainKey;
              this.colorKey;
              var A = q.uiAppearanceHelper.v(this.domainKey + '.' + this.colorKey + ".normal");
              var y = q.uiAppearanceHelper.v(this.domainKey + '.' + this.colorKey + ".pressed");
              var b = q.uiAppearanceHelper.v(this.domainKey + '.' + this.colorKey + ".hover");
              var u = q.uiAppearanceHelper.v(this.domainKey + '.' + this.colorKey + ".disabled");
              if (A) {
                J.node.opacity = A.getA();
                J.normalColor = A;
                J.pressedColor = y;
                J.hoverColor = b;
                J.disabledColor = u;
              }
            }
          }
        });
        C["default"] = f;
        Q.exports = C["default"];
        cc._RF.pop();
      }
    }, Ba],
    'Button': [function (Q, C, K) {
      'use strict';

      if (!cc._RF.push(C, "0a573tIV9xKS4qfPLe+tVuo", "Button")) {
        var S = {
          value: true
        };
        Object.defineProperty(K, "__esModule", S);
        var q = {
          '$i': "_transitionFinished",
          'ts': "_fromColor",
          'ss': "_toColor",
          'es': "_fromScale",
          'ns': "_toScale",
          'os': "_pressed"
        };
        var N = cc.Enum(q);
        var f = cc._decorator;
        var J = f.ccclass;
        var A = f.property;
        var y = function (b) {
          function u() {
            var k = null !== b && b.apply(this, arguments) || this;
            k.targetCascadeOpacity = false;
            k.hs = undefined;
            return k;
          }
          __extends(u, b);
          u.prototype.update = function (k) {
            var D = this.target;
            if (!this[N.$i] && (this.transition === cc.Button.Transition.COLOR || this.transition === cc.Button.Transition.SCALE)) {
              this.time += k;
              var r;
              var x;
              var G;
              var Y = 0x1;
              if (this.duration > 0x0) {
                Y = this.time / this.duration;
              }
              if (Y >= 0x1) {
                Y = 0x1;
                this[N.$i] = true;
              }
              if (this.transition === cc.Button.Transition.COLOR) {
                this[N.ts].a = D.opacity;
                var m = this[N.ts].lerp(this[N.ss], Y);
                D.opacity = m.a;
                m.a = 0xff;
                D.color = m;
              } else if (this.transition === cc.Button.Transition.SCALE) {
                r = this[N.es];
                x = this[N.ns];
                G = Y;
                D.scale = cc.misc.lerp(r, x, G);
              }
            }
          };
          u.prototype.Si = function (k) {
            this.hs = this.node.parent.convertToWorldSpaceAR(k.touch.getLocation());
            b.prototype.Si.call(this, k);
          };
          u.prototype.rs = function (k) {
            var D;
            if (this[N.os]) {
              D = this.node.parent.convertToWorldSpaceAR(k.touch.getLocation());
              if (this.hs.sub(D).mag() > 0x32) {
                this[N.os] = false;
                this.hs = undefined;
              }
            } else {
              this.hs = undefined;
            }
            b.prototype.rs.call(this, k);
          };
          __decorate([A(cc.Boolean)], u.prototype, "targetCascadeOpacity", undefined);
          return __decorate([J], u);
        }(cc.Button);
        K["default"] = y;
        cc._RF.pop();
      }
    }, {}],
    'CanvasResizeBroadcaster': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "1bceeNXbqdLOquKoj3nUFeA", "CanvasResizeBroadcaster")) {
        var B = System.get("common").CanvasResizeBroadcaster;
        M.exports["default"] = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'ClickEffectController': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "9c1bbOo47dBVKQhy7Uc4JE2", "ClickEffectController")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.flashSpriteNode = undefined;
            A.clickEffectNode = undefined;
            A.as = undefined;
            return A;
          }
          __extends(J, f);
          J.prototype.onLoad = function () {
            this.as = this.clickEffectNode.getComponent(cc.Animation);
          };
          J.prototype.showClickEffect = function (A) {
            var y = this.node.convertToNodeSpaceAR(A);
            this.clickEffectNode.setPosition(y);
            this.as.play("click_effect");
          };
          J.prototype.showFlash = function () {
            this.flashSpriteNode.runAction(cc.sequence(cc.spawn(cc.scaleTo(0.3, 0x96), cc.sequence(cc.delayTime(0.05), cc.fadeOut(0.3))), cc.callFunc(this.us, this)));
          };
          J.prototype.us = function () {
            var A = this.flashSpriteNode;
            A.opacity = 0x80;
            A.scale = 0x0;
          };
          __decorate([q(cc.Node)], J.prototype, "flashSpriteNode", undefined);
          __decorate([q(cc.Node)], J.prototype, "clickEffectNode", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'ColumnTintController': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "db1a7ck92RH5IUeHU4fUx37", "ColumnTintController")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.columnTintHolder = [];
            return A;
          }
          __extends(J, f);
          J.prototype.fadeIn = function (A, y, b) {
            this.columnTintHolder[A].stopAllActions();
            this.columnTintHolder[A].runAction(cc.sequence(cc.fadeTo(y, 0x8f), cc.callFunc(function () {
              if (b) {
                b();
              }
            })));
          };
          J.prototype.fadeOut = function (A, y, b) {
            this.columnTintHolder[A].stopAllActions();
            this.columnTintHolder[A].runAction(cc.sequence(cc.fadeOut(y), cc.callFunc(function () {
              if (b) {
                b();
              }
            })));
          };
          __decorate([q([cc.Node])], J.prototype, "columnTintHolder", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'CommonDummy': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "b1293aDfltLSYBmQFiPHMGc", "CommonDummy")) {
        cc._RF.pop();
      }
    }, {}],
    'CreatorTweaks': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "a569ek937NGRIiNfWZy/vYu", "CreatorTweaks")) {
        M.exports = {};
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'CustomAnimParticleSystem': [function (Q, C, K) {
      'use strict';

      if (!cc._RF.push(C, "335a9gVv9pMJJVIVvm5+mNc", "CustomAnimParticleSystem")) {
        K.__esModule = true;
        K["default"] = undefined;
        var S = {
          LINEAR: 0x0,
          GRAVITY: 0x1
        };
        var q = {
          colorDelay: 0x0
        };
        var N;
        var f = (N = Q("AnimParticleSystem")) && N.__esModule ? N : {
          'default': N
        };
        var J = cc.Enum(S);
        var A = cc.Class({
          'extends': f["default"],
          'properties': q,
          'O': function (h0) {
            var h1 = this;
            var h2 = this.life + this.lifeVar * (Math.random() - 0.5) * 0x2;
            var h3 = this.sourcePos;
            var h4 = this.sourcePosVar;
            var h5 = h3.x + h4.x * (Math.random() - 0.5) * 0x2;
            var h6 = h3.y + h4.y * (Math.random() - 0.5) * 0x2;
            h0.setPosition(h5, h6);
            h0.angle = -(this.startSpin + this.startSpinVar * (Math.random() - 0.5) * 0x2);
            h0.scale = this.startScale + this.startScaleVar * (Math.random() - 0.5) * 0x2;
            h0.opacity = this.startAlpha + this.startAlphaVar * (Math.random() - 0.5) * 0x2;
            var h7 = this.speed + this.speedVar * (Math.random() - 0.5) * 0x2;
            var h8 = this.angle + this.angleVar * (Math.random() - 0.5) * 0x2;
            var h9 = [];
            var hh = Math.cos(h8 / 0xb4 * Math.PI) * h7 * h2;
            var hM = Math.sin(h8 / 0xb4 * Math.PI) * h7 * h2;
            var hB = h5 + hh;
            var hR = h6 + hM;
            if (this.emitterMode === J.LINEAR) {
              var hl = cc.moveTo(h2, cc.v2(hB, hR));
              h9.push(hl);
            } else if (this.emitterMode === J.GRAVITY) {
              var hQ = this.gravityVec;
              var hC = this.gravityVecVar;
              var hK = hQ.x + hC.x * (Math.random() - 0.5) * 0x2;
              var hS = hQ.y + hC.y * (Math.random() - 0.5) * 0x2;
              var hq = h5 + hh / 0x3;
              var hN = h6 + hM / 0x3;
              var hf = h5 + hh / 0x3 * 0x2;
              var ho = h6 + hM / 0x3 * 0x2;
              var hA = 0x3c * h2 / 0x3;
              var hy = this.B(hK, hA);
              var hc = this.B(hS, hA);
              var hb = 0x2 * hA;
              var hn = this.B(hK, hb);
              var hu = this.B(hS, hb);
              var hk = 0x3 * hA;
              var hD = this.B(hK, hk);
              var hr = this.B(hS, hk);
              var hx = hB > 0x0 ? 0x1 : -0x1;
              var he = cc.v2(hq - hy * hx, hN - hc);
              var hG = cc.v2(hf - hn * hx, ho - hu);
              var hY = cc.v2(hB - hD * hx, hR - hr);
              var hm = cc.bezierTo(h2, [he, hG, hY]);
              h9.push(hm);
            }
            var hi = this.endScale + this.endScaleVar * (Math.random() - 0.5) * 0x2;
            if (h0.scale !== hi) {
              var hW = cc.scaleTo(h2, hi);
              h9.push(hW);
            }
            var hF = this.endSpin + this.endSpinVar * (Math.random() - 0.5) * 0x2;
            if (h0.angle !== -hF) {
              var ha = cc.rotateTo(h2, hF, hF);
              h9.push(ha);
            }
            var hE = this.endAlpha + this.endAlphaVar * (Math.random() - 0.5) * 0x2;
            if (h0.opacity !== hE) {
              var hv = cc.fadeTo(h2, hE);
              h9.push(hv);
            }
            var hI = this.startColor;
            var hw = this.startColorVar;
            var hj = this.endColor;
            var hZ = this.endColorVar;
            if (!(hI.equals(cc.Color.WHITE) && hw.equals(cc.Color.BLACK) && hj.equals(cc.Color.WHITE) && hZ.equals(cc.Color.BLACK))) {
              if (hw.equals(cc.Color.BLACK)) {
                h0.color = hI;
              } else {
                var hX = hI.getR() + hw.getR() * (Math.random() - 0.5) * 0x2;
                var hV = hI.getG() + hw.getG() * (Math.random() - 0.5) * 0x2;
                var hH = hI.getB() + hw.getB() * (Math.random() - 0.5) * 0x2;
                h0.color = new cc.Color(hX, hV, hH);
              }
              var hz;
              if (hZ.equals(cc.Color.BLACK)) {
                hz = hj;
              } else {
                var hd = hj.getR() + hZ.getR() * (Math.random() - 0.5) * 0x2;
                var hP = hj.getG() + hZ.getG() * (Math.random() - 0.5) * 0x2;
                var hp = hj.getB() + hZ.getB() * (Math.random() - 0.5) * 0x2;
                hz = new cc.Color(hd, hP, hp);
              }
              if (!h0.color.equals(hz)) {
                var hO = this.colorDelay > 0x1 ? 0x1 : this.colorDelay < 0x0 ? 0x0 : this.colorDelay;
                var hL = cc.sequence(cc.delayTime(h2 * hO), cc.tintTo(h2 - h2 * hO, hz));
                h9.push(hL);
              }
            }
            var hU;
            var hT = h9.length;
            if (hT > 0x1) {
              hU = cc.sequence(cc.spawn(h9), cc.callFunc(function () {
                h1.H(h0);
              }, this));
            } else if (0x1 === hT) {
              hU = cc.sequence(h9[0x0], cc.callFunc(function () {
                h1.H(h0);
              }, this));
            }
            this.A.push(h0);
            this.node.addChild(h0);
            h0.runAction(hU);
          }
        });
        K["default"] = A;
        C.exports = K["default"];
        cc._RF.pop();
      }
    }, BE],
    'CustomAssetConfig': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "30248ADAbFJo5w43O2b27X1", "CustomAssetConfig")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.customAssetConfig = undefined;
        var K = M("ResourceLoader");
        var S = M("SettingMenuHelper");
        var q = [{
          'name': "setting_menu_audio",
          'type': K.LoaderType.CUSTOM,
          'loadFunc': function (N, f) {
            S.settingMenuHelper.loadAudio(function (J) {
              if (J) {
                f(J);
              } else {
                N(undefined);
              }
            });
          }
        }];
        Q.customAssetConfig = q;
        cc._RF.pop();
      }
    }, Bv],
    'DataSource': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "33f97XHWf5KOK2d9LLYgXNI", "DataSource")) {
        var B = System.get("bvframework").DataSource;
        M.exports["default"] = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'DefaultStartScroller': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "a9e6d7qkYZPw5K5UPSZUUME", "DefaultStartScroller")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = {
          scrollCallback: undefined,
          maxSpeed: -0x13b0,
          accelerateDuration: 0.15,
          accelerateFactor: 1.68,
          accelerateDistance: -0x17a,
          bounceDistance: 0x3c,
          bounceDuration: 0.15,
          bounceFactor: 1.84
        };
        var q = B("BaseScroller");
        var f = function (J) {
          function A(y) {
            var c = J.call(this, __assign(__assign({}, S), y)) || this;
            c.accumulatedTime = 0x0;
            c.previousY = 0x0;
            c.bindedRunUpdate = undefined;
            c.bindedEndUpdate = undefined;
            c.bindedRunUpdate = c.runUpdate.bind(c);
            c.bindedEndUpdate = c.endUpdate.bind(c);
            return c;
          }
          __extends(A, J);
          A.prototype.onReset = function () {
            this.update = undefined;
          };
          A.prototype.onRun = function () {
            this.emitEvent(q.SCROLLER_EVENT.RUN);
            this.accumulatedTime = 0x0;
            this.previousY = 0x0;
            this.update = this.bindedRunUpdate;
          };
          A.prototype.onEnd = function () {
            this.update = this.bindedEndUpdate;
            this.emitEvent(q.SCROLLER_EVENT.END);
          };
          A.prototype.runUpdate = function (y) {
            var b = this.runtimeConfig;
            y = this.accumulatedTime += y;
            var u = b.bounceDuration;
            if (y <= u) {
              var k = 0x1 - Math.pow(0x1 - y / u, b.bounceFactor);
              var D = b.bounceDistance * k;
              b.scrollCallback(this, D - this.previousY);
              return void (this.previousY = D);
            }
            y -= u;
            var r = b.accelerateDuration;
            if (y < r) {
              k = Math.pow(y / r, b.accelerateFactor);
              D = b.accelerateDistance * k + b.bounceDistance;
              b.scrollCallback(this, D - this.previousY);
              this.previousY = D;
              return void this.emitEvent(q.SCROLLER_EVENT.ACCELERATE, k);
            }
            this.emitEvent(q.SCROLLER_EVENT.ACCELERATE, 0x1);
            this.end();
          };
          A.prototype.endUpdate = function (y) {
            this.runtimeConfig.scrollCallback(this, y * this.runtimeConfig.maxSpeed);
          };
          return A;
        }(q["default"]);
        C["default"] = f;
        cc._RF.pop();
      }
    }, BI],
    'DefaultStopScroller': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "080a20w+h1E6aNSIb84n3TU", "DefaultStopScroller")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = {
          scrollCallback: undefined,
          getStopDistance: undefined,
          maxSpeed: -0x13b0,
          endSpeed: -0x1248,
          bounceDistance: -0x3c,
          bounceDuration: 0.15,
          bounceFactor: 1.84
        };
        var q = B("BaseScroller");
        var f = function (J) {
          function A(y) {
            var c = J.call(this, __assign(__assign({}, S), y)) || this;
            c.changeSpeedDuration = 0x0;
            c.changeSpeedTimer = 0x0;
            c.previousMaxSpeed = 0x0;
            c.accumulatedTime = 0x0;
            c.previousY = 0x0;
            c.endY = 0x0;
            c.decelerateDistance = 0x0;
            c.decelerateDuration = 0x0;
            c.halfDeceleration = 0x0;
            c.notified = false;
            c.bindedIdleUpdate = undefined;
            c.bindedRunUpdate = undefined;
            c.bindedIdleUpdate = c.idleUpdate.bind(c);
            c.bindedRunUpdate = c.runUpdate.bind(c);
            return c;
          }
          __extends(A, J);
          A.prototype.onReset = function () {
            this.endY = 0x0;
            this.previousY = 0x0;
            this.changeSpeedDuration = 0x0;
            this.notified = false;
            this.update = this.bindedIdleUpdate;
          };
          A.prototype.onRun = function () {
            this.emitEvent(q.SCROLLER_EVENT.RUN);
            var y = this.runtimeConfig;
            var c = this.endY = y.getStopDistance(this);
            var b = this.decelerateDistance = c + y.bounceDistance;
            var u = this.decelerateDuration = 0x2 * b / (y.maxSpeed + y.endSpeed);
            this.halfDeceleration = (y.endSpeed - y.maxSpeed) / u / 0x2;
            this.previousY = 0x0;
            this.notified = false;
            this.accumulatedTime = 0x0;
            this.update = this.bindedRunUpdate;
          };
          A.prototype.onEnd = function () {
            if (!this.notified) {
              this.notified = true;
              this.emitEvent(q.SCROLLER_EVENT.DECELERATE, 0x0);
            }
            var y = this.endY;
            if (0x0 === y) {
              y = this.runtimeConfig.getStopDistance(this);
            }
            var c = y - this.previousY;
            if (c) {
              this.runtimeConfig.scrollCallback(this, c);
            }
            this.update = undefined;
            this.emitEvent(q.SCROLLER_EVENT.END);
          };
          A.prototype.idleUpdate = function (y) {
            var c = this.changeSpeedDuration;
            if (c) {
              var b = this.changeSpeedTimer += y;
              if (!(b >= c)) {
                var u = this.previousMaxSpeed;
                var k = u + (this.runtimeConfig.maxSpeed - u) * b / c;
                return void this.runtimeConfig.scrollCallback(this, y * k);
              }
              this.changeSpeedDuration = 0x0;
            }
            this.runtimeConfig.scrollCallback(this, y * this.runtimeConfig.maxSpeed);
          };
          A.prototype.runUpdate = function (y) {
            var b = this.runtimeConfig;
            y = this.accumulatedTime += y;
            var u = this.decelerateDuration;
            if (y < u) {
              var k = b.maxSpeed * y + this.halfDeceleration * y * y;
              b.scrollCallback(this, k - this.previousY);
              this.previousY = k;
              return void this.emitEvent(q.SCROLLER_EVENT.DECELERATE, 0x1 - y / u);
            }
            if (!this.notified) {
              this.notified = true;
              this.emitEvent(q.SCROLLER_EVENT.DECELERATE, 0x0);
            }
            y -= u;
            var D = b.bounceDuration;
            if (y < D) {
              var r = 0x1 - Math.pow(0x1 - y / D, b.bounceFactor);
              k = this.decelerateDistance - b.bounceDistance * r;
              b.scrollCallback(this, k - this.previousY);
              return void (this.previousY = k);
            }
            this.end();
          };
          A.prototype.getDecelerateDuration = function () {
            return this.decelerateDuration;
          };
          A.prototype.changeIdleSpeed = function (y, c) {
            var b = this.runtimeConfig;
            this.previousMaxSpeed = b.maxSpeed;
            b.maxSpeed = c;
            this.changeSpeedDuration = y;
            this.changeSpeedTimer = 0x0;
          };
          return A;
        }(q["default"]);
        C["default"] = f;
        cc._RF.pop();
      }
    }, Bw],
    'Deserializer': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "755a5d0q9ZMN7vreqSy6/g4", "Deserializer")) {
        var B = System.get("common").Deserialiser;
        M.exports.Deserializer = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'DrawLine': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "0b006l9a0tOS5No6bQvo8YJ", "DrawLine")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.horizontal = true;
            A.vertical = false;
            return A;
          }
          __extends(J, f);
          J.prototype.onLoad = function () {
            this.graphics = this.node.addComponent(cc.Graphics);
            this.fs();
            this.node.on("size-changed", this.fs, this);
          };
          J.prototype.fs = function () {
            var A;
            var y;
            this.graphics.clear();
            if (this.horizontal) {
              A = -this.node.width * this.node.anchorX;
              y = this.node.width - this.node.width * this.node.anchorX;
              this.graphics.moveTo(A, this.node.height / 0x2);
              this.graphics.lineTo(y, this.node.height / 0x2);
            } else {
              A = this.node.height * this.node.anchorX;
              y = this.node.height * this.node.anchorX - this.node.height;
              this.graphics.moveTo(this.node.width / 0x2, A);
              this.graphics.lineTo(this.node.width / 0x2, y);
            }
            this.graphics.stroke();
          };
          J.prototype.onDestroy = function () {
            this.node.off("size-changed", this.fs, this);
            this.graphics.clear();
          };
          __decorate([q(cc.Boolean)], J.prototype, "horizontal", undefined);
          __decorate([q(cc.Boolean)], J.prototype, "vertical", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'ErrorHandler': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "933099S7qNPvb+XKiLo98KQ", "ErrorHandler")) {
        var B = System.get("bvframework").ErrorHandler;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'FeatureWinController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "95849uIMzZL0pGkaFJkWDGE", "FeatureWinController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SymbolImageHandler");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.image = undefined;
            return b;
          }
          __extends(y, A);
          y.prototype.show = function (b) {
            this.image.spriteFrame = S.symbolImageHandler.symbolImages[b];
            this.node.active = true;
          };
          y.prototype.hide = function () {
            this.node.active = false;
          };
          __decorate([f(cc.Sprite)], y.prototype, "image", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, Bt],
    'FireworkItem': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "99da7p9RjNLEY8vDpF/6mFE", "FireworkItem")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.fireworkAnimation = undefined;
            b.ds = undefined;
            return b;
          }
          __extends(y, A);
          y.prototype.setup = function (b, u) {
            this.ds = b;
            this.fireworkAnimation.node.setPosition(u);
            this.vs();
          };
          y.prototype.play = function () {
            var b = this;
            this.fireworkAnimation.play();
            this.fireworkAnimation.on("finished", function () {
              b.ds.put(b.fireworkAnimation.node);
            });
          };
          y.prototype.vs = function () {
            var b = S.randomInt(0x19, 0x23) / 0xa;
            this.fireworkAnimation.node.scale = b;
          };
          __decorate([f(cc.Animation)], y.prototype, "fireworkAnimation", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, Bj],
    'ForegroundController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "b2cf3LpvJhIu6s35FbXCrhK", "ForegroundController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("GConstants");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.reelShine = [];
            b.reelParticle = [];
            b.footerGold = undefined;
            return b;
          }
          __extends(y, A);
          y.prototype.playRespin = function (b) {
            var u = this;
            this._t();
            this.reelShine.forEach(function (k) {
              k.play();
            });
            this.reelParticle.forEach(function (k) {
              k.play();
            });
            this.reelParticle[0x0].on(cc.Animation.EventType.FINISHED, function () {
              u.reelShine.forEach(function (k) {
                k.node.runAction(cc.sequence(cc.tintTo(0.5, S.BLACK), cc.callFunc(u._t.bind(u))));
              });
              if (b) {
                b();
              }
            });
          };
          y.prototype.showGold = function () {
            this.footerGold.active = true;
          };
          y.prototype.hideGold = function () {
            this.footerGold.active = false;
          };
          y.prototype._t = function () {
            this.reelShine.forEach(function (b) {
              b.node.stopAllActions();
              b.node.color = S.WHITE;
              b.stop();
              b.setCurrentTime(0x0);
              b.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
            this.reelParticle.forEach(function (b) {
              b.stop();
              b.setCurrentTime(0x0);
              b.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
          };
          __decorate([f([cc.Animation])], y.prototype, "reelShine", undefined);
          __decorate([f([cc.Animation])], y.prototype, "reelParticle", undefined);
          __decorate([f(cc.Node)], y.prototype, "footerGold", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, BZ],
    'GApiClient': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "55c9dWBKr5GWqWxtkwOuSVB", "GApiClient")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.gApiClient = undefined;
        var S = B("APIClient");
        B("TweaksData");
        var q = B("Utils");
        var N = B("AutomationDecorator");
        var f = B("APIClient.spec");
        var J = B("GDataSource");
        var A = q.getPlatform();
        var y = function (k) {
          function D() {
            return null !== k && k.apply(this, arguments) || this;
          }
          __extends(D, k);
          D.prototype.spin = function (x) {
            var G = this;
            var Y = J.gDataSource.transactionModel;
            var m = Y.transactionId;
            var W = Y.betLevelValue;
            var F = Y.betSizeValue;
            var v = J.gDataSource.playerModel.walletKey;
            var I = {
              'cs': F,
              'ml': W,
              'pf': A,
              'id': m,
              'crl': undefined,
              'wk': v
            };
            this.requestEngine("v2/Spin", I, function (w, j) {
              G._s(w, j);
              if (x) {
                x(w, j);
              }
            });
          };
          D.prototype._s = function (x, G) {
            this.logResult("spin", G);
            if (G && G.dt) {
              var Y = G.dt.si;
              this.print(Y.sid);
              J.gDataSource.updateTransactionInfo(Y);
            }
          };
          __decorate([N.automationDec({
            'func': f.onRequestSent
          })], D.prototype, "spin", null);
          __decorate([N.automationDec({
            'func': f.onRequestReceived
          })], D.prototype, "_onRespond", null);
          return D;
        }(S["default"]);
        C["default"] = y;
        var b = new y(J.gDataSource);
        C.gApiClient = b;
        cc._RF.pop();
      }
    }, BX],
    'GConstants': [function (u, k, D) {
      'use strict';

      if (!cc._RF.push(k, "12c16j/3s5O2aee2zhE3JDM", "GConstants")) {
        var r = {
          value: true
        };
        Object.defineProperty(D, "__esModule", r);
        D.AUDIO_RELATED_TIMING = D.PAY_OUT_DATA = D.TEASE_TIMING = D.TURBO_SPIN_SPEEDUP_FACTOR = D.SPIN_BUTTON_TIMING = D.FEATURE_TRANSITION_TIMING = D.BIG_WIN_TIMING = D.INFOBOARD_TIMING = D.PAY_SELECT_TIMING = D.HORIZONTAL_DIRECTION = D.IS_RTL = D.GREY = D.WHITE = D.BLACK = undefined;
        D.BLACK = cc.color(0x0, 0x0, 0x0);
        D.WHITE = cc.color(0xff, 0xff, 0xff);
        D.GREY = cc.color(0x32, 0x32, 0x32);
        D.IS_RTL = shell.isRTLLanguage && shell.isRTLLanguage();
        var x = cc.Layout.HorizontalDirection.LEFT_TO_RIGHT;
        var G = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT;
        var Y = {
          PLAY_ALTERNATE_LINE_DURATION: 0x2,
          PLAY_ALL_LINE_DURATION: 0x0,
          ALTERNATE_LINE_ONE_BY_ONE_INTERVAL: 0.1,
          ALL_LINE_ONE_BY_ONE_INTERVAL: 0.05,
          ALTERNATE_LINE_DELAY_TIME: 0.05
        };
        var m = {
          MEDIUM_WIN_ROLL_DURATION: 0x2,
          DELAY_RESET: 0.5
        };
        var W = {
          BIG_WIN_DELAY: 0.4,
          SKIP_ROLL_DELAY: 0.7,
          DISMISS_BIG_WIN_DELAY: 0.5,
          AUTO_DISMISS_BIG_WIN_DELAY: 0x6,
          BIG_WIN_ROLL_DURATION: [4.219, 3.75],
          MEGA_WIN_ROLL_DURATION: [3.75, 3.75],
          SUPER_MEGA_WIN_ROLL_DURATION: [3.75, 3.738]
        };
        var F = {
          PRE_ZOOM_DURATION: 0.35,
          UI_TRANSITION_INTO_BONUS_DURATION: 1.75,
          UI_TRANSITION_INTO_NORMAL_DURATION: 0x1,
          UI_TRANSITION_INTO_NORMAL_DELAY: 0x1,
          FADE_OUT_BONUS_REEL_DURATION: 0.35
        };
        var a = {
          SECONDS_PER_ROUND_SPINNING: 0.5,
          SECONDS_PER_ROUND_IDLE: 0x4
        };
        var E = {
          ENTER_TEASE_DURATION: 1.75,
          EXIT_TEASE_DURATION: 1.3
        };
        var v = {
          '3': 0xfa
        };
        var I = {
          '3': 0x64
        };
        var w = {
          '3': 0x19
        };
        var j = {
          '3': 0xa
        };
        var Z = {
          '3': 0x8
        };
        var X = {
          '3': 0x5
        };
        var V = {
          '3': 0x3
        };
        var H = {
          '0': v,
          '2': I,
          '3': w,
          '4': j,
          '5': Z,
          '6': X,
          '7': V
        };
        var z = {
          FADE_IN_RESPIN_REEL_LOOP_DURATION: 0x1,
          FADE_OUT_RESPIN_REEL_LOOP_DURATION: 0.5,
          FADE_OUT_ZOOM_OUT_SFX_DURATION: 0.5,
          FADE_OUT_MOUSE_TEASE_VOX_DURATION: 0.5,
          BGM_CROSSFADE_DURATION: 0x1,
          FS_REEL_LOOP_VOLUME: 0.6,
          BGM_NORMAL_TO_RESPIN: 0.1,
          BGM_RESPIN_TO_NORMAL: 1.5
        };
        D.HORIZONTAL_DIRECTION = D.IS_RTL ? G : x;
        D.PAY_SELECT_TIMING = Y;
        D.INFOBOARD_TIMING = m;
        D.BIG_WIN_TIMING = W;
        D.FEATURE_TRANSITION_TIMING = F;
        D.SPIN_BUTTON_TIMING = a;
        D.TURBO_SPIN_SPEEDUP_FACTOR = 0.4;
        D.TEASE_TIMING = E;
        D.PAY_OUT_DATA = H;
        D.AUDIO_RELATED_TIMING = z;
        cc._RF.pop();
      }
    }, {}],
    'GDataSource': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "2a313L7PyZGlqutL42bLW8/", "GDataSource")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.gDataSource = undefined;
        var S = B("RtConfig");
        var q = B("GSlotTransactionModel");
        var N = B("DataSource");
        var f = B("PlayerModel");
        var J = B("SlotSystemModel");
        var A = function (b) {
          function u() {
            return b.call(this, {
              'playerModel': new f["default"](),
              'systemModel': new J["default"](S.cs_Config),
              'transactionModel': new q["default"]()
            }) || this;
          }
          __extends(u, b);
          return u;
        }(N["default"]);
        C["default"] = A;
        var y = new A();
        C.gDataSource = y;
        cc._RF.pop();
      }
    }, BV],
    'GIdleState': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "5ac57uin/lCkpc/fmWpJiL5", "GIdleState")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("IdleState");
        var q = B("SlotGameConstants");
        var N = B("ReplayModeHandler");
        var f = B("TransactionStateMachineHandler");
        var J = function (A) {
          function y(b, u, k, D) {
            if (undefined === D) {
              D = q.DEFAULT_AUTO_SPIN_DELAY_TIME;
            }
            var r = A.call(this, b, u, k, D) || this;
            r.ms = u.uiHelper;
            return r;
          }
          __extends(y, A);
          y.prototype.run = function () {
            var b = this;
            var u = function () {
              A.prototype.run.call(b);
            };
            if (N.fmReplayModeHandler.replayCompleted()) {
              u();
            } else {
              f.goToStateCallback("idle")(u);
            }
          };
          y.prototype.onStateFullyIdle = function () {
            this.ms.onStateFullyIdle();
          };
          y.prototype.additionalDestroyCleanups = function () {
            this.ms = undefined;
          };
          y.prototype.preExitStateCleanups = function () {
            var b = this.generalControllers.symbolPopoutController;
            b.disablePanel();
            b.clearOnClickCallback();
          };
          y.prototype.enableAvailableActions = function () {
            if (N.fmReplayModeHandler.replayStarted()) {
              this.enableSpinAction();
            }
          };
          y.prototype.defineSystemEventConfigParam = function () {
            var b = this;
            return {
              'callback': function () {
                if (N.fmReplayModeHandler.replayCompleted()) {
                  N.fmReplayModeHandler.endReplay();
                  b.tryAutoSpin();
                } else {
                  f.goToStateCallback("action", true)(function () {
                    if (!N.fmReplayModeHandler.replayCompleted()) {
                      b.tryAutoSpin();
                    }
                  });
                }
              }
            };
          };
          y.prototype.preStartSpinAction = function (b) {
            f.transitionCompleteCallback("action")(b);
          };
          return y;
        }(S["default"]);
        C["default"] = J;
        cc._RF.pop();
      }
    }, BH],
    'GNormalGameState': [function (Q, C, K) {
      'use strict';

      if (!cc._RF.push(C, "8ba89Q1SMVGHJfV/8zsSj5r", "GNormalGameState")) {
        var S = {
          value: true
        };
        Object.defineProperty(K, "__esModule", S);
        var q = {
          NONE: 0x0,
          IDLE: 0x1,
          SPIN: 0x2,
          RESULT: 0x3,
          CHECK: 0x4
        };
        var N = Q("Utils");
        var J = Q("NormalSpinDecorator");
        var A = Q("NormalPrizeDecorator");
        var y = Q("GSlotTransactionModel");
        var b = Q("GIdleState");
        var k = Q("GSpinState");
        var D = Q("GNormalResultState");
        var x = Q("GPrizeState");
        var G = Q("NormalUIHelper");
        var Y = Q("GResultDecorator");
        var m = Q("TransactionStateMachineHandler");
        var W = cc.Enum(q);
        var F = function () {
          function E(I, w, j) {
            this.name = "Normal Game State";
            this.ci = undefined;
            this.ps = undefined;
            this.bs = undefined;
            this.Ss = undefined;
            this.ms = undefined;
            this.ci = I;
            this.ps = w;
            this.bs = j;
            this.ms = new G["default"](I, w);
          }
          E.prototype.run = function () {
            this.Ss = W.NONE;
            this.gs();
          };
          E.prototype.destroy = function () {
            this.ci = undefined;
            this.ps = undefined;
            this.bs = undefined;
            this.Ss = undefined;
          };
          E.prototype.gs = function () {
            switch (this.Ss) {
              case W.NONE:
                this.Ss = W.IDLE;
                this.Cs();
                break;
              case W.IDLE:
                this.Ss = W.SPIN;
                this.ys();
                break;
              case W.SPIN:
                this.Ss = W.RESULT;
                this.Ms();
                break;
              case W.RESULT:
                this.Ss = W.CHECK;
                this.As();
                break;
              case W.CHECK:
                var I = undefined;
                if (this.ci.transactionModel.stateTransitionTo === y.SpinType.NORMAL) {
                  this.Ss = W.NONE;
                  I = this.gs.bind(this);
                } else {
                  I = this.Is.bind(this);
                }
                this.ws(I);
            }
          };
          E.prototype.Cs = function () {
            var I = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            new b["default"](this.ci, I, this.gs.bind(this), 0.3).run();
          };
          E.prototype.ys = function () {
            var I = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var j = new J["default"](this.ci, I);
            new k["default"](this.ci, I, this.gs.bind(this), j).run();
          };
          E.prototype.Ms = function () {
            var I = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var j = new Y["default"](this.ci, I);
            new D["default"](this.ci, I, this.gs.bind(this), j).run();
          };
          E.prototype.As = function () {
            var I = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var j = new A["default"](this.ci, I);
            new x["default"](this.ci, I, this.gs.bind(this), j).run();
          };
          E.prototype.ws = function (I) {
            var w = this.ci.transactionModel.stateTransitionTo;
            var j = this.ci;
            var Z = j.isGameReplaying;
            var X = j.nextGameReplayInfo;
            var V = w === y.SpinType.NORMAL ? "setup" : "idle";
            V = Z && X ? "idle" : V;
            m.transitionCompleteCallback(V)(I);
          };
          E.prototype.Is = function () {
            var I = this.bs;
            this.bs = undefined;
            this.destroy();
            N.deferCallback(this)(I);
          };
          return E;
        }();
        K["default"] = F;
        cc._RF.pop();
      }
    }, Bz],
    'GNormalResultState': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "64d7f1bCUdFaZJl2yqdd7bl", "GNormalResultState")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("ResultState");
        var q = B("SlotStateMachine");
        var N = B("GSlotTransactionModel");
        var J = B("SlotAnalyticsEnum");
        var A = B("RespinReelStatusHandler");
        var y = B("TransactionStateMachineHandler");
        var b = B("SlotAnalyticsHelper");
        var k = B("SlotProperties");
        var D = B("SpinConfigHandler");
        var x = function (G) {
          function Y(m, W, F, E) {
            var v = G.call(this, m, W, F, E) || this;
            v.uiHelper = undefined;
            v._decorator = undefined;
            v._decorator = E;
            v.ms = W.uiHelper;
            return v;
          }
          __extends(Y, G);
          Y.prototype.setAvailableActions = function () {
            A.respinReelStatusHandler.updateRespinReelStatus(this.dataSource);
          };
          Y.prototype.setSlotData = function () {
            var m = this.generalControllers;
            var W = m.slotController;
            var F = m.symbolPopoutController;
            var E = this.dataSource.transactionModel;
            var v = E.reels;
            var I = E.stateTransitionTo;
            var w = E.featureWinSymbol;
            var j = v.slice();
            if (I === N.SpinType.RESPIN && w) {
              j.forEach(function (Z, X) {
                if (Z !== w && Z !== k.SLOT_INDEX.WILD) {
                  j[X] = -0x1;
                }
              });
            }
            W.setReelData(j);
            F.setReelData(j);
          };
          Y.prototype.resultDidStartRender = function (m) {
            var W = this;
            var F = this.dataSource.transactionModel;
            var E = F.stateTransitionTo;
            var v = F.stateTransitionFrom;
            var I = F.isShowTease;
            var w = function () {
              y.goToStateCallback("prize", true)(m);
            };
            if (v === N.SpinType.NORMAL && E === N.SpinType.RESPIN) {
              this.ms.renderBonusFeatureBeforeResult(function () {
                var j = W.generalControllers.slotController;
                if (D.featureConfig.fastStopFeature) {
                  j.unmarkFastStop();
                  j.enableTouchEvent();
                  if (W._decorator && W._decorator.clearAvailableActions) {
                    W._decorator.clearAvailableActions();
                  }
                  W._decorator.triggerFastStop = W.handleSlotRegionFastStop.bind(W);
                  W._decorator.setKeyboardActionsDuringRespinTransition();
                }
                if (D.featureConfig.fastStopFeature && j.getStopStyle() !== q.StopStyle.FAST) {
                  j.setOnClickCallback(W.handleSlotRegionFastStop.bind(W, J.SpinTrigger.CLICK));
                }
              }, w);
            } else if (I) {
              this.ms.renderTeaseFeatureBeforeResult(this.Os.bind(this), w);
            } else {
              w();
            }
          };
          Y.prototype.invokeSlotStop = function () {
            var m = this.generalControllers.slotController;
            if (m.getStopStyle() === q.StopStyle.FAST) {
              m.fastStop();
            } else {
              m.stopSpin();
            }
          };
          Y.prototype.slotDidStartStopping = function (m) {
            this.ms.renderFeatureDuringResult(function () {
              if (m) {
                m();
              }
            });
          };
          Y.prototype.renderFeature = function (m) {
            this.ms.renderFeatureAfterResult(function () {
              if (m) {
                m();
              }
            });
          };
          Y.prototype.handleSlotRegionFastStop = function (m) {
            var W = this.generalControllers;
            var F = W.slotController;
            W.uiShiftController;
            W.backgroundController;
            var E = W.spinButtonController;
            this.dataSource.transactionModel.isShowTease;
            switch (this.process) {
              case J.SpinStateProcess.REEL_SPINNING:
                b.sendFastStopGA(m, E.isAutoSpin());
                if (this._decorator && this._decorator.fastStopTriggeredWhileSpinning) {
                  this._decorator.fastStopTriggeredWhileSpinning();
                }
                this.fastStopTriggeredWhileSpinning();
                F.setOnClickCallback(undefined);
                F.markFastStop();
                break;
              case J.SpinStateProcess.REEL_STOPPING:
                b.sendFastStopGA(m, E.isAutoSpin());
                if (this._decorator && this._decorator.triggerFastStopWhileStopping) {
                  this._decorator.triggerFastStopWhileStopping();
                }
                this.triggerFastStopWhileStopping();
                F.setOnClickCallback(undefined);
                F.fastStop();
            }
          };
          Y.prototype.additionalDestroyCleanups = function () {
            this.ms = undefined;
          };
          Y.prototype.Os = function () {
            var m = this.generalControllers;
            var W = m.slotController;
            var F = m.spinButtonController;
            W.setOnSlotBeginInterruptCallback(function () {
              F.stopSpin();
            });
          };
          return Y;
        }(S["default"]);
        C["default"] = x;
        cc._RF.pop();
      }
    }, Bd],
    'GNormalStopScroller': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "38e38f5QRpDprD5l00K1bGD", "GNormalStopScroller")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("DefaultStopScroller");
        var q = B("BaseScroller");
        var N = B("GeneralAudioConstant");
        var f = B("AudioManager");
        var J = B("SlotProperties");
        var A = cc._decorator.ccclass;
        var y = function (b) {
          function u() {
            var k = null !== b && b.apply(this, arguments) || this;
            k.Hs = 0.2;
            k.Bs = undefined;
            k.Gs = undefined;
            return k;
          }
          __extends(u, b);
          u.prototype.updateEndSpeed = function (k) {
            this.config.endSpeed = k;
            this.runtimeConfig.endSpeed = k;
          };
          Object.defineProperty(u.prototype, "scrollerIndex", {
            'set': function (k) {
              this.Ns = k;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(u.prototype, "isRespin", {
            'set': function (k) {
              this.Ts = k;
            },
            'enumerable': false,
            'configurable': true
          });
          u.prototype.setOnScrollerReachesBouncePointCallback = function (k) {
            this.Ps = k;
          };
          u.prototype.setOnScrollerReachesLowestPointCallback = function (k) {
            this.Ls = k;
          };
          u.prototype.setOnScrollerReachesSlowDownPointCallback = function (k) {
            this.Rs = k;
          };
          u.prototype.onRun = function () {
            this.emitEvent(q.SCROLLER_EVENT.RUN);
            var k = this.runtimeConfig;
            var D = this.endY = k.getStopDistance(this);
            var x = this.decelerateDistance = D + k.bounceDistance;
            var G = this.decelerateDuration = 0x2 * x / (k.maxSpeed + k.endSpeed);
            this.halfDeceleration = (k.endSpeed - k.maxSpeed) / G / 0x2;
            this.previousY = 0x0;
            this.notified = false;
            this.accumulatedTime = 0x0;
            this.update = this.bindedRunUpdate;
            this.Bs = false;
            this.Gs = false;
          };
          u.prototype.runUpdate = function (k) {
            var D = this.runtimeConfig;
            k = this.accumulatedTime += k;
            var x = this.decelerateDuration;
            if (k < x) {
              if (!this.Gs && k > x * this.Hs) {
                this.Gs = true;
                if (this.Rs) {
                  this.Rs(this.Ns, this.Ts);
                }
              }
              var G = D.maxSpeed * k + this.halfDeceleration * k * k;
              D.scrollCallback(this, G - this.previousY);
              this.previousY = G;
              return void this.emitEvent(q.SCROLLER_EVENT.DECELERATE, 0x1 - k / x);
            }
            if (!this.notified) {
              this.notified = true;
              this.emitEvent(q.SCROLLER_EVENT.DECELERATE, 0x0);
              if (this.Ps) {
                this.Ps(this.Ns, this.Ts);
              }
              var Y = N.GENERAL_AUDIO.spinStop.key;
              f.stopAudioIfPlaying(Y);
              f.playAudioIfNotPlaying(Y);
              if (this.Ns === J.NORMAL_SLOT_COLUMN - 0x1) {
                var m = N.GENERAL_AUDIO.spinActiveLoop.key;
                f.stopAudioIfPlaying(m);
              }
            }
            if ((k -= x) < D.bounceDuration) {
              var W = Math.pow(0x2, -0xc * k) * Math.sin(0x2 * Math.PI * (0.1 * k - 0.075) / 0.3) + 0x1;
              var F = (G = this.decelerateDistance - D.bounceDistance * W) - this.previousY;
              D.scrollCallback(this, F);
              if (F > 0x0 && !this.Bs) {
                this.Bs = true;
                if (this.Ls) {
                  this.Ls(this.Ns, this.Ts);
                }
              }
              return void (this.previousY = G);
            }
            this.end();
          };
          return __decorate([A], u);
        }(S["default"]);
        C["default"] = y;
        cc._RF.pop();
      }
    }, BP],
    'GPopOutItem': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "545aadFzDRAIoq12el2mf1A", "GPopOutItem")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("PopOutItem");
        var q = B("GConstants");
        var N = B("GeneralAudioConstant");
        var J = B("SpineConfigHandler");
        var A = B("SlotProperties");
        var y = B("AudioManager");
        var b = cc._decorator;
        var k = b.ccclass;
        var D = b.property;
        var x = function (G) {
          function Y() {
            var m = null !== G && G.apply(this, arguments) || this;
            m.spine = undefined;
            m.background = undefined;
            m.payoutNumber = [];
            m.payoutValue = [];
            m.numberHolder = undefined;
            m.numberHolderLayout = undefined;
            return m;
          }
          __extends(Y, G);
          Y.prototype.unuse = function () {
            this.node.opacity = 0x0;
          };
          Y.prototype.reuse = function () {
            this.node.opacity = 0x0;
          };
          Y.prototype.hideItem = function () {
            this.node.opacity = 0x0;
            this.node.active = false;
          };
          Y.prototype.showItem = function (m, W, F, E, v, I) {
            if (-0x1 !== E) {
              var w = N.GENERAL_AUDIO.uiInfo.key;
              y.stopAudioIfPlaying(w);
              y.playAudioIfNotPlaying(w);
              var j = J.spineConfigHandler.getNormalSymbolSpine(E);
              var Z = E === A.SLOT_INDEX.WILD ? "idle" : "win_idle";
              this.spine.skeletonData = j;
              this.spine.setAnimation(0x0, Z, true);
              this.Es(I);
              this.setPayoutValue(E, W);
              this.node.active = true;
              this.node.setPosition(v);
              this.node.runAction(cc.sequence(cc.fadeTo(0.2, 0xff), cc.callFunc(function () {
                if (m) {
                  m();
                }
              })));
            } else if (m) {
              m();
            }
          };
          Y.prototype.Es = function (m) {
            this.ks();
            this.background.node.scaleX = m ? 0x1 : -0x1;
            this.node.anchorX = m ? 0.265 : 0.735;
            if (q.IS_RTL) {
              this.numberHolder.x = m ? 0x118 : -0xf0;
            } else {
              this.numberHolder.x = m ? 0xf0 : -0x118;
            }
          };
          Y.prototype.ks = function () {
            this.numberHolderLayout.horizontalDirection = q.HORIZONTAL_DIRECTION;
          };
          Y.prototype.setPayoutValue = function (m, W) {
            var F = this;
            var E = W[m];
            var v = Object.keys(E);
            v.reverse();
            this.payoutNumber.forEach(function (I) {
              var w = I.getComponent("NumberDisplayController");
              w.clear();
              w.displayNumber(v[0x0]);
              var j = F.payoutValue[0x0].getComponent("NumberDisplayController");
              j.clear();
              j.displayNumber(E[v[0x0]]);
            });
          };
          __decorate([D(sp.Skeleton)], Y.prototype, "spine", undefined);
          __decorate([D(cc.Sprite)], Y.prototype, "background", undefined);
          __decorate([D([cc.Node])], Y.prototype, "payoutNumber", undefined);
          __decorate([D([cc.Node])], Y.prototype, "payoutValue", undefined);
          __decorate([D(cc.Node)], Y.prototype, "numberHolder", undefined);
          __decorate([D(cc.Layout)], Y.prototype, "numberHolderLayout", undefined);
          return __decorate([k], Y);
        }(S["default"]);
        C["default"] = x;
        cc._RF.pop();
      }
    }, Bp],
    'GPrizeState': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "78701ULLg5Pe5ROZ+aIrTPo", "GPrizeState")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("PrizeState");
        var q = B("Utils");
        var N = B("GSlotTransactionModel");
        var f = B("TransactionStateMachineHandler");
        var J = function (A) {
          function y(b, u, k, D) {
            var r = A.call(this, b, u, k, D) || this;
            r.uiHelper = undefined;
            r.uiHelper = u.uiHelper;
            r.uiHelper.setWinThreshold(r.getWinThresholds());
            return r;
          }
          __extends(y, A);
          y.prototype.setAvailableActions = function () {
            this.uiHelper.setAvailablePrizeAction();
          };
          y.prototype.renderPrize = function () {
            q.spawnCallback(this.renderLines.bind(this), q.sequenceCallback(this.Us.bind(this), this.js.bind(this), this.playPrize.bind(this)))(this.exitState.bind(this));
          };
          y.prototype.Us = function (b) {
            this.uiHelper.renderFeatureBeforePrize(b);
          };
          y.prototype.playAllLines = function (b) {
            this.uiHelper.playAllLines(b);
          };
          y.prototype.runSmallPrizeState = function (b, u) {
            this.uiHelper.playSmallWin(b, u);
          };
          y.prototype.runMediumPrizeState = function (b, u) {
            this.uiHelper.playMediumWin(b, u);
          };
          y.prototype.runBigPrizeState = function (b, u) {
            var k = this.getWinThresholds();
            this.uiHelper.playBigWin(b, k, u);
          };
          y.prototype.getWinThresholds = function () {
            var b = this.dataSource.transactionModel;
            var u = b.betLevelValue;
            var k = b.betSizeValue;
            var D = this.dataSource.systemModel.maxLineNumber;
            return this.dataSource.systemModel.winThresholds.getAllThresholds(k, u, D);
          };
          y.prototype.preExitStateCleanup = function () {
            this.uiHelper.clearLargeSymbol();
          };
          y.prototype.js = function (b) {
            var u = this.dataSource.transactionModel.stateTransitionTo;
            var k = this.dataSource;
            var D = k.isGameReplaying;
            var x = k.nextGameReplayInfo;
            var G = u === N.SpinType.NORMAL ? "setup" : "idle";
            G = D && x ? "idle" : G;
            q.sequenceCallback(f.transitionCompleteCallback("prize"), f.goToStateCallback(G, true))(b);
          };
          return y;
        }(S["default"]);
        C["default"] = J;
        cc._RF.pop();
      }
    }, BO],
    'GRefreshWorldHandler': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "a8cd9CQqD5IBJrUbbqohyhh", "GRefreshWorldHandler")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.GRefreshWorldHandler = undefined;
        var S = B("GDataSource");
        var q = B("GApiClient");
        var N = B("RefreshWorldHandler");
        var f = B("Utils");
        var J = B("AutoSpinHandler");
        var A = B("GSlotTransactionModel");
        var y = B("BGMHandler");
        var b = B("AudioManager");
        var k = function (D) {
          function x(G) {
            var Y = D.call(this, S.gDataSource, q.gApiClient) || this;
            Y.setupUICallback = undefined;
            Y.ps = undefined;
            Y.Ds = [b.GeneralAudioPool.bgm_bigwin_main, b.GeneralAudioPool.bgm_bigwin_end];
            Y.Ws = function (m) {
              var W = S.gDataSource.transactionModel;
              var F = W.reels;
              var E = W.wildCount;
              var v = Y.ps;
              var I = v.slotController;
              var w = v.tigerController;
              var j = v.backgroundController2;
              var Z = v.symbolPopoutController;
              var X = [];
              F.forEach(function (V, H) {
                if (-0x1 === V) {
                  X.push(H);
                }
              });
              w.resetTiger(E);
              j.setupToNormalState();
              I.setReelData(F);
              I.reloadData(F);
              Z.setReelData(F);
              Z.setupButtonEvent(X);
              if (Y.setupUICallback) {
                f.deferCallback(true)(Y.setupUICallback.bind(Y, m));
              } else {
                m();
              }
            };
            Y.ps = G.generalControllers;
            return Y;
          }
          __extends(x, D);
          x.prototype.cleanup = function () {
            var G = this.ps;
            var Y = G.paySelectEffectController;
            var m = G.symbolPopoutController;
            var W = G.slotTintController;
            var F = G.infoboardController;
            var E = G.stickyController;
            m.hidePopOutItem();
            Y.stopPaySelect();
            W.fadeOut(0x0);
            F.resetInfoboard(false);
            F.resumeInfoboard();
            F.instantHideMediumWin();
            E.clearSticky();
          };
          x.prototype.cleanupReplayWorld = function (G) {
            this.cleanup();
            this.xs();
            if (G) {
              G();
            }
          };
          x.prototype.enableSpinButton = function () {
            this.ps.spinButtonController.idle();
          };
          x.prototype.disableSpinButton = function () {
            var G = this.ps.spinButtonController;
            J.exitAutoSpin(G);
            G.idle();
          };
          x.prototype.hideLoadingPage = function (G) {
            if (G) {
              G();
            }
          };
          x.prototype.showLoadingPage = function (G) {
            if (G) {
              G();
            }
          };
          x.prototype.setupNewWorld = function (G) {
            f.sequenceCallback(this.Ws.bind(this), this.Fs.bind(this))(function () {
              if (G) {
                G();
              }
            });
          };
          x.prototype.setupReplayWorld = function (G) {
            f.sequenceCallback(this.Ws.bind(this), this.Vs.bind(this))(function () {
              if (G) {
                G();
              }
            });
          };
          x.prototype.Fs = function (G) {
            var Y = S.gDataSource.transactionModel;
            var m = Y.winLines;
            var W = Y.winValues;
            Y.w;
            var F = this.ps;
            var E = F.slotTintController;
            var v = F.paySelectEffectController;
            var I = F.infoboardController;
            f.sequenceCallback(function (w) {
              if (m) {
                E.fadeIn(0.2);
                v.playAlternateLines(m, W);
              }
              if (w) {
                w();
              }
            }, function (w) {
              var j = S.gDataSource.systemModel;
              var Z = j.maxLineNumber;
              var X = j.winThresholds;
              var V = S.gDataSource.transactionModel;
              var H = V.betSizeValue;
              var z = V.betLevelValue;
              var d = S.gDataSource.transactionModel.accumulatedWinAmount;
              var P = X.getAllThresholds(H, z, Z);
              if (d > 0x0) {
                if (d >= P.mediumWinThreshold && d < P.bigWinThreshold) {
                  I.instantPlayMediumWin(d);
                } else {
                  I.playWin(d);
                }
              } else {
                I.resetInfoboard(false);
                I.resumeInfoboard();
              }
              if (w) {
                w();
              }
            })(G);
          };
          x.prototype.Vs = function (G) {
            var Y = S.gDataSource.transactionModel.stateTransitionTo;
            if (!(Y !== A.SpinType.NORMAL && Y !== A.SpinType.RESPIN)) {
              y.instantPlayNormalBGM();
            }
            if (G) {
              G();
            }
          };
          x.prototype.xs = function () {
            y.muteAllBGM();
            this.Ds.forEach(function (G) {
              b.stopSfx(G);
            });
          };
          x.prototype.refreshWorldByGameReplay = function (G) {
            f.sequenceCallback(this.zs(), this.Js(), this.qs(), this.Ks(), this.cleanupReplayWorld.bind(this), this.Qs(), this.setupReplayWorld.bind(this), this.Ys())(function () {
              if (G) {
                G();
              }
            });
          };
          return x;
        }(N["default"]);
        C.GRefreshWorldHandler = k;
        cc._RF.pop();
      }
    }, BL],
    'GRespinDecorator': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "aab44w65hdH4JxmZJ9YTyw9", "GRespinDecorator")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("NormalSpinDecorator");
        var S = M("GeneralAudioConstant");
        var q = M("AudioManager");
        var N = function (f) {
          function J(A, y, b) {
            var u = f.call(this, y, b) || this;
            u.ms = undefined;
            u.Xs = undefined;
            u.ms = b.uiHelper;
            u.Xs = A;
            return u;
          }
          __extends(J, f);
          J.prototype.startSlotController = function () {
            this.generalControllers.slotController.spin(false, true);
            var A = S.GENERAL_AUDIO.featureSpin.key;
            q.stopAudioIfPlaying(A);
            q.playAudioIfNotPlaying(A);
          };
          return J;
        }(K["default"]);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, BU],
    'GRespinGameState': [function (Q, C, K) {
      'use strict';

      if (!cc._RF.push(C, "aabe8xM4qJKrqfMY6Fr3srJ", "GRespinGameState")) {
        var S = {
          value: true
        };
        Object.defineProperty(K, "__esModule", S);
        var q = {
          NONE: 0x0,
          IDLE: 0x1,
          SPIN: 0x2,
          RESULT: 0x3,
          CHECK: 0x4
        };
        var N = Q("Utils");
        var J = Q("NormalPrizeDecorator");
        var A = Q("NormalResultDecorator");
        var y = Q("GSlotTransactionModel");
        var b = Q("GRespinResultState");
        var k = Q("GPrizeState");
        var D = Q("GRespinState");
        var x = Q("RespinUIHelper");
        var G = Q("GRespinDecorator");
        var Y = Q("ReplayModeHandler");
        var m = Q("TransactionStateMachineHandler");
        var W = cc.Enum(q);
        var F = function () {
          function E(I, w, j) {
            this.name = "Respin Game State";
            this.ci = undefined;
            this.ps = undefined;
            this.bs = undefined;
            this.Ss = undefined;
            this.ms = undefined;
            this.Xs = true;
            this.Zs = true;
            this.ci = I;
            this.ps = w;
            this.bs = j;
            this.ms = new x["default"](I, w);
          }
          E.prototype.run = function (I) {
            this.Xs = I;
            this.Zs = true;
            this.Ss = W.IDLE;
            this.gs();
          };
          E.prototype.destroy = function () {
            this.ci = undefined;
            this.ps = undefined;
            this.bs = undefined;
            this.Ss = undefined;
          };
          E.prototype.gs = function () {
            var I = this;
            switch (this.Ss) {
              case W.IDLE:
                var w = {
                  noBet: true
                };
                this.Ss = W.SPIN;
                m.goToStateCallback("action", true, w)(function () {
                  if (!Y.fmReplayModeHandler.replayCompleted()) {
                    m.transitionCompleteCallback("action")(I.ys.bind(I));
                  }
                });
                break;
              case W.SPIN:
                this.Ss = W.RESULT;
                this.Ms();
                break;
              case W.RESULT:
                this.Ss = W.CHECK;
                this.As();
                break;
              case W.CHECK:
                this.Xs = false;
                var j = undefined;
                if (this.ci.transactionModel.stateTransitionTo === y.SpinType.NORMAL) {
                  j = this.Is.bind(this);
                } else {
                  this.Ss = W.IDLE;
                  this.Zs = false;
                  j = this.gs.bind(this);
                }
                this.ws(j);
            }
          };
          E.prototype.ys = function () {
            var I = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var j = new G["default"](this.Xs, this.ci, I);
            var Z = new D["default"](this.ci, I, this.gs.bind(this), j);
            var X = function () {
              Z.run();
            };
            if (this.Xs) {
              N.delayCallback(0x1)(X);
            } else if (this.$s()) {
              N.delayCallback(0.3)(X);
            } else {
              X();
            }
          };
          E.prototype.Ms = function () {
            var I = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var j = new A["default"](this.ci, I);
            new b["default"](this.ci, I, this.gs.bind(this), j).run();
          };
          E.prototype.As = function () {
            var I = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var j = new J["default"](this.ci, I);
            new k["default"](this.ci, I, this.gs.bind(this), j).run();
          };
          E.prototype.$s = function () {
            return this.ps.slotController.getIsFastStopped();
          };
          E.prototype.ws = function (I) {
            var w = this.ci.transactionModel.stateTransitionTo === y.SpinType.NORMAL ? "setup" : "idle";
            m.transitionCompleteCallback(w)(I);
          };
          E.prototype.Is = function () {
            var I = this.bs;
            this.bs = undefined;
            this.destroy();
            this.ms.exitRespinTransition(I);
          };
          return E;
        }();
        K["default"] = F;
        cc._RF.pop();
      }
    }, BT],
    'GRespinResultState': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "c495aZAvBNBUrxqFP+J3/Gh", "GRespinResultState")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("ResultState");
        var S = M("RespinReelStatusHandler");
        var q = M("TransactionStateMachineHandler");
        var N = function (f) {
          function J(A, y, b, u) {
            var k = f.call(this, A, y, b, u) || this;
            k.uiHelper = undefined;
            k.uiHelper = y.uiHelper;
            return k;
          }
          __extends(J, f);
          J.prototype.setAvailableActions = function () {
            S.respinReelStatusHandler.updateRespinReelStatus(this.dataSource);
          };
          J.prototype.setSlotData = function () {
            var A = this.generalControllers;
            var y = A.slotController;
            var b = A.symbolPopoutController;
            var u = A.stickyController;
            var k = this.dataSource.transactionModel.reels;
            var D = u.stickyMap;
            var r = k.slice();
            r.forEach(function (x, G) {
              if (-0x1 !== x && undefined !== D[G]) {
                r[G] = -0x1;
              }
            });
            y.setReelData(r);
            b.setReelData(k);
          };
          J.prototype.renderFeature = function (A) {
            this.uiHelper.renderFeatureAfterResult(function () {
              if (A) {
                A();
              }
            });
          };
          J.prototype.resultDidStartRender = function (A) {
            q.goToStateCallback("prize", true)(A);
          };
          return J;
        }(K["default"]);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, Bg],
    'GRespinState': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "013b6kkQudB/q1Mi31uBGqQ", "GRespinState")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SpinState");
        var q = B("RequestHandler");
        var N = B("Utils");
        var f = B("GApiClient");
        var J = B("AutoSpinHandler");
        var A = B("TransactionStateMachineHandler");
        var y = function (b) {
          function u(k, D, x, G) {
            var Y = b.call(this, k, D, x, G) || this;
            Y.uiHelper = undefined;
            Y.ms = D.uiHelper;
            return Y;
          }
          __extends(u, b);
          u.prototype.stateWillStartSpin = function () {
            this.ms.preSpinningCleanup();
            this.ms.playSlotSpinEffect();
          };
          u.prototype.callApi = function (k) {
            N.sequenceCallback(A.goToStateCallback("result", true), this.te.bind(this))(k);
          };
          u.prototype.te = function (k) {
            var D = this;
            q.doTransactionAPIRequest({
              'name': this.name,
              'apiRequest': f.gApiClient.spin.bind(f.gApiClient)
            }, this.dataSource, function (x, G) {
              if (G && G.dt) {
                A.transitionCompleteCallback("result")(k);
                if (x && J.shouldAutoSpin()) {
                  J.exitAutoSpin(D.generalControllers.spinButtonController);
                }
              }
            });
          };
          u.prototype.additionalDestroyCleanups = function () {
            this.ms = undefined;
          };
          return u;
        }(S["default"]);
        C["default"] = y;
        cc._RF.pop();
      }
    }, R0],
    'GResultDecorator': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "4f61bnbGm9MGatqeAdCY87z", "GResultDecorator")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = function (S) {
          function q(N, f) {
            return S.call(this, N, f) || this;
          }
          __extends(q, S);
          q.prototype.setKeyboardActionsDuringRespinTransition = function () {
            this.setAvailableActions();
            this.generalControllers.spinButtonController.setOnClickCallback(undefined);
          };
          return q;
        }(M("NormalResultDecorator")["default"]);
        Q["default"] = K;
        cc._RF.pop();
      }
    }, R1],
    'GSlotHelper': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "dfa523kEqBMJLPuPnDqOsIb", "GSlotHelper")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("SlotHelper");
        var S = M("SlotProperties");
        var q = cc._decorator.ccclass;
        var N = function (f) {
          function J() {
            return null !== f && f.apply(this, arguments) || this;
          }
          __extends(J, f);
          J.prototype.init = function (A) {
            f.prototype.init.call(this, A);
            this.ie.forEach(function (y, b) {
              y.scrollerIndex = b;
            });
          };
          J.prototype.updateRespinSlotHelperConfig = function () {
            this.ie.forEach(function (A) {
              A.isRespin = true;
            });
          };
          J.prototype.updateNormalSpinSlotHelperConfig = function () {
            this.ie.forEach(function (A) {
              A.isRespin = false;
            });
          };
          J.prototype.setStopScrollerEndSpeed = function (A, y) {
            this.ie[A].updateEndSpeed(y);
          };
          J.prototype.setOnScrollerReachesBouncePointCallback = function (A) {
            this.ie.forEach(function (y) {
              y.setOnScrollerReachesBouncePointCallback(A);
            });
          };
          J.prototype.setOnScrollerReachesLowestPointCallback = function (A) {
            var y = this;
            var b = function (u, k) {
              var D = y.se[u];
              var r = [];
              D.getFunctionalItems().forEach(function (x) {
                if (x.symbolIndex === S.SLOT_INDEX.FU) {
                  r.push(x);
                }
              });
              if (A && r.length > 0x0) {
                A(u, k, r);
              }
            };
            this.ie.forEach(function (u) {
              u.setOnScrollerReachesLowestPointCallback(b);
            });
          };
          J.prototype.setOnScrollerReachesSlowDownPointCallback = function (A) {
            this.ie.forEach(function (y) {
              y.setOnScrollerReachesSlowDownPointCallback(A);
            });
          };
          return __decorate([q], J);
        }(K["default"]);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, R2],
    'GSlotItemPool': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "7fcd3oX3IhM0Lp/lFSopY75", "GSlotItemPool")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("NodePoolHandler");
        var S = function (q) {
          function N() {
            return null !== q && q.apply(this, arguments) || this;
          }
          __extends(N, q);
          N.prototype.init = function (f) {
            this.slotItemConstructor = f.slotItem;
            this.normalSpriteFrames = f.normalSpriteFrame;
            this.blurSpriteFrames = f.blurSpriteFrame ? f.blurSpriteFrame : f.normalSpriteFrame;
            this.normalScale = undefined === f.normalScale ? 0x1 : f.normalScale;
            this.blurScale = undefined === f.blurScale ? 0x1 : f.blurScale;
            this.getSymbolZOrder = f.getSymbolZOrder ? f.getSymbolZOrder : 0x0;
          };
          N.prototype.getSlotItem = function (f, J, A) {
            if (undefined === J) {
              J = false;
            }
            if (undefined === A) {
              A = undefined;
            }
            var y = K.nodePoolHandler.dequeueReusableItem("slotItem").getComponent("GSlotItem");
            if (f < 0x0) {
              y.symbolIndex = f;
              return y;
            }
            y.init({
              'sprite': y.symbolImage,
              'normalScale': this.normalScale,
              'blurScale': this.blurScale,
              'getSymbolZOrder': this.getSymbolZOrder
            });
            y.setup(f, this.normalSpriteFrames[f], this.blurSpriteFrames[f], J, A);
            return y;
          };
          N.prototype.releaseSlotItem = function (f) {
            if (f.symbolIndex < 0x0) {
              f.node.destroy();
            } else {
              K.nodePoolHandler.enqueueReusableItem(f.node, "slotItem");
            }
          };
          return N;
        }(M("SlotItemPool")["default"]);
        Q["default"] = S;
        cc._RF.pop();
      }
    }, R3],
    'GSlotItem': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "a5b01zWV65J67CjEAIlv2aP", "GSlotItem")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SlotItem");
        var q = B("GeneralAudioConstant");
        var N = B("NodePoolHandler");
        var J = B("SpineConfigHandler");
        var A = B("AudioManager");
        var y = B("SlotProperties");
        var b = cc._decorator;
        var k = b.ccclass;
        var D = b.property;
        var x = function (G) {
          function Y() {
            var m = null !== G && G.apply(this, arguments) || this;
            m.attachmentHolder = undefined;
            m.symbolImage = undefined;
            m.mask = undefined;
            m.wildShine = undefined;
            m.ee = [];
            return m;
          }
          __extends(Y, G);
          Y.prototype.setActive = function (m) {
            var W = m ? 0xff : 0x0;
            if (this.symbolImage) {
              this.symbolImage.node.opacity = W;
            }
          };
          Y.prototype.unuse = function () {
            this.removeExternalContents();
            this.symbolImage.spriteFrame = undefined;
            this.mask.active = false;
            this.node.stopAllActions();
            this.node.scale = 0x1;
            G.prototype.unuse.call(this);
          };
          Y.prototype.setup = function (m, W, F, E) {
            if (undefined === E) {
              E = false;
            }
            if (m === y.SLOT_INDEX.WILD) {
              var v = N.nodePoolHandler.dequeueReusableItem("wildItem");
              var I = N.nodePoolHandler.getPool("wildItem");
              var w = {
                item: v,
                pool: I
              };
              this.addExternalContent(w, true);
              v.getComponent("WildItemController").init(J.spineConfigHandler.getNormalSymbolSpine(0x0));
              v.getComponent("WildItemController").playIdle();
            }
            G.prototype.setup.call(this, m, W, F, E);
          };
          Y.prototype.addExternalContent = function (m, W) {
            this.ee.push(m);
            var F = m.item;
            if (W) {
              F.parent = this.attachmentHolder;
            } else {
              this.attachmentHolder.addChild(F);
            }
          };
          Y.prototype.removeExternalContents = function () {
            this.ee.forEach(function (m) {
              if (m.pool) {
                m.pool.put(m.item);
              } else {
                m.item.destroy();
              }
            });
            this.ee = [];
          };
          Y.prototype.setZIndex = function (m) {
            if (undefined === m) {
              m = 0x0;
            }
            this.node.zIndex = m + 0x64 * this.zOrder;
          };
          Object.defineProperty(Y.prototype, "worldPosition", {
            'get': function () {
              var m = cc.v2();
              return this.node.convertToWorldSpaceAR(m);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(Y.prototype, "spriteImage", {
            'get': function () {
              return this.sprite.spriteFrame;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(Y.prototype, "symbolZOrder", {
            'get': function () {
              return this.zOrder;
            },
            'enumerable': false,
            'configurable': true
          });
          Y.prototype.setBlur = function (m) {
            var W = this.sprite;
            if (W) {
              W.spriteFrame = m ? this.blurSpriteFrame : this.normalSpriteFrame;
              W.node.scaleX = m ? this.blurScale.x : this.normalScale.x;
              W.node.scaleY = m ? this.blurScale.y : this.normalScale.y;
            }
          };
          Y.prototype.disableSprite = function () {
            var m = this.sprite;
            this.normalSpriteFrame = undefined;
            this.blurSpriteFrame = undefined;
            if (m) {
              m.spriteFrame = undefined;
            }
          };
          Y.prototype.showWildShine = function (m, W) {
            var F = this;
            var E = q.GENERAL_AUDIO.symWildHighlight.key;
            A.stopAudioIfPlaying(E);
            A.playAudioIfNotPlaying(E);
            this.node.stopAllActions();
            this.mask.active = true;
            this.node.runAction(cc.sequence(cc.delayTime(m), cc.callFunc(function () {
              F.wildShine.play();
            }), cc.delayTime(0.2), cc.callFunc(function () {
              if (W) {
                W();
              }
            })));
          };
          __decorate([D(cc.Node)], Y.prototype, "attachmentHolder", undefined);
          __decorate([D(cc.Sprite)], Y.prototype, "symbolImage", undefined);
          __decorate([D(cc.Node)], Y.prototype, "mask", undefined);
          __decorate([D(cc.Animation)], Y.prototype, "wildShine", undefined);
          return __decorate([k], Y);
        }(S["default"]);
        C["default"] = x;
        cc._RF.pop();
      }
    }, R4],
    'GSlotTransactionModel': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "2c611dJeBpLOqKLE3nHj7yi", "GSlotTransactionModel")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.SpinType = undefined;
        var K = M("SlotTransactionModel");
        (function (q) {
          q[q.NORMAL = 0x1] = "NORMAL";
          q[q.RESPIN = 0x4] = "RESPIN";
        })(Q.SpinType || (Q.SpinType = {}));
        var S = function (q) {
          function N() {
            var f = null !== q && q.apply(this, arguments) || this;
            f.Ts = undefined;
            f.ne = undefined;
            f.oe = undefined;
            f.ce = undefined;
            f.he = undefined;
            return f;
          }
          __extends(N, q);
          N.prototype.updateSlotGameTransactionInfo = function (f) {
            var J = f.irs;
            var A = f.fws;
            var y = f.ist;
            var c = f.wc;
            var b = f.itw;
            this.Ts = J;
            this.ne = A;
            this.oe = y;
            this.ce = c;
            this.he = b;
          };
          Object.defineProperty(N.prototype, "isRespin", {
            'get': function () {
              return this.Ts;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(N.prototype, "featureWinSymbol", {
            'get': function () {
              return this.ne;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(N.prototype, "isShowTease", {
            'get': function () {
              return this.oe;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(N.prototype, "wildCount", {
            'get': function () {
              return this.ce;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(N.prototype, "isTriggerWild", {
            'get': function () {
              return this.he;
            },
            'enumerable': false,
            'configurable': true
          });
          return N;
        }(K["default"]);
        Q["default"] = S;
        cc._RF.pop();
      }
    }, R5],
    'GSpinButtonController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "d63e8n/nwlEIKjzPvWI/5Nn", "GSpinButtonController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SpinButtonController");
        var q = B("GConstants");
        var N = B("AudioManager");
        var J = B("SpinButtonController.spec");
        var A = B("AutomationDecorator");
        var y = B("GeneralAudioConstant");
        var b = cc._decorator;
        var k = b.ccclass;
        var D = b.property;
        var x = function (G) {
          function Y() {
            var F = null !== G && G.apply(this, arguments) || this;
            F.spinButton = undefined;
            F.spinArrow = undefined;
            F.spinArrowBg = undefined;
            F.autoSpinHolder = undefined;
            F.autoSpinNumberDisplayNode = undefined;
            F.arrowSprite = undefined;
            F.arrowSF = undefined;
            F.arrowBlurSF = undefined;
            F.arrowGreySF = undefined;
            F.arrowGreyBlurSF = undefined;
            F.bounceNode = undefined;
            F.sparkleAnimation = [];
            F.circleGlowNode = undefined;
            F.hoverScale = undefined;
            F.hoverBase = undefined;
            F.autoSpinHoverGlowNode = undefined;
            F.ears = [];
            F.shineAnim = undefined;
            F.backGlow = undefined;
            F.footerShine = undefined;
            F.re = undefined;
            F.ae = undefined;
            return F;
          }
          var m = {
            func: J.initSpinButtonControllerNodes
          };
          var W = {
            func: J.setButtonInteractivity
          };
          __extends(Y, G);
          Y.prototype.destroy = function () {
            this.onStopAllAnimations();
            this.node.destroy();
            return G.prototype.destroy.call(this);
          };
          Y.prototype.onStopAllAnimations = function () {
            this.node.stopAllActions();
            this.spinArrow.stopAllActions();
            this.onHideMouseOverEffect();
          };
          Y.prototype.onShowIdleAnimation = function () {
            this.ue();
            this.le(false);
            this.spinArrow.stopAllActions();
            var F = cc.repeatForever(cc.rotateBy(q.SPIN_BUTTON_TIMING.SECONDS_PER_ROUND_IDLE, 0x168));
            this.spinArrow.runAction(F);
          };
          Y.prototype.onShowSpinAnimation = function () {
            var F = this;
            if (this.mode === S.SpinButtonMode.ENABLED) {
              var E = y.GENERAL_AUDIO.spinBtn.key;
              N.stopAudioIfPlaying(E);
              N.playAudioIfNotPlaying(E);
              this.footerShine.stop();
              this.footerShine.setCurrentTime(0x0);
              this.footerShine.play();
              this.shineAnim.play();
              this.backGlow.play();
              this.sparkleAnimation.forEach(function (I) {
                I.node.opacity = 0xff;
                I.play();
                I.on("finished", function () {
                  I.node.opacity = 0x0;
                }, F);
              });
              this.circleGlowNode.runAction(cc.sequence(cc.fadeIn(0.1).easing(cc.easeCubicActionOut()), cc.fadeOut(0.2)));
              this.bounceNode.getComponent(cc.Animation).play();
              this.onHideMouseOverEffect();
              this.fe();
              this.le(false);
              this.spinArrow.stopAllActions();
              var v = cc.repeatForever(cc.rotateBy(q.SPIN_BUTTON_TIMING.SECONDS_PER_ROUND_SPINNING, 0x168));
              this.spinArrow.runAction(v);
            }
          };
          Y.prototype.replaceSpinBlurredSpriteFrame = function () {
            this.fe();
          };
          Y.prototype.onShowStopSpinningAnimation = function () {
            if (this.mode === S.SpinButtonMode.DISABLED) {
              this.de();
            } else {
              this.ue();
            }
            this.le(false);
            this.spinArrow.stopAllActions();
          };
          Y.prototype.onEnableButton = function () {
            this.ue();
            this.ve(true);
          };
          Y.prototype.onDisableButton = function () {
            if (this.animationState === S.SpinButtonAnimationState.SPINNING) {
              this._e();
            } else {
              this.de();
            }
            this.ve(false);
          };
          Y.prototype.showAutoSpinLook = function (F) {
            this.le(true);
            this.re.clear();
            this.re.displayNumber(F);
            G.prototype.showAutoSpinLook.call(this, F);
          };
          Y.prototype.onUpdateAutoSpinCount = function (F) {
            if (this.mode === S.SpinButtonMode.AUTOSPIN) {
              this.re.clear();
              this.re.displayNumber(F);
            }
          };
          Y.prototype.onExitAutoSpinMode = function () {};
          Y.prototype.onResumeIdle = function () {
            if (this.mode !== S.SpinButtonMode.DISABLED) {
              this.onShowIdleAnimation();
            }
          };
          Y.prototype.onResumeSpin = function () {
            if (this.mode !== S.SpinButtonMode.DISABLED) {
              this.onHideMouseOverEffect();
              this.onShowSpinAnimation();
            }
          };
          Y.prototype.onResumeStop = function () {
            this.onHideMouseOverEffect();
            this.onShowStopSpinningAnimation();
          };
          Y.prototype.onPlayMouseOverEffect = function () {
            if (this.animationState === S.SpinButtonAnimationState.IDLE && this.mode !== S.SpinButtonMode.AUTOSPIN) {
              this.hoverBase.opacity = 0x0;
              this.hoverScale.color = q.BLACK;
              this.hoverBase.parent.getComponent(cc.Animation).play();
            } else if (this.mode === S.SpinButtonMode.AUTOSPIN) {
              this.autoSpinHoverGlowNode.play();
            }
          };
          Y.prototype.onHideMouseOverEffect = function () {
            this.hoverBase.opacity = 0x0;
            this.hoverScale.color = q.BLACK;
            this.autoSpinHoverGlowNode.node.opacity = 0x0;
            this.autoSpinHoverGlowNode.stop();
            this.hoverBase.parent.getComponent(cc.Animation).stop();
            this.hoverBase.parent.getComponent(cc.Animation).setCurrentTime(0x0);
          };
          Y.prototype.onInit = function () {
            this.re = this.autoSpinNumberDisplayNode.getComponent("NumberDisplayController");
            this.ae = this.bounceNode.scale;
            this.initSpinButtonControllerNodes({
              'spinButtonNode': this.spinButton.node
            });
          };
          Y.prototype.initSpinButtonControllerNodes = function () {};
          Y.prototype.ue = function () {
            this.arrowSprite.spriteFrame = this.arrowSF;
          };
          Y.prototype.fe = function () {
            this.arrowSprite.spriteFrame = this.arrowBlurSF;
          };
          Y.prototype.de = function () {
            this.arrowSprite.spriteFrame = this.arrowGreySF;
          };
          Y.prototype._e = function () {
            this.arrowSprite.spriteFrame = this.arrowGreyBlurSF;
          };
          Y.prototype.le = function (F) {
            this.spinArrow.active = !F;
            this.spinArrowBg.active = !F;
            this.autoSpinHolder.active = F;
            this.ears.forEach(function (E) {
              E.active = !F;
            });
          };
          Y.prototype.ve = function (F) {
            this.spinButton.interactable = F;
          };
          __decorate([D(cc.Button)], Y.prototype, "spinButton", undefined);
          __decorate([D(cc.Node)], Y.prototype, "spinArrow", undefined);
          __decorate([D(cc.Node)], Y.prototype, "spinArrowBg", undefined);
          __decorate([D(cc.Node)], Y.prototype, "autoSpinHolder", undefined);
          __decorate([D(cc.Node)], Y.prototype, "autoSpinNumberDisplayNode", undefined);
          __decorate([D(cc.Sprite)], Y.prototype, "arrowSprite", undefined);
          __decorate([D(cc.SpriteFrame)], Y.prototype, "arrowSF", undefined);
          __decorate([D(cc.SpriteFrame)], Y.prototype, "arrowBlurSF", undefined);
          __decorate([D(cc.SpriteFrame)], Y.prototype, "arrowGreySF", undefined);
          __decorate([D(cc.SpriteFrame)], Y.prototype, "arrowGreyBlurSF", undefined);
          __decorate([D(cc.Node)], Y.prototype, "bounceNode", undefined);
          __decorate([D([cc.Animation])], Y.prototype, "sparkleAnimation", undefined);
          __decorate([D(cc.Node)], Y.prototype, "circleGlowNode", undefined);
          __decorate([D(cc.Node)], Y.prototype, "hoverScale", undefined);
          __decorate([D(cc.Node)], Y.prototype, "hoverBase", undefined);
          __decorate([D(cc.Animation)], Y.prototype, "autoSpinHoverGlowNode", undefined);
          __decorate([D([cc.Node])], Y.prototype, "ears", undefined);
          __decorate([D(cc.Animation)], Y.prototype, "shineAnim", undefined);
          __decorate([D(cc.Animation)], Y.prototype, "backGlow", undefined);
          __decorate([D(cc.Animation)], Y.prototype, "footerShine", undefined);
          __decorate([A.automationDec(m)], Y.prototype, "initSpinButtonControllerNodes", null);
          __decorate([A.automationDec(W)], Y.prototype, "_setButtonInteractivity", null);
          return __decorate([k], Y);
        }(S["default"]);
        C["default"] = x;
        cc._RF.pop();
      }
    }, R6],
    'GSpinState': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "a1887bwwCZHBLvxcJ2M9gy3", "GSpinState")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SpinState");
        var q = B("RequestHandler");
        var N = B("Utils");
        var f = B("GApiClient");
        var J = B("AutoSpinHandler");
        var A = B("TransactionStateMachineHandler");
        var y = function (b) {
          function u(k, D, x, G) {
            var Y = b.call(this, k, D, x, G) || this;
            Y.uiHelper = undefined;
            Y.uiHelper = D.uiHelper;
            return Y;
          }
          __extends(u, b);
          u.prototype.stateWillStartSpin = function () {
            this.uiHelper.preSpinningCleanup();
            this.uiHelper.playSlotSpinEffect();
          };
          u.prototype.callApi = function (k) {
            N.sequenceCallback(A.goToStateCallback("result", true), this.te.bind(this))(k);
          };
          u.prototype.te = function (k) {
            var D = this;
            q.doTransactionAPIRequest({
              'name': this.name,
              'apiRequest': f.gApiClient.spin.bind(f.gApiClient)
            }, this.dataSource, function (x, G) {
              if (G && G.dt) {
                if (x && J.shouldAutoSpin()) {
                  J.exitAutoSpin(D.generalControllers.spinButtonController);
                }
                A.transitionCompleteCallback("result")(k);
              }
            });
          };
          u.prototype.additionalDestroyCleanups = function () {
            this.uiHelper = undefined;
          };
          return u;
        }(S["default"]);
        C["default"] = y;
        cc._RF.pop();
      }
    }, R7],
    'GameAudioAdapter': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "72ce2m7Nz9BCpH6kGYmhcUG", "GameAudioAdapter")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("AudioManager");
        var q = B("AudioAdapter");
        var N = B("AudioAdapterConstant");
        var f = cc._decorator.ccclass;
        var J = function (A) {
          function y(b, u) {
            var k = A.call(this, b) || this;
            k.me = undefined;
            k.pe = undefined;
            k.pe = u;
            return k;
          }
          __extends(y, A);
          y.prototype.load = function () {
            var b = this;
            var u = function () {
              b.off(N.AUDIO_ADAPTER_EVENT.LOAD_ERROR, k);
              b.me = S.registerAudio(b, b.pe);
            };
            var k = function () {
              b.off(N.AUDIO_ADAPTER_EVENT.LOADED, u);
            };
            this.once(N.AUDIO_ADAPTER_EVENT.LOADED, u);
            this.once(N.AUDIO_ADAPTER_EVENT.LOAD_ERROR, k);
            return A.prototype.load.call(this);
          };
          y.prototype.unload = function () {
            S.unregisterAudio(this, this.me);
            return A.prototype.unload.call(this);
          };
          return __decorate([f], y);
        }(q["default"]);
        C["default"] = J;
        cc._RF.pop();
      }
    }, R8],
    'GameEventHandler': [function (M, B) {
      'use strict';

      if (!cc._RF.push(B, "6da04mFMhpNcpdeGLQM+RKD", "GameEventHandler")) {
        var Q = {
          subscribeGameInfoUpdateEvent: "subscribeUpdateGameInfoEvent",
          subscribeGameLayoutInfoRequestEvent: "subscribeGameLayoutInfoEvent",
          subscribeGameConfigRequestEvent: "subscribeGameConfigRequest",
          subscribeGameConfigUpdateEvent: "subscribeGameConfigUpdateRequest",
          subscribeAudioPlayRateUpdateEvent: "subscribeUpdateAudioPlayRateEvent",
          subscribeInUIIdleStateStatusUpdateEvent: "subscribeUIIdleStateEvent",
          subscribeOperatorCurrencyFormatUpdateEvent: "subscribeOperatorCurrencyFormatUpdate",
          subscribeStoredGamesNameRequestEvent: "subscribeGameNameRequestEvent",
          emitGameStateChangedEvent: "emitGameStateChange",
          emitAutoplayStartedEvent: "emitAutoplayStarted",
          emitAutoplayStoppedEvent: "emitAutoplayStopped",
          emitErrorLogEvent: "emitErrorLog",
          emitGamePlayUIBlockEvent: "emitBlockUIEvent",
          addGamePauseEventCallback: "setGamePauseEventCallback",
          addGameResumeEventCallback: "setGameResumeEventCallback",
          addTransactionInfoChangedEventCallback: "setTransactionInfoChangedCallback",
          removeTransactionInfoChangedEventCallback: "removeTransactionInfoChangedCallback",
          addGamePlayUIBlockEventCallback: "setGamePlayUIBlockEventCallback",
          addInUIIdleStateCallback: "setInUIIdleStateCallback",
          subscribeSessionSocketErrorEvent: "subscribeOperationSocketErrorEvent",
          subscribeSessionSocketConnectedEvent: "subscribeOperationSocketConnectedEvent",
          subscribeSessionSocketConnectionStatusRequestEvent: "subscribeOperationSocketConnectionStatusRequestEvent"
        };
        var C = System.get("bvframework").GameEventHandler;
        var S = __assign({}, C);
        Object.keys(Q).forEach(function (N) {
          S[Q[N]] = S[N];
        });
        for (var q in S) B.exports[q] = S[q];
        B.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GameHeaderHelper': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "295f80O8n1EXbn2oiNk8NLd", "GameHeaderHelper")) {
        var B = System.get("bvframework").GameHeaderHelper;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GameInitializationHandler': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "b3a04bieS1EsYWkuqlKhqB3", "GameInitializationHandler")) {
        var B = System.get("bvframework").GameInitializationHandler;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GameLayout': [function (J, A, y) {
      'use strict';

      var c = {
        value: true
      };
      var b = {
        'x': 0x0,
        'y': -0xeb
      };
      var n = {
        width: 0x438,
        height: 0x12c
      };
      var u = {
        position: b,
        size: n
      };
      var k = {
        'x': 0x0,
        'y': -0x208
      };
      var D = {
        width: 0x438,
        height: 0xf0
      };
      var r = {
        position: k,
        size: D
      };
      var x = {
        'x': 0x0,
        'y': -0x27b
      };
      var e = {
        width: 0x438,
        height: 0x12c
      };
      var G = {
        position: x,
        size: e
      };
      var Y = {
        uiFreeSpace: u,
        uiSettingMenu: r,
        uiBigWinFreeSpace: G
      };
      if (!cc._RF.push(A, "dce93T8CsZHTbOXkpseC7dW", "GameLayout")) {
        Object.defineProperty(y, "__esModule", c);
        y.gameLayout = undefined;
        y.gameLayout = Y;
        cc._RF.pop();
      }
    }, {}],
    'GameMaintenanceHandler': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "6c833L7mQpG+JThxZci79NX", "GameMaintenanceHandler")) {
        var B = System.get("bvframework").GameMaintenanceHandler;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GameMaintenanceModel': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "9919da29LFDdJcSuJgAAHrr", "GameMaintenanceModel")) {
        var B = System.get("bvframework").GameMaintenanceModel;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GamePluginModel': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "c0badZnWvFI0LG/0J35BfII", "GamePluginModel")) {
        var B = System.get("bvframework").GamePluginModel;
        M.exports["default"] = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GamePreference': [function (h, M, B) {
      'use strict';

      if (!cc._RF.push(M, "20addtomYtGCrhEXEIvVhDS", "GamePreference")) {
        B.__esModule = true;
        B.globalPreference = B.gamePreference = undefined;
        var Q = h("Preference");
        var C = h("RtConfig");
        0x0;
        var K = Q.getPreference(C.cs_Config.bundleId);
        B.gamePreference = K;
        0x0;
        var S = Q.getPreference(C.cs_Config.globalDomain);
        B.globalPreference = S;
        cc._RF.pop();
      }
    }, R9],
    'GameTitle': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "12eedGFUCVPu7lTHrspCNtZ", "GameTitle")) {
        var B = System.get("bvframework").GameTitle;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GameTweaksConfig': [function (h, M, B) {
      'use strict';

      var Q;
      if (!cc._RF.push(M, "82e00IU/NVM3bUxTCWfQzx3", "GameTweaksConfig")) {
        B.__esModule = true;
        B["default"] = undefined;
        h("CreatorTweaks");
        if (Q = h("TweaksConfig")) {
          Q.__esModule;
        }
        h("TweaksData");
        B["default"] = false;
        M.exports = B["default"];
        cc._RF.pop();
      }
    }, Rh],
    'GameTweaksData': [function (h, M, B) {
      'use strict';

      if (!cc._RF.push(M, "21ddbUCEaFM06TmBlOwfWKe", "GameTweaksData")) {
        B.__esModule = true;
        B.testSymbols = undefined;
        B.testSymbols = undefined;
        cc._RF.pop();
      }
    }, {}],
    'GameUtils': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "576e78TekpIpIcjjcHFmVOq", "GameUtils")) {
        var B = System.get("bvframework").GameUtils;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GeneralAssetConfig': [function (Z, X, V) {
      'use strict';

      if (!cc._RF.push(X, "39993EWULpL9o77fgroS3sO", "GeneralAssetConfig")) {
        var H = {
          value: true
        };
        Object.defineProperty(V, "__esModule", H);
        V.generalAssetConfig = undefined;
        var z = {
          name: "angpao_controller",
          url: "load_res/angpao_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var d = {
          name: "background_controller",
          url: "load_res/background_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var P = {
          name: "background_controller_2",
          url: "load_res/background_controller_2",
          type: cc.Prefab,
          isLocalized: false
        };
        var p = {
          name: "big_win_controller",
          url: "load_res/big_win_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var O = {
          name: "big_win_text",
          url: "texture/big_win/bigwin_text",
          type: cc.SpriteAtlas,
          isLocalized: true
        };
        var L = {
          name: "column_tint_controller",
          url: "load_res/column_tint_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var U = {
          name: "click_effect",
          url: "lib/click_effect/prefab/click_effect_layer",
          type: cc.Prefab,
          isLocalized: false
        };
        var T = {
          name: "h_firecracker_atlas_symbols",
          url: "spine/h_firecracker_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var g = {
          name: "h_ingot_atlas_symbols",
          url: "spine/h_ingot_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var h0 = {
          name: "h_pouch_atlas_symbols",
          url: "spine/h_pouch_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var h1 = {
          name: "h_orange_atlas_symbols",
          url: "spine/h_orange_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var h2 = {
          name: "h_ruyi_atlas_symbols",
          url: "spine/h_ruyi_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var h3 = {
          name: "h_angbao_atlas_symbols",
          url: "spine/h_angbao_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var h4 = {
          name: "info_board_controller",
          url: "load_res/info_board_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var h5 = {
          name: "infoboard_text",
          url: "texture/info_board/infoboard_text",
          type: cc.SpriteAtlas,
          isLocalized: true
        };
        var h6 = {
          name: "infoboard_win_text",
          url: "texture/info_board/infoboard_win_text",
          type: cc.SpriteAtlas,
          isLocalized: true
        };
        var h7 = {
          name: "normal_symbol",
          url: "texture/slot/normal_symbol",
          type: cc.SpriteAtlas,
          isLocalized: false
        };
        var h8 = {
          name: "pay_line_number_controller",
          url: "load_res/pay_line_number_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var h9 = {
          name: "pay_line_controller",
          url: "load_res/pay_line_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var hh = {
          name: "pay_out_effect_controller",
          url: "load_res/pay_out_effect_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var hM = {
          name: "pay_select_effect_controller",
          url: "load_res/pay_select_effect_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var hB = {
          name: "s_wild",
          url: "spine/s_wild",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var hR = {
          name: "setting_menu_wallet_panel",
          url: "lib/setting_menu/prefab/info_footer/setting_info_footer_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var hl = {
          name: "slot_controller",
          url: "load_res/slot_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var hQ = {
          name: "slot_tint_controller",
          url: "load_res/slot_tint_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var hC = {
          name: "trail_particle_controller",
          url: "load_res/trail_particle_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var hK = {
          name: "spin_button_controller",
          url: "load_res/spin_button_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var hS = {
          name: "foreground_controller",
          url: "load_res/foreground_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var hq = {
          name: "wild_symbol",
          url: "texture/slot/wild_symbol",
          type: cc.SpriteAtlas,
          isLocalized: true
        };
        var hN = {
          name: "symbol_popout_controller",
          url: "load_res/symbol_payout_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var hf = {
          name: "tiger_controller",
          url: "load_res/tiger_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var ho = {
          name: "sticky_controller",
          url: "load_res/sticky_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var hs = [z, d, P, p, O, L, U, T, g, h0, h1, h2, h3, h4, h5, h6, h7, h8, h9, hh, hM, hB, hR, hl, hQ, hC, hK, hS, hq, hN, hf, ho];
        V.generalAssetConfig = hs;
        cc._RF.pop();
      }
    }, {}],
    'GeneralAudioConstant': [function (z, d, P) {
      'use strict';

      var p = {
        value: true
      };
      var O = {
        from: 0x0,
        'to': 1.156271,
        key: "featureAngpauFly"
      };
      var L = {
        from: 0x2,
        'to': 5.795333,
        key: "featureAngpauReveal"
      };
      var U = {
        from: 0x6,
        'to': 9.010396,
        key: "featureMultiAppear"
      };
      var T = {
        from: 0xa,
        'to': 11.625021,
        key: "featureQuit"
      };
      var g = {
        from: 0xc,
        'to': 13.437521,
        key: "featureSpin"
      };
      var h0 = {
        from: 0xe,
        'to': 17.766708,
        key: "featureStart"
      };
      var h1 = {
        from: 0x12,
        'to': 21.805479,
        key: "featureTease"
      };
      var h2 = {
        from: 0x16,
        'to': 24.093812,
        key: "featureWinLine1"
      };
      var h3 = {
        from: 0x19,
        'to': 27.102688,
        key: "featureWinLine2"
      };
      var h4 = {
        from: 0x1c,
        'to': 30.061479,
        key: "featureWinLine3"
      };
      var h5 = {
        from: 0x1f,
        'to': 33.090667,
        key: "featureWinLine4"
      };
      var h6 = {
        from: 0x22,
        'to': 36.080292,
        key: "featureWinLine5"
      };
      var h7 = {
        from: 0x25,
        'to': 38.537542,
        key: "infobarAfterBigwin"
      };
      var h8 = {
        from: 0x27,
        'to': 40.352646,
        key: "multiAppearWoRespin"
      };
      var h9 = {
        from: 0x29,
        'to': 42.256792,
        key: "multiFly"
      };
      var hh = {
        from: 0x2b,
        'to': 44.875,
        key: "prizeMedwinEnd"
      };
      var hM = {
        from: 0x2d,
        'to': 46.5,
        key: "prizeMedwinMain"
      };
      var hB = {
        from: 0x2f,
        'to': 47.916667,
        key: "prizePayoutIdle"
      };
      var hR = {
        from: 0x30,
        'to': 49.733896,
        key: "prizeSmalwin"
      };
      var hl = {
        from: 0x32,
        'to': 52.531792,
        key: "prizeWinFullscreen"
      };
      var hQ = {
        from: 0x35,
        'to': 53.068229,
        key: "spinActiveLoop"
      };
      var hC = {
        from: 0x36,
        'to': 55.039104,
        key: "spinBtn"
      };
      var hK = {
        from: 0x38,
        'to': 56.125021,
        key: "spinStop"
      };
      var hS = {
        from: 0x39,
        'to': 57.184208,
        key: "spinStopQuick"
      };
      var hq = {
        from: 0x3a,
        'to': 59.041667,
        key: "symWildHighlight"
      };
      var hN = {
        from: 0x3c,
        'to': 0x3d,
        key: "symWildReach"
      };
      var hf = {
        from: 0x3d,
        'to': 62.020854,
        key: "symWildSpawn"
      };
      var ho = {
        from: 0x3f,
        'to': 63.208354,
        key: "uiInfo"
      };
      var hs = {
        from: 0x40,
        'to': 65.892208,
        key: "voxIdle4"
      };
      var hJ = {
        from: 0x42,
        'to': 69.3,
        key: "voxRsWin"
      };
      var hA = {
        from: 0x46,
        'to': 71.702104,
        key: "voxSmallwin1a"
      };
      var hy = {
        from: 0x48,
        'to': 73.623458,
        key: "voxSmallwin1b"
      };
      var hc = {
        from: 0x4a,
        'to': 75.343771,
        key: "voxSmallwin1c"
      };
      var hb = {
        from: 0x4c,
        'to': 77.166667,
        key: "voxSmallwin2a"
      };
      var hn = {
        from: 0x4e,
        'to': 79.831771,
        key: "voxSmallwin2b"
      };
      var hu = {
        from: 0x50,
        'to': 81.083333,
        key: "voxZoExit"
      };
      var hk = {
        featureAngpauFly: O,
        featureAngpauReveal: L,
        featureMultiAppear: U,
        featureQuit: T,
        featureSpin: g,
        featureStart: h0,
        featureTease: h1,
        featureWinLine1: h2,
        featureWinLine2: h3,
        featureWinLine3: h4,
        featureWinLine4: h5,
        featureWinLine5: h6,
        infobarAfterBigwin: h7,
        multiAppearWoRespin: h8,
        multiFly: h9,
        prizeMedwinEnd: hh,
        prizeMedwinMain: hM,
        prizePayoutIdle: hB,
        prizeSmalwin: hR,
        prizeWinFullscreen: hl,
        spinActiveLoop: hQ,
        spinBtn: hC,
        spinStop: hK,
        spinStopQuick: hS,
        symWildHighlight: hq,
        symWildReach: hN,
        symWildSpawn: hf,
        uiInfo: ho,
        voxIdle4: hs,
        voxRsWin: hJ,
        voxSmallwin1a: hA,
        voxSmallwin1b: hy,
        voxSmallwin1c: hc,
        voxSmallwin2a: hb,
        voxSmallwin2b: hn,
        voxZoExit: hu,
        __duration: 82.03
      };
      if (!cc._RF.push(d, "98107tSwVFGrb9HqR7fLSWz", "GeneralAudioConstant")) {
        Object.defineProperty(P, "__esModule", p);
        P.GENERAL_AUDIO = undefined;
        P.GENERAL_AUDIO = hk;
        cc._RF.pop();
      }
    }, {}],
    'GenericSettingButton': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "aeaa7CV0CtEMo2Sab7CGMw1", "GenericSettingButton")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("ButtonTheme");
        var q = B("UIAppearanceHelper");
        var N = B("Utils");
        var f = cc._decorator;
        var J = f.ccclass;
        var A = f.property;
        var y = function (k) {
          function D() {
            var x = null !== k && k.apply(this, arguments) || this;
            x.iconSprite = undefined;
            x.collider = undefined;
            x.buttonTheme = undefined;
            x.be = true;
            x.Se = cc.v2();
            x.ge = cc.v2();
            x.Ce = false;
            x.ye = false;
            x.Me = false;
            x.Ae = false;
            return x;
          }
          __extends(D, k);
          D.prototype.onLoad = function () {
            this.enableTouchInteraction();
            if (this.buttonTheme) {
              var x = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              N.setNodeColorWithOpacity(this.iconSprite, x);
            }
          };
          D.prototype.setIconSprite = function (x) {
            this.iconSprite.getComponent(cc.Sprite).spriteFrame = x;
          };
          D.prototype.destroy = function () {
            this.disableTouchInteraction();
            return k.prototype.destroy.call(this);
          };
          D.prototype.onClick = function () {};
          D.prototype.buttonActivate = function (x) {
            if (x) {
              this.node.active = true;
              N.deferCallback(this)(this.enableTouchInteraction);
            } else {
              this.disableTouchInteraction();
              this.node.active = false;
            }
          };
          Object.defineProperty(D.prototype, "isInteractable", {
            'get': function () {
              return this.be;
            },
            'set': function (x) {
              this.be = x;
              this.interactableButtonColor(x);
              if (x) {
                this.enableTouchInteraction();
              } else {
                this.disableTouchInteraction();
                this.Ae = false;
              }
            },
            'enumerable': false,
            'configurable': true
          });
          D.prototype.Ie = function (x) {
            if (this.be) {
              this.Ae = true;
              this.ge = this.Se = x.touch.getLocation();
              this.Ce = false;
              this.ye = false;
              this.changeButtonPressedColor(true);
            } else {
              x.stopPropagation();
            }
          };
          D.prototype.Hi = function (x) {
            if (this.Ae) {
              if (this.be) {
                this.ge = x.touch.getLocation();
                if (!this.Ce) {
                  if (cc.v2(0x0, this.Se.y).sub(cc.v2(0x0, this.ge.y)).mag() > 0x3c) {
                    this.Ce = true;
                    this.changeButtonPressedColor(false);
                  }
                  x.stopPropagation();
                }
                if (!this.ye) {
                  if (cc.v2(this.Se.x, 0x0).sub(cc.v2(this.ge.x, 0x0)).mag() > 0x3c) {
                    this.ye = true;
                    this.changeButtonPressedColor(false);
                  }
                }
              } else {
                x.stopPropagation();
              }
            }
          };
          D.prototype.we = function (x) {
            if (this.Ae) {
              if (this.be) {
                if (!this.Ce) {
                  x.stopPropagation();
                  this.changeButtonPressedColor(false);
                  this.onClick();
                }
              } else {
                x.stopPropagation();
              }
            }
          };
          D.prototype.Oe = function (x) {
            if (this.Ae) {
              if (this.be) {
                if (!this.Ce) {
                  x.stopPropagation();
                  this.changeButtonPressedColor(false);
                }
              } else {
                x.stopPropagation();
              }
            }
          };
          D.prototype.changeButtonColor = function (x) {
            this.changeButtonPressedColor(x);
          };
          D.prototype.changeButtonPressedColor = function (x) {
            if (this.buttonTheme) {
              var G = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var Y = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".pressed");
              N.setNodeColorWithOpacity(this.iconSprite, x ? Y : G);
            }
          };
          D.prototype.interactableButtonColor = function (x) {
            if (this.buttonTheme) {
              var G = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var Y = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              N.setNodeColorWithOpacity(this.iconSprite, x ? G : Y);
            }
          };
          D.prototype.enableTouchInteraction = function () {
            if (!this.Me) {
              this.Me = true;
              this.collider.on(cc.Node.EventType.TOUCH_START, this.Ie, this);
              this.collider.on(cc.Node.EventType.TOUCH_MOVE, this.Hi, this);
              this.collider.on(cc.Node.EventType.TOUCH_END, this.we, this);
              this.collider.on(cc.Node.EventType.TOUCH_CANCEL, this.Oe, this);
            }
          };
          D.prototype.disableTouchInteraction = function () {
            if (this.Me) {
              this.Me = false;
              this.collider.off(cc.Node.EventType.TOUCH_START, this.Ie, this);
              this.collider.off(cc.Node.EventType.TOUCH_MOVE, this.Hi, this);
              this.collider.off(cc.Node.EventType.TOUCH_END, this.we, this);
              this.collider.off(cc.Node.EventType.TOUCH_CANCEL, this.Oe, this);
            }
          };
          __decorate([A(cc.Node)], D.prototype, "iconSprite", undefined);
          __decorate([A(cc.Node)], D.prototype, "collider", undefined);
          __decorate([A(S)], D.prototype, "buttonTheme", undefined);
          return __decorate([J], D);
        }(cc.Component);
        C["default"] = y;
        cc._RF.pop();
      }
    }, RM],
    'GridView': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "2a349Sf9h1Dw6gCmtoNZ3ZP", "GridView")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("ScrollViewEx");
        var f = cc._decorator;
        var J = f.ccclass;
        f.property;
        var A = function (y) {
          function u() {
            var k = null !== y && y.apply(this, arguments) || this;
            k.autoSnap = true;
            k.ni = {};
            k.oi = {};
            return k;
          }
          var b = {
            get: function () {
              return this.ni;
            },
            enumerable: false,
            configurable: true
          };
          __extends(u, y);
          Object.defineProperty(u.prototype, "nodePools", b);
          Object.defineProperty(u.prototype, "templates", {
            'get': function () {
              return this.oi;
            },
            'enumerable': false,
            'configurable': true
          });
          u.prototype.setEstimatedSize = function (k) {
            if (this.vertical) {
              this.estimatedHeight = k.y;
            } else {
              this.estimatedWidth = k.x;
            }
          };
          u.prototype.setConstantCellSize = function (k, D) {
            var x = {
              width: k,
              height: D
            };
            this.constCellSize = x;
          };
          u.prototype.setResetFinish = function (k) {
            this.resetFinish = k;
          };
          u.prototype.setSpawnCell = function (k) {
            this.He = k;
          };
          u.prototype.setRemoveCell = function (k) {
            this.Be = k;
          };
          u.prototype.setPullingLeft = function (k) {
            this.Ge = k;
          };
          u.prototype.setPullLeftEnd = function (k) {
            this.Ne = k;
          };
          u.prototype.setPullingRight = function (k) {
            this.Te = k;
          };
          u.prototype.setPullRightEnd = function (k) {
            this.Pe = k;
          };
          u.prototype.setPullingDown = function (k) {
            this.Le = k;
          };
          u.prototype.setPullDownEnd = function (k) {
            this.Re = k;
          };
          u.prototype.setPullingUp = function (k) {
            this.Ee = k;
          };
          u.prototype.setPullUpEnd = function (k) {
            this.ke = k;
          };
          u.prototype.setFocusPoint = function (k) {
            switch (k) {
              case 0x1:
                this.focusPoint = {};
                this.focusPoint.type = 0x1;
                this.focusPoint.width = this.viewSize.width / 0x2;
                this.focusPoint.height = this.viewSize.height / 0x2;
                break;
              case 0x2:
                this.focusPoint = {};
                this.focusPoint.type = 0x2;
                this.focusPoint.width = this.viewSize.width;
                this.focusPoint.height = this.viewSize.height;
                break;
              default:
                this.focusPoint = {};
                this.focusPoint.type = 0x0;
                this.focusPoint.width = 0x0;
                this.focusPoint.height = 0x0;
            }
          };
          u.prototype.getFocusPoint = function () {
            if (!this.focusPoint) {
              this.focusPoint = {};
              this.focusPoint.type = 0x0;
              this.focusPoint.width = 0x0;
              this.focusPoint.height = 0x0;
            }
            return this.focusPoint;
          };
          u.prototype.setLayoutSetting = function (k) {
            this.contentLayout = this.content.getComponent(cc.Layout);
            this.layoutSetting = this.getLayoutSetting();
            if (k.spacingLeft) {
              this.layoutSetting.spacingLeft = k.spacingLeft;
            }
            if (k.spacingRight) {
              this.layoutSetting.spacingRight = k.spacingRight;
            }
            if (k.spacingTop) {
              this.layoutSetting.spacingTop = k.spacingTop;
            }
            if (k.spacingBottom) {
              this.layoutSetting.spacingBottom = k.spacingBottom;
            }
            if (k.spacingX) {
              this.layoutSetting.spacingX = k.spacingX;
            }
            if (k.spacingY) {
              this.layoutSetting.spacingY = k.spacingY;
            }
            this.contentLayout.paddingLeft = this.layoutSetting.spacingLeft;
            this.contentLayout.paddingRight = this.layoutSetting.spacingRight;
            this.contentLayout.paddingTop = this.layoutSetting.spacingTop;
            this.contentLayout.paddingBottom = this.layoutSetting.spacingBottom;
            this.contentLayout.spacingX = this.layoutSetting.spacingX;
            this.contentLayout.spacingY = this.layoutSetting.spacingY;
          };
          u.prototype.getLayoutSetting = function () {
            var k = {
              spacingLeft: 0x0,
              spacingRight: 0x0,
              spacingTop: 0x0,
              spacingBottom: 0x0,
              spacingX: 0x0,
              spacingY: 0x0
            };
            return this.layoutSetting ? this.layoutSetting : this.layoutSetting = k;
          };
          u.prototype.getVisibleItems = function () {
            var k = [];
            var D = this.content.children;
            if (D.length) {
              for (var x = 0x0; x < D.length; x++) {
                k.push(D[x]);
              }
            }
            return k;
          };
          u.prototype.setDataSource = function (k) {
            var D = this.node;
            var x = D.width;
            var G = D.height;
            this.Ue(x, G);
            if (k !== this.ci) {
              this.ci = k;
            }
          };
          u.prototype.je = function () {
            return this.ci;
          };
          u.prototype.De = function (k) {
            this.We = k;
          };
          u.prototype.xe = function () {
            if (!this.We) {
              this.We = 0x0;
            }
            return this.We;
          };
          u.prototype.ui = function () {
            var k = this.node;
            var D = k.width;
            var x = k.height;
            this.Ue(D, x);
            this.Fe(this.ri, this.currentIndex);
          };
          u.prototype.Ue = function (k, D) {
            var x = {
              width: k,
              height: D
            };
            this.viewSize = x;
            this.content.parent.setContentSize(k, D);
          };
          u.prototype.Ve = function () {
            return this.viewSize;
          };
          u.prototype.register = function (k, D, x) {
            if (this.nodePools[k]) {
              ;
            } else if (D) {
              var G = new cc.NodePool(x);
              this.templates[k] = D;
              this.nodePools[k] = G;
            }
          };
          u.prototype.reloadData = function () {
            this.setSnapDone(true);
            var k = this.ci;
            var D = k.getCount(this, this.ri);
            var x = this.We;
            if (x !== D) {
              this.setMasterControl(true);
              if (D < x) {
                this.ze(D);
              } else {
                this.De(D);
                this.reloadCurrentData();
                this.Je();
              }
            } else {
              this.reloadCurrentData();
            }
            if (k.didReloadData) {
              k.didReloadData();
            }
          };
          u.prototype.insertItem = function () {};
          u.prototype.removeItem = function () {};
          u.prototype.Fe = function (k, D, x) {
            if (undefined === k) {
              k = this.ri;
            }
            this.hi();
            this.qe();
            this.setMasterControl(true);
            this.content.y = 0x0;
            this.content.x = 0x0;
            this.content.setContentSize(0x0, 0x0);
            this.contentLayout.paddingTop = this.layoutSetting.spacingTop;
            this.contentLayout.paddingBottom = this.layoutSetting.spacingBottom;
            this.contentLayout.paddingLeft = this.layoutSetting.spacingLeft;
            this.contentLayout.paddingRight = this.layoutSetting.spacingRight;
            if (this.content.children.length) {
              for (var G = this.content.children.length - 0x1; G >= 0x0; G--) {
                var Y = this.content.children[G];
                this.Ke(Y);
              }
            }
            this.init(k, D, false, x);
          };
          u.prototype.reset = function (k, D) {
            if (undefined === k) {
              k = this.ri;
            }
            this.Fe(k, D, this.resetFinish);
          };
          u.prototype.init = function (k, D, x, G) {
            var Y = {
              spacingLeft: 0x0,
              spacingRight: 0x0,
              spacingTop: 0x0,
              spacingBottom: 0x0,
              spacingX: 0x0,
              spacingY: 0x0
            };
            if (undefined === D) {
              D = 0x0;
            }
            if (undefined === x) {
              x = true;
            }
            if (!this.layoutSetting) {
              this.setLayoutSetting(Y);
            }
            var m = this.ci;
            this.isDynamicSize = !!m.getCellSize;
            this.isPreCalculateSize = !(!this.constCellSize && !this.isDynamicSize);
            if (!this.isPreCalculateSize) {
              D = 0x0;
            }
            this.originalElastic = this.elastic;
            this.currentIndex = D;
            this.currentTarget = D;
            this.requestSnap = false;
            this.setMasterControl(false);
            this.contentLayout = this.content.getComponent(cc.Layout);
            this.setSnapDone(true);
            this.snapPause = false;
            this.outerCellsMatrix = [];
            this.ri = k;
            this.pauseUpdate = false;
            this.pullDir = null;
            this.prevContentY = this.content.y;
            this.prevContentX = -0x1 * this.content.x;
            this.di();
            this.De(m.getCount(this, this.ri));
            if (this.vertical) {
              this.contentLayout.startAxis = 0x0;
              this.content.width = this.viewSize.width;
              this.Qe(0x0, D, this.viewSize.height, x, G);
            } else {
              this.contentLayout.startAxis = 0x1;
              this.content.height = this.viewSize.height;
              this.Ye(0x0, D, this.viewSize.width, x, G);
            }
          };
          u.prototype.scrollTo = function (k, D) {
            var x = this;
            if (undefined === D) {
              D = true;
            }
            if (!(k >= this.We)) {
              if (!this.isPreCalculateSize || D) {
                if (this.vertical) {
                  var G = this.Xe(k);
                  if (null !== G) {
                    var Y = this.getFocusPoint();
                    this.currentIndex = k;
                    if (0x1 === Y.type) {
                      this.target = this.Ze(G) - this.outerCellsMatrix[G].height - Y.height + this.outerCellsMatrix[G][0x0].height / 0x2;
                    } else {
                      this.target = this.Ze(G) - this.outerCellsMatrix[G].height - this.layoutSetting.spacingTop;
                    }
                    var m = this.content.height - this.viewSize.height;
                    if (this.target < 0x0) {
                      this.target = 0x0;
                    } else if (this.target > m) {
                      this.target = m;
                    }
                  } else {
                    this.target = this.estimatedHeight;
                    this.suddenStopIndex = k;
                  }
                } else {
                  var W = this.Xe(k);
                  if (null !== W) {
                    Y = this.getFocusPoint();
                    this.currentIndex = k;
                    if (0x1 === Y.type) {
                      this.target = this.$e(W) - this.outerCellsMatrix[W].width - Y.width + this.outerCellsMatrix[W][0x0].width / 0x2;
                    } else {
                      this.target = this.$e(W) - this.outerCellsMatrix[W].width - this.layoutSetting.spacingLeft;
                    }
                    var F = this.content.width - this.viewSize.width;
                    if (this.target < 0x0) {
                      this.target = 0x0;
                    } else if (this.target > F) {
                      this.target = F;
                    }
                  } else {
                    this.target = this.estimatedWidth;
                    this.suddenStopIndex = k;
                  }
                }
                this.lerpSpeed = 0xa;
                this.setSnapDone(false);
              } else {
                this.Fe(this.ri, k, function () {
                  if (x.snapFinish) {
                    x.snapFinish(k);
                  }
                });
              }
            }
          };
          u.prototype.stopUpdate = function () {
            this.setMasterControl(true);
          };
          u.prototype.resumeUpdate = function () {
            if (this.pauseUpdate) {
              this.setMasterControl(false);
              this.pullDir = null;
              this.pauseUpdate = false;
            }
          };
          u.prototype.setMasterControl = function (k) {
            this.tn = k;
          };
          u.prototype['in'] = function () {
            if (!(this.pauseUpdate || this.tn)) {
              if (this.content.children.length) {
                if (this.vertical) {
                  if (this.content.y !== this.prevContentY) {
                    this.sn();
                  }
                } else if (-0x1 * this.content.x !== this.prevContentX) {
                  this.en();
                }
              }
            }
          };
          u.prototype.Ze = function (k) {
            if (this.outerCellsMatrix[k] && this.outerCellsMatrix[k].totalHeight) {
              return this.outerCellsMatrix[k].totalHeight;
            }
            var D = this.layoutSetting.spacingTop;
            for (var x = 0x0; x <= k; x++) {
              D += this.outerCellsMatrix[x].height;
              if (x === k) {
                this.outerCellsMatrix[k].totalHeight = D;
                return D;
              }
              D += this.layoutSetting.spacingY;
            }
          };
          u.prototype.$e = function (k) {
            if (this.outerCellsMatrix[k] && this.outerCellsMatrix[k].totalWidth) {
              return this.outerCellsMatrix[k].totalWidth;
            }
            var D = this.layoutSetting.spacingLeft;
            for (var x = 0x0; x <= k; x++) {
              D += this.outerCellsMatrix[x].width;
              if (x === k) {
                this.outerCellsMatrix[k].totalWidth = D;
                return D;
              }
              D += this.layoutSetting.spacingX;
            }
          };
          u.prototype.nn = function () {
            if (this.vertical) {
              if (this.cn() < this.hn) {
                return 0x0;
              }
              if (this.rn() > this.an) {
                var k = this.content.children.length - 0x1;
                return this.content.children[k].row;
              }
              var D = 0x0;
              var x = 0x0;
              var G = this.content.height;
              var Y = null;
              for (var m = 0x0; m < this.content.children.length; m++) {
                if (Y != this.content.children[m].row) {
                  Y = this.content.children[m].row;
                  var W = this.Ze(Y) - this.outerCellsMatrix[Y].height - this.layoutSetting.spacingTop;
                  if ((x = Math.abs(W - this.content.y)) >= G) {
                    return D;
                  }
                  D = Y;
                  G = x;
                }
              }
              return D;
            }
            if (this.un() > this.ln) {
              return 0x0;
            }
            if (this.dn() < this.vn) {
              k = this.content.children.length - 0x1;
              return this.content.children[k].col;
            }
            var F = 0x0;
            var E = 0x0;
            G = this.content.width;
            var v = null;
            for (m = 0x0; m < this.content.children.length; m++) {
              if (v != this.content.children[m].col) {
                v = this.content.children[m].col;
                var I = this.$e(v) - this.outerCellsMatrix[v].width - this.layoutSetting.spacingLeft;
                if ((E = Math.abs(I - -0x1 * this.content.x)) >= G) {
                  return F;
                }
                F = v;
                G = E;
              }
            }
            return F;
          };
          u.prototype._n = function () {
            this.elastic = this.originalElastic;
            if (!this.tn && this.requestSnap && this.content.children.length) {
              if (this.vertical) {
                var k = this.getFocusPoint();
                this.requestSnap = false;
                var D = this.nn();
                this.currentTarget = D;
                this.currentIndex = this.outerCellsMatrix[D][0x0] ? this.outerCellsMatrix[D][0x0].zIndex : null;
                if (0x1 === k.type) {
                  this.target = this.Ze(D) - this.outerCellsMatrix[D].height - k.height + this.outerCellsMatrix[D][0x0].height / 0x2;
                } else {
                  this.target = this.Ze(D) - this.outerCellsMatrix[D].height - this.layoutSetting.spacingTop;
                }
                var x = this.content.height - this.viewSize.height;
                if (x < 0x0) {
                  x = 0x0;
                }
                if (this.target <= 0x0) {
                  this.target = 0x0;
                } else if (this.target >= x) {
                  this.target = x;
                }
              } else {
                k = this.getFocusPoint();
                this.requestSnap = false;
                var G = this.nn();
                this.currentTarget = G;
                this.currentIndex = this.outerCellsMatrix[G][0x0] ? this.outerCellsMatrix[G][0x0].zIndex : null;
                if (0x1 === k.type) {
                  this.target = this.$e(G) - this.outerCellsMatrix[G].width - k.width + this.outerCellsMatrix[G][0x0].width / 0x2;
                } else {
                  this.target = this.$e(G) - this.outerCellsMatrix[G].width - this.layoutSetting.spacingLeft;
                }
                var Y = this.content.width - this.viewSize.width;
                if (Y < 0x0) {
                  Y = 0x0;
                }
                if (this.target <= 0x0) {
                  this.target = 0x0;
                } else if (this.target >= Y) {
                  this.target = Y;
                }
              }
              this.lerpSpeed = 0x5;
              this.setSnapDone(false);
            }
          };
          u.prototype.sn = function () {
            var k = this.content.y;
            var D = this.content.children[0x0];
            var x = this.content.children[this.content.children.length - 0x1];
            var G = D.row;
            var Y = x.row;
            var m = this.Ze(Y) - this.viewSize.height;
            if (this.prevContentY > k) {
              var W = D.zIndex;
              var F = k - this.contentLayout.paddingTop + this.layoutSetting.spacingY;
              if (0x0 > F) {
                this.mn(G - 0x1, W - 0x1, F);
              }
              if (Y > 0x0 && this.outerCellsMatrix[Y - 0x1] && this.outerCellsMatrix[Y - 0x1][0x0]) {
                var E = k - m + this.layoutSetting.spacingY + this.outerCellsMatrix[Y].height;
                if (E < 0x0) {
                  this.pn(Y, E, m);
                }
              }
            } else {
              var v = x.zIndex;
              var I = k - m;
              if (0x0 < I) {
                this.bn(Y + 0x1, 0x0, v + 0x1, I);
              }
              if (G < this.outerCellsMatrix.length - 0x1 && this.outerCellsMatrix[G + 0x1] && this.outerCellsMatrix[G + 0x1][0x0]) {
                var w = k - this.contentLayout.paddingTop - this.outerCellsMatrix[G].height;
                if (0x0 < w) {
                  this.Sn(G, w);
                }
              }
            }
            this.prevContentY = k;
          };
          u.prototype.en = function () {
            var k = -0x1 * this.content.x;
            var D = this.content.children[0x0];
            var x = this.content.children[this.content.children.length - 0x1];
            var G = D.col;
            var Y = x.col;
            var m = this.$e(Y) - this.viewSize.width;
            if (this.prevContentX > k) {
              var W = D.zIndex;
              var F = k - this.contentLayout.paddingLeft + this.layoutSetting.spacingX;
              if (0x0 > F) {
                this.gn(G - 0x1, W - 0x1, F);
              }
              if (Y > 0x0 && this.outerCellsMatrix[Y - 0x1] && this.outerCellsMatrix[Y - 0x1][0x0]) {
                var E = k - m + this.layoutSetting.spacingX + this.outerCellsMatrix[Y].width;
                if (E < 0x0) {
                  this.Cn(Y, E, m);
                }
              }
            } else {
              var v = x.zIndex;
              var I = k - m;
              if (0x0 < I) {
                this.yn(0x0, Y + 0x1, v + 0x1, I);
              }
              if (G < this.outerCellsMatrix.length - 0x1 && this.outerCellsMatrix[G + 0x1] && this.outerCellsMatrix[G + 0x1][0x0]) {
                var w = k - this.contentLayout.paddingLeft - this.outerCellsMatrix[G].width;
                if (0x0 < w) {
                  this.Mn(G, w);
                }
              }
            }
            this.prevContentX = k;
          };
          u.prototype.An = function () {
            var k;
            var D;
            var x = this.layoutSetting;
            var G = x.spacingX;
            var Y = x.spacingLeft + x.spacingRight;
            var m = 0x0;
            var W = 0x0;
            var F = 0x0;
            for (var E = this.We; m < E;) {
              if (this.isDynamicSize) {
                var v = this.ci.getCellSize(m);
                k = v.width + G;
                D = v.height;
              } else {
                k = this.constCellSize.width + G;
                D = this.constCellSize.height;
              }
              if (!this.outerCellsMatrix[W]) {
                this.outerCellsMatrix[W] = {};
                this.outerCellsMatrix[W][F] = null;
                this.outerCellsMatrix[W].itemCount = 0x0;
                this.outerCellsMatrix[W].height = 0x0;
                this.outerCellsMatrix[W].freeWidth = this.viewSize.width - Y;
                this.freeWidth = this.viewSize.width - Y;
              }
              if (this.freeWidth - k >= 0x0) {
                this.outerCellsMatrix[W].height = Math.max(D, this.outerCellsMatrix[W].height);
                this.outerCellsMatrix[W][F] = null;
                this.freeWidth -= k;
                F += 0x1;
                this.outerCellsMatrix[W].itemCount = F;
                m++;
              } else if (this.freeWidth + G - k >= 0x0) {
                this.outerCellsMatrix[W].height = Math.max(D, this.outerCellsMatrix[W].height);
                this.outerCellsMatrix[W][F] = null;
                this.freeWidth -= k;
                F += 0x1;
                this.outerCellsMatrix[W].itemCount = F;
                m++;
              } else {
                W += 0x1;
                F = 0x0;
              }
            }
            this.freeWidth = undefined;
            this.In();
          };
          u.prototype.wn = function () {
            var k;
            var D;
            var x = this.layoutSetting;
            var G = x.spacingY;
            var Y = x.spacingTop + x.spacingBottom;
            var m = 0x0;
            var W = 0x0;
            var F = 0x0;
            for (var E = this.We; m < E;) {
              if (this.isDynamicSize) {
                var v = this.ci.getCellSize(m);
                k = v.width;
                D = v.height + G;
              } else {
                k = this.constCellSize.width;
                D = this.constCellSize.height + G;
              }
              if (!this.outerCellsMatrix[F]) {
                this.outerCellsMatrix[F] = {};
                this.outerCellsMatrix[F][W] = {};
                this.outerCellsMatrix[F].itemCount = 0x0;
                this.outerCellsMatrix[F].width = 0x0;
                this.outerCellsMatrix[F].freeHeight = this.viewSize.height - Y;
                this.freeHeight = this.viewSize.height - Y;
              }
              if (this.freeHeight - D >= 0x0) {
                this.outerCellsMatrix[F].width = Math.max(k, this.outerCellsMatrix[F].width);
                this.outerCellsMatrix[F][W] = null;
                this.freeHeight -= D;
                W += 0x1;
                this.outerCellsMatrix[F].itemCount = W;
                m++;
              } else if (this.freeHeight + this.layoutSetting.spacingY - D >= 0x0) {
                this.outerCellsMatrix[F].width = Math.max(k, this.outerCellsMatrix[F].width);
                this.outerCellsMatrix[F][W] = null;
                this.freeHeight -= D;
                W += 0x1;
                this.outerCellsMatrix[F].itemCount = W;
                m++;
              } else {
                F += 0x1;
                W = 0x0;
              }
            }
            this.freeHeight = undefined;
            this.On();
          };
          u.prototype.Hn = function (k, D, x) {
            this.lastContentY = this.content.y;
            var G;
            var Y;
            var m = this.layoutSetting;
            var W = m.spacingX;
            var F = m.spacingY;
            var E = m.spacingLeft + m.spacingRight;
            var I = k;
            var w = 0x0;
            var j = this.We;
            for (var Z = 0x0; D < j;) {
              if (this.isDynamicSize) {
                var X = this.ci.getCellSize(D);
                G = X.width + W;
                Y = X.height;
              } else {
                G = this.constCellSize.width + W;
                Y = this.constCellSize.height;
              }
              if (!(x > 0x0)) {
                return;
              }
              if (!this.outerCellsMatrix[I]) {
                this.outerCellsMatrix[I] = {};
                this.outerCellsMatrix[I][w] = null;
                this.outerCellsMatrix[I].itemCount = 0x0;
                this.outerCellsMatrix[I].height = 0x0;
                this.outerCellsMatrix[I].freeWidth = this.viewSize.width - E;
              }
              if (this.outerCellsMatrix[I].freeWidth - G >= 0x0) {
                this.outerCellsMatrix[I].height = Math.max(Y, this.outerCellsMatrix[I].height);
                var V = this.ci.getItem(this, D, this.ri);
                this.Bn(V, I, w, D);
                this.outerCellsMatrix[I].freeWidth -= G;
                w += 0x1;
                this.outerCellsMatrix[I].itemCount = w;
                D++;
              } else if (this.outerCellsMatrix[I].freeWidth + W - G >= 0x0) {
                this.outerCellsMatrix[I].height = Math.max(Y, this.outerCellsMatrix[I].height);
                V = this.ci.getItem(this, D, this.ri);
                this.Bn(V, I, w, D);
                this.outerCellsMatrix[I].freeWidth -= G;
                w += 0x1;
                this.outerCellsMatrix[I].itemCount = w;
                D++;
              } else {
                var H = (x -= Z) - (this.outerCellsMatrix[I].height + F);
                if (H > 0x0) {
                  x = H;
                } else if (H + F > 0x0) {
                  x = H + F;
                  Z = F;
                } else {
                  x = H;
                }
                I += 0x1;
                w = 0x0;
              }
            }
          };
          u.prototype.Gn = function (k, D, x) {
            this.lastContentX = -0x1 * this.content.x;
            var G;
            var Y;
            var m = this.layoutSetting;
            var W = m.spacingX;
            var F = m.spacingY;
            var E = m.spacingTop + m.spacingBottom;
            var I = 0x0;
            var w = k;
            var j = this.We;
            for (var Z = 0x0; D < j;) {
              if (this.isDynamicSize) {
                var X = this.ci.getCellSize(D);
                G = X.width;
                Y = X.height + F;
              } else {
                G = this.constCellSize.width;
                Y = this.constCellSize.height + F;
              }
              if (!(x > 0x0)) {
                return void this.setMasterControl(false);
              }
              if (!this.outerCellsMatrix[w]) {
                this.outerCellsMatrix[w] = {};
                this.outerCellsMatrix[w][I] = {};
                this.outerCellsMatrix[w].itemCount = 0x0;
                this.outerCellsMatrix[w].width = 0x0;
                this.outerCellsMatrix[w].freeHeight = this.viewSize.height - E;
              }
              if (this.outerCellsMatrix[w].freeHeight - Y >= 0x0) {
                this.outerCellsMatrix[w].width = Math.max(G, this.outerCellsMatrix[w].width);
                var V = this.ci.getItem(this, D, this.ri);
                this.Bn(V, I, w, D);
                this.outerCellsMatrix[w].freeHeight -= Y;
                I += 0x1;
                this.outerCellsMatrix[w].itemCount = I;
                D++;
              } else if (this.outerCellsMatrix[w].freeHeight + F - Y >= 0x0) {
                this.outerCellsMatrix[w].width = Math.max(G, this.outerCellsMatrix[w].width);
                V = this.ci.getItem(this, D, this.ri);
                this.Bn(V, I, w, D);
                this.outerCellsMatrix[w].freeHeight -= Y;
                I += 0x1;
                this.outerCellsMatrix[w].itemCount = I;
                D++;
              } else {
                var H = (x -= Z) - (this.outerCellsMatrix[w].width + W);
                if (H > 0x0) {
                  x = H;
                } else if (H + W > 0x0) {
                  x = H + W;
                  Z = W;
                } else {
                  x = H;
                }
                w += 0x1;
                I = 0x0;
              }
            }
            this.setMasterControl(false);
          };
          u.prototype.Nn = function (k, D, x) {
            var G = this.Xe(k);
            var Y = this.Tn(G);
            var m = this.Ze(G) - this.outerCellsMatrix[G].height;
            if (this.cn() < this.hn) {
              this.target = 0x0;
            } else if (this.rn() > this.an) {
              this.target = this.content.height + this.an;
            } else {
              this.target = m - this.layoutSetting.spacingTop;
            }
            this.content.y = this.target;
            this.contentLayout.paddingTop = m;
            this.contentLayout.paddingBottom = this.layoutSetting.spacingBottom;
            this.contentLayout.updateLayout();
            this.Hn(G, Y, D);
            var W = this.content.y - m;
            if (W < 0x0) {
              this.mn(G - 0x1, Y - 0x1, W, x);
            } else if (x) {
              x();
            }
            this.setMasterControl(false);
          };
          u.prototype.Pn = function (k, D, x) {
            var G = this.Xe(k);
            var Y = this.Tn(G);
            var m = -0x1 * (this.$e(G) - this.outerCellsMatrix[G].width);
            if (this.un() > this.ln) {
              this.target = 0x0;
            } else if (this.dn() < this.vn) {
              this.target = -0x1 * (this.content.width - this.vn);
            } else {
              this.target = m + this.layoutSetting.spacingLeft;
            }
            this.content.x = this.target;
            this.contentLayout.paddingLeft = -m;
            this.contentLayout.paddingRight = this.layoutSetting.spacingRight;
            this.contentLayout.updateLayout();
            this.Gn(G, Y, D);
            var W = -0x1 * this.content.x + m;
            if (W < 0x0) {
              this.gn(G - 0x1, Y - 0x1, W, x);
            } else if (x) {
              x();
            }
            this.setMasterControl(false);
          };
          u.prototype.Qe = function (k, D, x, G, Y) {
            if (undefined === G) {
              G = true;
            }
            if (this.We) {
              if (this.isPreCalculateSize && !G) {
                this.An();
                this.Nn(D, x, Y);
              } else {
                this.lastContentY = this.content.y;
                var W = this.layoutSetting;
                var F = W.spacingX;
                var E = W.spacingY;
                var I = W.spacingLeft + W.spacingRight;
                var w = k;
                var j = 0x0;
                var Z = undefined;
                var X = undefined;
                var V = undefined;
                var H = this.We;
                for (var z = 0x0; D < H;) {
                  X = (Z = this.ci.getItem(this, D, this.ri)).width + F;
                  V = Z.height;
                  if (!(x > 0x0)) {
                    this.In();
                    this.vi(Z);
                    return void this.setMasterControl(false);
                  }
                  if (!this.outerCellsMatrix[w]) {
                    this.outerCellsMatrix[w] = {};
                    this.outerCellsMatrix[w][j] = null;
                    this.outerCellsMatrix[w].itemCount = 0x0;
                    this.outerCellsMatrix[w].height = 0x0;
                    this.outerCellsMatrix[w].freeWidth = this.viewSize.width - I;
                  }
                  if (this.outerCellsMatrix[w].freeWidth - X >= 0x0) {
                    this.outerCellsMatrix[w].height = Math.max(V, this.outerCellsMatrix[w].height);
                    this.Bn(Z, w, j, D);
                    this.outerCellsMatrix[w].freeWidth -= X;
                    j += 0x1;
                    this.outerCellsMatrix[w].itemCount = j;
                    D++;
                    this.In();
                  } else if (this.outerCellsMatrix[w].freeWidth + F - X >= 0x0) {
                    this.outerCellsMatrix[w].height = Math.max(V, this.outerCellsMatrix[w].height);
                    this.Bn(Z, w, j, D);
                    this.outerCellsMatrix[w].freeWidth -= X;
                    j += 0x1;
                    this.outerCellsMatrix[w].itemCount = j;
                    D++;
                    this.In();
                  } else {
                    var P = (x -= z) - (this.outerCellsMatrix[w].height + E);
                    if (P > 0x0) {
                      x = P;
                    } else if (P + E > 0x0) {
                      x = P + E;
                      z = E;
                    } else {
                      x = P;
                    }
                    this.In();
                    this.vi(Z);
                    w += 0x1;
                    j = 0x0;
                  }
                }
                this.setMasterControl(false);
              }
            } else if (Y) {
              Y();
            }
          };
          u.prototype.Ye = function (k, D, x, G, Y) {
            if (this.We) {
              if (this.isPreCalculateSize && !G) {
                this.wn();
                this.Pn(D, x, Y);
              } else {
                this.lastContentX = -0x1 * this.content.x;
                var W = this.layoutSetting;
                var F = W.spacingX;
                var E = W.spacingY;
                var I = W.spacingTop + W.spacingBottom;
                var w = 0x0;
                var j = k;
                var Z = undefined;
                var X = undefined;
                var V = undefined;
                var H = this.We;
                for (var z = 0x0; D < H;) {
                  X = (Z = this.ci.getItem(this, D, this.ri)).width;
                  V = Z.height + E;
                  if (!(x > 0x0)) {
                    this.On();
                    this.vi(Z);
                    return void this.setMasterControl(false);
                  }
                  if (!this.outerCellsMatrix[j]) {
                    this.outerCellsMatrix[j] = {};
                    this.outerCellsMatrix[j][w] = {};
                    this.outerCellsMatrix[j].itemCount = 0x0;
                    this.outerCellsMatrix[j].width = 0x0;
                    this.outerCellsMatrix[j].freeHeight = this.viewSize.height - I;
                  }
                  if (this.outerCellsMatrix[j].freeHeight - V >= 0x0) {
                    this.outerCellsMatrix[j].width = Math.max(X, this.outerCellsMatrix[j].width);
                    this.Bn(Z, w, j, D);
                    this.outerCellsMatrix[j].freeHeight -= V;
                    w += 0x1;
                    this.outerCellsMatrix[j].itemCount = w;
                    D++;
                    this.On();
                  } else if (this.outerCellsMatrix[j].freeHeight + E - V >= 0x0) {
                    this.outerCellsMatrix[j].width = Math.max(X, this.outerCellsMatrix[j].width);
                    this.Bn(Z, w, j, D);
                    this.outerCellsMatrix[j].freeHeight -= V;
                    w += 0x1;
                    this.outerCellsMatrix[j].itemCount = w;
                    D++;
                    this.On();
                  } else {
                    var P = (x -= z) - (this.outerCellsMatrix[j].width + F);
                    if (P > 0x0) {
                      x = P;
                    } else if (P + F > 0x0) {
                      x = P + F;
                      z = F;
                    } else {
                      x = P;
                    }
                    this.On();
                    this.vi(Z);
                    j += 0x1;
                    w = 0x0;
                  }
                }
                this.setMasterControl(false);
              }
            } else if (Y) {
              Y();
            }
          };
          u.prototype.Sn = function (k, D) {
            var x = this.layoutSetting.spacingLeft + this.layoutSetting.spacingRight;
            for (var G = this.outerCellsMatrix[k].itemCount - 0x1; 0x0 < D;) {
              if (G >= 0x0) {
                if (this.Be) {
                  this.Be();
                }
                this.Ke(this.outerCellsMatrix[k][G]);
                G--;
              } else {
                this.contentLayout.paddingTop += this.outerCellsMatrix[k].height + this.layoutSetting.spacingY;
                this.outerCellsMatrix[k].freeWidth = this.viewSize.width - x;
                if ((k += 0x1) >= this.outerCellsMatrix.length - 0x1 || !this.outerCellsMatrix[k][0x0]) {
                  return;
                }
                G = this.outerCellsMatrix[k].itemCount - 0x1;
                D = this.content.y - this.contentLayout.paddingTop - this.outerCellsMatrix[k].height;
              }
            }
          };
          u.prototype.Mn = function (k, D) {
            var x = this.layoutSetting.spacingTop + this.layoutSetting.spacingBottom;
            for (var G = this.outerCellsMatrix[k].itemCount - 0x1; 0x0 < D;) {
              if (G >= 0x0) {
                this.Ke(this.outerCellsMatrix[k][G]);
                G--;
              } else {
                this.contentLayout.paddingLeft += this.outerCellsMatrix[k].width + this.layoutSetting.spacingX;
                this.outerCellsMatrix[k].freeHeight = this.viewSize.height - x;
                if ((k += 0x1) >= this.outerCellsMatrix.length - 0x1 || !this.outerCellsMatrix[k][0x0]) {
                  return;
                }
                G = this.outerCellsMatrix[k].itemCount - 0x1;
                D = -0x1 * this.content.x - this.contentLayout.paddingLeft - this.outerCellsMatrix[k].width;
              }
            }
          };
          u.prototype.pn = function (k, D, x) {
            var G = this.layoutSetting.spacingLeft + this.layoutSetting.spacingRight;
            for (var Y = this.outerCellsMatrix[k].itemCount - 0x1; D < 0x0;) {
              if (Y >= 0x0) {
                if (this.Be) {
                  this.Be();
                }
                this.Ke(this.outerCellsMatrix[k][Y]);
                Y--;
              } else {
                this.outerCellsMatrix[k].freeWidth = this.viewSize.width - G;
                if ((k -= 0x1) <= 0x0 || !this.outerCellsMatrix[k][0x0]) {
                  return;
                }
                Y = this.outerCellsMatrix[k].itemCount - 0x1;
                x = this.Ze(k) - this.viewSize.height;
                D = this.content.y - x + this.layoutSetting.spacingY + this.outerCellsMatrix[k].height;
              }
            }
          };
          u.prototype.Cn = function (k, D, x) {
            var G = this.layoutSetting.spacingTop + this.layoutSetting.spacingBottom;
            for (var Y = this.outerCellsMatrix[k].itemCount - 0x1; D < 0x0;) {
              if (Y >= 0x0) {
                if (this.Be) {
                  this.Be();
                }
                this.Ke(this.outerCellsMatrix[k][Y]);
                Y--;
              } else {
                this.outerCellsMatrix[k].freeHeight = this.viewSize.height - G;
                if ((k -= 0x1) <= 0x0 || !this.outerCellsMatrix[k][0x0]) {
                  return;
                }
                Y = this.outerCellsMatrix[k].itemCount - 0x1;
                x = this.$e(k) - this.viewSize.width;
                D = -0x1 * this.content.x - x + this.layoutSetting.spacingX + this.outerCellsMatrix[k].width;
              }
            }
          };
          u.prototype.removeUselessItems = function (k, D) {
            this.De(k);
            if (this.vertical) {
              for (var x = this.content.children.length - 0x1; x >= 0x0; x--) {
                if (!((Y = this.content.children[x]).zIndex > k - 0x1)) {
                  this.reloadCurrentData();
                  var G = Y.col + 0x1;
                  this.outerCellsMatrix[Y.row].itemCount = G;
                  this.outerCellsMatrix.splice(Y.row + 0x1, this.outerCellsMatrix.length - 0x1);
                  this.In();
                  this.setMasterControl(false);
                  if (D) {
                    D();
                  }
                  break;
                }
                this.outerCellsMatrix[Y.row].freeWidth += this.outerCellsMatrix[Y.row][Y.col].width + this.layoutSetting.spacingX;
                this.Ke(Y);
                if (0x0 === x) {
                  this.In();
                  this.setMasterControl(false);
                  if (D) {
                    D();
                  }
                }
              }
            } else {
              for (x = this.content.children.length - 0x1; x >= 0x0; x--) {
                var Y;
                if (!((Y = this.content.children[x]).zIndex >= k - 0x1)) {
                  this.reloadCurrentData();
                  G = Y.row + 0x1;
                  this.outerCellsMatrix[Y.col].itemCount = G;
                  this.outerCellsMatrix.splice(Y.col + 0x1, this.outerCellsMatrix.length - 0x1);
                  this.On();
                  this.setMasterControl(false);
                  if (D) {
                    D();
                  }
                  break;
                }
                this.outerCellsMatrix[Y.col].freeHeight += this.outerCellsMatrix[Y.col][Y.row].height + this.layoutSetting.spacingY;
                this.Ke(Y);
                if (0x0 === x) {
                  this.In();
                  this.setMasterControl(false);
                  if (D) {
                    D();
                  }
                }
              }
            }
          };
          u.prototype.bn = function (k, D, x, G) {
            this.lastContentY = this.content.y;
            var Y;
            var m;
            var W;
            var F = this.layoutSetting.spacingLeft + this.layoutSetting.spacingRight;
            var E = k;
            var v = D;
            for (var I = this.We; x < I;) {
              m = (Y = this.ci.getItem(this, x, this.ri)).width + this.layoutSetting.spacingX;
              W = Y.height;
              if (!(0x0 < G)) {
                this.In();
                return void this.vi(Y);
              }
              if (!this.outerCellsMatrix[E]) {
                this.outerCellsMatrix[E] = {};
                this.outerCellsMatrix[E][v] = {};
                this.outerCellsMatrix[E].itemCount = 0x0;
                this.outerCellsMatrix[E].height = 0x0;
                this.outerCellsMatrix[E].freeWidth = this.viewSize.width - F;
              }
              if (this.outerCellsMatrix[E].freeWidth - m >= 0x0) {
                if (this.He) {
                  this.He();
                }
                this.outerCellsMatrix[E].height = Math.max(W, this.outerCellsMatrix[E].height);
                this.Bn(Y, E, v, x);
                this.outerCellsMatrix[E].freeWidth -= m;
                v += 0x1;
                this.outerCellsMatrix[E].itemCount = v;
                if (++x >= I) {
                  this.In();
                }
              } else if (this.outerCellsMatrix[E].freeWidth + this.layoutSetting.spacingX - m >= 0x0) {
                if (this.He) {
                  this.He();
                }
                this.outerCellsMatrix[E].height = Math.max(W, this.outerCellsMatrix[E].height);
                this.Bn(Y, E, v, x);
                this.outerCellsMatrix[E].freeWidth -= m;
                v += 0x1;
                this.outerCellsMatrix[E].itemCount = v;
                x++;
                this.In();
              } else {
                var w = this.content.children[this.content.children.length - 0x1].row;
                var j = this.Ze(w) - this.viewSize.height;
                G = this.content.y - j;
                this.In();
                this.vi(Y);
                E += 0x1;
                v = 0x0;
              }
            }
          };
          u.prototype.yn = function (k, D, x, G) {
            this.lastContentY = -0x1 * this.content.x;
            var Y;
            var m;
            var W;
            var F = this.layoutSetting.spacingTop + this.layoutSetting.spacingBottom;
            var E = k;
            var v = D;
            for (var I = this.We; x < I;) {
              m = (Y = this.ci.getItem(this, x, this.ri)).width;
              W = Y.height + this.layoutSetting.spacingY;
              if (!(0x0 < G)) {
                this.On();
                return void this.vi(Y);
              }
              if (!this.outerCellsMatrix[v]) {
                this.outerCellsMatrix[v] = {};
                this.outerCellsMatrix[v][E] = {};
                this.outerCellsMatrix[v].itemCount = 0x0;
                this.outerCellsMatrix[v].width = 0x0;
                this.outerCellsMatrix[v].freeHeight = this.viewSize.height - F;
              }
              if (this.outerCellsMatrix[v].freeHeight - W >= 0x0) {
                if (this.He) {
                  this.He();
                }
                this.outerCellsMatrix[v].width = Math.max(m, this.outerCellsMatrix[v].width);
                this.Bn(Y, E, v, x);
                this.outerCellsMatrix[v].freeHeight -= W;
                E += 0x1;
                this.outerCellsMatrix[v].itemCount = E;
                if (++x >= I) {
                  this.On();
                }
              } else if (this.outerCellsMatrix[v].freeHeight + this.layoutSetting.spacingY - W >= 0x0) {
                if (this.He) {
                  this.He();
                }
                this.outerCellsMatrix[v].width = Math.max(m, this.outerCellsMatrix[v].width);
                this.Bn(Y, E, v, x);
                this.outerCellsMatrix[v].freeHeight -= W;
                E += 0x1;
                this.outerCellsMatrix[v].itemCount = E;
                x++;
                this.On();
              } else {
                var w = this.content.children[this.content.children.length - 0x1].col;
                var j = this.$e(w) - this.viewSize.width;
                G = -0x1 * this.content.x - j;
                this.On();
                this.vi(Y);
                v += 0x1;
                E = 0x0;
              }
            }
          };
          u.prototype.mn = function (k, D, x, G) {
            if (!(k < 0x0)) {
              var Y;
              var m;
              var W;
              var F = k;
              for (var a = this.outerCellsMatrix[F].itemCount - 0x1; D >= 0x0;) {
                m = (Y = this.ci.getItem(this, D, this.ri)).width + this.layoutSetting.spacingX;
                W = Y.height;
                if (!(0x0 > x)) {
                  this.In();
                  this.vi(Y);
                  return void (G && G());
                }
                if (a >= 0x0) {
                  if (this.He) {
                    this.He();
                  }
                  this.outerCellsMatrix[F].height = Math.max(W, this.outerCellsMatrix[F].height);
                  this.Bn(Y, F, a, D);
                  this.outerCellsMatrix[F].freeWidth -= m;
                  if (0x0 === D) {
                    this.contentLayout.paddingTop -= this.outerCellsMatrix[F].height + this.layoutSetting.spacingY;
                    x = this.content.y - this.contentLayout.paddingTop;
                  }
                  a -= 0x1;
                  D--;
                } else {
                  this.contentLayout.paddingTop -= this.outerCellsMatrix[F].height + this.layoutSetting.spacingY;
                  x = this.content.y - this.contentLayout.paddingTop;
                  this.In();
                  this.vi(Y);
                  F -= 0x1;
                  a = this.outerCellsMatrix[F].itemCount - 0x1;
                }
              }
              if (G) {
                G();
              }
            }
          };
          u.prototype.gn = function (k, D, x, G) {
            if (!(k < 0x0)) {
              var Y;
              var m;
              var W;
              var F = -0x1 * this.content.x;
              var E = k;
              for (var v = this.outerCellsMatrix[E].itemCount - 0x1; D >= 0x0;) {
                m = (Y = this.ci.getItem(this, D, this.ri)).width;
                W = Y.height + this.layoutSetting.spacingY;
                if (!(0x0 > x)) {
                  this.On();
                  this.vi(Y);
                  return void (G && G());
                }
                if (v >= 0x0) {
                  if (this.He) {
                    this.He();
                  }
                  this.outerCellsMatrix[E].width = Math.max(m, this.outerCellsMatrix[E].width);
                  this.Bn(Y, v, E, D);
                  this.outerCellsMatrix[E].freeHeight -= W;
                  if (0x0 === D) {
                    this.contentLayout.paddingLeft -= this.outerCellsMatrix[E].width + this.layoutSetting.spacingX;
                    x = F - this.contentLayout.paddingLeft;
                  }
                  v -= 0x1;
                  D--;
                } else {
                  this.contentLayout.paddingLeft -= this.outerCellsMatrix[E].width + this.layoutSetting.spacingX;
                  x = F - this.contentLayout.paddingLeft;
                  this.On();
                  this.vi(Y);
                  E -= 0x1;
                  v = this.outerCellsMatrix[E].itemCount - 0x1;
                }
              }
              if (G) {
                G();
              }
            }
          };
          u.prototype.In = function () {
            var k = this.layoutSetting.spacingTop + this.layoutSetting.spacingBottom;
            for (var D = 0x0; D < this.outerCellsMatrix.length; D++) {
              k += this.outerCellsMatrix[D].height;
              if (D !== this.outerCellsMatrix.length - 0x1) {
                k += this.layoutSetting.spacingY;
              } else if (this.content.height !== k) {
                this.content.height = k;
              }
            }
          };
          u.prototype.On = function () {
            var k = this.layoutSetting.spacingLeft + this.layoutSetting.spacingRight;
            for (var D = 0x0; D < this.outerCellsMatrix.length; D++) {
              k += this.outerCellsMatrix[D].width;
              if (D !== this.outerCellsMatrix.length - 0x1) {
                k += this.layoutSetting.spacingX;
              } else if (this.content.width !== k) {
                this.content.width = k;
              }
            }
          };
          u.prototype.Bn = function (k, D, x, G) {
            var Y = this.Ln();
            if (this.vertical) {
              this.outerCellsMatrix[D][x] = Y;
            } else {
              this.outerCellsMatrix[x][D] = Y;
            }
            this.content.addChild(Y);
            Y.addChild(k);
            Y.row = D;
            Y.col = x;
            Y.zIndex = G;
            Y.width = k.width;
            Y.height = k.height;
            this.content.sortAllChildren();
          };
          u.prototype.dequeueReusableItem = function (k) {
            var D;
            var x = this.nodePools[k];
            if (x) {
              if (!(D = x.get())) {
                var G = this.templates[k];
                D = cc.instantiate(G);
              }
              D.lv_type = k;
            }
            return D;
          };
          u.prototype.vi = function (k) {
            var D;
            var x = k.lv_type;
            if (x) {
              D = this.nodePools[x];
            }
            if (D) {
              D.put(k);
            }
          };
          u.prototype.ze = function (k) {
            if (this.vertical) {
              var D = this.Xe(this.currentIndex);
              if (this.currentIndex <= k - 0x1) {
                this.removeUselessItems(k);
              } else if (null !== D) {
                this.isReducingData = true;
                this.newDataCount = k;
                this.setMasterControl(true);
                this.scrollTo(0x0);
              } else {
                this.removeUselessItems(k);
              }
            } else {
              var x = this.Xe(this.currentIndex);
              if (this.currentIndex < k - 0x1) {
                this.removeUselessItems(k);
              } else if (null !== x) {
                this.isReducingData = true;
                this.stopAutoScroll();
                this.setMasterControl(true);
                this.scrollTo(0x0);
              } else {
                this.removeUselessItems(k);
              }
            }
          };
          u.prototype.Je = function () {
            if (this.vertical) {
              if (!this.content.children.length) {
                return void this.Qe(0x0, 0x0, this.viewSize.height);
              }
              var k = (W = this.content.children[this.content.children.length - 0x1]).row;
              var D = k - 0x1;
              if (D < 0x0) {
                D = 0x0;
              }
              var x = this.Ze(D) - this.viewSize.height;
              var G = W.zIndex;
              var Y = this.content.y - x;
              var m = (v = this.ci.getItem(this, G + 0x1, this.ri)).width + this.layoutSetting.spacingX;
              this.vi(v);
              if (this.outerCellsMatrix[k].freeWidth - m >= 0x0) {
                this.bn(k, this.outerCellsMatrix[k].itemCount, G + 0x1, Y);
              } else if (this.outerCellsMatrix[k].freeWidth + this.layoutSetting.spacingX - m >= 0x0) {
                this.bn(k, this.outerCellsMatrix[k].itemCount, G + 0x1, Y);
              }
              this.setMasterControl(false);
            } else {
              if (!this.content.children.length) {
                return void this.Ye(0x0, 0x0, this.viewSize.width);
              }
              var W;
              var F = (W = this.content.children[this.content.children.length - 0x1]).col;
              var E = F - 0x1;
              if (E < 0x0) {
                E = 0x0;
              }
              x = this.$e(E) - this.viewSize.width;
              var v;
              var I = W.zIndex;
              var w = -0x1 * this.content.x - x;
              var j = (v = this.ci.getItem(this, I + 0x1, this.ri)).height + this.layoutSetting.spacingY;
              this.vi(v);
              if (this.outerCellsMatrix[F].freeHeight - j >= 0x0) {
                this.yn(this.outerCellsMatrix[I].itemCount, F, I + 0x1, w);
              } else if (this.outerCellsMatrix[F].freeWidth + this.layoutSetting.spacingX - j >= 0x0) {
                this.yn(this.outerCellsMatrix[F].itemCount, F, I + 0x1, w);
              }
              this.setMasterControl(false);
            }
          };
          u.prototype.reloadCurrentData = function (k) {
            if (this.content.children.length) {
              for (var D = 0x0; D < this.content.children.length; D++) {
                this.vi(this.content.children[D].children[0x0]);
                var x = this.ci.getItem(this, this.content.children[D].zIndex, this.ri);
                this.content.children[D].addChild(x);
                this.content.sortAllChildren();
              }
            }
            if (k) {
              k();
            }
          };
          u.prototype.Ke = function (k) {
            if (null !== k && null !== k.row && null !== k.col) {
              if (this.vertical) {
                this.outerCellsMatrix[k.row][k.col] = null;
              } else {
                this.outerCellsMatrix[k.col][k.row] = null;
              }
              if (k.children.length) {
                this.vi(k.children[0x0]);
              }
              this.M.put(k);
              this.content.sortAllChildren();
            }
          };
          u.prototype.Ln = function () {
            return this.M ? this.M.size() ? this.M.get() : new cc.Node() : (this.M = new cc.NodePool(), new cc.Node());
          };
          u.prototype.bi = function (k, D, x, G, Y) {
            if (undefined === G) {
              G = 0x1;
            }
            if (cc.v2(k, 0x0).sub(cc.v2(D, 0x0)).mag() <= 0x1) {
              this.Rn(Y);
              return D;
            }
            this.Ti("scrolling");
            var m = k + (x *= G) * (D - k);
            if (k >= D) {
              if (m <= D) {
                this.Rn(Y);
                m = D;
              }
            } else if (m >= D) {
              this.Rn(Y);
              m = D;
            }
            return m;
          };
          u.prototype.Rn = function (k) {
            var D = this;
            if (this.isReducingData) {
              this.isReducingData = false;
              this.removeUselessItems(this.newDataCount, function () {
                D.setMasterControl(false);
                D.setSnapDone(true);
                D.stopAutoScroll();
                D.Ti("scroll-ended");
                if (null === D.currentIndex) {
                  var G = D.nn();
                  D.currentIndex = D.outerCellsMatrix[G][0x0].zIndex;
                }
                if (D.snapFinish) {
                  D.snapFinish(D.currentIndex);
                }
                if (k) {
                  k();
                }
              });
            } else {
              this.setMasterControl(false);
              this.setSnapDone(true);
              this.stopAutoScroll();
              this.Ti("scroll-ended");
              if (null === this.currentIndex) {
                var x = this.nn();
                this.currentIndex = this.outerCellsMatrix[x][0x0].zIndex;
              }
              if (this.snapFinish) {
                this.snapFinish(this.currentIndex);
              }
              if (k) {
                k();
              }
            }
          };
          u.prototype.Tn = function (k) {
            var D = 0x0;
            for (var x = 0x0; x <= k; x++) {
              if (k === x) {
                return D;
              }
              D += this.outerCellsMatrix[x].itemCount;
            }
          };
          u.prototype.Xe = function (k) {
            var D = this.outerCellsMatrix.length - 0x1;
            for (var x = 0x0; x <= D; x++) {
              if (!((k -= this.outerCellsMatrix[x].itemCount) >= 0x0)) {
                return x;
              }
              if (x === D) {
                return null;
              }
            }
          };
          u.prototype.destroy = function () {
            this.hi();
            y.prototype.destroy.call(this);
          };
          u.prototype.di = function () {
            this.content.on(cc.Node.EventType.POSITION_CHANGED, this['in'], this);
            if (this.autoSnap) {
              this.node.on("scroll-ended", this._n, this);
            }
            this.node.on(cc.Node.EventType.SIZE_CHANGED, this.ui, this);
          };
          u.prototype.hi = function () {
            this.content.off(cc.Node.EventType.POSITION_CHANGED, this['in'], this);
            if (this.autoSnap) {
              this.node.off("scroll-ended", this._n, this);
            }
            this.node.off(cc.Node.EventType.SIZE_CHANGED, this.ui, this);
          };
          u.prototype.qe = function () {
            this.hn = 0x0;
            this.an = 0x0;
            this.ln = 0x0;
            this.vn = 0x0;
            this.En = [];
            this.kn = [];
            this.Un = 0x0;
            this.Hi = false;
            this.jn = false;
            this.Dn = false;
            this.Wn = cc.v2(0x0, 0x0);
            this.xn = cc.v2(0x0, 0x0);
            this.Fn = 0x0;
            this.Vn = 0x0;
            this.zn = false;
            this.Jn = false;
            this.qn = cc.v2(0x0, 0x0);
            this.Kn = cc.v2(0x0, 0x0);
            this.Qn = true;
            this.Di = false;
            this.Ui = 0x0;
            this.Yn = false;
            this.Xn = 0x0;
            this.Zn = false;
            this.$n = false;
          };
          u.prototype.update = function (k) {
            if (!this.pauseUpdate) {
              if (this.snapPause) {
                this.setSnapDone(true);
                return void this.stopAutoScroll();
              }
              if (!this.snapDone) {
                if (!this.content.children.length) {
                  this.content.setPosition(cc.v2(0x0, 0x0));
                  return void this.setSnapDone(true);
                }
                if (!(this.suddenStopIndex && this.content.children[this.content.children.length - 0x1].zIndex >= this.suddenStopIndex)) {
                  this.stopAutoScroll();
                  return void (this.vertical ? this.content.y = this.bi(this.content.y, this.target, k, this.lerpSpeed) : this.content.x = -0x1 * this.bi(-0x1 * this.content.x, this.target, k, this.lerpSpeed));
                }
                this.setMasterControl(true);
                this.scrollTo(this.suddenStopIndex);
                this.suddenStopIndex = null;
              }
              y.prototype.update.call(this, k);
            }
          };
          u.prototype.Si = function (k, D) {
            this.elastic = this.originalElastic;
            this.touchPos = k.touch.getLocation();
            if (!this.tn && this.content.children.length) {
              this.unschedule(this.Wi);
              this.Di = false;
              this.snapPause = true;
              this.setSnapDone(true);
              y.prototype.Si.call(this, k, D);
            }
          };
          u.prototype.tt = function (k, D) {
            this.elastic = this.originalElastic;
            if (!this.tn && this.content.children.length) {
              if (this.vertical) {
                this.io(k);
              } else {
                this.so(k);
              }
              if (!this.pauseUpdate) {
                y.prototype.tt.call(this, k, D);
              }
            }
          };
          u.prototype.eo = function () {
            if (this.Li && this.Li.getScrollY() > 0x0) {
              if (this.Ee && 0x2 === this.pullDir) {
                this.Ee(0x0);
              }
              if (this.Le && this.cn() <= this.hn) {
                if (!this.pauseUpdate) {
                  this.beginPullPos = cc.v2(0x0, this.Li.getScrollY());
                }
                if ((k = this.beginPullPos.y - this.Li.getScrollY()) > 0x0) {
                  k = 0x0;
                }
                this.Le(Math.abs(k));
                this.pauseUpdate = true;
                this.pullDir = 0x1;
              }
              if (this.content.children[0x0].zIndex > 0x0) {
                this.elastic = true;
              }
            } else if (this.Li && this.Li.getScrollY() < 0x0) {
              var k;
              if (this.Le && 0x1 === this.pullDir) {
                this.Le(0x0);
              }
              if (this.Ee && Math.round(this.rn()) >= Math.round(this.an)) {
                if (!(this.content.children.length && this.content.children[this.content.children.length - 0x1].zIndex !== this.We - 0x1)) {
                  if (!this.pauseUpdate) {
                    this.beginPullPos = cc.v2(0x0, this.Li.getScrollY());
                  }
                  if ((k = this.beginPullPos.y - this.Li.getScrollY()) < 0x0) {
                    k = 0x0;
                  }
                  this.Ee(k);
                  this.pauseUpdate = true;
                  this.pullDir = 0x2;
                }
              }
              if (this.content.children[this.content.children.length - 0x1].zIndex < this.We - 0x1) {
                this.elastic = true;
              }
            }
          };
          u.prototype.Pi = function () {
            if (this.Li && this.Li.getScrollY() > 0x0) {
              if (this.Ee && 0x2 === this.pullDir) {
                this.Te(0x0);
              }
              if (this.Ge && this.dn() <= this.vn) {
                if (!this.pauseUpdate) {
                  this.beginPullPos = cc.v2(this.Li.getScrollY(), 0x0);
                }
                if ((k = this.beginPullPos.x - this.Li.getScrollY()) > 0x0) {
                  k = 0x0;
                }
                this.Ge(Math.abs(k));
                this.pauseUpdate = true;
                this.pullDir = 0x1;
              }
              if (this.content.children[0x0].zIndex > 0x0) {
                this.elastic = true;
              }
            } else if (this.Li && this.Li.getScrollY() < 0x0) {
              var k;
              if (this.Le && 0x1 === this.pullDir) {
                this.Ge(0x0);
              }
              if (this.Te && this.un() >= this.ln) {
                if (!(this.content.children.length && this.content.children[this.content.children.length - 0x1].zIndex !== this.We - 0x1)) {
                  if (!this.pauseUpdate) {
                    this.beginPullPos = cc.v2(this.Li.getScrollY(), 0x0);
                  }
                  if ((k = this.beginPullPos.x - this.Li.getScrollY()) < 0x0) {
                    k = 0x0;
                  }
                  this.Te(k);
                  this.pauseUpdate = true;
                  this.pullDir = 0x2;
                }
              }
              if (this.content.children[this.content.children.length - 0x1].zIndex < this.We - 0x1) {
                this.elastic = true;
              }
            }
          };
          u.prototype.io = function (k) {
            if (this.touchPos.y > k.touch.getLocation().y) {
              if (this.Ee && 0x2 === this.pullDir) {
                this.Ee(0x0);
              }
              if (this.Le && this.cn() <= this.hn) {
                if (!this.pauseUpdate) {
                  this.beginPullPos = k.touch.getLocation();
                }
                if ((D = this.beginPullPos.y - k.touch.getLocation().y) < 0x0) {
                  D = 0x0;
                }
                this.Le(D);
                this.pauseUpdate = true;
                this.pullDir = 0x1;
              }
              if (this.content.children[0x0].zIndex > 0x0) {
                this.elastic = true;
              }
            } else if (this.touchPos.y < k.touch.getLocation().y) {
              var D;
              if (this.Le && 0x1 === this.pullDir) {
                this.Le(0x0);
              }
              if (this.Ee && Math.round(this.rn()) >= Math.round(this.an)) {
                if (!(this.content.children.length && this.content.children[this.content.children.length - 0x1].zIndex !== this.We - 0x1)) {
                  if (!this.pauseUpdate) {
                    this.beginPullPos = k.touch.getLocation();
                  }
                  if ((D = this.beginPullPos.y - k.touch.getLocation().y) > 0x0) {
                    D = 0x0;
                  }
                  this.Ee(Math.abs(D));
                  this.pauseUpdate = true;
                  this.pullDir = 0x2;
                }
              }
              if (this.content.children[this.content.children.length - 0x1].zIndex < this.We - 0x1) {
                this.elastic = true;
              }
            }
          };
          u.prototype.so = function (k) {
            if (this.touchPos.x > k.touch.getLocation().x) {
              if (this.Te && 0x1 === this.pullDir) {
                this.Te(0x0);
              }
              if (this.Ge && this.dn() <= this.vn) {
                if (!(this.content.children.length && this.content.children[this.content.children.length - 0x1].zIndex !== this.We - 0x1)) {
                  if (!this.pauseUpdate) {
                    this.beginPullPos = k.touch.getLocation();
                  }
                  if ((D = this.beginPullPos.x - k.touch.getLocation().x) < 0x0) {
                    D = 0x0;
                  }
                  this.Ge(D);
                  this.pauseUpdate = true;
                  this.pullDir = 0x2;
                }
              }
              if (this.content.children[this.content.children.length - 0x1].zIndex < this.We - 0x1) {
                this.elastic = true;
              }
            } else if (this.touchPos.x < k.touch.getLocation().x) {
              var D;
              if (this.Ge && 0x2 === this.pullDir) {
                this.Ge(0x0);
              }
              if (this.Te && this.un() >= this.ln) {
                if (!this.pauseUpdate) {
                  this.beginPullPos = k.touch.getLocation();
                }
                if ((D = this.beginPullPos.x - k.touch.getLocation().x) > 0x0) {
                  D = 0x0;
                }
                this.Te(Math.abs(D));
                this.pauseUpdate = true;
                this.pullDir = 0x1;
              }
              if (this.content.children[0x0].zIndex > 0x0) {
                this.elastic = true;
              }
            }
          };
          u.prototype.yi = function (k, D) {
            if (this.touchPos.sub(k.touch.getLocation()).mag() >= 0x32) {
              k.stopPropagationImmediate();
            }
            if (!this.tn && this.content.children.length) {
              if (this.pauseUpdate) {
                if (this.vertical) {
                  var x = this.beginPullPos.y - k.touch.getLocation().y;
                  if (this.Re && 0x1 === this.pullDir) {
                    if (x < 0x0) {
                      x = 0x0;
                    }
                    this.Re(x);
                  } else if (this.ke && 0x2 === this.pullDir) {
                    if (x > 0x0) {
                      x = 0x0;
                    }
                    this.ke(Math.abs(x));
                  }
                } else {
                  x = this.beginPullPos.x - k.touch.getLocation().x;
                  if (this.Pe && 0x1 === this.pullDir) {
                    if (x > 0x0) {
                      x = 0x0;
                    }
                    this.Pe(Math.abs(x));
                  } else if (this.Ne && 0x2 === this.pullDir) {
                    if (x < 0x0) {
                      x = 0x0;
                    }
                    this.Ne(x);
                  }
                }
                this.pullDir = null;
              }
              this.snapPause = false;
              this.requestSnap = true;
              y.prototype.yi.call(this, k, D);
            }
          };
          u.prototype.Ii = function (k, D) {
            if (this.touchPos.sub(k.touch.getLocation()).mag() >= 0x32) {
              k.stopPropagationImmediate();
            }
            if (!this.tn && this.content.children.length) {
              if (this.pauseUpdate) {
                if (this.vertical) {
                  var x = this.beginPullPos.y - k.touch.getLocation().y;
                  if (this.Re && 0x1 === this.pullDir) {
                    if (x < 0x0) {
                      x = 0x0;
                    }
                    this.Re(x);
                  } else if (this.ke && 0x2 === this.pullDir) {
                    if (x > 0x0) {
                      x = 0x0;
                    }
                    this.ke(Math.abs(x));
                  }
                } else {
                  x = this.beginPullPos.x - k.touch.getLocation().x;
                  if (this.Pe && 0x1 === this.pullDir) {
                    if (x > 0x0) {
                      x = 0x0;
                    }
                    this.Pe(Math.abs(x));
                  } else if (this.Ne && 0x2 === this.pullDir) {
                    if (x < 0x0) {
                      x = 0x0;
                    }
                    this.Ne(x);
                  }
                }
                this.pullDir = null;
              }
              this.snapPause = false;
              this.requestSnap = true;
              y.prototype.Ii.call(this, k, D);
            }
          };
          u.prototype.Ri = function () {
            this.snapPause = true;
            this.setSnapDone(true);
          };
          u.prototype.Ei = function () {
            if (!this.tn) {
              if (this.pauseUpdate) {
                if (this.vertical) {
                  var k = this.beginPullPos.y - this.Li.getScrollY();
                  if (this.Re && 0x1 === this.pullDir) {
                    if (k > 0x0) {
                      k = 0x0;
                    }
                    this.Re(Math.abs(k));
                  } else if (this.ke && 0x2 === this.pullDir) {
                    if (k < 0x0) {
                      k = 0x0;
                    }
                    this.ke(k);
                  }
                } else {
                  k = this.beginPullPos.x - this.Li.getScrollY();
                  if (this.Pe && 0x1 === this.pullDir) {
                    if (k > 0x0) {
                      k = 0x0;
                    }
                    this.Pe(Math.abs(k));
                  } else if (this.Ne && 0x2 === this.pullDir) {
                    if (k < 0x0) {
                      k = 0x0;
                    }
                    this.Ne(k);
                  }
                }
                this.pullDir = null;
              }
              this.snapPause = false;
              this.requestSnap = true;
              if (this.autoSnap) {
                this._n();
              }
              this.Li = undefined;
            }
          };
          u.prototype.ki = function (k, D) {
            this.elastic = this.originalElastic;
            if (!this.tn && this.content.children.length && this.enabledInHierarchy && !this.no(k, D)) {
              this.Li = k;
              var x = cc.v2(0x0, 0x0);
              if (this.vertical) {
                x = cc.v2(0x0, -0.1 * k.getScrollY());
                this.eo();
              } else if (this.horizontal) {
                x = cc.v2(-0.1 * k.getScrollY(), 0x0);
                this.Pi();
              }
              this.Ui = 0x0;
              this.ji(x);
              if (!this.Di) {
                this.Oi();
                this.schedule(this.Wi, 0.016666666666666666);
                this.Di = true;
                this.Ri();
              }
              this.Bi(k);
            }
          };
          u.prototype.Wi = function (k) {
            if (!this.tn) {
              var D = this.xi();
              if (!D.fuzzyEquals(cc.v2(0x0, 0x0), 0.0001)) {
                this.Fi();
                this.unschedule(this.Wi);
                this.Di = false;
                return void this.Ei();
              }
              this.Ui += k;
              if (this.Ui > 0.1) {
                this.Vi();
                this.unschedule(this.Wi);
                this.Di = false;
                this.Ei();
              }
            }
          };
          u.prototype.oo = function (k) {
            var D = this.co();
            var x = D ? 0.05 : 0x1;
            this.Vn += k * (0x1 / x);
            var G;
            var Y = Math.min(0x1, this.Vn / this.Fn);
            if (this.Dn) {
              G = Y;
              Y = (G -= 0x1) * G * G * G * G + 0x1;
            }
            var m = this.Wn.add(this.xn.mul(Y));
            var W = Y > 0.5;
            if (Math.abs(Y - 0x1) <= this.getScrollEndedEventTiming() && !this.Yn) {
              this.Ti("scroll-ended-with-threshold");
              this.Yn = true;
            }
            if (this.elastic) {
              var F = m.sub(this.qn);
              if (D) {
                F = F.mul(x);
              }
              m = this.qn.add(F);
            } else {
              var E = m.sub(this.getContentPosition());
              var v = this.xi(E);
              if (!v.fuzzyEquals(cc.v2(0x0, 0x0), 0.0001)) {
                m = m.add(v);
                W = true;
              }
            }
            if (W) {
              this.jn = false;
            }
            var I = m.sub(this.getContentPosition());
            this.ho(this.ro(I), W);
            this.Ti("scrolling");
            if (!this.jn) {
              this.Zn = false;
              this.$n = false;
              this.Ti("scroll-ended");
            }
          };
          u.prototype.no = function () {
            return false;
          };
          u.prototype.Fi = function () {
            if (!this.ao() && this.inertia) {
              var k = this.uo();
              if (!k.fuzzyEquals(cc.v2(0x0, 0x0), 0.0001) && this.brake < 0x1) {
                this.lo(k);
              } else if (this.autoSnap) {
                this._n();
              }
            }
            this.Vi();
          };
          return __decorate([J], u);
        }(S["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, RB],
    'HitPassThrough': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "c55eeQvpvBJQ70BFU5konXG", "HitPassThrough")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S;
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        (function (A) {
          A.Qi = "_hitTest";
        })(S || (S = {}));
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.passPoint = cc.v2(0x0, 0x0);
            b.passSize = cc.size(0x0, 0x0);
            return b;
          }
          __extends(y, A);
          y.prototype.onEnable = function () {
            var b = this;
            this.fo = this.node[S.Qi];
            this.node[S.Qi] = function (k, D) {
              if (!b.fo.call(this, k, D)) {
                return false;
              }
              var x = b.passPoint.x + this.x - b.passSize.width / 0x2;
              var G = b.passPoint.y + this.y - b.passSize.height / 0x2;
              for (var Y = this.getParent(); null !== Y; Y = Y.parent) {
                x += Y.x;
                G += Y.y;
              }
              var m = b.passSize.width;
              var W = b.passSize.height;
              var F = k.x - x;
              var E = x + m - k.x;
              var v = G + W - k.y;
              var I = k.y - G;
              return !(F >= 0x0 && E >= 0x0 && v >= 0x0 && I >= 0x0);
            };
          };
          y.prototype.onDisable = function () {
            this.node[S.Qi] = this.fo;
            this.fo = undefined;
          };
          __decorate([f(cc.Vec2)], y.prototype, "passPoint", undefined);
          __decorate([f(cc.Size)], y.prototype, "passSize", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, {}],
    'IdleState': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "9928eUmiH5DjJzRecinmoRP", "IdleState")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("AutoSpinHandler");
        var q = B("SlotGameConstants");
        var N = B("SlotAnalyticsEnum");
        var J = B("SystemFeatureHandler");
        var A = B("AnalyticsHelper");
        var y = B("GameEventHandler");
        var b = B("ButtonHitTest");
        var k = B("WalletHelper");
        var D = B("SettingMenuHelper");
        var x = B("Utils");
        var G = B("JakeSlotGameTemplate");
        var Y = B("SpinButtonController");
        var m = function () {
          function W(F, E, I, w) {
            if (undefined === w) {
              w = q.DEFAULT_AUTO_SPIN_DELAY_TIME;
            }
            this.name = "Idle";
            this.dataSource = F;
            this.generalControllers = E.generalControllers;
            this.finalCallback = I;
            this['do'] = {
              'dataSource': this.dataSource,
              'autoSpinCount': S.getAutoSpinCount(),
              'walletHelper': k.walletHelper,
              'settingMenuHelper': D.settingMenuHelper,
              'exitAutoSpinHandler': this.vo.bind(this),
              'callback': this.tryAutoSpin.bind(this)
            };
            this._o = w;
          }
          W.prototype.run = function () {
            var F = this.mo();
            J.handleSystemEvent(F);
          };
          W.prototype.destroy = function () {
            this.additionalDestroyCleanups();
            this.disableSpinAction();
            this.po();
            this.dataSource = undefined;
            this.finalCallback = undefined;
            this.generalControllers = undefined;
          };
          W.prototype.tryAutoSpin = function () {
            var F = this;
            var E = this.generalControllers.spinButtonController;
            this.bo();
            if (E.isAutoSpin()) {
              var I = this.dataSource;
              var w = I.playerModel.balance;
              var j = I.transactionModel.accumulatedWinAmount;
              var Z = D.settingMenuHelper.isBalanceHitTargetInAutoSpinMode(j, w);
              if (!S.shouldAutoSpin() || Z) {
                this.vo();
                this.So();
              } else {
                var X = this.Co(this.yo.bind(this));
                this.Mo(function () {
                  F.enableSpinAction();
                  if (X) {
                    X();
                  }
                });
              }
            } else {
              this.So();
            }
          };
          W.prototype.bo = function () {
            y.setGamePauseEventCallback(this.name, this.Ao.bind(this));
          };
          W.prototype.Ao = function () {
            if (this.Io) {
              this.po();
            }
            y.emitGameNotifyPauseEvent();
          };
          W.prototype.wo = function () {
            y.removeGamePauseEventCallback(this.name);
          };
          W.prototype.Mo = function (F) {
            y.setGameResumeEventCallback(this.name, F);
          };
          W.prototype.Co = function (F) {
            var E = y.isGameStatePaused() ? 0x1 : 0x0;
            return function () {
              if (F) {
                F(E);
              }
            };
          };
          W.prototype.Oo = function () {
            y.removeGameResumeEventCallback(this.name);
          };
          W.prototype.So = function () {
            var F = this.generalControllers.spinButtonController;
            F.enableButton();
            F.idle();
            this.onStateFullyIdle();
            this.Ho();
            this.enableAvailableActions();
            this.Mo(this.enableSpinAction.bind(this));
          };
          W.prototype.Bo = function (F) {
            if (this.generalControllers.spinButtonController.isAutoSpin()) {
              this.vo();
              this.So();
            } else {
              this.Go(F);
            }
          };
          W.prototype.No = function (F) {
            if (!G.JSGTConfig.spaceBarInterrupterEnabled && b.buttonHitTest(this.generalControllers.spinButtonController.node)) {
              switch (F.keyCode) {
                case q.SPIN_BUTTON_TRIGGER_KEY:
                  this.Bo(N.SpinTrigger.SPACEBAR);
              }
            }
          };
          W.prototype.Go = function (F) {
            var E = this;
            var I = this.generalControllers.spinButtonController;
            if (!(I && I.mode === Y.SpinButtonMode.DISABLED)) {
              this.wo();
              this.Oo();
              this.preStartSpinAction(function () {
                J.checkSpinValidity({
                  'getCostPerSpinFunction': E.getCostPerSpin.bind(E),
                  'dataSource': E.dataSource,
                  'walletHelper': k.walletHelper,
                  'callback': function (w) {
                    switch (w) {
                      case N.SpinCredits.FREE_GAME:
                        D.settingMenuHelper.setWinAmount(0x0);
                        k.walletHelper.spin();
                        if (I.isAutoSpin()) {
                          S.decrementAutoSpinCount(I);
                        }
                        E.Is(F);
                        break;
                      case N.SpinCredits.CASH:
                      case N.SpinCredits.BONUS:
                        E.To();
                        if (I.isAutoSpin()) {
                          S.decrementAutoSpinCount(I);
                        }
                        E.Is(F);
                    }
                  }
                });
              });
            }
          };
          W.prototype.po = function () {
            var F = this.Io;
            this.Io = undefined;
            if (F) {
              F();
            }
          };
          W.prototype.Is = function (F) {
            if (!this.dataSource.isGameReplaying) {
              var E = D.settingMenuHelper.turboSpinOn ? "Turbo" : "Normal";
              var I = F === N.SpinTrigger.AUTOSPIN ? "Auto" : "Manual";
              var w = {
                actionName: '' + E + I + "Spin"
              };
              A.sendAnalyticsEvent(w);
            }
            this.disableAvailableActions();
            this.Po();
            this.disableSpinAction();
            this.preExitStateCleanups();
            var j = this.finalCallback;
            this.finalCallback = undefined;
            this.destroy();
            x.deferCallback(true)(function () {
              x.deferCallback(true)(j);
            });
          };
          W.prototype.onStateFullyIdle = function () {};
          W.prototype.additionalDestroyCleanups = function () {};
          W.prototype.preExitStateCleanups = function () {};
          W.prototype.enableAvailableActions = function () {};
          W.prototype.disableAvailableActions = function () {};
          W.prototype.preStartSpinAction = function (F) {
            if (F) {
              F();
            }
          };
          W.prototype.defineSystemEventConfigParam = function () {
            return {};
          };
          W.prototype.mo = function () {
            var F = this.defineSystemEventConfigParam();
            return Object.assign(this['do'], F);
          };
          W.prototype.Ho = function () {
            D.settingMenuHelper.autoSpinCallback = this.Lo.bind(this);
            D.settingMenuHelper.setAllButtonsInteractable(true);
          };
          W.prototype.Po = function () {
            D.settingMenuHelper.autoSpinCallback = undefined;
            D.settingMenuHelper.setAllButtonsInteractable(false);
          };
          W.prototype.enableSpinAction = function () {
            this.generalControllers.spinButtonController.setOnClickCallback(this.Bo.bind(this, N.SpinTrigger.CLICK));
            if (!G.JSGTConfig.spaceBarInterrupterEnabled) {
              cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
            }
          };
          W.prototype.disableSpinAction = function () {
            this.generalControllers.spinButtonController.clearOnClickCallback();
            if (!G.JSGTConfig.spaceBarInterrupterEnabled) {
              cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
            }
          };
          W.prototype.Lo = function () {
            var F = this;
            var E = D.settingMenuHelper.autoSpinCount;
            var I = D.settingMenuHelper.singleWinAmount;
            var w = D.settingMenuHelper.balanceAmountMoreThan;
            var j = D.settingMenuHelper.balanceAmountLessThan;
            var Z = {
              count: E,
              single_win: I,
              increment: w,
              decrement: j
            };
            A.sendEvent(shell.ga.CATEGORY_GAME, shell.ga.EVENT_SLOT_AUTO_SPIN, Z);
            this.Po();
            this.disableAvailableActions();
            S.startAutoSpin(E, this.generalControllers.spinButtonController, function () {
              F.Mo(F.yo.bind(F, F._o));
            });
          };
          W.prototype.vo = function () {
            var F = this.generalControllers.spinButtonController;
            S.exitAutoSpin(F);
            F.idle();
            this.po();
            this.enableAvailableActions();
            this.Ho();
            this.Mo(this.enableSpinAction.bind(this));
          };
          W.prototype.yo = function (F) {
            var E = this.dataSource.transactionModel.accumulatedWinAmount > 0x0 ? 0x0 : this._o;
            E = F || E;
            this.Io = x.delayCallback(E)(this.Go.bind(this, N.SpinTrigger.AUTOSPIN));
          };
          W.prototype.getCostPerSpin = function () {
            var F = this.dataSource.systemModel.maxLineNumber;
            var E = this.dataSource.transactionModel;
            var I = E.betSizeValue;
            var w = E.betLevelValue;
            return x.toDecimalWithExp(I * w * F, 0x2);
          };
          W.prototype.To = function () {
            var F = this.getCostPerSpin();
            D.settingMenuHelper.setWinAmount(0x0);
            k.walletHelper.spin(F);
          };
          return W;
        }();
        C["default"] = m;
        cc._RF.pop();
      }
    }, RR],
    'InfoboardController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "d9237cyY11EsrptxXomkPBH", "InfoboardController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.InfoboardBgState = C.InfoBoardState = undefined;
        var S;
        var q = B("AnalyticsHelper");
        var N = B("Utils");
        var J = B("SkipHandler");
        var A = B("InfoboardMessageController");
        var y = B("SymbolImageHandler");
        var b = B("GeneralAudioConstant");
        var k = B("AudioManager");
        var D = B("GConstants");
        (function (W) {
          W[W.SHOWING_MESSAGE = 0x0] = "SHOWING_MESSAGE";
          W[W.SHOWING_WIN = 0x1] = "SHOWING_WIN";
          W[W.SHOWING_ROLL = 0x2] = "SHOWING_ROLL";
          W[W.SHOWING_EVENT = 0x3] = "SHOWING_EVENT";
        })(S = C.InfoBoardState || (C.InfoBoardState = {}));
        (function (W) {
          W[W.LEVEL_ONE = 0x0] = "LEVEL_ONE";
          W[W.LEVEL_TWO = 0x1] = "LEVEL_TWO";
        })(C.InfoboardBgState || (C.InfoboardBgState = {}));
        var x = cc._decorator;
        var G = x.ccclass;
        var Y = x.property;
        var m = function (W) {
          function F() {
            var E = null !== W && W.apply(this, arguments) || this;
            E.numberDisplayNode = undefined;
            E.winDisplayNode = undefined;
            E.infoboardMessageController = undefined;
            E.coins = undefined;
            E.particle = undefined;
            E.shine = undefined;
            E.dispenser = undefined;
            E.glow = undefined;
            E.infoboardHolder = undefined;
            E.level2Infoboard = undefined;
            E.level3Infoboard = undefined;
            E.leftMask = undefined;
            E.rightMask = undefined;
            E.multiplier = undefined;
            E.multiplier2 = undefined;
            E.multiplier2Ten = undefined;
            E.multiplier2Shine = undefined;
            E.multiplier2Particle = undefined;
            E.sparkle = undefined;
            E.sparkle2 = undefined;
            E.firstPart = undefined;
            E.secondPart = undefined;
            E.symbolSprite = undefined;
            E.dynamicMessage = undefined;
            E.message = undefined;
            E.Ro = [];
            E.Eo = [];
            E.ko = undefined;
            E.Uo = undefined;
            E.jo = undefined;
            E.Do = undefined;
            E.Wo = undefined;
            E.xo = undefined;
            E.Fo = undefined;
            E.Vo = undefined;
            E.zo = {};
            E.Jo = 0x0;
            E.qo = -0x1;
            return E;
          }
          __extends(F, W);
          F.prototype.init = function () {
            this.Ro.length = 0x0;
            if (shell.isRTLLanguage()) {
              this.Jo = 0x1;
              this.qo = 0x1;
              this.dynamicMessage.getComponent(cc.Layout).horizontalDirection = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT;
            }
          };
          F.prototype.destroy = function () {
            this._t();
            return W.prototype.destroy.call(this);
          };
          Object.defineProperty(F.prototype, "infoboardState", {
            'get': function () {
              return this.Vo;
            },
            'enumerable': false,
            'configurable': true
          });
          F.prototype._t = function () {
            var E = this.xo;
            this.xo = undefined;
            if (E) {
              E();
            }
            cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.quickStopMediumWin, this);
          };
          F.prototype.getInfoboardWorldPosition = function () {
            return this.node.convertToWorldSpaceAR(cc.v2(0x0, 0x0));
          };
          F.prototype.setLocalizedSprites = function (E) {
            this.Ro.length = 0x0;
            this.Eo.length = 0x0;
            this.Ro.push(E.getSpriteFrame("info_main1"), E.getSpriteFrame("info_main2"), E.getSpriteFrame("info_main3"));
            this.ko = E.getSpriteFrame("info_bns");
            this.Uo = E.getSpriteFrame("info_respin1");
            this.jo = E.getSpriteFrame("info_respin2");
            this.firstPart.spriteFrame = this.Uo;
            this.secondPart.spriteFrame = this.jo;
          };
          F.prototype.setLocalizedWinAndTotalWinSprites = function (E) {
            var I = E.getSpriteFrame("info_win");
            var w = E.getSpriteFrame("info_tw");
            this.infoboardMessageController.setLocalizedSpriteFrame(I, w);
          };
          F.prototype.setThreshold = function (E) {
            this.zo = E;
          };
          F.prototype.playZoom = function () {
            this.dynamicMessage.stopAllActions();
            this.dynamicMessage.active = false;
            this.message.active = true;
            var E = this.ko;
            this.infoboardMessageController.setSprites([E]);
            if (this.Vo !== S.SHOWING_ROLL) {
              this.infoboardMessageController.clearNumberRoll();
            } else if (this.Vo === S.SHOWING_MESSAGE) {
              this.infoboardMessageController.clear(true);
            }
            this.infoboardMessageController.clearDisplayNumber();
            this.infoboardMessageController.setTotalAndWinText(false, false);
            this.Ko();
          };
          F.prototype.playRespin = function (E) {
            var I = this;
            if (false !== this.message.active) {
              this.symbolSprite.spriteFrame = y.symbolImageHandler.symbolImages[E];
              this.dynamicMessage.active = true;
              this.message.active = false;
              this.dynamicMessage.stopAllActions();
              N.deferCallback()(function () {
                var w = I.infoboardMessageController.maskNode.width;
                var j = I.infoboardMessageController.padding;
                if (I.dynamicMessage.width * I.dynamicMessage.scaleY + 0x2 * j > w) {
                  var Z = I.qo;
                  I.dynamicMessage.setAnchorPoint(I.Jo, I.dynamicMessage.anchorY);
                  I.dynamicMessage.setPosition(cc.v2((w / 0x2 - j) * Z, I.dynamicMessage.y));
                  I.Do = I.dynamicMessage.position;
                  var X = I.dynamicMessage.width * I.dynamicMessage.scaleY + 0x2 * j;
                  var V = cc.delayTime(1.5);
                  var H = cc.moveBy(X / 0x82, cc.v2(X * Z, 0x0));
                  var z = cc.sequence(V, H, cc.callFunc(function () {
                    I.dynamicMessage.position = I.Do;
                  })).repeatForever();
                  I.dynamicMessage.runAction(z);
                }
              });
              this.infoboardMessageController.clear(true);
              if (this.Vo !== S.SHOWING_ROLL) {
                this.infoboardMessageController.clearNumberRoll();
              }
              this.infoboardMessageController.clearDisplayNumber();
              this.infoboardMessageController.setTotalAndWinText(false, false);
              this.Ko();
            }
          };
          F.prototype.resetInfoboard = function (E) {
            this.dynamicMessage.stopAllActions();
            this.message.active = true;
            this.dynamicMessage.active = false;
            var I = E ? this.Eo.slice() : this.Ro.slice();
            this.infoboardMessageController.setSprites(I);
            if (this.Vo !== S.SHOWING_ROLL) {
              this.infoboardMessageController.clearNumberRoll();
            } else if (this.Vo === S.SHOWING_MESSAGE) {
              this.infoboardMessageController.clear(true);
            }
            this.infoboardMessageController.clearDisplayNumber();
            this.infoboardMessageController.setTotalAndWinText(false, false);
            this.Ko();
          };
          F.prototype.resumeInfoboard = function (E) {
            if (undefined === E) {
              E = 0x0;
            }
            var I = this.Qo;
            this.Qo = undefined;
            if (I) {
              I();
            }
            if (E > 0x0) {
              this.Qo = N.delayCallback(E)(this.Yo.bind(this));
            } else {
              this.Yo();
            }
          };
          F.prototype.deactivateInfoboardMessage = function () {
            this.infoboardMessageController.hideInfoboardMessage();
          };
          F.prototype.playWin = function (E, I) {
            if (undefined === I) {
              I = false;
            }
            var w = this.Qo;
            this.Qo = undefined;
            if (w) {
              w();
            }
            this.infoboardMessageController.showDisplayNumber(E, false);
            this.infoboardMessageController.setTotalAndWinText(I, !I);
            this.infoboardMessageController.unscheduleRandomSpriteTips();
            if (this.Vo === S.SHOWING_MESSAGE) {
              this.deactivateInfoboardMessage();
            }
            this.Vo = S.SHOWING_WIN;
          };
          F.prototype.playDynamicWin = function (E, I) {
            if (undefined === I) {
              I = false;
            }
            this.Xo();
            if (E >= this.zo.bigWinThreshold) {
              this.level3Infoboard.active = true;
              this.level3Infoboard.opacity = 0xff;
              this.level2Infoboard.active = false;
              this.level2Infoboard.opacity = 0x0;
              this.leftMask.active = false;
              this.rightMask.active = false;
              this.shine.node.position = cc.v3(0x0, 0x23);
              this.shine.node.setScale(3.3, 3.3);
              this.shine.play("infoboard_c3");
            } else if (E >= this.zo.mediumWinThreshold) {
              this.level2Infoboard.active = true;
              this.level2Infoboard.opacity = 0xff;
              this.level3Infoboard.active = false;
              this.level3Infoboard.opacity = 0x0;
              this.leftMask.active = false;
              this.rightMask.active = false;
            } else {
              this.level2Infoboard.active = false;
              this.level2Infoboard.opacity = 0x0;
              this.level3Infoboard.active = false;
              this.level3Infoboard.opacity = 0x0;
              this.leftMask.active = true;
              this.rightMask.active = true;
            }
            this.playWin(E, I);
          };
          F.prototype.playTotalWin = function (E, I) {
            var w = this.Qo;
            this.Qo = undefined;
            if (w) {
              w();
            }
            this.infoboardMessageController.showDisplayNumber(E, false);
            this.infoboardMessageController.setTotalAndWinText(true, false);
            this.infoboardMessageController.unscheduleRandomSpriteTips();
            if (this.Vo === S.SHOWING_MESSAGE) {
              this.deactivateInfoboardMessage();
            }
            this.Vo = S.SHOWING_WIN;
            if (I) {
              I();
            }
          };
          F.prototype.playSmallWin = function (E, I) {
            this.infoboardMessageController.clearNumberRoll();
            this.playWin(E);
            N.spawnCallback(this.Xo.bind(this), this.Zo.bind(this))(function () {
              if (I) {
                I();
              }
            });
          };
          F.prototype.Xo = function (E) {
            this.infoboardHolder.stopAllActions();
            this.infoboardHolder.scale = 0x1;
            this.infoboardHolder.runAction(cc.sequence(cc.scaleTo(0.2, 1.05).easing(cc.easeCircleActionOut()), cc.scaleTo(0.2, 0x1).easing(cc.easeCircleActionOut()), cc.delayTime(0.3), cc.callFunc(function () {
              if (E) {
                E();
              }
            })));
            this.coins.play();
            this.particle.play();
            this.sparkle.play();
            this.sparkle2.play();
            this.shine.node.position = cc.v3(0x0, 0x0);
            this.shine.node.setScale(3.3, 3.3);
            this.shine.play();
            this.dispenser.play();
            this.glow.runAction(cc.fadeTo(0.25, 0x9b));
          };
          F.prototype.playMediumWin = function (E, I, w) {
            this.$o = undefined;
            this.Wo = I;
            this.Fo = w;
            this.tc(E);
            this.infoboardHolder.stopAllActions();
            this.infoboardHolder.scale = 0x1;
            this.infoboardHolder.runAction(cc.sequence(cc.scaleTo(0.2, 1.05).easing(cc.easeCircleActionOut()), cc.scaleTo(0.2, 0x1).easing(cc.easeCircleActionOut())));
            this.ic();
            this.xo = J["default"].subscribeOnce(this.quickStopMediumWin.bind(this));
            cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.quickStopMediumWin, this);
            cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.quickStopMediumWin, this);
          };
          F.prototype.instantPlayMediumWin = function (E) {
            this.playWin(E, true);
          };
          F.prototype.ic = function () {
            this.leftMask.active = false;
            this.rightMask.active = false;
            this.coins.stop();
            this.coins.setCurrentTime(0x0);
            this.coins.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.particle.stop();
            this.particle.setCurrentTime(0x0);
            this.particle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.sparkle.stop();
            this.sparkle.setCurrentTime(0x0);
            this.sparkle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.sparkle2.stop();
            this.sparkle2.setCurrentTime(0x0);
            this.sparkle2.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.shine.stop();
            this.shine.setCurrentTime(0x0);
            this.shine.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.dispenser.stop();
            this.dispenser.setCurrentTime(0x0);
            this.dispenser.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.glow.stopAllActions();
            this.glow.opacity = 0x0;
            this.level2Infoboard.stopAllActions();
            this.level2Infoboard.active = true;
            this.level2Infoboard.opacity = 0x0;
            this.level2Infoboard.runAction(cc.fadeIn(0.2));
            this.coins.play();
            this.particle.play();
            this.sparkle.play();
            this.sparkle2.play();
            this.shine.node.position = cc.v3(0x0, 0x28);
            this.shine.node.setScale(3.35, 3.7);
            this.shine.play("infoboard_c2");
            this.dispenser.play();
            this.glow.runAction(cc.fadeTo(0.25, 0x96));
          };
          F.prototype.Zo = function (E) {
            var I = this.winDisplayNode;
            I.scaleX = I.scaleY = 0x1;
            I.stopAllActions();
            I.runAction(cc.sequence(cc.delayTime(0.1), cc.scaleTo(0.1, 1.15), cc.scaleTo(0.2, 0x1).easing(cc.easeBackInOut()), cc.callFunc(function () {
              if (E) {
                E();
              }
            })));
          };
          F.prototype.playBigWin = function (E, I) {
            this.playDynamicWin(E);
            this.Zo(I);
          };
          F.prototype.quickStopMediumWin = function () {
            var E = b.GENERAL_AUDIO.prizeMedwinMain.key;
            k.stopAudioIfPlaying(E);
            this.sparkle.play();
            this.sparkle2.play();
            this.particle.play();
            this.infoboardHolder.stopAllActions();
            this.infoboardHolder.scale = 0x1;
            this.infoboardHolder.runAction(cc.sequence(cc.scaleTo(0.2, 1.05).easing(cc.easeCircleActionOut()), cc.scaleTo(0.2, 0x1).easing(cc.easeCircleActionOut())));
            var I = this.Fo;
            this.Fo = undefined;
            if (I) {
              I();
            }
            if (this.Wo) {
              var w = this.xo;
              this.xo = undefined;
              if (w) {
                w();
              }
              cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.quickStopMediumWin, this);
              this.Yt();
              this.playWin(this.Wo, true);
              this.sc();
              this.infoboardMessageController.clearNumberRoll();
            }
          };
          F.prototype.tc = function (E) {
            if (undefined === E) {
              E = 0x0;
            }
            var I = b.GENERAL_AUDIO.prizeMedwinMain.key;
            k.stopAudioIfPlaying(I);
            k.playAudioIfNotPlaying(I);
            this.infoboardMessageController.unscheduleRandomSpriteTips();
            this.infoboardMessageController.setTotalAndWinText(false, true);
            if (this.Vo === S.SHOWING_MESSAGE) {
              this.deactivateInfoboardMessage();
            }
            this.Vo = S.SHOWING_ROLL;
            this.infoboardMessageController.showNumberRoll(1.488, E, this.Wo, this.ec.bind(this), !this.numberDisplayNode.active);
          };
          F.prototype.ec = function () {
            var E = this.xo;
            this.xo = undefined;
            if (E) {
              E();
            }
            cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.quickStopMediumWin, this);
            this.sc();
          };
          F.prototype.sc = function () {
            var E = this;
            var I = b.GENERAL_AUDIO.prizeMedwinEnd.key;
            k.stopAudioIfPlaying(I);
            k.playAudioIfNotPlaying(I);
            this.playWin(this.Wo, false);
            this.particle.play();
            this.sparkle.play();
            this.sparkle2.play();
            this.infoboardHolder.stopAllActions();
            this.infoboardHolder.scale = 0x1;
            this.infoboardHolder.runAction(cc.sequence(cc.scaleTo(0.2, 1.05).easing(cc.easeCircleActionOut()), cc.scaleTo(0.2, 0x1).easing(cc.easeCircleActionOut())));
            this.Zo(function () {
              var w = E.Fo;
              E.Fo = undefined;
              if (w) {
                w();
              }
            });
          };
          F.prototype.hideMediumWinEffect = function (E) {
            if (E) {
              E();
            }
          };
          F.prototype.instantHideMediumWin = function () {};
          F.prototype.Yo = function () {
            if (this.Vo !== S.SHOWING_ROLL) {
              this.infoboardMessageController.clearNumberRoll();
              this.infoboardMessageController.showInfoboardMessage();
            }
            this.infoboardMessageController.clearDisplayNumber();
            this.Vo = S.SHOWING_MESSAGE;
            this.infoboardMessageController.playScheduleRandomSpriteTips();
            this.infoboardMessageController.setTotalAndWinText(false, false);
            this.Ko();
          };
          F.prototype.Yt = function () {
            var E = shell.ga;
            var I = {
              type: "Medium Prize"
            };
            q.sendEvent(E.CATEGORY_GAME, E.EVENT_SLOT_SKIP_EFFECT, I);
          };
          F.prototype.playMultiplier = function (E, I) {
            var w = this;
            var j = cc.v3(0x0, 0x3f7);
            this.multiplier.position = j;
            this.multiplier.scale = 3.5;
            this.multiplier.opacity = 0xff;
            var Z = b.GENERAL_AUDIO.multiFly.key;
            k.stopAudioIfPlaying(Z);
            k.playAudioIfNotPlaying(Z);
            this.multiplier.runAction(cc.sequence(cc.spawn(cc.moveTo(0x1, cc.v2(0x0, 0x0)).easing(cc.easeQuinticActionIn()), cc.scaleTo(0.8, 0x5).easing(cc.easeQuinticActionIn())), cc.spawn(cc.fadeOut(0.5), cc.callFunc(function () {
              w.multiplier.scale = 0x0;
              if (I) {
                I();
              }
            }), cc.scaleTo(0x2, 0x5))));
          };
          F.prototype.playNormalMultiplier = function (E) {
            var I = this;
            this.multiplier2Particle.stop();
            this.multiplier2Particle.setCurrentTime(0x0);
            this.multiplier2Particle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.multiplier2.position = cc.v3(-0x122, 0x4b0);
            this.multiplier2.scale = 0x1;
            this.multiplier2Ten.scale = 0x0;
            this.multiplier2.active = true;
            this.multiplier2Shine.color = D.BLACK;
            var w = b.GENERAL_AUDIO.multiAppearWoRespin.key;
            k.stopAudioIfPlaying(w);
            k.playAudioIfNotPlaying(w);
            this.multiplier2Particle.play();
            this.multiplier2.runAction(cc.sequence(cc.targetedAction(this.multiplier2Ten, cc.scaleTo(0.25, 0.7)), cc.spawn(cc.targetedAction(this.multiplier2Shine, cc.tintTo(0.5, D.WHITE)), cc.targetedAction(this.multiplier2Ten, cc.scaleTo(0.1, 0.6))), cc.delayTime(0.7), cc.callFunc(function () {
              var j = b.GENERAL_AUDIO.multiFly.key;
              k.stopAudioIfPlaying(j);
              k.playAudioIfNotPlaying(j);
            }), cc.bezierTo(0.5, [cc.v2(-0x122, 0x4b0), cc.v2(0x64, 0x3e8), cc.v2(0x0, 0x0)]), cc.callFunc(function () {
              I.multiplier2.active = false;
              if (E) {
                E();
              }
            })));
          };
          F.prototype.Ko = function () {
            this.multiplier.stopAllActions();
            this.multiplier.scale = 0x0;
            this.level2Infoboard.active = false;
            this.level2Infoboard.opacity = 0x0;
            this.level2Infoboard.stopAllActions();
            this.level3Infoboard.active = false;
            this.level3Infoboard.opacity = 0x0;
            this.leftMask.active = true;
            this.rightMask.active = true;
            this.infoboardHolder.stopAllActions();
            this.infoboardHolder.runAction(cc.scaleTo(0.2, 0x1));
            this.coins.stop();
            this.coins.setCurrentTime(0x0);
            this.coins.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.particle.stop();
            this.particle.setCurrentTime(0x0);
            this.particle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.sparkle.stop();
            this.sparkle.setCurrentTime(0x0);
            this.sparkle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.sparkle2.stop();
            this.sparkle2.setCurrentTime(0x0);
            this.sparkle2.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.shine.stop();
            this.shine.setCurrentTime(0x0);
            this.shine.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.dispenser.stop();
            this.dispenser.setCurrentTime(0x0);
            this.dispenser.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.glow.stopAllActions();
            this.glow.opacity = 0x0;
          };
          __decorate([Y(cc.Node)], F.prototype, "numberDisplayNode", undefined);
          __decorate([Y(cc.Node)], F.prototype, "winDisplayNode", undefined);
          __decorate([Y(A["default"])], F.prototype, "infoboardMessageController", undefined);
          __decorate([Y(cc.Animation)], F.prototype, "coins", undefined);
          __decorate([Y(cc.Animation)], F.prototype, "particle", undefined);
          __decorate([Y(cc.Animation)], F.prototype, "shine", undefined);
          __decorate([Y(cc.Animation)], F.prototype, "dispenser", undefined);
          __decorate([Y(cc.Node)], F.prototype, "glow", undefined);
          __decorate([Y(cc.Node)], F.prototype, "infoboardHolder", undefined);
          __decorate([Y(cc.Node)], F.prototype, "level2Infoboard", undefined);
          __decorate([Y(cc.Node)], F.prototype, "level3Infoboard", undefined);
          __decorate([Y(cc.Node)], F.prototype, "leftMask", undefined);
          __decorate([Y(cc.Node)], F.prototype, "rightMask", undefined);
          __decorate([Y(cc.Node)], F.prototype, "multiplier", undefined);
          __decorate([Y(cc.Node)], F.prototype, "multiplier2", undefined);
          __decorate([Y(cc.Node)], F.prototype, "multiplier2Ten", undefined);
          __decorate([Y(cc.Node)], F.prototype, "multiplier2Shine", undefined);
          __decorate([Y(cc.Animation)], F.prototype, "multiplier2Particle", undefined);
          __decorate([Y(cc.Animation)], F.prototype, "sparkle", undefined);
          __decorate([Y(cc.Animation)], F.prototype, "sparkle2", undefined);
          __decorate([Y(cc.Sprite)], F.prototype, "firstPart", undefined);
          __decorate([Y(cc.Sprite)], F.prototype, "secondPart", undefined);
          __decorate([Y(cc.Sprite)], F.prototype, "symbolSprite", undefined);
          __decorate([Y(cc.Node)], F.prototype, "dynamicMessage", undefined);
          __decorate([Y(cc.Node)], F.prototype, "message", undefined);
          return __decorate([G], F);
        }(cc.Component);
        C["default"] = m;
        cc._RF.pop();
      }
    }, Rl],
    'InfoboardMessageController.spec': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "9a894aU+wtPzI8aYY1BbeiI", "InfoboardMessageController.spec")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.setWinAmount = Q.setTotalAndWinText = undefined;
        Q.setTotalAndWinText = function (K, S) {
          if (K || S) {
            var q = System.get("automation") && System.get("automation").GameData;
            if (q) {
              q.emit(K ? "ShowTotalWin" : "ShowWin");
            }
          }
        };
        Q.setWinAmount = function (K, S) {
          if (K && K > 0x0) {
            var q = System.get("automation") && System.get("automation").GameData;
            if (q) {
              q.emit(S ? "ShowTotalWin" : "ShowWin");
            }
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'InfoboardMessageController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "f962cm61b9P6rw9Yco9B/O4", "InfoboardMessageController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.InfoboardMessageOrderState = undefined;
        var S;
        var q;
        var N = B("NumberDisplayController");
        var J = B("NumberRollController");
        var A = B("Utils");
        var y = B("AutomationDecorator");
        var b = B("InfoboardMessageController.spec");
        (function (Y) {
          Y[Y.SEQUENCE = 0x0] = "SEQUENCE";
          Y[Y.RANDOM = 0x1] = "RANDOM";
        })(S = C.InfoboardMessageOrderState || (C.InfoboardMessageOrderState = {}));
        (function (Y) {
          Y.nc = "_fntConfig";
        })(q || (q = {}));
        var k = cc._decorator;
        var D = k.ccclass;
        var x = k.property;
        var G = function (Y) {
          function m() {
            var Z = null !== Y && Y.apply(this, arguments) || this;
            Z.maskNode = undefined;
            Z.padding = 0x28;
            Z.label = undefined;
            Z.winLabelColor = new cc.Color();
            Z.winLabelOutlineColor = new cc.Color();
            Z.tipsLabelColor = new cc.Color();
            Z.tipsLabelOutlineColor = new cc.Color();
            Z.enableWinOutline = true;
            Z.enableTipsOutline = true;
            Z.spriteMessageNode = undefined;
            Z.sprite = undefined;
            Z.numberRollController = undefined;
            Z.numberDisplayController = undefined;
            Z.winText = undefined;
            Z.totalText = undefined;
            Z.winDisplayNode = undefined;
            Z.Do = undefined;
            Z.oc = [];
            Z.cc = [];
            Z.hc = [];
            Z.rc = [];
            Z.ac = undefined;
            Z.uc = undefined;
            Z.lc = undefined;
            Z.fc = undefined;
            Z.dc = 0x4;
            Z.vc = 0x3;
            Z._c = 0x4;
            Z.mc = 0x3;
            Z.pc = 0x0;
            Z.bc = 0x28a;
            Z.Sc = 0x1;
            Z.Cc = S.RANDOM;
            Z.Jo = 0x0;
            Z.qo = -0x1;
            return Z;
          }
          var W = {
            get: function () {
              return this.uc;
            },
            enumerable: false,
            configurable: true
          };
          var F = {
            tooltip: false
          };
          var E = {
            tooltip: false
          };
          var v = {
            tooltip: false
          };
          var I = {
            tooltip: false
          };
          var w = {
            tooltip: false
          };
          var j = {
            tooltip: false
          };
          __extends(m, Y);
          Object.defineProperty(m.prototype, "willExpire", W);
          m.prototype.onLoad = function () {
            if (shell.isRTLLanguage()) {
              this.Jo = 0x1;
              this.qo = 0x1;
              this.winDisplayNode.getComponent(cc.Layout).horizontalDirection = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT;
            }
          };
          m.prototype.initNumberDisplayNodeEvent = function () {
            this.Sc = this.winDisplayNode.scale;
            this.winDisplayNode.on("size-changed", this.resizeNumberDisplay, this);
          };
          m.prototype.setNumberDisplayNodeWidth = function (Z) {
            this.bc = Z;
          };
          m.prototype.setEventMessage = function (Z, X, V) {
            if (undefined === X) {
              X = true;
            }
            if (undefined === V) {
              V = false;
            }
            if (!this.ac) {
              if (V) {
                this.label.node.color = this.tipsLabelOutlineColor;
                this.label.node.getComponent(cc.LabelOutline).enabled = this.enableTipsOutline;
              }
              this.ac = false;
              this.lc = true;
              this.uc = X;
              this.unschedule(this.playRandomTips);
              this.unschedule(this.playRandomSpriteTips);
              if (Z instanceof cc.SpriteFrame) {
                this.setSpriteMessage(Z);
              } else if ("string" == typeof Z) {
                this.setLabel(Z);
              }
            }
          };
          m.prototype.clear = function (Z) {
            if (undefined === Z) {
              Z = false;
            }
            if (this.ac || this.lc || Z || this.Cc !== S.RANDOM) {
              if (this.sprite) {
                this.unschedule(this.playRandomSpriteTips);
                this.playRandomSpriteTips();
              } else if (this.label) {
                this.unschedule(this.playRandomTips);
                this.playRandomTips();
              }
            }
          };
          m.prototype.stop = function () {
            if (this.sprite) {
              this.sprite.node.stopAllActions();
            }
            if (this.label) {
              this.label.node.stopAllActions();
            }
          };
          m.prototype.setLocalizedSpriteFrame = function (Z, X) {
            this.winText.spriteFrame = Z;
            this.totalText.spriteFrame = X;
          };
          m.prototype.setSprites = function (Z) {
            this.cc = undefined;
            this.cc = Z;
            this.rc = Z.slice();
          };
          m.prototype.setOrderOfMessage = function (Z) {
            if (undefined === Z) {
              Z = S.RANDOM;
            }
            this.Cc = Z;
          };
          m.prototype.setRandomSpriteScheduleTime = function (Z, X) {
            if (undefined === Z) {
              Z = 0x4;
            }
            if (undefined === X) {
              X = 0x3;
            }
            this.mc = X;
            this._c = Z;
          };
          m.prototype.playScheduleRandomSpriteTipsOverride = function () {
            var Z = Math.floor(Math.random() * this.mc) + this._c;
            this.unschedule(this.playRandomSpriteTips);
            this.scheduleOnce(this.playRandomSpriteTips, Z);
          };
          m.prototype.playScheduleRandomSpriteTips = function (Z) {
            if (undefined === Z) {
              Z = 0x0;
            }
            this.unschedule(this.playRandomSpriteTips);
            this.scheduleOnce(this.playRandomSpriteTips, Z);
          };
          m.prototype.unscheduleRandomSpriteTips = function () {
            this.unschedule(this.playRandomSpriteTips);
          };
          m.prototype.setTotalAndWinText = function (Z, X) {
            var V = this;
            this.winDisplayNode.opacity = 0x0;
            this.totalText.node.active = Z;
            this.winText.node.active = X;
            A.deferCallback(true)(function () {
              A.deferCallback(true)(function () {
                V.winDisplayNode.opacity = 0xff;
              });
            });
          };
          m.prototype.showInfoboardMessage = function () {
            var Z = this.maskNode.getComponent(cc.Mask);
            if (Z) {
              Z.enabled = true;
            }
            this.spriteMessageNode.active = true;
          };
          m.prototype.hideInfoboardMessage = function () {
            this.spriteMessageNode.active = false;
            var Z = this.maskNode.getComponent(cc.Mask);
            if (Z) {
              Z.enabled = false;
            }
          };
          m.prototype.showDisplayNumber = function (Z, X) {
            if (undefined === X) {
              X = false;
            }
            this.ac = true;
            if (this.winDisplayNode) {
              this.winDisplayNode.setScale(this.Sc);
            }
            this.numberDisplayController.clear();
            this.numberDisplayController.displayNumber(Z, X);
          };
          m.prototype.clearDisplayNumber = function () {
            this.numberDisplayController.clear();
          };
          m.prototype.showNumberRoll = function (Z, X, V, H, z) {
            if (undefined === z) {
              z = true;
            }
            this.lc = false;
            this.ac = true;
            this.fc = H;
            if (this.winDisplayNode) {
              this.winDisplayNode.setScale(this.Sc);
            }
            this.numberRollController.rollDuration = Z;
            this.numberRollController.play(X, V, this.onNumberRollComplete.bind(this), z);
          };
          m.prototype.skipNumberRoll = function () {
            this.numberRollController.skip();
            this.onNumberRollComplete();
          };
          m.prototype.clearNumberRoll = function () {
            this.numberRollController.stop();
          };
          m.prototype.setSpriteMessage = function (Z) {
            var X = this;
            var V = this.padding;
            var H = this.sprite;
            var z = H.node;
            z.stopAllActions();
            H.spriteFrame = Z;
            var P = this.maskNode.width;
            if (z.width * z.scaleY + 0x2 * V > P) {
              var p = this.qo;
              z.setAnchorPoint(this.Jo, z.anchorY);
              z.setPosition(cc.v2((P / 0x2 - V) * p, z.y));
              this.Do = z.position;
              var O = z.width * z.scaleY + 0x2 * V;
              var L = cc.delayTime(1.5);
              var U = cc.moveBy(O / 0x82, cc.v2(O * p, 0x0));
              var T = undefined;
              T = this.uc ? cc.sequence(L, U, cc.callFunc(this.playScheduleRandomSpriteTips, this)) : cc.sequence(L, U, cc.callFunc(function () {
                z.position = X.Do;
              })).repeatForever();
              z.runAction(T);
            } else {
              z.setAnchorPoint(0.5, z.anchorY);
              z.x = 0x0;
              if (!this.uc) {
                return;
              }
              A.deferCallback(true)(this.playScheduleRandomSpriteTipsOverride.bind(this));
            }
          };
          m.prototype.playRandomSpriteTips = function () {
            this.ac = false;
            this.lc = false;
            this.uc = true;
            if (0x0 === this.rc.length) {
              this.rc = this.cc.slice();
            }
            var Z = this.rc;
            if (this.Cc === S.RANDOM) {
              var X = Math.floor(Math.random() * Z.length);
              if (Z.length > 0x1) {
                for (; this.sprite.spriteFrame === Z[X];) {
                  X = Math.floor(Math.random() * Z.length);
                }
              }
              this.setSpriteMessage(Z[X]);
              this.rc.splice(X, 0x1);
            } else if (this.Cc === S.SEQUENCE) {
              this.setSpriteMessage(Z[0x0]);
              this.rc.splice(0x0, 0x1);
            }
          };
          m.prototype.resizeNumberDisplay = function () {
            var Z = this.bc;
            var X = this.winDisplayNode.width * this.Sc;
            var V = X - Z;
            if (V > 0x0) {
              var H = this.Sc - V / X;
              this.winDisplayNode.scale = H;
            }
          };
          m.prototype.onNumberRollComplete = function () {
            var Z = this.fc;
            this.ac = false;
            this.fc = undefined;
            if (Z) {
              Z();
            }
          };
          m.prototype.initLabelNodeY = function () {
            this.pc = this.label.node.y;
          };
          m.prototype.setTips = function (Z) {
            this.oc = Z;
            this.hc = Z.slice();
          };
          m.prototype.setLocalizedFont = function (Z) {
            this.label.font = Z;
          };
          m.prototype.setLabelFontHeight = function (Z) {
            if (undefined === Z) {
              Z = 0x0;
            }
            var X = this.label.font;
            if (X[q.nc]) {
              this.label.lineHeight = X[q.nc].commonHeight + Z;
            }
          };
          m.prototype.setWinLabelColor = function (Z) {
            this.winLabelColor = Z;
          };
          m.prototype.setWinLabelOutlineColor = function (Z) {
            this.winLabelOutlineColor = Z;
          };
          m.prototype.setTipsLabelColor = function (Z) {
            this.tipsLabelColor = Z;
          };
          m.prototype.setTipsLabelOutlineColor = function (Z) {
            this.tipsLabelOutlineColor = Z;
          };
          m.prototype.setWinAmount = function (Z, X, V) {
            if (undefined === X) {
              X = false;
            }
            if (undefined === V) {
              V = false;
            }
            if (Z && Z > 0x0) {
              this.unschedule(this.playRandomTips);
              this.unschedule(this.playRandomSpriteTips);
              this.lc = false;
              this.ac = true;
              this.uc = V;
              var H = this.label.node;
              var z = H.getComponent(cc.LabelOutline);
              H.color = this.winLabelColor;
              if (z) {
                z.color = this.winLabelOutlineColor;
                z.enabled = this.enableWinOutline;
              }
              var P = (X ? shell.I18n.t("InfoboardMessage.TotalWin") : shell.I18n.t("InfoboardMessage.Win")) + " " + A.formatCurrency(Z, '', '');
              this.setLabel(P);
            }
          };
          m.prototype.setRandomLabelScheduleTime = function (Z, X) {
            if (undefined === Z) {
              Z = 0x4;
            }
            if (undefined === X) {
              X = 0x3;
            }
            this.vc = X;
            this.dc = Z;
          };
          m.prototype.scheduleRandomTips = function () {
            var Z = Math.floor(Math.random() * this.vc) + this.dc;
            this.unschedule(this.playRandomTips);
            this.scheduleOnce(this.playRandomTips, Z);
          };
          m.prototype.playScheduleRandomTips = function (Z) {
            if (undefined === Z) {
              Z = 0x0;
            }
            this.unschedule(this.playRandomTips);
            this.scheduleOnce(this.playRandomTips, Z);
          };
          m.prototype.unscheduleRandomTips = function () {
            this.unschedule(this.playRandomTips);
          };
          m.prototype.playRandomTips = function () {
            this.ac = false;
            this.lc = false;
            if (0x1 !== this.oc.length) {
              this.uc = true;
            }
            if (0x0 === this.hc.length) {
              this.hc = this.oc.slice();
            }
            var Z = this.hc;
            var X = Math.floor(Math.random() * Z.length);
            var V = this.label.node;
            V.color = this.tipsLabelColor;
            var H = V.getComponent(cc.LabelOutline);
            if (H) {
              H.color = this.tipsLabelOutlineColor;
              H.enabled = this.enableTipsOutline;
            }
            this.setLabel(Z[X]);
            this.hc.splice(X, 0x1);
          };
          m.prototype.setLabel = function (Z) {
            var X = this.label;
            X.string = Z;
            X.node.y = 0x2 * this.maskNode.height;
            this.unschedule(this.determineOverFlow);
            this.scheduleOnce(this.determineOverFlow);
          };
          m.prototype.determineOverFlow = function () {
            var Z = this.label.node;
            var X = this.padding;
            if (Z.width + 0x2 * X > this.maskNode.width) {
              this.scrollLabel();
            } else {
              Z.stopAllActions();
              Z.setAnchorPoint(0.5, Z.anchorY);
              Z.x = 0x0;
              if (this.uc) {
                this.scheduleRandomTips();
              }
            }
            Z.y = this.pc;
          };
          m.prototype.scrollLabel = function () {
            var Z = this.label;
            var X = this.padding;
            var V = Z.node;
            var H = this.qo;
            V.stopAllActions();
            V.setAnchorPoint(this.Jo, V.anchorY);
            V.setPosition(cc.v2((this.maskNode.width / 0x2 - X) * H, V.y));
            var z;
            var P = V.width + 0x2 * X;
            var p = cc.delayTime(1.5);
            var O = cc.moveBy(P / 0x82, cc.v2(P * H, 0x0));
            z = this.uc ? cc.sequence(p, O, cc.callFunc(this.playScheduleRandomTips, this)) : cc.sequence(p, O, cc.callFunc(this.scrollLabel, this));
            V.runAction(z);
          };
          m.prototype.yc = function () {
            this.stop();
            this.numberRollController.stop();
            this.numberDisplayController.clear();
            this.unschedule(this.scheduleRandomTips);
            this.unschedule(this.playRandomSpriteTips);
            this.unschedule(this.playRandomTips);
            this.padding = 0x28;
            this.bc = 0x28a;
            this.pc = 0x0;
            this.Cc = S.RANDOM;
            this.enableTipsOutline = true;
            this.enableWinOutline = true;
            this.ac = false;
            this.oc = [];
            this.cc = [];
            this.rc = [];
            this.hc = undefined;
            this.uc = undefined;
            this.lc = undefined;
            this.tipsLabelColor = undefined;
            this.tipsLabelOutlineColor = undefined;
            this.fc = undefined;
          };
          m.prototype.destroy = function () {
            this.yc();
            this.node.destroy();
            return Y.prototype.destroy.call(this);
          };
          __decorate([x({
            'type': cc.Node,
            'tooltip': false
          })], m.prototype, "maskNode", undefined);
          __decorate([x({
            'type': cc.Float,
            'tooltip': false
          })], m.prototype, "padding", undefined);
          __decorate([x({
            'type': cc.Label,
            'tooltip': false
          })], m.prototype, "label", undefined);
          __decorate([x(F)], m.prototype, "winLabelColor", undefined);
          __decorate([x(E)], m.prototype, "winLabelOutlineColor", undefined);
          __decorate([x(v)], m.prototype, "tipsLabelColor", undefined);
          __decorate([x(I)], m.prototype, "tipsLabelOutlineColor", undefined);
          __decorate([x(w)], m.prototype, "enableWinOutline", undefined);
          __decorate([x(j)], m.prototype, "enableTipsOutline", undefined);
          __decorate([x({
            'type': cc.Node,
            'tooltip': false
          })], m.prototype, "spriteMessageNode", undefined);
          __decorate([x({
            'type': cc.Sprite,
            'tooltip': false
          })], m.prototype, "sprite", undefined);
          __decorate([x({
            'type': J["default"],
            'tooltip': false
          })], m.prototype, "numberRollController", undefined);
          __decorate([x({
            'type': N["default"],
            'tooltip': false
          })], m.prototype, "numberDisplayController", undefined);
          __decorate([x({
            'type': cc.Sprite,
            'tooltip': false
          })], m.prototype, "winText", undefined);
          __decorate([x({
            'type': cc.Sprite,
            'tooltip': false
          })], m.prototype, "totalText", undefined);
          __decorate([x({
            'type': cc.Node,
            'tooltip': false
          })], m.prototype, "winDisplayNode", undefined);
          __decorate([y.automationDec({
            'func': b.setTotalAndWinText
          })], m.prototype, "setTotalAndWinText", null);
          __decorate([y.automationDec({
            'func': b.setWinAmount
          })], m.prototype, "setWinAmount", null);
          return __decorate([D], m);
        }(cc.Component);
        C["default"] = G;
        cc._RF.pop();
      }
    }, RQ],
    'JSONSerializer': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "1252bHHaiZC15bpK+5v9l5B", "JSONSerializer")) {
        var B = System.get("common").JSONSerialiser;
        M.exports.JSONSerializer = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'JakeSlotGameTemplate': [function (B, Q, C) {
      'use strict';

      var K = {
        value: true
      };
      var S = {
        spaceBarInterrupterEnabled: false
      };
      if (!cc._RF.push(Q, "e12d8fBWfBCyboZWCaBLXDu", "JakeSlotGameTemplate")) {
        Object.defineProperty(C, "__esModule", K);
        C.initJakeSlotGameTemplate = C.JSGTConfig = undefined;
        C.JSGTConfig = S;
        C.initJakeSlotGameTemplate = function (q) {
          C.JSGTConfig = Object.freeze(q);
        };
        cc._RF.pop();
      }
    }, {}],
    'LabelLocalized': [function (h, M, B) {
      'use strict';

      if (!cc._RF.push(M, "f5f30hTmFFOcLgg2elp0I0D", "LabelLocalized")) {
        B.__esModule = true;
        B["default"] = undefined;
        var Q = cc.Class({
          'extends': cc.Component,
          'editor': false,
          'properties': {
            'key': {
              'tooltip': false,
              'default': '',
              'notify': function () {
                this.Mc();
              }
            }
          },
          'onLoad': function () {
            this.Ac = this.node.getComponent(cc.Label);
            if (!this.Ac) {
              this.Ac = this.node.getComponent(cc.RichText);
            }
            this.Mc();
          },
          'Mc': function () {
            var C = this.Ac;
            if (C) {
              C.string = shell.I18n.t(this.key);
            }
          }
        });
        B["default"] = Q;
        M.exports = B["default"];
        cc._RF.pop();
      }
    }, {}],
    'LabelTheme': [function (q, N, f) {
      'use strict';

      if (!cc._RF.push(N, "05b6c8yPn1LZIH3AnSTBq8U", "LabelTheme")) {
        f.__esModule = true;
        f["default"] = undefined;
        var J = {
          'Ic': "_updateRichText",
          'Oc': "_isBold",
          'Hc': "_isItalic"
        };
        var A;
        var y = function (w) {
          if (w && w.__esModule) {
            return w;
          }
          if (null === w || "object" != typeof w && "function" != typeof w) {
            return {
              'default': w
            };
          }
          var j = I(undefined);
          if (j && j.has(w)) {
            return j.get(w);
          }
          var Z = {};
          var X = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var V in w) if ("default" !== V && Object.prototype.hasOwnProperty.call(w, V)) {
            var H = X ? Object.getOwnPropertyDescriptor(w, V) : null;
            if (H && (H.get || H.set)) {
              Object.defineProperty(Z, V, H);
            } else {
              Z[V] = w[V];
            }
          }
          Z["default"] = w;
          if (j) {
            j.set(w, Z);
          }
          return Z;
        }(q("ResRC"));
        var b = q("ResourceQualifierHelper");
        var k = q("Utils");
        var D = q("UIAppearanceHelper");
        var x = cc.Enum(J);
        0x0;
        var G = k.getCocosMajor();
        A = "number" == typeof G && G >= 0x4 ? function (w) {
          return w.markForRender(true);
        } : function (w) {
          return w.markForUpdateRenderData(true);
        };
        var Y = {
          tooltip: false,
          "default": ''
        };
        var m = {
          tooltip: false,
          "default": "theme_font"
        };
        var W = {
          tooltip: false,
          "default": ''
        };
        var F = {
          tooltip: false,
          "default": ''
        };
        var E = {
          tooltip: false,
          "default": ''
        };
        var v = cc.Class({
          'extends': cc.Component,
          'ctor': function () {},
          'editor': false,
          'properties': {
            'followThemeColor': false,
            'followFont': false,
            'domainKey': Y,
            'colorKey': {
              'tooltip': false,
              'default': '',
              'notify': function () {
                this.Bc();
              }
            },
            'fontFamilyKey': m,
            'fontKey': W,
            'fontWeightKey': F,
            'fontStyleKey': E
          },
          'onLoad': function () {
            this.Ac = this.node.getComponent(cc.Label);
            if (!this.Ac) {
              this.Ac = this.node.getComponent(cc.RichText);
            }
            this.Bc();
            this.Gc();
          },
          'Bc': function () {
            if (this.followThemeColor) {
              var w = this.node;
              this.domainKey;
              this.colorKey;
              if (w && '' != this.colorKey) {
                var j = D.uiAppearanceHelper.v(this.domainKey + '.' + this.colorKey);
                w.color = new cc.Color(j.r, j.g, j.b);
                w.opacity = j.getA();
              }
            }
          },
          'Gc': function () {
            var w = this;
            if (this.followFont) {
              var j = this.Ac;
              if (j) {
                0x0;
                j.offsetY = D.getOffsetY();
                if (this.fontFamilyKey && this.domainKey) {
                  var Z = D.uiAppearanceHelper.v(this.domainKey + '.' + this.fontFamilyKey);
                  this.Nc(Z);
                }
                if (this.fontWeightKey) {
                  var X = this.fontWeightKey;
                  this.Tc(X);
                }
                if (this.fontStyleKey) {
                  var V = this.fontStyleKey;
                  this.Pc(V);
                }
                if (!this.fontFamilyKey && this.fontKey && this.domainKey) {
                  var H = D.uiAppearanceHelper.v(this.domainKey + '.' + this.fontKey);
                  if ("object" == typeof H) {
                    return void this.Lc(H);
                  }
                  if (H) {
                    0x0;
                    var z = b.getResourceURL(H);
                    return void (z && y.load(z, cc.Font, function (d, P) {
                      if (!d) {
                        w.Lc(P);
                      }
                    }));
                  }
                }
              }
            }
          },
          'Lc': function (w) {
            var j = this.Ac;
            if (cc.isValid(this.node)) {
              j.font = w;
              if (j instanceof cc.Label) {
                A(j);
              } else if (j instanceof cc.RichText) {
                j[x.Ic]();
              }
            }
          },
          'Nc': function (w) {
            var j = this.Ac;
            if (cc.isValid(this.node)) {
              j.fontFamily = w;
              if (j instanceof cc.Label) {
                A(j);
              } else if (j instanceof cc.RichText) {
                j[x.Ic]();
              }
            }
          },
          'Tc': function (w) {
            var j = this.Ac;
            if (cc.isValid(this.node)) {
              j[x.Oc] = w;
              if (j instanceof cc.Label) {
                A(j);
              } else {
                cc.RichText;
              }
            }
          },
          'Pc': function (w) {
            var j = this.Ac;
            if (cc.isValid(this.node)) {
              j[x.Hc] = w;
              if (j instanceof cc.Label) {
                A(j);
              } else {
                cc.RichText;
              }
            }
          }
        });
        f["default"] = v;
        N.exports = f["default"];
        cc._RF.pop();
      }
      function I(w) {
        if ("function" != typeof WeakMap) {
          return null;
        }
        var j = new WeakMap();
        var Z = new WeakMap();
        return (I = function (X) {
          return X ? Z : j;
        })(w);
      }
    }, RC],
    'LandscapeSettingInfoFooterController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "e550bCO+rxMtaTFsIcS7wfm", "LandscapeSettingInfoFooterController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SettingInfoFooterController");
        var q = B("UIAppearanceHelper");
        var N = B("Utils");
        var f = cc._decorator;
        var J = f.ccclass;
        var A = f.property;
        var y = function (b) {
          function u() {
            var k = null !== b && b.apply(this, arguments) || this;
            k.borders = [];
            k.descriptionLabel = [];
            k.landscapeSoundButtonHolder = undefined;
            return k;
          }
          __extends(u, b);
          u.prototype.boot = function () {
            b.prototype.boot.call(this);
            var k = q.uiAppearanceHelper.v("setting.secondary_theme_color");
            this.borders.forEach(function (x) {
              N.setNodeColorWithOpacity(x, k);
            });
            var D = q.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.descriptionLabel.forEach(function (x) {
              N.setNodeColorWithOpacity(x.node, D);
            });
            this.betOptionsButton.normalColor = q.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.betOptionsButton.pressedColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.betOptionsButton.hoverColor = q.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.betOptionsButton.disabledColor = q.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.walletButton.normalColor = q.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.walletButton.pressedColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.walletButton.hoverColor = q.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.walletButton.disabledColor = q.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.winButton.normalColor = q.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.winButton.pressedColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.winButton.hoverColor = q.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.winButton.disabledColor = q.uiAppearanceHelper.v("setting.tertiary_theme_color");
          };
          u.prototype.setWalletNavigateIcon = function (k) {
            this.Rc();
            switch (k) {
              case S.WALLET_FOOTER_TYPE.CASH:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = this.walletFooterTypeSFList[k - 0x1];
                break;
              case S.WALLET_FOOTER_TYPE.FREE_GAME:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = this.walletFooterTypeSFList[k - 0x1];
                this.specialIcon.spriteFrame = this.rewardFooterTypeSFList[k - 0x2];
                this.descriptionLabel[0x2].string = shell.I18n.t("SettingMenu.FreeGame");
                break;
              case S.WALLET_FOOTER_TYPE.BONUS:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = this.walletFooterTypeSFList[k - 0x1];
                this.specialIcon.spriteFrame = this.rewardFooterTypeSFList[k - 0x2];
                this.descriptionLabel[0x2].string = shell.I18n.t("SettingMenu.RollOver");
                break;
              default:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = undefined;
            }
          };
          u.prototype.Rc = function () {
            this.descriptionLabel[0x0].string = shell.I18n.t("WalletHelper.Balance");
            this.descriptionLabel[0x1].string = shell.I18n.t("SettingMenu.WinPrizeWord");
            this.descriptionLabel[0x2].string = '';
            this.descriptionLabel[0x3].string = shell.I18n.t("SettingMenu.Bet");
          };
          __decorate([A([cc.Node])], u.prototype, "borders", undefined);
          __decorate([A([cc.Label])], u.prototype, "descriptionLabel", undefined);
          __decorate([A(cc.Node)], u.prototype, "landscapeSoundButtonHolder", undefined);
          return __decorate([J], u);
        }(S.SettingInfoFooterController);
        C["default"] = y;
        cc._RF.pop();
      }
    }, RK],
    'LandscapeSettingMenuController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "0a93fcJrXdI5b2EdfUH4UAj", "LandscapeSettingMenuController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.LandscapeSettingMenuController = undefined;
        var S = B("SettingMenuController");
        var q = B("CanvasResizeBroadcaster");
        var N = B("UIAppearanceHelper");
        var f = cc._decorator;
        var J = f.ccclass;
        var A = f.property;
        var y = function (b) {
          function u() {
            var k = null !== b && b.apply(this, arguments) || this;
            k.landscapeSoundButtonHolder = undefined;
            k.moreMenuLayoutNode = undefined;
            k.moreMenuBGNode = undefined;
            k.Ec = undefined;
            return k;
          }
          __extends(u, b);
          u.prototype.onLoad = function () {
            this.kc();
            this.moreMenuLayoutNode.on("size-changed", this.kc.bind(this));
            this.Ec = this.moreMenuLayerNode.position;
            this.settingTurboSprite.node.color = N.uiAppearanceHelper.v("setting.theme_color");
            this.defaultMenuLayerNode.y = 0x0;
            this.settingToast.opacity = 0x0;
            this.moreMenuLayerNode.y = -(this.moreMenuLayerNode.height + this.Uc());
            this.reminderBoard.active = false;
            this.reminderBoard.opacity = 0x1;
            this.settingMenuUIBlock.active = false;
            this.subControllerHolder.height = this.jc = cc.view.getVisibleSize().height;
            this.Dc = q["default"].subscribe(this.ui.bind(this));
          };
          u.prototype.showMoreMenuLayer = function () {
            var k = this;
            if (!this.Wc) {
              this.Wc = true;
              this.xc = true;
              this.Fc();
              this.moreMenuLayerNode.active = true;
              this.moreMenuLayerNode.stopAllActions();
              this.moreMenuLayerNode.runAction(cc.sequence(cc.spawn(cc.moveTo(0.2, this.Ec.x, this.Ec.y).easing(cc.easeQuadraticActionOut()), cc.fadeIn(0.2).easing(cc.easeQuadraticActionOut())), cc.callFunc(function () {
                k.Wc = false;
                if (k.onMenuEndChanged) {
                  k.onMenuEndChanged();
                }
              })));
              var D = this.onMenuStartChanged;
              if (D) {
                D(true, true);
              }
            }
          };
          u.prototype.hideMoreMenuLayer = function () {
            var k = this;
            if (!this.Wc) {
              this.Wc = true;
              this.xc = true;
              this.Fc();
              this.moreMenuLayerNode.stopAllActions();
              this.moreMenuLayerNode.runAction(cc.sequence(cc.spawn(cc.moveTo(0.2, this.Ec.x, -this.moreMenuLayerNode.height).easing(cc.easeQuadraticActionOut()), cc.fadeOut(0.2).easing(cc.easeQuadraticActionOut())), cc.callFunc(function () {
                k.Wc = false;
                k.moreMenuLayerNode.active = false;
                if (k.onMenuEndChanged) {
                  k.onMenuEndChanged();
                }
              })));
              if (false === this.moreMenuLayerNode.active) {
                this.Wc = false;
              }
              var D = this.onMenuStartChanged;
              if (D) {
                D(false, true);
              }
            }
          };
          u.prototype.kc = function () {
            this.moreMenuBGNode.width = this.moreMenuLayoutNode.width;
            this.moreMenuBGNode.height = this.moreMenuLayoutNode.height;
          };
          __decorate([A(cc.Node)], u.prototype, "landscapeSoundButtonHolder", undefined);
          __decorate([A(cc.Node)], u.prototype, "moreMenuLayoutNode", undefined);
          __decorate([A(cc.Node)], u.prototype, "moreMenuBGNode", undefined);
          return __decorate([J], u);
        }(S.SettingMenuController);
        C.LandscapeSettingMenuController = y;
        cc._RF.pop();
      }
    }, RS],
    'LandscapeSoundButton': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "948ffXQc5hNbqpouW3VdkkX", "LandscapeSoundButton")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SoundButton");
        var q = B("UIAppearanceHelper");
        var N = B("Utils");
        var f = cc._decorator;
        var J = f.ccclass;
        var A = f.property;
        var y = function (b) {
          function u() {
            var k = null !== b && b.apply(this, arguments) || this;
            k.largeSprite = undefined;
            k.largeSoundOnIcon = undefined;
            k.largeSoundOffIcon = undefined;
            return k;
          }
          __extends(u, b);
          u.prototype.onLoad = function () {
            this.enableTouchInteraction();
            if (this.buttonTheme) {
              var k = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              N.setNodeColorWithOpacity(this.largeSprite.node, k);
            }
          };
          u.prototype.changeButtonPressedColor = function (k) {
            if (this.buttonTheme) {
              var D = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var x = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".pressed");
              N.setNodeColorWithOpacity(this.largeSprite.node, k ? x : D);
            }
          };
          u.prototype.interactableButtonColor = function (k) {
            if (this.buttonTheme) {
              var D = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var x = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              N.setNodeColorWithOpacity(this.largeSprite.node, k ? D : x);
            }
          };
          __decorate([A(cc.Sprite)], u.prototype, "largeSprite", undefined);
          __decorate([A(cc.SpriteFrame)], u.prototype, "largeSoundOnIcon", undefined);
          __decorate([A(cc.SpriteFrame)], u.prototype, "largeSoundOffIcon", undefined);
          return __decorate([J], u);
        }(S["default"]);
        C["default"] = y;
        cc._RF.pop();
      }
    }, Rq],
    'LaunchConfig': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "9687e72GwxLXpeDvVqr6s0O", "LaunchConfig")) {
        var B = System.get("bvframework").LaunchConfig;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'LineController': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "15878i9jmRPk6rKeeTw6Ok4", "LineController")) {
        Q.__esModule = true;
        Q["default"] = undefined;
        var C = {
          HEAD: 0x0,
          BODY: 0x1,
          TAIL: 0x2
        };
        var K = cc.Enum(C);
        var S = cc.Class({
          'extends': cc.Component,
          'properties': {
            'headerLineMargin': 0xa,
            'lineMargin': 0xa,
            'tailLineMargin': 0xa,
            'headerLinePrefab': cc.Prefab,
            'linePrefab': cc.Prefab,
            'tailLinePrefab': cc.Prefab,
            'animtionHeaderLineName': "header_line",
            'animtionReverseHeaderLineName': "reverse_header_line",
            'animtionLineName': "line",
            'animtionReverseLineName': "reverse_line",
            'animtionTailLineName': "tail_line",
            'animtionReverseTailLineName': "reverse_tail_line",
            'animtionLoop': false,
            'animationInverted': false
          },
          'onLoad': function () {
            this.Vc = {};
            this.zc = 0x0;
            this.Jc = false;
            this.qc = false;
            this.Kc = new cc.NodePool("LinePrefabController");
            this.Qc = new cc.NodePool("LinePrefabController");
            this.Yc = new cc.NodePool("LinePrefabController");
            this.Xc = 0x7;
            this.Zc = [];
            for (var q = 0x0; q < this.Xc - 0x1; q++) {
              this.Zc.push(false);
            }
          },
          'destroy': function () {
            this.$c = null;
            this.Kc.clear();
            this.Qc.clear();
            this.Yc.clear();
            this.node.destroy();
            this._super();
          },
          'setCallbackForAnimationFinish': function (q) {
            this.$c = q;
          },
          'addLine': function (q, N) {
            var f = this;
            if (!this.Vc[N]) {
              var J = [];
              q.forEach(function (y, k, D) {
                if (0x0 != k) {
                  var x;
                  var G;
                  var Y = D[k - 0x1];
                  var W = D[k];
                  if (0x1 == k) {
                    if (!(x = f.Qc.get())) {
                      x = cc.instantiate(f.headerLinePrefab);
                    }
                    G = f.headerLineMargin;
                    x.typeIdentifier = K.HEAD;
                  } else if (k == D.length - 0x1) {
                    if (!(x = f.Yc.get())) {
                      x = cc.instantiate(f.tailLinePrefab);
                    }
                    G = f.tailLineMargin;
                    x.typeIdentifier = K.TAIL;
                  } else {
                    if (!(x = f.Kc.get())) {
                      x = cc.instantiate(f.linePrefab);
                    }
                    G = f.lineMargin;
                    x.typeIdentifier = K.BODY;
                  }
                  var F = Y.x;
                  var E = Y.y;
                  var I = W.x;
                  var w = W.y;
                  var j = (F + I) / 0x2;
                  var Z = (E + w) / 0x2;
                  var X = 0xb4 * Math.atan2(w - E, I - F) / Math.PI;
                  var V = f.th(X);
                  var H = Math.sqrt(Math.pow(I + -F, 0x2) + Math.pow(w - E, 0x2));
                  x.x = j;
                  x.y = Z;
                  x.width = H + G;
                  x.angle = -V;
                  if (0x0 == f.Jc) {
                    f.ih(x, "line").getComponent("LinePrefabController").setAnimTimeFrameCallback(f.sh.bind(f));
                  }
                  f.node.addChild(x);
                  J.push(x);
                }
              });
              this.Jc = true;
              if (0x1 == this.animationInverted) {
                J.reverse();
              }
              var A = this.eh(J);
              this.Vc[N] = A;
            }
          },
          'removeAllLines': function () {
            var q = this;
            this.stopAnimation();
            Object.keys(this.Vc).map(function (N) {
              var f = q.Vc[N];
              q.nh(f, N);
            });
            this.Jc = false;
            cc.sys.garbageCollect();
          },
          'removeLine': function (q) {
            var N = this.Vc[q];
            this.nh(N, q);
            this.oh();
            if (Object.keys(this.Vc).length < 0x1) {
              this.qc = false;
            }
          },
          'startAnimation': function () {
            if (0x0 == this.qc && Object.keys(this.Vc).length > 0x0) {
              this.qc = true;
              this.zc = 0x0;
              this.hh();
              this.Zc[0x0] = true;
              this.rh();
            }
          },
          'stopAnimation': function () {
            this.zc = 0x0;
            this.qc = false;
          },
          'oh': function () {
            var q = this;
            var N = Object.keys(this.Vc);
            if (N.length > 0x0) {
              N.forEach(function (o) {
                if (q.Vc[o][0x0].LinePrefabController.getAnimTimeFrameCallback()) {
                  q.Jc = true;
                }
              });
              var f = Math.floor(Math.random() * Math.floor(N.length));
              this.Vc[N[f]].forEach(function (o) {
                o.LinePrefabController.setAnimTimeFrameCallback(q.sh.bind(q));
              });
              this.Jc = true;
            }
          },
          'rh': function () {
            if (0x1 == this.qc) {
              var q = this.Zc.indexOf(true);
              this.zc = q;
              if (-0x1 == q) {
                return;
              }
              var N = this.ah();
              if (N.length > 0x0) {
                N.forEach(function (f) {
                  var o = f.LineAnimation;
                  var J = this.uh(f.Line.typeIdentifier);
                  o.play(J);
                }, this);
                this.Zc[q] = false;
                if (++q < this.Zc.length) {
                  this.Zc[q] = true;
                } else {
                  this.zc = q;
                }
              }
            }
          },
          'sh': function () {
            if (this.ah().length < 0x1) {
              this.lh();
            } else if (0x1 == this.qc) {
              this.rh();
            }
          },
          'uh': function (q) {
            var N;
            switch (q) {
              case K.HEAD:
                N = 0x1 == this.animationInverted ? this.animtionReverseHeaderLineName : this.animtionHeaderLineName;
                break;
              case K.TAIL:
                N = 0x1 == this.animationInverted ? this.animtionReverseTailLineName : this.animtionTailLineName;
                break;
              default:
                N = 0x1 == this.animationInverted ? this.animtionReverseLineName : this.animtionLineName;
            }
            return N;
          },
          'ah': function () {
            var q = this;
            var N = [];
            Object.keys(this.Vc).map(function (f) {
              var o = q.Vc[f];
              if (o.length >= q.zc + 0x1) {
                var J = o[q.zc];
                N.push(J);
              }
            });
            return N;
          },
          'lh': function () {
            var q = this;
            if (0x1 == this.animtionLoop) {
              Object.keys(this.Vc).map(function (f) {
                q.Vc[f].forEach(function (o) {
                  var J = o.LineAnimation;
                  J.setCurrentTime(0x0);
                  J.stop();
                });
              });
              this.hh();
              this.Zc[0x0] = true;
              this.scheduleOnce(this.rh);
            } else {
              this.qc = false;
            }
            var N = this.$c;
            if (N) {
              N();
            }
          },
          'nh': function (q, N) {
            if (q && q.length > 0x0) {
              q.forEach(function (f) {
                f.LinePrefabController.setAnimTimeFrameCallback(null);
                var o = f.LineAnimation;
                o.setCurrentTime(0x0);
                o.stop();
                f.parent = null;
                if (f.Line.typeIdentifier == K.HEAD) {
                  this.Qc.put(f.Line);
                } else if (f.Line.typeIdentifier == K.TAIL) {
                  this.Yc.put(f.Line);
                } else {
                  this.Kc.put(f.Line);
                }
              }, this);
              delete this.Vc[N];
            }
          },
          'hh': function () {
            for (var q = 0x0; q < this.Zc.length; q++) {
              this.Zc[q] = false;
            }
          },
          'th': function (q) {
            return 0x0 == q ? 0x0 : q > 0x0 ? -0x1 * q : Math.abs(q);
          },
          'fh': function (q) {
            var N = this.angleMarginRatio;
            return Math.abs(q) / 0xb4 * N;
          },
          'eh': function (q) {
            var N = this;
            if (!Array.isArray(q)) {
              throw Error("Line Node is not an array");
            }
            var f = [];
            q.forEach(function (o) {
              var J = Object.create(null);
              var A = N.ih(o, "line");
              J.Line = o;
              J.LinePrefabController = A.getComponent("LinePrefabController");
              J.LineAnimation = A.getComponent(cc.Animation);
              f.push(J);
            });
            return f;
          },
          'ih': function (q, N) {
            var f = q.getChildByName(N);
            return null !== f ? f : q;
          }
        });
        Q["default"] = S;
        B.exports = Q["default"];
        cc._RF.pop();
      }
    }, {}],
    'LinePrefabController': [function (h, M, B) {
      'use strict';

      if (!cc._RF.push(M, "275baJMs+tIcoOItOeSbgwO", "LinePrefabController")) {
        B.__esModule = true;
        B["default"] = undefined;
        var Q = cc.Class({
          'extends': cc.Component,
          'properties': {},
          'onLoad': function () {},
          'unuse': function () {
            var C = this.node.getComponent(cc.Animation);
            if (C && C.setCurrentTime(0x0)) {
              C.stop();
            }
            this.$c = null;
          },
          'setAnimTimeFrameCallback': function (C) {
            this.$c = C;
          },
          'getAnimTimeFrameCallback': function () {
            return this.$c;
          },
          'onAnimTimeFrameCallback': function () {
            var C = this.$c;
            if (C) {
              C();
            }
          },
          'destroy': function () {
            this.$c = null;
            var C = this.node.getComponent(cc.Animation);
            if (C) {
              C.stop();
            }
            this.node.destroy();
            this._super();
          }
        });
        B["default"] = Q;
        M.exports = B["default"];
        cc._RF.pop();
      }
    }, {}],
    'Line': [function (h, M, B) {
      'use strict';

      if (!cc._RF.push(M, "fbd9fUvpvVLs5ubCe3O9Csy", "Line")) {
        B.__esModule = true;
        B.Line = undefined;
        var Q;
        var C = (Q = h("LineController")) && Q.__esModule ? Q : {
          'default': Q
        };
        var K = {
          'init': function (S, q, N, f, J) {
            if (null == S) {
              throw Error("WinningLine :: init : lineHolder is required!");
            }
            this.dh = [];
            var A = new cc.Node();
            A.anchorX = 0x0;
            A.anchorY = 0x0;
            A.x = q / 0x2 * -0x1;
            S.addChild(A);
            var y = this.vh = A.addComponent(C["default"]);
            y.headerLinePrefab = N;
            y.linePrefab = f;
            y.tailLinePrefab = J;
          },
          'updateLineMargin': function (S, q, N) {
            if (undefined === S) {
              S = 0xa;
            }
            if (undefined === q) {
              q = 0xa;
            }
            if (undefined === N) {
              N = 0xa;
            }
            var f = this.vh;
            f.headerLineMargin = S;
            f.lineMargin = q;
            f.tailLineMargin = N;
          },
          'updateLineAnimName': function (S, q, N) {
            if (undefined === S) {
              S = "header_line";
            }
            if (undefined === q) {
              q = "line";
            }
            if (undefined === N) {
              N = "tail_line";
            }
            var f = this.vh;
            f.animtionHeaderLineName = S;
            f.animtionLineName = q;
            f.animtionTailLineName = N;
          },
          'updateLineReverseAnimName': function (S, q, N) {
            if (undefined === S) {
              S = "header_line";
            }
            if (undefined === q) {
              q = "line";
            }
            if (undefined === N) {
              N = "tail_line";
            }
            var f = this.vh;
            f.animtionReverseHeaderLineName = S;
            f.animtionReverseLineName = q;
            f.animtionReverseTailLineName = N;
          },
          'setLineMap': function (S) {
            if (undefined === S) {
              S = [];
            }
            this.dh = S;
          },
          'showLines': function (S) {
            if (undefined === S) {
              S = [];
            }
            S.forEach(function (q) {
              this.vh.addLine(this.dh[q - 0x1], q);
            }, this);
          },
          'hideLine': function (S) {
            this.vh.removeLine(S);
          },
          'hideAllLines': function () {
            this.vh.removeAllLines();
          },
          'stopLineAnimation': function () {
            this.vh.stopAnimation();
          },
          'startLineAnimation': function (S, q, N) {
            if (undefined === S) {
              S = true;
            }
            if (undefined === q) {
              q = false;
            }
            var f = this.vh;
            f.animtionLoop = S;
            f.animationInverted = q;
            f.setCallbackForAnimationFinish(N);
            f.startAnimation();
          }
        };
        B.Line = K;
        cc._RF.pop();
      }
    }, RN],
    'ListViewCellUpdateAnim': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "5502dsWooBCr7Ubvh4+KVSO", "ListViewCellUpdateAnim")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator.ccclass;
        var S = function () {
          function q() {}
          q.prototype.layoutDuration = function () {
            return 0.5;
          };
          q.prototype.layoutDelay = function () {
            return 0.5;
          };
          q.prototype.updateCellAmimation = function () {};
          q.prototype.animationEnd = function () {};
          return __decorate([K], q);
        }();
        Q["default"] = S;
        cc._RF.pop();
      }
    }, {}],
    'ListViewEnum': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "1db1bgDOdFP2LjHMP1kDfIt", "ListViewEnum")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.cellUpdateAction = Q.scrollPosition = undefined;
        (function (K) {
          K[K.scrollPositionTop = 0x0] = "scrollPositionTop";
          K[K.scrollPositionMiddle = 0x1] = "scrollPositionMiddle";
          K[K.scrollPositionBottom = 0x2] = "scrollPositionBottom";
        })(Q.scrollPosition || (Q.scrollPosition = {}));
        (function (K) {
          K[K.cellUpdateActionInsert = 0x0] = "cellUpdateActionInsert";
          K[K.cellUpdateActionRemove = 0x1] = "cellUpdateActionRemove";
          K[K.cellUpdateActionUpdate = 0x2] = "cellUpdateActionUpdate";
        })(Q.cellUpdateAction || (Q.cellUpdateAction = {}));
        cc._RF.pop();
      }
    }, {}],
    'ListView': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "3d710qNmRNP1LLRNNBcLNnF", "ListView")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("ListViewEnum");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (b) {
          function u() {
            var D = null !== b && b.apply(this, arguments) || this;
            D.view = undefined;
            D.contentWidget = undefined;
            D.ni = {};
            D.oi = {};
            D._h = [];
            D.mh = 0x0;
            D.ph = 0x0;
            D.bh = 0x0;
            D.Sh = 0x0;
            D.gh = false;
            D.Ch = false;
            D.yh = false;
            D.ci = undefined;
            return D;
          }
          var k = {
            get: function () {
              return this.ni;
            },
            enumerable: false,
            configurable: true
          };
          __extends(u, b);
          Object.defineProperty(u.prototype, "nodePools", k);
          Object.defineProperty(u.prototype, "templates", {
            'get': function () {
              return this.oi;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(u.prototype, "visibleCells", {
            'get': function () {
              return this._h;
            },
            'enumerable': false,
            'configurable': true
          });
          u.prototype.onLoad = function () {
            this.content.originY = this.content.y;
          };
          u.prototype.start = function () {
            b.prototype.start.call(this);
            cc.director.once(cc.Director.EVENT_AFTER_DRAW, this.Mh, this);
          };
          u.prototype.onDisable = function () {
            b.prototype.onDisable.call(this);
            this.content.off("position-changed", this.Ah, this);
            this.node.off("scroll-to-top", this.Ih, this);
            this.node.off("scroll-to-bottom", this.wh, this);
            this.node.off("scroll-ended", this.Oh, this);
            this.node.off("scrolling", this.Hh, this);
            this.node.off("size-changed", this.ui, this);
          };
          u.prototype.onEnable = function () {
            b.prototype.onEnable.call(this);
            this.content.on("position-changed", this.Ah, this);
            this.node.on("scroll-to-top", this.Ih, this);
            this.node.on("scroll-to-bottom", this.wh, this);
            this.node.on("scroll-ended", this.Oh, this);
            this.node.on("scrolling", this.Hh, this);
            this.node.on("size-changed", this.ui, this);
            if (this.Ch) {
              this.reloadData();
              this.Ch = false;
            }
          };
          u.prototype.viewWillLayoutSubviews = function () {};
          u.prototype.viewDidLayoutSubviews = function () {
            var D = this.node.width;
            var x = this.node.height;
            this.view.setContentSize(D, x);
            for (this.content.width = D; this.Bh();) {
              this.Gh();
            }
            for (; this.Nh();) {
              this.Th();
            }
            for (; this.Ph();) {
              this.Lh();
            }
            for (; this.Rh();) {
              this.Eh();
            }
          };
          u.prototype.setDataSource = function (D) {
            this.ci = D;
          };
          u.prototype.register = function (D, x, G) {
            if (this.nodePools[D]) {
              ;
            } else if (x) {
              var Y;
              Y = G ? new cc.NodePool(G) : new cc.NodePool();
              this.templates[D] = x;
              this.nodePools[D] = Y;
            }
          };
          u.prototype.dequeueReusableItem = function (D) {
            var x;
            var G = this.nodePools[D];
            if (G) {
              if (!(x = G.get())) {
                var Y = this.templates[D];
                x = cc.instantiate(Y);
              }
              x.lv_type = D;
            }
            return x;
          };
          u.prototype.reloadData = function () {
            var D = this;
            if (this.ci) {
              if (this.kh) {
                this.stopAutoScroll();
                var x = this._h;
                var G = this.bh = this.ci.getCount(this);
                var Y = 0x0;
                var W = 0x0;
                var F = 0x0;
                if (x && x.length && x.length > 0x0) {
                  Y = (L = x[0x0]).listViewIndex;
                  W = L.y - L.height * L.anchorY + L.height;
                  F = x[x.length - 0x1].listViewIndex;
                }
                this.gh = true;
                if (x && x.length && (0x0 === G || F >= G)) {
                  for (var E = x.length - 0x1; F >= G && (Z = x[E]);) {
                    if (Z) {
                      this.vi(Z);
                    }
                    F--;
                    E--;
                  }
                }
                var I = this._h = [];
                if (Y < G) {
                  var w = 0x0;
                  for (var j = W; E < G && this.Bh();) {
                    var w;
                    var j;
                    var Z;
                    if (Z = this.Uh(E, x)) {
                      this.vi(Z);
                    }
                    if (P = this.ci.getItem(this, E)) {
                      P.lv_type;
                      P.x = 0x0;
                      P.y = j - P.height * P.anchorY;
                      P.listViewIndex = E;
                      w += P.height;
                      this.content.addChild(P);
                      I.push(P);
                      j = P.y - P.height * P.anchorY;
                      E++;
                    }
                  }
                  var X = this.content.originY - j - this.view.height;
                  this.content.height = Math.abs(j);
                  if (w < this.view.height && Y > 0x0) {
                    E = Y - 0x1;
                    var V = this.view.height - w;
                    var H = 0x0;
                    for (var z = W; E >= 0x0 && H < V;) {
                      if (P = this.ci.getItem(this, E)) {
                        P.lv_type;
                        P.x = 0x0;
                        P.y = z + P.height * (0x1 - P.anchorY);
                        P.listViewIndex = E;
                        H += P.height;
                        this.content.addChild(P);
                        I.unshift(P);
                        z = P.y - P.height * P.anchorY + P.height;
                        E--;
                      }
                    }
                    this.content.runAction(cc.sequence(cc.moveTo(0.2, cc.v2(0x0, X)), cc.callFunc(function () {
                      D.content.y = X;
                      D.content.oldY = X;
                      D.gh = false;
                      D.jh();
                    })));
                  } else {
                    this.gh = false;
                    this.jh();
                  }
                } else {
                  w = 0x0;
                  E = G - 0x1;
                  for (z = -G * this.Sh; E >= 0x0 && w < this.view.height;) {
                    var P;
                    if (P = this.ci.getItem(this, E)) {
                      P.lv_type;
                      P.x = 0x0;
                      P.y = z + P.height * (0x1 - P.anchorY);
                      P.listViewIndex = E;
                      w += P.height;
                      this.content.addChild(P);
                      I.unshift(P);
                      z = P.y - P.height * P.anchorY + P.height;
                      E--;
                    }
                  }
                  V = 0x0;
                  if (w > this.view.height) {
                    V = w - this.view.height;
                  } else if (w < this.view.height) {
                    this.Dh(true);
                  }
                  var O = this.content.originY + V;
                  this.content.runAction(cc.sequence(cc.moveTo(0.2, cc.v2(0x0, O)), cc.callFunc(function () {
                    D.content.y = O;
                    D.content.oldY = O;
                    D.gh = false;
                    D.jh();
                  })));
                }
                if (I.length && I.length > 0x0) {
                  var L = I[0x0];
                  var U = I[I.length - 0x1];
                  this.Sh = (L.y - L.height * L.anchorY + L.height - (U.y - U.height * U.anchorY)) / (U.listViewIndex - L.listViewIndex + 0x1);
                  this.content.height = this.Sh * G;
                }
              } else {
                this.Ch = true;
              }
            }
          };
          u.prototype.scrollToRow = function (D, x, G) {
            var Y = this;
            if (undefined === x) {
              x = S.scrollPosition.scrollPositionTop;
            }
            if (undefined === G) {
              G = true;
            }
            this.stopAutoScroll();
            var m = this.content.y;
            if (!(D < 0x0 || D >= this.bh)) {
              var W = this._h;
              if (W && W.length && !(W.length <= 0x0)) {
                this.content.off("position-changed", this.Ah, this);
                var F = this.ph = D;
                W = this.Wh(F, W);
                this._h = W;
                if (0x0 === W[0x0].listViewIndex) {
                  this.Dh(true);
                }
                var E;
                var v;
                var I = this.itemAtIndex(D);
                var w = W.indexOf(I);
                var j = 0x0;
                v = x === S.scrollPosition.scrollPositionTop ? 0x0 : x === S.scrollPosition.scrollPositionMiddle ? this.view.height / 0x2 - I.height * I.anchorY : this.view.height;
                if (x === S.scrollPosition.scrollPositionBottom) {
                  j = (j = v - (Z = this.xh(w, W, v, false))) >= 0x0 ? j : 0x0;
                  E = this.content.originY + Math.abs(I.y) + I.height * I.anchorY - v + j;
                } else if (x === S.scrollPosition.scrollPositionTop) {
                  var Z = this.xh(w, W, this.view.height - v, true);
                  j = (j = this.view.height - v - Z) >= 0x0 ? j : 0x0;
                  E = this.content.originY + Math.abs(I.y) - I.height * I.anchorY - v - j;
                } else {
                  Z = this.xh(w, W, this.view.height - v, true);
                  if ((j = this.view.height - v - Z) <= 0x0) {
                    j = v - (Z = this.xh(w - 0x1, W, v, false));
                  }
                  j = j >= 0x0 ? j : 0x0;
                  E = this.content.originY + Math.abs(I.y) - I.height * I.anchorY - v - j;
                }
                if (m === (E = E >= this.content.originY ? E : this.content.originY)) {
                  this.content.y = E;
                  this.content.oldY = E;
                  this.Fh(F);
                  return void this.content.on("position-changed", this.Ah, this);
                }
                if (G) {
                  this.content.runAction(cc.sequence(cc.moveTo(0.2, cc.v2(this.content.x, E)), cc.callFunc(function () {
                    Y.content.y = E;
                    Y.content.oldY = E;
                    Y.Fh(F);
                    Y.content.on("position-changed", Y.Ah, Y);
                  })));
                } else {
                  this.content.y = E;
                  this.content.oldY = E;
                  this.Fh(F);
                  this.content.on("position-changed", this.Ah, this);
                }
              }
            }
          };
          u.prototype.visibleItems = function () {
            return this._h;
          };
          u.prototype.itemAtIndex = function (D) {
            return this.Uh(D, this._h);
          };
          u.prototype.insertCellAtIndex = function (D, x) {
            var G = this;
            if (undefined === x) {
              x = true;
            }
            if (!(D > this.bh)) {
              this.stopAutoScroll();
              this.bh += 0x1;
              this.content.height = this.Sh * this.bh;
              var Y = this.itemAtIndex(D);
              var m = this._h;
              var W = this.Vh;
              if (!Y) {
                var F = m[0x0];
                if (F.listViewIndex > D) {
                  this.zh(0x0, F.listViewIndex + 0x1);
                } else if (this.Bh()) {
                  this.Gh();
                }
                if (W) {
                  W.updateCellAmimation(null, S.cellUpdateAction.cellUpdateActionInsert);
                }
                return void (W && W.animationEnd());
              }
              var E = m.indexOf(Y);
              var v = Y.y - Y.height * Y.anchorY + Y.height;
              var I = this.ci.getItem(this, D);
              I.x = 0x0;
              I.y = v - I.height * I.anchorY;
              I.listViewIndex = D;
              this.content.addChild(I);
              m.splice(E, 0x0, I);
              v = I.y - I.height * I.anchorY;
              this.zh(E + 0x1, D + 0x1);
              if (W) {
                W.updateCellAmimation(I, S.cellUpdateAction.cellUpdateActionInsert);
              }
              this.Jh(E + 0x1, v, S.cellUpdateAction.cellUpdateActionInsert, x, function () {
                for (; G.Rh();) {
                  G.Eh();
                }
                G.qh();
                G.Kh = false;
              });
            }
          };
          u.prototype.removeCellAtIndex = function (D, x) {
            var G = this;
            if (undefined === x) {
              x = true;
            }
            if (!(D >= this.bh)) {
              var Y = this._h;
              this.bh -= 0x1;
              var m = this.itemAtIndex(D);
              var W = this.Vh;
              if (!m) {
                var F = Y[0x0];
                if (F.listViewIndex > D) {
                  this.zh(0x0, F.listViewIndex - 0x1);
                }
                if (W) {
                  W.updateCellAmimation(null, S.cellUpdateAction.cellUpdateActionRemove);
                }
                return void (W && W.animationEnd());
              }
              this.stopAutoScroll();
              var E = Y.indexOf(m);
              var v = m.y - m.height * m.anchorY + m.height;
              Y.splice(E, 0x1);
              this.zh(E, D);
              if (this.Vh) {
                W.updateCellAmimation(m, S.cellUpdateAction.cellUpdateActionRemove, function () {
                  G.vi(m);
                  m.removeFromParent();
                });
              } else {
                this.vi(m);
                m.removeFromParent();
              }
              this.Jh(E, v, S.cellUpdateAction.cellUpdateActionRemove, x, function () {
                for (; G.Ph();) {
                  G.Lh();
                }
                for (; G.Bh();) {
                  G.Gh();
                }
                G.qh();
                G.Kh = false;
              });
            }
          };
          u.prototype.updateCellAtIndex = function (D, x) {
            var G = this;
            if (undefined === x) {
              x = true;
            }
            var Y = this.itemAtIndex(D);
            if (Y) {
              var m = this._h;
              var W = m.indexOf(Y);
              var F = Y.y - Y.height * Y.anchorY + Y.height;
              var E = Y.height;
              var v = this.ci.getItem(this, D);
              if (v && (this.vi(Y), v.x = 0x0, v.y = F - v.height * v.anchorY, v.listViewIndex = D, this.content.addChild(v), m[W] = v, E !== v.height)) {
                F = v.y - v.height * v.anchorY;
                this.Jh(W + 0x1, F, S.cellUpdateAction.cellUpdateActionUpdate, x, function () {
                  if (E < v.height) {
                    for (; G.Rh();) {
                      G.Eh();
                    }
                  } else {
                    for (; G.Bh();) {
                      G.Gh();
                    }
                  }
                  G.qh();
                  G.Kh = false;
                });
              }
            }
          };
          u.prototype.setScrollToTopCallback = function (D) {
            this.Qh = D;
          };
          u.prototype.setScrollToBottomCallback = function (D) {
            this.Yh = D;
          };
          u.prototype.setScrollEndedCallback = function (D) {
            this.Xh = D;
          };
          u.prototype.setScrollingCallback = function (D) {
            this.Zh = D;
          };
          u.prototype.setCellUpdateAnimCallback = function (D) {
            this.Vh = D;
          };
          u.prototype.Mh = function () {
            if (this.contentWidget) {
              this.contentWidget.isAlignTop = false;
            }
          };
          u.prototype.vi = function (D) {
            var x;
            var G = D.lv_type;
            if (G) {
              x = this.nodePools[G];
            }
            if (x) {
              x.put(D);
            }
          };
          u.prototype.qh = function () {
            var D = this._h;
            if (D.length > 0x0) {
              var x = D[D.length - 0x1];
              var G = D[0x0];
              var Y = Math.abs(x.y) + x.height * x.anchorY;
              if (Y > this.content.height) {
                this.content.height = Y;
              } else if (Y < this.view.height && 0x0 === G.listViewIndex) {
                this.content.y = this.content.originY;
                this.content.oldY = this.content.originY;
                this.content.height = Y;
              } else if (x.listViewIndex === this.bh - 0x1) {
                this.content.height = Y;
              }
            } else {
              this.content.height = 0x0;
            }
          };
          u.prototype.$h = function () {
            var D = this._h;
            if (D && D.length && !(D.length <= 0x0)) {
              var x = D[0x0];
              var G = x.y - x.height * x.anchorY + x.height;
              var Y = D[D.length - 0x1];
              if (0x0 !== x.listViewIndex || 0x0 === G) {
                if (G > -this.Sh && x.listViewIndex > 0x1) {
                  this.tr(true);
                } else if (Y.listViewIndex === this.bh - 0x1 && Math.abs(Y.y) + Y.height * Y.anchorY < this.content.height) {
                  this.tr(true);
                } else if (Math.abs(Y.y) + Y.height * Y.anchorY > this.content.height) {
                  this.tr(false);
                }
              } else {
                this.tr(true);
              }
            }
          };
          u.prototype.tr = function (D, x) {
            if (undefined === x) {
              x = true;
            }
            this.gh = true;
            this.Dh(D);
            this.gh = false;
            this.Wn.y = this.content.y;
            if (x) {
              this.ir();
            }
          };
          u.prototype.Dh = function (D) {
            var x = this._h;
            if (x && x.length && !(x.length <= 0x0)) {
              this.stopAutoScroll();
              if (D) {
                var G = -x[0x0].listViewIndex * this.Sh;
                for (var Y = 0x0; Y < x.length;) {
                  (W = x[Y]).x = 0x0;
                  W.y = G - W.height * W.anchorY;
                  G = W.y - W.height * W.anchorY;
                  Y++;
                }
              } else {
                var m = -x[x.length - 0x1].listViewIndex * this.Sh;
                for (Y = x.length - 0x1; Y >= 0x0;) {
                  var W;
                  (W = x[Y]).x = 0x0;
                  W.y = m - W.height * W.anchorY + W.height;
                  m = W.y - W.height * W.anchorY + W.height;
                  Y--;
                }
              }
              var F = x[0x0];
              var E = this.content.originY - (F.y - F.height * F.anchorY);
              this.content.y = E;
              this.content.oldY = E;
              this.qh();
            }
          };
          u.prototype.ir = function () {
            this.jn = true;
            this.Fn = this.sr;
            this.Vn = 0x0;
            this.xn = this.er;
          };
          u.prototype.Bh = function () {
            var D = false;
            var x = this._h;
            if (x.length > 0x0) {
              var G = x[x.length - 0x1];
              if (G.listViewIndex === this.bh - 0x1) {
                return false;
              }
              var Y = G.y - G.height * G.anchorY;
              var m = this.content.convertToWorldSpaceAR(cc.v2(0x0, Y));
              var W = this.view.y - this.view.height * this.view.anchorY;
              var F = this.view.parent.convertToWorldSpaceAR(cc.v2(0x0, W));
              if (m.y >= F.y) {
                D = true;
              }
            } else if (0x0 === x.length && this.bh > 0x0) {
              D = true;
            }
            return D;
          };
          u.prototype.Ph = function () {
            var D = false;
            var x = this._h;
            if (x.length > 0x0) {
              var G = x[0x0];
              if (0x0 === G.listViewIndex) {
                return false;
              }
              var Y = G.y - G.height * G.anchorY + G.height;
              var m = this.content.convertToWorldSpaceAR(cc.v2(0x0, Y));
              var W = this.view.y - this.view.height * this.view.anchorY + this.view.height;
              var F = this.view.parent.convertToWorldSpaceAR(cc.v2(0x0, W));
              if (m.y <= F.y) {
                D = true;
              }
            }
            return D;
          };
          u.prototype.Rh = function () {
            var D = false;
            var x = this._h;
            if (x.length > 0x1) {
              var G = x[x.length - 0x1].y - x[x.length - 0x1].height * x[x.length - 0x1].anchorY + x[x.length - 0x1].height;
              var Y = this.content.convertToWorldSpaceAR(cc.v2(0x0, G));
              var m = this.view.y - this.view.height * this.view.anchorY;
              var W = this.view.parent.convertToWorldSpaceAR(cc.v2(0x0, m));
              if (Y.y < W.y) {
                D = true;
              }
            }
            return D;
          };
          u.prototype.Nh = function () {
            var D = false;
            var x = this._h;
            if (x.length > 0x1) {
              var G = x[0x0].y - x[0x0].height * x[0x0].anchorY;
              var Y = this.content.convertToWorldSpaceAR(cc.v2(0x0, G));
              var m = this.view.y - this.view.height * this.view.anchorY + this.view.height;
              var W = this.view.parent.convertToWorldSpaceAR(cc.v2(0x0, m));
              if (Y.y > W.y) {
                D = true;
              }
            }
            return D;
          };
          u.prototype.Gh = function () {
            var D = this._h;
            if (D.length > 0x0) {
              var x = this.bh;
              var G = D[D.length - 0x1];
              var Y = G.listViewIndex + 0x1;
              if (Y < x) {
                var m = this.ci.getItem(this, Y);
                m.lv_type;
                var W = G.y - G.height * G.anchorY;
                m.x = 0x0;
                m.y = W - m.height * m.anchorY;
                m.listViewIndex = Y;
                this.content.addChild(m);
                D.push(m);
              }
            }
          };
          u.prototype.Lh = function () {
            var D = this._h;
            if (D.length > 0x0) {
              var x = D[0x0];
              var G = x.listViewIndex - 0x1;
              if (G >= 0x0) {
                var Y = this.ci.getItem(this, G);
                Y.lv_type;
                var m = x.y - x.height * x.anchorY + x.height;
                Y.x = 0x0;
                Y.y = m - Y.height * Y.anchorY + Y.height;
                Y.listViewIndex = G;
                this.content.addChild(Y);
                D.unshift(Y);
              }
            }
          };
          u.prototype.Th = function () {
            var D = this._h;
            if (D.length > 0x0) {
              var x = D[0x0];
              this.vi(x);
              D.shift();
            }
          };
          u.prototype.Eh = function () {
            var D = this._h;
            if (D.length > 0x0) {
              var x = D[D.length - 0x1];
              this.vi(x);
              D.pop();
            }
          };
          u.prototype.nr = function () {
            var D = this._h;
            if (D.length > 0x0) {
              for (var x = 0x0; x < D.length && this.Nh();) {
                this.Th();
                x++;
              }
            }
          };
          u.prototype.or = function () {
            var D = this._h;
            if (D.length > 0x0) {
              for (var x = D[D.length - 0x1]; x >= 0x0 && this.Rh();) {
                this.Eh();
                x--;
              }
            }
          };
          u.prototype.Fh = function (D) {
            this.nr();
            this.or();
            var x = this._h;
            var G = this.itemAtIndex(D);
            var Y = x.indexOf(G);
            if (-0x1 !== Y) {
              var m = Y;
              var W = [];
              var F = -0x1;
              var E = -0x1;
              if (x.length > m) {
                var I = x[m];
                var w = I.listViewIndex;
                m++;
                for (W.push(I); m < x.length;) {
                  if ((j = (V = x[m]).listViewIndex) - w != 0x1) {
                    F = j;
                    break;
                  }
                  W.push(V);
                  m++;
                  w = j;
                }
                m = Y - 0x1;
                for (w = I.listViewIndex; m >= 0x0;) {
                  var j;
                  if (w - (j = (V = x[m]).listViewIndex) != 0x1) {
                    E = j;
                    break;
                  }
                  W.unshift(V);
                  m--;
                  w = j;
                }
              }
              if (F >= 0x0) {
                var Z = this.itemAtIndex(F);
                for (var X = x.indexOf(Z); x.length > X;) {
                  var V = x[X];
                  this.vi(V);
                  X++;
                }
              }
              if (E >= 0x0) {
                var H = this.itemAtIndex(E);
                for (var z = x.indexOf(H); z >= 0x0;) {
                  V = x[z];
                  this.vi(V);
                  z--;
                }
              }
              this._h = W;
            }
          };
          u.prototype.cr = function (D, x) {
            var G = this._h;
            var Y = G[0x0];
            var m = G[G.length - 0x1];
            var W = D;
            var F = 0x0;
            for (var E = []; W < this.bh && F <= x && W !== Y.listViewIndex && W !== m.listViewIndex;) {
              var v = this.ci.getItem(this, W);
              v.listViewIndex = W;
              this.content.addChild(v);
              E.push(v);
              F += v.height;
              W++;
            }
            return E;
          };
          u.prototype.hr = function (D, x) {
            var G = this._h;
            var Y = G[0x0];
            var m = G[G.length - 0x1];
            var W = D;
            var F = 0x0;
            for (var E = []; W >= 0x0 && F <= x && W !== Y.listViewIndex && W !== m.listViewIndex;) {
              var v = this.ci.getItem(this, W);
              v.listViewIndex = W;
              this.content.addChild(v);
              E.unshift(v);
              F += v.height;
              W--;
            }
            return E;
          };
          u.prototype.rr = function (D, x) {
            if (!x || !x.length || x.length <= 0x0) {
              return null;
            }
            for (var G = 0x0; G < x.length; G++) {
              var Y = x[G];
              Y.x = 0x0;
              Y.y = D - Y.height * Y.anchorY;
              D -= Y.height;
            }
            return x;
          };
          u.prototype.ar = function (D, x) {
            if (!x || !x.length || x.length <= 0x0) {
              return null;
            }
            for (var G = x.length - 0x1; G >= 0x0; G--) {
              var Y = x[G];
              Y.x = 0x0;
              Y.y = D + Y.height * Y.anchorY;
              D += Y.height;
            }
            return x;
          };
          u.prototype.xh = function (D, x, G, Y) {
            var W = 0x0;
            if (Y) {
              for (var F = D; F < x.length && !((W += x[F].height) >= G); F++) {
                ;
              }
            } else {
              for (F = D; F >= 0x0 && !((W += x[F].height) >= G); F--) {
                ;
              }
            }
            return W;
          };
          u.prototype.Wh = function (D, x) {
            var G;
            var Y;
            var m = x[0x0];
            var W = x[x.length - 0x1];
            var F = this.view.height;
            if (D >= m.listViewIndex && D <= W.listViewIndex) {
              G = this.cr(W.listViewIndex + 0x1, F);
              Y = this.hr(m.listViewIndex - 0x1, F);
              G = this.rr(W.y - W.height * W.anchorY, G);
              if (Y = this.ar(m.y - m.height * m.anchorY + m.height, Y)) {
                x = Y.concat(x);
              }
              if (G) {
                x = x.concat(G);
              }
            } else {
              var E = D;
              G = this.cr(E, F);
              E = D;
              var v = undefined;
              v = (Y = this.hr(E - 0x1, F)) && G ? Y.concat(G) : Y || G;
              if (D > W.listViewIndex) {
                v = this.rr(W.y - W.height * W.anchorY, v);
                x = x.concat(v);
              } else if (v = this.ar(m.y - m.height * m.anchorY + m.height, v)) {
                x = v.concat(x);
              }
            }
            return x;
          };
          u.prototype.ur = function () {
            var D = this._h;
            return !(D.length > 0x0) || D[D.length - 0x1].listViewIndex === this.bh - 0x1;
          };
          u.prototype.Uh = function (D, x) {
            if (!x || !x.length || x.length <= 0x0) {
              return null;
            }
            var G = null;
            for (var Y = 0x0; Y < x.length;) {
              var m = x[Y];
              if (m.listViewIndex === D) {
                G = m;
                break;
              }
              Y++;
            }
            return G;
          };
          u.prototype.jh = function () {
            this.qh();
            if (this.ci.didReloadData) {
              this.ci.didReloadData(this);
            }
          };
          u.prototype.Jh = function (D, x, G, Y, m) {
            var W = this;
            var F = this.Vh;
            this.Kh = true;
            var E;
            var v = this._h;
            var I = F ? F.layoutDuration() : 0.5;
            var w = F ? F.layoutDelay(G) : 0x0;
            var j = function (V) {
              var H = v[V];
              var z = H.y;
              var P = x - H.height * H.anchorY;
              x = P - H.height * H.anchorY;
              if (V === v.length - 0x1) {
                E = Math.abs(P) + H.height * H.anchorY;
              }
              if (z !== P && Y) {
                H.runAction(cc.sequence(cc.delayTime(w), cc.moveTo(I, cc.v2(H.x, P)), cc.callFunc(function () {
                  H.y = P;
                  if (V === v.length - 0x1) {
                    W.lr(E);
                    if (m) {
                      m();
                    }
                    if (F) {
                      F.animationEnd();
                    }
                  }
                })));
              } else {
                H.y = P;
                if (V === v.length - 0x1) {
                  Z.lr(E);
                  if (m) {
                    m();
                  }
                  if (F) {
                    F.animationEnd();
                  }
                }
              }
            };
            var Z = this;
            for (var X = D; X < v.length; X++) {
              j(X);
            }
            if (D >= v.length) {
              if (m) {
                m();
              }
              if (F) {
                F.animationEnd();
              }
            }
          };
          u.prototype.lr = function (D) {
            var x = D + this.content.originY - this.content.y - this.view.height;
            if (x < 0x0) {
              this.content.oldY += x;
              this.content.y += x;
            }
          };
          u.prototype.zh = function (D, x) {
            var G = this._h;
            for (var Y = D; Y < G.length; Y++) {
              G[Y].listViewIndex = x;
              x += 0x1;
            }
          };
          u.prototype.Ah = function () {
            var D = this.content;
            var x = D.y - D.oldY;
            D.oldY = D.y;
            if (!this.gh) {
              if (x > 0x0) {
                for (; this.Bh();) {
                  this.Gh();
                }
                for (; this.Nh();) {
                  this.Th();
                }
              } else if (x < 0x0) {
                for (; this.Ph();) {
                  this.Lh();
                }
                for (; this.Rh();) {
                  this.Eh();
                }
              }
              this.$h();
            }
          };
          u.prototype.Ih = function () {
            this.dr = true;
          };
          u.prototype.wh = function () {
            this.vr = true;
          };
          u.prototype.Oh = function () {
            if (this.Xh) {
              this.Xh();
            }
          };
          u.prototype.Hh = function () {
            var D = this.xi();
            if (this.Zh) {
              this.Zh(D.y);
            }
          };
          u.prototype.ui = function () {
            this.viewDidLayoutSubviews();
          };
          u.prototype.stopAutoScroll = function () {
            if (this.gh) {
              this.sr = this.Fn - this.Vn;
              var D = Math.min(0x1, this.Vn / this.Fn);
              if (this.Dn) {
                G = D;
                D = (G -= 0x1) * G * G * G * G + 0x1;
              }
              x = 0x1 - D;
              this.er = this.xn.mul(x);
            }
            var x;
            var G;
            b.prototype.stopAutoScroll.call(this);
          };
          u.prototype.Fi = function () {
            var D = this;
            if (this.dr && this.Qh) {
              var x = this.xi();
              this.Qh(function () {
                D.dr = false;
                D.lo(cc.v2(0x0, 0x0));
              }, x);
            } else if (this.vr && this.Yh && this.ur()) {
              this.Yh(function (G) {
                D.vr = false;
                var Y = D.bh = D.ci.getCount(D);
                D.content.height = D.Sh * Y;
                var m = D._h;
                if (m && m.length && m.length > 0x0) {
                  var W = m[m.length - 0x1].listViewIndex;
                  for (D.content.off("position-changed", D.Ah, D); W < Y && D.Bh();) {
                    D.Gh();
                    W += 0x1;
                  }
                  D.qh();
                  D.content.on("position-changed", D.Ah, D);
                }
                if (G) {
                  D.Fi();
                }
              });
            } else {
              this.dr = false;
              this.vr = false;
              b.prototype.Fi.call(this);
            }
          };
          u.prototype.Gi = function (D) {
            if (!this.Kh) {
              b.prototype.Gi.call(this, D);
            }
          };
          __decorate([f(cc.Node)], u.prototype, "view", undefined);
          __decorate([f(cc.Widget)], u.prototype, "contentWidget", undefined);
          return __decorate([N], u);
        }(cc.ScrollView);
        C["default"] = J;
        cc._RF.pop();
      }
    }, Rf],
    'LoadingController': [function (B, Q, K) {
      'use strict';

      if (!cc._RF.push(Q, "d3b3aRS5uVIkp5h4hZ4Ux5H", "LoadingController")) {
        var q = {
          value: true
        };
        Object.defineProperty(K, "__esModule", q);
        var N = B("ResourceLoader");
        var J = B("NoSoundAdapter");
        var A = B("GameAudioAdapter");
        var y = B("SettingMenuHelper");
        var k = B("AnalyticsHelper");
        var D = B("BVFrameworkEnum");
        var x = B("ErrorHandler");
        var G = B("QuitGameWithEvent");
        var Y = B("LaunchConfig");
        var W = B("GeneralAssetConfig");
        var F = B("AudioAssetConfig");
        var E = B("CustomAssetConfig");
        var I = B("SymbolImageHandler");
        var w = B("SpineConfigHandler");
        var j = B("AudioManager");
        var Z = cc._decorator;
        var X = Z.ccclass;
        var V = Z.property;
        var H = function (z) {
          function P() {
            var O = null !== z && z.apply(this, arguments) || this;
            O.backgroundControllerHolder = undefined;
            O.angpaoControllerHolder = undefined;
            O.behindSlotHolder = undefined;
            O.backgroundController2Holder = undefined;
            O.bigWinControllerHolder = undefined;
            O.clickEffectHolder = undefined;
            O.infoBoardControllerHolder = undefined;
            O.paySelectEffectControllerHolder = undefined;
            O.payOutEffectControllerHolder = undefined;
            O.payLineNumberControllerHolder = undefined;
            O.settingMenuHolder = undefined;
            O.slotControllerHolder = undefined;
            O.spinButtonControllerHolder = undefined;
            O.foregroundControllerHolder = undefined;
            O.symbolPopoutControllerHolder = undefined;
            O.featureWinControllerHolder = undefined;
            O.trailParticleHolder = undefined;
            O.tigerControllerHolder = undefined;
            O.stickyControllerHolder = undefined;
            O.uiShiftNode = undefined;
            O._r = new N["default"]();
            O.ps = undefined;
            O.mr = undefined;
            O.pr = false;
            O.br = "load resource fail";
            return O;
          }
          __extends(P, z);
          P.prototype.setup = function (O) {
            this.ps = O.generalControllers;
            this.Sr = O.bonusControllers;
            this.gr();
            this.Cr();
            this.yr();
            this.spinButtonControllerHolder.zIndex = D.EN_GAME_LAYER_Z_INDEX_HIGH + 0x32;
            this.settingMenuHolder.zIndex = D.EN_GAME_LAYER_Z_INDEX_HIGH + 0x32;
            this.bigWinControllerHolder.zIndex = D.EN_GAME_LAYER_Z_INDEX_HIGH + 0x32;
          };
          P.prototype.loadGeneralBundle = function (O, L) {
            if (undefined === L) {
              L = false;
            }
            var U = [].concat(W.generalAssetConfig, F.audioAssetConfig, E.customAssetConfig);
            this.pr = L;
            this.Mr(U, this.Ar.bind(this), this.Ir.bind(this), O);
          };
          P.prototype.Mr = function (O, L, U, T) {
            shell.setProgressVisible(true);
            this.mr = T;
            var h0 = {
              'bundle': O,
              'progressCallback': L,
              'retryHandling': this.wr.bind(this),
              'retryingCallback': this.Or.bind(this),
              'retryMessage': shell.I18n.t("General.ResourceRetryMessage")
            };
            this._r.loadBundle(h0).then(U);
          };
          P.prototype.gr = function () {
            var O = '1' === Y.cs_Launch.noAudio ? J["default"] : A["default"];
            y.settingMenuHelper.initAudio(O);
          };
          P.prototype.Cr = function () {
            Object.keys(j.GeneralAudioPool).forEach(function (O) {
              F.audioAssetConfig.push({
                'name': O,
                'type': N.LoaderType.CUSTOM,
                'loadFunc': function (L, U) {
                  j.loadAudio(j.GeneralAudioPool[O], function (T) {
                    if (T) {
                      U(T);
                    }
                    L(undefined);
                  });
                }
              });
            });
            F.audioAssetConfig.push({
              'name': "general_audio",
              'type': N.LoaderType.CUSTOM,
              'loadFunc': function (O, L) {
                j.loadAudio(j.generalGameAudio, function (U) {
                  if (U) {
                    L(U);
                  }
                  O(undefined);
                });
              }
            });
          };
          P.prototype.yr = function () {
            var O = {
              setting_menu: y.settingMenuHelper.path + "prefab/setting_menu/setting_menu",
              setting_menu_auto_spin_button: y.settingMenuHelper.path + "prefab/others/spin_options_button",
              setting_menu_more_menu_button: y.settingMenuHelper.path + "prefab/others/more_menu_button",
              setting_menu_setting_button: y.settingMenuHelper.path + "prefab/others/sound_button",
              setting_menu_rules_button: y.settingMenuHelper.path + "prefab/others/rules_button",
              setting_menu_payout_button: y.settingMenuHelper.path + "prefab/others/payout_button",
              setting_menu_history_button: y.settingMenuHelper.path + "prefab/others/history_button",
              setting_menu_hide_more_button: y.settingMenuHelper.path + "prefab/others/hide_more_menu_button",
              setting_menu_minus_bet_button: y.settingMenuHelper.path + "prefab/others/minus_bet_button",
              setting_menu_plus_bet_button: y.settingMenuHelper.path + "prefab/others/plus_bet_button",
              setting_menu_smartbot_button: y.settingMenuHelper.path + "prefab/others/smartbot_button",
              setting_menu_turbo_spin_button: y.settingMenuHelper.path + "prefab/others/turbo_spin_button",
              setting_menu_quit_button: y.settingMenuHelper.path + "prefab/others/quit_button"
            };
            var U = {
              name: "setting_menu_locale",
              url: y.settingMenuHelper.path + "texture/hd/setting_menu_locale",
              type: cc.SpriteAtlas,
              isLocalized: true
            };
            E.customAssetConfig.push(U);
            Object.keys(O).forEach(function (T) {
              var h0 = {
                name: T,
                url: O[T],
                type: cc.Prefab,
                isLocalized: false
              };
              E.customAssetConfig.push(h0);
            });
          };
          P.prototype.wr = function (O, L, U, T) {
            var h0 = this;
            var h1 = shell.Error;
            var h2 = shell.ClientError;
            var h3 = new h1(h2.Domain, h2.GameLoadResourceError);
            var h4 = T > 0x0 ? T : undefined;
            k.sendLoadFailReport(h4);
            var h5 = this.pr ? x.ErrContext.Launch : x.ErrContext.Preload;
            x.showError(h3, h5, function (h6) {
              switch (h6) {
                case x.ErrAction.Retry:
                  if (O) {
                    O();
                  }
                  break;
                case x.ErrAction.Quit:
                  G.quitGameWithEvent(h0.br)();
              }
            });
          };
          P.prototype.Or = function (O) {
            var L = O > 0x0 ? O : undefined;
            k.sendLoadFailReport(L);
          };
          P.prototype.Ar = function (O, L) {
            shell.setProgress(O, L);
          };
          P.prototype.Ir = function (h0) {
            var h1;
            var h2;
            var h3 = h0.angpao_controller;
            var h4 = h0.background_controller;
            var h5 = h0.background_controller_2;
            var h6 = h0.big_win_controller;
            var h7 = h0.big_win_text;
            var h8 = h0.column_tint_controller;
            var h9 = h0.click_effect;
            var hh = h0.h_firecracker_atlas_symbols;
            var hM = h0.h_ingot_atlas_symbols;
            var hB = h0.h_pouch_atlas_symbols;
            var hR = h0.h_orange_atlas_symbols;
            var hl = h0.h_angbao_atlas_symbols;
            var hQ = h0.h_ruyi_atlas_symbols;
            var hC = h0.s_wild;
            var hK = h0.info_board_controller;
            var hS = h0.infoboard_text;
            var hq = h0.infoboard_win_text;
            var hN = h0.normal_symbol;
            var hf = h0.setting_menu;
            var ho = h0.setting_menu_auto_spin_button;
            var hs = h0.setting_menu_more_menu_button;
            var hJ = h0.setting_menu_setting_button;
            var hA = h0.setting_menu_rules_button;
            var hy = h0.setting_menu_payout_button;
            var hc = h0.setting_menu_history_button;
            var hb = h0.setting_menu_hide_more_button;
            var hn = h0.setting_menu_wallet_panel;
            var hu = h0.setting_menu_locale;
            var hk = h0.setting_menu_minus_bet_button;
            var hD = h0.setting_menu_plus_bet_button;
            var hr = h0.setting_menu_smartbot_button;
            var hx = h0.setting_menu_turbo_spin_button;
            var he = h0.setting_menu_quit_button;
            var hG = h0.spin_button_controller;
            var hY = h0.slot_controller;
            var hm = h0.slot_tint_controller;
            var hi = h0.pay_select_effect_controller;
            var hW = h0.pay_line_number_controller;
            var hF = h0.pay_line_controller;
            var ha = h0.pay_out_effect_controller;
            var hE = h0.wild_symbol;
            var hv = h0.foreground_controller;
            var hI = h0.symbol_popout_controller;
            var hw = h0.trail_particle_controller;
            var ht = h0.tiger_controller;
            var hj = h0.sticky_controller;
            h1 = cc.instantiate(hw.result);
            this.trailParticleHolder.addChild(h1);
            h2 = h1.getComponent("TrailParticleEffectController");
            this.ps.trailParticleEffectController = h2;
            h1 = cc.instantiate(hj.result);
            this.stickyControllerHolder.addChild(h1);
            (h2 = h1.getComponent("StickyController")).init();
            this.ps.stickyController = h2;
            this.ps.uiShiftController = this.uiShiftNode.getComponent("UIShiftController");
            this.ps.uiShiftController.init();
            h1 = cc.instantiate(h9.result);
            this.clickEffectHolder.addChild(h1);
            h2 = h1.getComponent("ClickEffectController");
            this.ps.clickEffectController = h2;
            h1 = cc.instantiate(hf.result);
            this.settingMenuHolder.addChild(h1);
            h2 = h1.getComponent("SettingMenuController");
            this.ps.settingController = h2;
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.SPIN_OPTIONS, ho.result);
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.MORE_MENU, hs.result);
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.SOUND, hJ.result, true);
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.RULE, hA.result);
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.PAYTABLE, hy.result);
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.HISTORY, hc.result);
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.HIDE_MORE, hb.result);
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.TURBO_SPIN, hx.result, true);
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.SMARTBOT, hr.result);
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.MINUS_BET, hk.result);
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.PLUS_BET, hD.result);
            y.settingMenuHelper.setButtonPrefab(y.ButtonPrefabType.QUIT, he.result);
            y.settingMenuHelper.settingMenuLocaleIcons = hu.result;
            h1 = cc.instantiate(hn.result);
            this.ps.settingMenuFooterController = h1.getComponent("SettingInfoFooterController");
            var hZ = [hC.result, undefined, hM.result, hQ.result, hB.result, hl.result, hh.result, hR.result];
            w.spineConfigHandler.setSymbolSpine(hZ);
            h1 = cc.instantiate(h3.result);
            this.angpaoControllerHolder.addChild(h1);
            (h2 = h1.getComponent("AngpaoController")).init(this.behindSlotHolder);
            this.ps.angpaoController = h2;
            h1 = cc.instantiate(h4.result);
            this.backgroundControllerHolder.addChild(h1);
            (h2 = h1.getComponent("BackgroundController")).init();
            this.ps.backgroundController = h2;
            h1 = cc.instantiate(h5.result);
            this.backgroundController2Holder.addChild(h1);
            h2 = h1.getComponent("BackgroundControllerTwo");
            this.ps.backgroundController2 = h2;
            h1 = cc.instantiate(h6.result);
            this.bigWinControllerHolder.addChild(h1);
            (h2 = h1.getComponent("BigWinController")).init();
            h2.setBigWinLocalizedTitleSpriteFrame(h7.result);
            this.ps.bigWinController = h2;
            I.symbolImageHandler.setSymbolImage(hN.result);
            I.symbolImageHandler.setLocalizedWildImage(hE.result);
            h1 = cc.instantiate(hY.result);
            this.slotControllerHolder.addChild(h1);
            (h2 = h1.getComponent("SlotController")).setSymbolImageHandler(I.symbolImageHandler);
            this.ps.slotController = h2;
            (h2 = (h1 = cc.instantiate(hm.result)).getComponent("SlotTintController")).init();
            this.ps.slotTintController = h2;
            h2 = (h1 = cc.instantiate(h8.result)).getComponent("ColumnTintController");
            this.ps.columnTintController = h2;
            h1 = cc.instantiate(hG.result);
            this.spinButtonControllerHolder.addChild(h1);
            (h2 = h1.getComponent("GSpinButtonController")).init();
            this.ps.spinButtonController = h2;
            h1 = cc.instantiate(hv.result);
            this.foregroundControllerHolder.addChild(h1);
            h2 = h1.getComponent("ForegroundController");
            this.ps.foregroundController = h2;
            h1 = cc.instantiate(ht.result);
            this.tigerControllerHolder.addChild(h1);
            (h2 = h1.getComponent("TigerController")).init();
            this.ps.tigerController = h2;
            h1 = cc.instantiate(hK.result);
            this.infoBoardControllerHolder.addChild(h1);
            (h2 = h1.getComponent("InfoboardController")).init();
            h2.setLocalizedSprites(hS.result);
            h2.setLocalizedWinAndTotalWinSprites(hq.result);
            this.ps.infoboardController = h2;
            h1 = cc.instantiate(hW.result);
            this.payLineNumberControllerHolder.addChild(h1);
            (h2 = h1.getComponent("PayLineNumberController")).init();
            this.ps.payLineNumberController = h2;
            h1 = cc.instantiate(hF.result);
            this.paySelectEffectControllerHolder.addChild(h1);
            (h2 = h1.getComponent("PayLineController")).init();
            this.ps.payLineController = h2;
            h1 = cc.instantiate(ha.result);
            this.payOutEffectControllerHolder.addChild(h1);
            (h2 = h1.getComponent("PayOutEffectController")).init(this.ps.slotController);
            this.ps.payOutEffectController = h2;
            (h2 = (h1 = cc.instantiate(hi.result)).getComponent("PaySelectEffectController")).init(this.ps.slotController, this.ps.payOutEffectController, this.ps.payLineNumberController, this.ps.payLineController);
            this.ps.paySelectEffectController = h2;
            this.paySelectEffectControllerHolder.addChild(h1);
            (h2 = (h1 = cc.instantiate(hI.result)).getComponent("SymbolPayoutController")).disablePanel();
            this.ps.symbolPopoutController = h2;
            this.symbolPopoutControllerHolder.addChild(h1);
            h1 = new cc.Node("symbol_payout_tint_node");
            this.symbolPopoutControllerHolder.addChild(h1);
            this.ps.symbolPopoutController.setPopOutTintHolder(h1);
            h1 = new cc.Node("symbol_payout_display_node");
            this.symbolPopoutControllerHolder.addChild(h1);
            this.ps.symbolPopoutController.setPopOutDisplayHolder(h1);
            var hX = this.mr;
            this.mr = undefined;
            if (hX) {
              hX();
            }
          };
          __decorate([V(cc.Node)], P.prototype, "backgroundControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "angpaoControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "behindSlotHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "backgroundController2Holder", undefined);
          __decorate([V(cc.Node)], P.prototype, "bigWinControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "clickEffectHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "infoBoardControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "paySelectEffectControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "payOutEffectControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "payLineNumberControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "settingMenuHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "slotControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "spinButtonControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "foregroundControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "symbolPopoutControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "featureWinControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "trailParticleHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "tigerControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "stickyControllerHolder", undefined);
          __decorate([V(cc.Node)], P.prototype, "uiShiftNode", undefined);
          return __decorate([X], P);
        }(cc.Component);
        K["default"] = H;
        cc._RF.pop();
      }
    }, Ro],
    'Main': [function (K, q, J) {
      'use strict';

      if (!cc._RF.push(q, "4beca/GAZlDX4iji0eR7872", "Main")) {
        var k = {
          value: true
        };
        Object.defineProperty(J, "__esModule", k);
        var D = K("GDataSource");
        var x = K("GApiClient");
        var Y = K("GSlotTransactionModel");
        var W = K("AudioManager");
        var F = K("Transitions");
        var E = K("RequestHandler");
        var j = K("GameInitializationHandler");
        var Z = K("MultiResHandler");
        var X = K("GRefreshWorldHandler");
        var V = K("NotifyHelper");
        var z = K("AnalyticsHelper");
        var U = K("Utils");
        var h0 = K("SettingMenuHelper");
        var h1 = K("UIAppearanceHelper");
        var h2 = K("WalletHelper");
        var h3 = K("GameLayout");
        var h4 = K("SettingMenuHandlers");
        var h5 = K("WalletHandlers");
        var h6 = K("GameEventHandler");
        var h7 = K("GNormalGameState");
        var h8 = K("GRespinGameState");
        var h9 = K("BGMHandler");
        var hh = K("JakeSlotGameTemplate");
        var hM = K("SpaceBarInterrupter");
        var hB = K("ReplayModeHandler");
        var hR = K("TransactionStateMachineHandler");
        var hl = K("SlotProperties");
        var hQ = K("GConstants");
        var hC = K("GeneralAudioConstant");
        var hK = K("SpinConfigHandler");
        var hS = cc._decorator.ccclass;
        var hq = function (hN) {
          function hf() {
            var ho = null !== hN && hN.apply(this, arguments) || this;
            ho.generalControllers = Object.create(null);
            ho.Hr = undefined;
            ho.Br = undefined;
            ho.Gr = true;
            return ho;
          }
          __extends(hf, hN);
          hf.prototype.onLoad = function () {
            var ho = {
              enableSessionSocket: true
            };
            var hs = {
              spaceBarInterrupterEnabled: true
            };
            j.initializeGame({
              'dataSource': D.gDataSource,
              'apiClient': x.gApiClient,
              'multiResHandler': Z["default"],
              'notifyConfig': {
                'theme': V.ThemeType.SLOT,
                'buttonColor': h1.uiAppearanceHelper.v("game.theme_color"),
                'buttonTitleColor': h1.uiAppearanceHelper.v("game.white_color"),
                'titleColor': h1.uiAppearanceHelper.v("game.white_color"),
                'messageColor': h1.uiAppearanceHelper.v("game.white_color")
              },
              'gameTitle': {
                'name': shell.I18n.t("FT.Title"),
                'fontFamily': h1.uiAppearanceHelper.v("game.theme_font_family")
              },
              'callback': this.Nr.bind(this),
              'refreshWorldCallback': this.Tr.bind(this),
              'updateBalanceCallback': this.Pr.bind(this),
              'gameLayoutInfo': h3.gameLayout,
              'autoDeductBalance': true,
              'updateAudioPlayRateCallback': this.Lr.bind(this),
              'socketConfig': ho
            });
            hh.initJakeSlotGameTemplate(hs);
          };
          hf.prototype.Nr = function () {
            U.sequenceCallback(this.Rr.bind(this), this.Er.bind(this), this.kr.bind(this), this.Ur.bind(this), this.jr.bind(this), this.Dr.bind(this), this.Wr.bind(this), this.xr.bind(this), this.Fr.bind(this), this.Vr.bind(this), this.zr.bind(this), this.Jr.bind(this), this.qr.bind(this), this.Kr.bind(this))(this.Qr.bind(this));
          };
          hf.prototype.Rr = function (ho) {
            var hs = {
              minimumSpinningTime: 0.3,
              regularSpinningTime: 0.8,
              jurisdictionModel: D.gDataSource.systemModel.operatorJurisdiction
            };
            hK.initSpinConfig(hs);
            if (ho) {
              ho();
            }
          };
          hf.prototype.Tr = function (ho) {
            var hs = function () {
              if (ho) {
                ho();
              }
            };
            if (D.gDataSource.isGameReplaying) {
              this.Yr(hs);
            } else {
              this.Xr(hs);
            }
          };
          hf.prototype.Yr = function (ho) {
            var hs;
            var hJ = this;
            if (hB.fmReplayModeHandler.replayStarted()) {
              hB.fmReplayModeHandler.completeReplay();
              hs = function () {
                if (ho) {
                  ho();
                }
                hB.fmReplayModeHandler.stopReplay(function () {
                  if (hJ.L) {
                    hJ.L.destroy();
                    hJ.L = undefined;
                  }
                  U.deferCallback(hJ)(hJ.Zr);
                });
              };
            } else {
              hB.fmReplayModeHandler.startReplay();
              hs = function () {
                if (ho) {
                  ho();
                }
                if (hJ.L) {
                  hJ.L.destroy();
                  hJ.L = undefined;
                }
                U.deferCallback(hJ)(hJ.Zr);
              };
            }
            this.generalControllers.refreshWorld.refreshWorldByGameReplay(hs);
          };
          hf.prototype.Xr = function (ho) {
            if (D.gDataSource.transactionModel.previousGameState === Y.SpinType.NORMAL) {
              this.generalControllers.refreshWorld.refreshWorldByChangeWalletIdle(ho);
            } else if (ho) {
              ho();
            }
          };
          hf.prototype.Pr = function (ho) {
            h0.settingMenuHelper.setBalance(ho);
          };
          hf.prototype.Lr = function (ho) {
            W.updatePlayRate(ho);
          };
          hf.prototype.Er = function (ho) {
            var hs = {
              'getGameInfo': this.$r.bind(this)
            };
            h2.walletHelper.init(hs);
            if (ho) {
              ho();
            }
          };
          hf.prototype.$r = function (ho, hs) {
            var hJ = ho ? {
              'wk': ho
            } : undefined;
            this.ta(function (hA, hy) {
              if (hs) {
                hs(hy);
              }
            }, hJ);
          };
          hf.prototype.kr = function (ho) {
            var hs = Date.now();
            z.sendEvent(shell.ga.CATEGORY_QUERY, shell.ga.EVENT_READ_INFO);
            shell.setProgressVisible(false);
            V.showMessage(shell.I18n.t("General.LoadingInfo"));
            var hJ = {
              eatk: D.gDataSource.systemModel.extraAssetTableKey
            };
            this.ta(function (hy, hc) {
              h2.walletHelper.processInitGameInfo(hc, function () {
                shell.ga.sendTiming(shell.ga.CATEGORY_QUERY, shell.ga.EVENT_READ_INFO, Date.now() - hs);
                if (ho) {
                  ho();
                }
              });
            }, hJ);
          };
          hf.prototype.ta = function (ho, hs) {
            E.doAPIRequest({
              'name': "Get Game Info",
              'apiRequest': x.gApiClient.getGameInfo.bind(x.gApiClient),
              'apiRequestParam': hs,
              'retryMessage': shell.I18n.t("General.LoadingInfoRetry"),
              'errorTitle': shell.I18n.t("General.ErrorLaunchFailed")
            }, this.ia(ho));
          };
          hf.prototype.ia = function (ho) {
            return function (hs, hJ) {
              if (hJ && hJ.dt) {
                var hA = D.gDataSource.systemModel;
                var hy = hA.betLevelList;
                var hc = hA.betSizeList;
                var hb = hA.maxLineNumber;
                var hn = D.gDataSource.transactionModel;
                var hu = hn.betSizeValue;
                var hk = hn.betLevelValue;
                h0.settingMenuHelper.betSizeList = hc;
                h0.settingMenuHelper.betSizeValue = hu;
                h0.settingMenuHelper.betLevelList = hy;
                h0.settingMenuHelper.betLevelValue = hk;
                h0.settingMenuHelper.betLineValue = hb;
                ho(hs, hJ);
              }
            };
          };
          hf.prototype.Ur = function (ho) {
            W.init();
            if (ho) {
              ho();
            }
          };
          hf.prototype.jr = function (ho) {
            var hs = {
              historyLibPath: "lib/fortune_mouse_history",
              historyPrefabPath: "lib/fortune_mouse_history/prefab/history_factory"
            };
            var hJ = {
              apiClient: x.gApiClient,
              dataSource: D.gDataSource,
              settingMenuHelper: h0.settingMenuHelper,
              walletHelper: h2.walletHelper,
              isProgressiveGame: false,
              settingMenuDependenciesPath: hs,
              toggleEffectMuted: W.toggleEffectMuted,
              toggleMusicMuted: W.toggleMusicMuted,
              callback: ho
            };
            h4.setupSettingMenu(hJ);
          };
          hf.prototype.Dr = function (ho) {
            var hs = {
              generalControllers: this.generalControllers
            };
            this.sa = this.getComponent("LoadingController");
            this.sa.setup(hs);
            if (ho) {
              ho();
            }
          };
          hf.prototype.Wr = function (ho) {
            V.showMessage(shell.I18n.t("General.LoadingResource"));
            this.sa.loadGeneralBundle(ho, true);
          };
          hf.prototype.xr = function (ho) {
            var hs = this.generalControllers;
            var hJ = {
              dataSource: D.gDataSource,
              settingMenuHelper: h0.settingMenuHelper,
              settingController: hs.settingController,
              settingWalletPanelController: hs.settingMenuFooterController,
              spinButtonController: hs.spinButtonController,
              callback: ho
            };
            h4.initializeSettingMenu(hJ);
          };
          hf.prototype.Fr = function (ho) {
            var hs = {
              dataSource: D.gDataSource,
              settingWalletPanelController: this.generalControllers.settingMenuFooterController,
              settingMenuHelper: h0.settingMenuHelper,
              walletHelper: h2.walletHelper,
              callback: ho
            };
            h5.setupWallets(hs);
          };
          hf.prototype.Vr = function (ho) {
            var hs = D.gDataSource.transactionModel.reels;
            var hJ = this.generalControllers;
            var hA = hJ.slotController;
            var hy = hJ.clickEffectController;
            var hc = hJ.angpaoController;
            hA.init(hs);
            hA.setClickEffectController(hy);
            hA.setOnReelReachesBouncePointCallback(function (hb) {
              var hn = D.gDataSource.transactionModel;
              var hu = hn.reels;
              var hk = hn.stateTransitionTo;
              var hD = hn.stateTransitionFrom;
              var hr = [];
              hu.forEach(function (hx, he) {
                if (hl.getColumnFromIndex(he) === hb) {
                  hr.push(hx);
                }
              });
              if (hr.includes(hl.SLOT_INDEX.WILD) && hD === Y.SpinType.NORMAL && hk === Y.SpinType.NORMAL) {
                W.playAudioIfNotPlaying(hC.GENERAL_AUDIO.symWildSpawn.key);
              }
              if (hk === Y.SpinType.RESPIN && 0x2 === hb) {
                hc.shake10();
              }
            });
            hA.setOnSlotInterruptCallback(function () {
              var hb = D.gDataSource.transactionModel;
              var hn = hb.reels;
              var hu = hb.stateTransitionTo;
              var hk = hb.stateTransitionFrom;
              if (hn.includes(hl.SLOT_INDEX.WILD) && hk === Y.SpinType.NORMAL && hu === Y.SpinType.NORMAL) {
                W.stopAudioIfPlaying(hC.GENERAL_AUDIO.symWildSpawn.key);
                W.playAudioIfNotPlaying(hC.GENERAL_AUDIO.symWildSpawn.key);
              }
            });
            hA.setSpinTiming(hK.featureConfig.minimumSpinningTime, hK.featureConfig.regularSpinningTime);
            if (ho) {
              ho();
            }
          };
          hf.prototype.ea = function () {
            hM.spaceBarInterrupter.init({
              'spinButtonClickCallback': this.generalControllers.spinButtonController.clickSpinButton.bind(this.generalControllers.spinButtonController),
              'reelClickCallback': this.generalControllers.slotController.onKeyBoardDownClicked.bind(this.generalControllers.slotController)
            });
          };
          hf.prototype.zr = function (ho) {
            var hs = this.generalControllers;
            var hJ = hs.slotController;
            var hA = hs.spinButtonController;
            var hy = hs.slotTintController;
            var hc = hs.columnTintController;
            var hb = hs.foregroundController;
            var hn = hJ.mask.node;
            var hu = {
              'generalControllers': this.generalControllers
            };
            hn.addChild(hy.node);
            hn.addChild(hc.node);
            h0.settingMenuHelper.menuChangedCallBack = function () {
              if (h0.settingMenuHelper.isIdle()) {
                hA.show();
                hb.showGold();
              } else {
                hA.hide();
                hb.hideGold();
              }
            };
            this.generalControllers.refreshWorld = new X.GRefreshWorldHandler(hu);
            this.generalControllers.refreshWorld.setupUICallback = this.qr.bind(this);
            if (ho) {
              ho();
            }
          };
          hf.prototype.Jr = function (ho) {
            var hs = {
              numberOfColumn: hl.NORMAL_SLOT_COLUMN,
              numberOfRow: hl.NORMAL_SLOT_ROW,
              payoutData: hQ.PAY_OUT_DATA
            };
            var hJ = this.generalControllers.symbolPopoutController;
            var hA = D.gDataSource.transactionModel.reels;
            var hc = {
              height: 0x44c
            };
            hJ.setReelData(hA);
            hJ.setTintConfig(hc);
            hJ.init(hs);
            if (ho) {
              ho();
            }
          };
          hf.prototype.qr = function (ho) {
            var hs;
            switch (D.gDataSource.transactionModel.stateTransitionTo) {
              case Y.SpinType.NORMAL:
                hs = new F.ToNormalSpinTransition();
                break;
              case Y.SpinType.RESPIN:
                hs = new F.ToRespinTransition();
            }
            var hJ = {
              generalControllers: this.generalControllers,
              loadingController: this.sa
            };
            hs.instanceRun(hJ, function () {
              hs.destroy();
              if (ho) {
                ho();
              }
            });
          };
          hf.prototype.Kr = function (ho) {
            var hs = this;
            h6.subscribeGamePauseEvent();
            h6.subscribeGameResumeEvent();
            h6.setGamePlayUIBlockEventCallback(function (hJ) {
              var hA = hs.generalControllers.spinButtonController;
              if (hJ) {
                hA.node.pauseSystemEvents(true);
              } else {
                hA.node.resumeSystemEvents(true);
              }
            });
            if (ho) {
              ho();
            }
          };
          hf.prototype.Qr = function () {
            shell.setProgressVisible(false);
            V.showMessage(shell.I18n.t("General.LoadingCompleted"));
            shell.requestGameStart(true, this.na.bind(this));
          };
          hf.prototype.na = function () {
            this.Vs();
            this.ea();
            this.oa(this.Zr.bind(this));
          };
          hf.prototype.oa = function (ho) {
            var hs = D.gDataSource.transactionModel.stateTransitionTo === Y.SpinType.NORMAL ? "setup" : "idle";
            hR.initState(hs);
            if (ho) {
              ho();
            }
          };
          hf.prototype.Vs = function () {
            var ho = D.gDataSource.transactionModel.stateTransitionTo;
            W.toggleAudioGameStarted();
            if (ho === Y.SpinType.RESPIN) {
              h9.instantPlayRespinBGM();
            } else {
              h9.instantPlayNormalBGM();
            }
          };
          hf.prototype.Zr = function () {
            var ho = D.gDataSource.transactionModel;
            var hs = ho.stateTransitionFrom;
            var hJ = ho.stateTransitionTo;
            switch (hs) {
              case Y.SpinType.NORMAL:
                if (hJ === Y.SpinType.NORMAL) {
                  this.ca = this.ha.bind(this);
                } else if (hJ === Y.SpinType.RESPIN) {
                  if (this.Gr) {
                    this.ca = this.ra.bind(this);
                  } else {
                    this.ca = this.aa.bind(this, this.ra.bind(this));
                  }
                }
                break;
              case Y.SpinType.RESPIN:
                if (hJ === Y.SpinType.NORMAL) {
                  this.ca = this.ua.bind(this, this.ha.bind(this));
                } else if (hJ === Y.SpinType.RESPIN) {
                  this.ca = this.ra.bind(this);
                }
            }
            U.deferCallback(this)(this.ca);
          };
          hf.prototype.la = function () {
            this.Gr = false;
            var ho = this.L;
            if (ho) {
              ho.destroy();
            }
            this.L = undefined;
            U.deferCallback(this)(this.Zr.bind(this));
          };
          hf.prototype.ha = function () {
            (this.L = new h7["default"](D.gDataSource, this.generalControllers, this.la.bind(this))).run();
          };
          hf.prototype.ra = function () {
            (this.L = new h8["default"](D.gDataSource, this.generalControllers, this.la.bind(this))).run(this.Gr);
          };
          hf.prototype.ua = function (ho) {
            var hs = new F.ToNormalSpinTransition();
            var hJ = {
              generalControllers: this.generalControllers,
              loadingController: this.sa
            };
            hs.run(hJ, function () {
              hs.destroy();
              if (ho) {
                ho();
              }
            });
          };
          hf.prototype.aa = function (ho) {
            var hs = new F.ToRespinTransition();
            var hJ = {
              generalControllers: this.generalControllers,
              loadingController: this.sa
            };
            hs.run(hJ, function () {
              hs.destroy();
              if (ho) {
                ho();
              }
            });
          };
          return __decorate([hS], hf);
        }(cc.Component);
        J["default"] = hq;
        cc._RF.pop();
      }
    }, Rs],
    'MaxBetButton': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "57d52E5rw9F7Iqp2UOZL/vK", "MaxBetButton")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("BetModifierButton");
        var q = B("UIAppearanceHelper");
        var N = B("Utils");
        var f = cc._decorator;
        var J = f.ccclass;
        var A = f.property;
        var y = function (b) {
          function u() {
            var k = null !== b && b.apply(this, arguments) || this;
            k.labelNode = undefined;
            return k;
          }
          __extends(u, b);
          u.prototype.changeButtonPressedColor = function (k) {
            if (this.buttonTheme) {
              var D = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var x = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".pressed");
              if (this.isReachLimit) {
                var G = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
                N.setNodeColorWithOpacity(this.iconSprite, G);
                this.labelNode.opacity = 127.5;
              } else {
                N.setNodeColorWithOpacity(this.iconSprite, k ? x : D);
                this.labelNode.opacity = k ? 127.5 : 0xff;
              }
            }
          };
          u.prototype.interactableButtonColor = function (k) {
            if (this.buttonTheme) {
              var D = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var x = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              if (this.isReachLimit) {
                N.setNodeColorWithOpacity(this.iconSprite, x);
                this.labelNode.opacity = 127.5;
              } else {
                N.setNodeColorWithOpacity(this.iconSprite, k ? D : x);
                this.labelNode.opacity = k ? 0xff : 63.75;
              }
            }
          };
          __decorate([A(cc.Node)], u.prototype, "labelNode", undefined);
          return __decorate([J], u);
        }(S["default"]);
        C["default"] = y;
        cc._RF.pop();
      }
    }, RJ],
    'MultiResHandler': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "3ae3du76uBKurm1YFGdqj7/", "MultiResHandler")) {
        var B = System.get("common").MultiResHandler;
        M.exports["default"] = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'NavigationBar': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "0dc7dijGWtKO4QKzl8UL9Pz", "NavigationBar")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.fa = undefined;
            A.animatedLayer = undefined;
            A.defaultLeftItem = undefined;
            A.rightItemContainer = undefined;
            A.leftItemContainer = undefined;
            A.middleItemContainer = undefined;
            A.titleLabel = undefined;
            A.background = undefined;
            A.shadow = undefined;
            A.da = [];
            A.va = false;
            A._a = undefined;
            return A;
          }
          __extends(J, f);
          Object.defineProperty(J.prototype, "navigator", {
            'get': function () {
              return this.fa;
            },
            'set': function (A) {
              this.fa = A;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(J.prototype, "topItem", {
            'get': function () {
              if (this.da && this.da.length > 0x0) {
                return this.da[this.da.length - 0x1];
              }
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(J.prototype, "backItem", {
            'get': function () {
              if (this.da && this.da.length > 0x1) {
                return this.da[this.da.length - 0x2];
              }
            },
            'enumerable': false,
            'configurable': true
          });
          J.prototype.onLoad = function () {
            var A = this.node.width;
            var y = this.node.height;
            this.background.node.setContentSize(A, y);
            this.shadow.y = -y;
          };
          J.prototype.getBarHeight = function (A, y) {
            var b = this.node.width;
            var u = A.height;
            var k = y.top;
            var D = u + k;
            this.animatedLayer.setContentSize(b, u);
            this.animatedLayer.y = -k;
            this.node.height = D;
            this.shadow.y = -u;
            this.ma(A.item_space_x);
            return D;
          };
          J.prototype.pushItem = function (A, y) {
            if (A) {
              var b = this.da[this.da.length - 0x1];
              var k = this.leftItemContainer.children[0x0];
              var D = this.middleItemContainer.children[0x1];
              var x = this.rightItemContainer.children[0x0];
              var G = b ? b.title : '';
              var Y = b && !b.leftItem;
              var m = A.title;
              var W = undefined;
              var F = undefined;
              var E = A.rightItem instanceof cc.Node ? A.rightItem : undefined;
              var v = true;
              this.da.push(A);
              this.va = y;
              if (A.middleItem instanceof cc.Node) {
                F = A.middleItem;
                A.title = '';
              }
              if (A.leftItem instanceof cc.Node) {
                W = A.leftItem;
                v = false;
              } else if (this.da.length > 0x1) {
                W = cc.instantiate(this.defaultLeftItem);
                this.pa(W);
                var I = W.children ? W.getComponentInChildren(cc.Label) : undefined;
                if (I instanceof cc.Label && G) {
                  I.string = G;
                }
              }
              var w = {
                leftItem: k,
                middleItem: D,
                rightItem: x,
                title: G,
                useDefaultLeftItem: Y
              };
              var j = {
                leftItem: W,
                middleItem: F,
                rightItem: E,
                title: m,
                useDefaultLeftItem: v
              };
              if (y) {
                this.ba(w, j);
              } else {
                this.Sa(k);
                this.ga(this.leftItemContainer, W);
                this.Sa(D);
                this.ga(this.middleItemContainer, F);
                this.Sa(x);
                this.ga(this.rightItemContainer, E);
                this.titleLabel.string = m;
                this._a = this.titleLabel.node.color;
                if ("land" === shell.environment.getOrientationMode()) {
                  this.titleLabel.fontSize = 0x2a;
                  this.titleLabel.lineHeight = 0x32;
                }
              }
            }
          };
          J.prototype.popItem = function (A) {
            var y = this.topItem;
            if (y) {
              var b = this.backItem;
              this.da.pop();
              if (!b) {
                this.titleLabel.string = '';
                this.rightItemContainer.removeAllChildren(false);
                this.leftItemContainer.removeAllChildren(false);
                if (this.middleItemContainer.children[0x1]) {
                  this.middleItemContainer.children[0x1].removeFromParent(false);
                }
                return void (this._a = this.titleLabel.node.color);
              }
              var k = this.da[this.da.length - 0x2];
              var D = '';
              if (k && !k.middleItem) {
                D = k.title;
              }
              var x = this.leftItemContainer.children[0x0];
              var G = this.middleItemContainer.children[0x1];
              var Y = this.rightItemContainer.children[0x0];
              var m = G ? '' : y.title;
              var W = !y.leftItem;
              var F = b.title;
              var E = undefined;
              var I = undefined;
              var w = b.rightItem instanceof cc.Node ? b.rightItem : undefined;
              var j = true;
              if (b.middleItem instanceof cc.Node) {
                I = b.middleItem;
                b.title = '';
              }
              if (b.leftItem instanceof cc.Node) {
                E = b.leftItem;
                j = false;
              } else if (this.da.length > 0x1) {
                E = cc.instantiate(this.defaultLeftItem);
                this.pa(E);
                var Z = E.children ? E.getComponentInChildren(cc.Label) : null;
                if (Z) {
                  Z.string = D;
                }
              }
              var X = {
                leftItem: x,
                middleItem: G,
                rightItem: Y,
                title: m,
                useDefaultLeftItem: W
              };
              var V = {
                leftItem: E,
                middleItem: I,
                rightItem: w,
                title: F,
                useDefaultLeftItem: j
              };
              if (A) {
                this.Ca(X, V);
              } else {
                this.Sa(x);
                this.ga(this.leftItemContainer, E);
                this.Sa(G);
                this.ga(this.middleItemContainer, I);
                this.Sa(Y);
                this.ga(this.rightItemContainer, w);
                this.titleLabel.string = F;
                this._a = this.titleLabel.node.color;
              }
            }
          };
          J.prototype.enableButtons = function () {
            var A = this.leftItemContainer.children[0x0];
            var y = this.rightItemContainer.children[0x0];
            if (A) {
              var b = A.getComponent(cc.Button);
              if (b) {
                b.interactable = true;
              }
            }
            if (y) {
              var u = y.getComponent(cc.Button);
              if (u) {
                u.interactable = true;
              }
            }
          };
          J.prototype.disableButtons = function () {
            var A = this.leftItemContainer.children[0x0];
            var y = this.rightItemContainer.children[0x0];
            if (A) {
              var b = A.getComponent(cc.Button);
              if (b) {
                b.interactable = false;
              }
            }
            if (y) {
              var u = y.getComponent(cc.Button);
              if (u) {
                u.interactable = false;
              }
            }
          };
          J.prototype.setTitleColor = function (A) {
            this.titleLabel.node.color = A;
          };
          J.prototype.setTitleSize = function (A) {
            this.titleLabel.fontSize = A;
          };
          J.prototype.removeItemsAtIndex = function (A) {
            if (!(this.da.length <= A)) {
              this.da.splice(A, 0x1);
            }
          };
          J.prototype.ya = function (A) {
            A.node.setContentSize(this.titleLabel.node.width, this.titleLabel.node.height);
            A.string = this.titleLabel.string;
            A.fontSize = this.titleLabel.fontSize;
            A.lineHeight = this.titleLabel.lineHeight;
            A.verticalAlign = 0x1;
            if (this.titleLabel.font) {
              A.font = this.titleLabel.font;
            }
          };
          J.prototype.pa = function (A) {
            var y = new cc.Component.EventHandler();
            y.target = this.node;
            y.component = "NavigationBar";
            y.handler = "onLeftItemPressed";
            A.getComponent(cc.Button).clickEvents.push(y);
          };
          J.prototype.ma = function (A) {
            var y = this.node.width;
            var b = this.leftItemContainer;
            var u = -y / 0x2 + A + b.width / 0x2;
            var k = this.rightItemContainer;
            var D = y / 0x2 - A - k.width / 0x2;
            b.x = u;
            k.x = D;
          };
          J.prototype.onLeftItemPressed = function () {
            var A = this.navigator;
            this.navigator.topController;
            if (A && A.topController) {
              var y = this.va;
              this.navigator.popController(y);
            }
          };
          J.prototype.ba = function (A, y) {
            var b = A.leftItem;
            var k = A.middleItem;
            var D = A.rightItem;
            var x = A.title;
            var G = A.useDefaultLeftItem;
            var Y = y.leftItem;
            var m = y.middleItem;
            var W = y.rightItem;
            var F = y.title;
            var E = y.useDefaultLeftItem;
            var v = !k && !m;
            this.Ma(v, x, F, k, m);
            this.Aa(E, G, v, b, Y);
            this.Ia(D, W);
          };
          J.prototype.Ca = function (A, y) {
            var b = A.leftItem;
            var k = A.middleItem;
            var D = A.rightItem;
            var x = A.title;
            var G = A.useDefaultLeftItem;
            var Y = y.leftItem;
            var m = y.middleItem;
            var W = y.rightItem;
            var F = y.title;
            var E = y.useDefaultLeftItem;
            var v = !k && !m;
            this.wa(v, x, F, k, m);
            this.Oa(E, G, v, b, Y);
            this.Ia(D, W);
          };
          J.prototype.Ma = function (A, y, b, k, D, x) {
            if (A) {
              var G = this.middleItemContainer;
              var Y = this.leftItemContainer;
              var m = G.x - G.width * G.anchorX - Y.x - Y.width * (0x1 - Y.anchorX);
              if (y) {
                var W = this.titleLabel.node;
                var F = W.parent.convertToWorldSpaceAR(cc.v2(W.x, W.y));
                var E = this.animatedLayer.convertToNodeSpaceAR(F);
                var I = new cc.Node();
                var w = I.addComponent(cc.Label);
                I.parent = this.animatedLayer;
                I.position = E;
                w.node.color = this._a;
                this.ya(w);
                var j = cc.spawn(cc.moveBy(0.2, cc.v2(-m / 0x2, 0x0)).easing(cc.easeIn(0x3)), cc.fadeOut(0.2).easing(cc.easeIn(0x3)));
                I.runAction(cc.sequence(j, cc.callFunc(function () {
                  I.active = false;
                  I.removeFromParent();
                })));
              }
              G.x += m;
              G.opacity = 0x0;
              this.titleLabel.string = b;
              var Z = cc.spawn(cc.moveBy(0.3, cc.v2(-m, 0x0)).easing(cc.easeOut(0x3)), cc.fadeIn(0.3).easing(cc.easeIn(0x3)));
              G.runAction(cc.sequence(cc.delayTime(0.1), Z, cc.callFunc(function () {
                G.active = true;
                G.opacity = 0xff;
                if (x) {
                  x();
                }
              })));
            } else {
              this.Ha(k, D, b, x);
            }
          };
          J.prototype.Aa = function (k, D, x, G, Y, W) {
            var F = this;
            if (k && D && x) {
              var E = undefined;
              var I = undefined;
              var w = undefined;
              var j = undefined;
              if (G && G.children) {
                E = G.getComponentInChildren(cc.Label);
                I = G.getComponentInChildren(cc.Sprite);
              }
              if (Y && Y.children) {
                w = Y.getComponentInChildren(cc.Label);
                j = Y.getComponentInChildren(cc.Sprite);
              }
              if (w) {
                if (E) {
                  var Z = E.node;
                  var X = Z.x;
                  var V = Z.width;
                  var H = Z.anchorX;
                  var z = X - V * H - X - V * (0x1 - H);
                  var P = cc.spawn(cc.moveBy(0.2, cc.v2(0x2 * -z, 0x0)).easing(cc.easeOut(0x3)), cc.fadeOut(0.2).easing(cc.easeIn(0x3)));
                  Z.runAction(cc.sequence(P, cc.callFunc(function () {
                    Z.active = false;
                  })));
                }
                var O = this.middleItemContainer;
                var L = this.leftItemContainer;
                var U = O.x - O.width * O.anchorX - L.x - L.width * (0x1 - L.anchorX);
                var T = j.node;
                var h0 = w.node;
                if (Y) {
                  L.addChild(Y);
                }
                T.active = false;
                h0.opacity = 0x0;
                h0.x += U / 0x2;
                var h1 = cc.spawn(cc.moveBy(0.2, cc.v2(-U / 0x2, 0x0)).easing(cc.easeOut(0x3)), cc.fadeIn(0.2).easing(cc.easeIn(0x3)));
                h0.runAction(cc.sequence(cc.delayTime(0.2), h1, cc.callFunc(function () {
                  h0.opacity = 0xff;
                  T.active = true;
                  if (G) {
                    G.removeFromParent(false);
                  }
                  if (W) {
                    W();
                  }
                })));
              } else {
                this.Ba(G, Y, W);
              }
            } else if (k && D && G) {
              E = undefined;
              I = undefined;
              if (G && G.children) {
                E = G.getComponentInChildren(cc.Label);
                I = G.getComponentInChildren(cc.Sprite);
              }
              if (!E || !I) {
                return void this.Ba(G, Y, W);
              }
              var h2 = I.node;
              var h3 = E.node;
              z = h3.x - h3.width * h3.anchorX - h2.x - h2.width * (0x1 - h2.anchorX);
              P = cc.spawn(cc.moveBy(0.2, cc.v2(-z, 0x0)).easing(cc.easeOut(0x3)), cc.fadeOut(0.2).easing(cc.easeIn(0x3)));
              h3.runAction(cc.sequence(P, cc.callFunc(function () {
                if (G) {
                  G.removeFromParent(false);
                }
                if (Y) {
                  F.leftItemContainer.addChild(Y);
                }
                if (W) {
                  W();
                }
              })));
            } else {
              this.Ba(G, Y, W);
            }
          };
          J.prototype.Oa = function (A, y, k, D, x, G) {
            if (A && y && k) {
              var Y = undefined;
              var W = undefined;
              var F = undefined;
              var E = undefined;
              if (D && D.children) {
                Y = D.getComponentInChildren(cc.Label);
                W = D.getComponentInChildren(cc.Sprite);
              }
              if (x && x.children) {
                F = x.getComponentInChildren(cc.Label);
                E = x.getComponentInChildren(cc.Sprite);
              }
              if (!F || !Y) {
                return void this.Ba(D, x, G);
              }
              var I = this.middleItemContainer;
              var w = this.leftItemContainer;
              var j = I.x - I.width * I.anchorX - w.x - w.width * (0x1 - w.anchorX);
              var Z = Y.node;
              var X = W.node;
              var V = Z.x - Z.width * Z.anchorX - X.x - X.width * (0x1 - X.anchorX);
              var H = cc.spawn(cc.moveBy(0.2, cc.v2(j / 0x2, 0x0)).easing(cc.easeOut(0x3)), cc.fadeOut(0.2).easing(cc.easeIn(0x3)));
              if (x) {
                Z.runAction(cc.sequence(H, cc.callFunc(function () {
                  Z.active = false;
                })));
                var z = F.node;
                var P = E.node;
                P.active = false;
                z.opacity = 0x0;
                w.addChild(x);
                z.x -= 0x2 * V;
                var O = cc.spawn(cc.moveBy(0.2, cc.v2(0x2 * V, 0x0)).easing(cc.easeOut(0x3)), cc.fadeIn(0.2).easing(cc.easeIn(0x3)));
                z.runAction(cc.sequence(cc.delayTime(0.2), O, cc.callFunc(function () {
                  z.opacity = 0xff;
                  P.active = true;
                  if (D) {
                    D.removeFromParent(false);
                  }
                  if (G) {
                    G();
                  }
                })));
              } else {
                Z.runAction(cc.sequence(H, cc.callFunc(function () {
                  if (D) {
                    D.removeFromParent(false);
                  }
                  if (G) {
                    G();
                  }
                })));
              }
            } else if (A && y) {
              F = undefined;
              E = undefined;
              if (x && x.children) {
                F = x.getComponentInChildren(cc.Label);
                E = x.getComponentInChildren(cc.Sprite);
              }
              if (!F || !E) {
                return void this.Ba(D, x, G);
              }
              var L = F.node;
              var U = E.node;
              V = L.x - L.width * L.anchorX - U.x - U.width * (0x1 - U.anchorX);
              if (D) {
                D.removeFromParent(false);
              }
              if (x) {
                this.leftItemContainer.addChild(x);
              }
              L.opacity = 0x0;
              L.x -= 0x2 * V;
              O = cc.spawn(cc.moveBy(0.2, cc.v2(0x2 * V, 0x0)).easing(cc.easeOut(0x3)), cc.fadeIn(0.2).easing(cc.easeIn(0x3)));
              L.runAction(cc.sequence(cc.delayTime(0.2), O, cc.callFunc(function () {
                L.opacity = 0xff;
                if (G) {
                  G();
                }
              })));
            } else {
              this.Ba(D, x, G);
            }
          };
          J.prototype.wa = function (A, y, b, k, D, x) {
            if (A) {
              var G = this.leftItemContainer;
              var Y = this.middleItemContainer;
              var m = Y.x - Y.width * Y.anchorX - G.x - G.width * (0x1 - G.anchorX);
              if (y) {
                var W = this.titleLabel.node.parent.convertToWorldSpaceAR(cc.v2(this.titleLabel.node.x, this.titleLabel.node.y));
                var F = this.animatedLayer.convertToNodeSpaceAR(W);
                var E = new cc.Node();
                E.addComponent(cc.Label);
                var I = E.getComponent(cc.Label);
                E.parent = this.animatedLayer;
                I.node.color = this._a;
                E.position = F;
                this.ya(I);
                var w = cc.spawn(cc.moveBy(0.2, cc.v2(m / 0x2, 0x0)).easing(cc.easeOut(0x3)), cc.fadeOut(0.2).easing(cc.easeOut(0x3)));
                E.runAction(cc.sequence(w, cc.callFunc(function () {
                  E.active = false;
                  E.removeFromParent();
                })));
              }
              this.titleLabel.string = b;
              Y.x -= m / 0x2;
              Y.opacity = 0x0;
              var j = cc.spawn(cc.moveBy(0.3, cc.v2(m / 0x2, 0x0)).easing(cc.easeOut(0x3)), cc.fadeIn(0.3).easing(cc.easeIn(0x3)));
              this.middleItemContainer.runAction(cc.sequence(cc.delayTime(0.1), j, cc.callFunc(function () {
                Y.active = true;
                Y.opacity = 0xff;
                if (x) {
                  x();
                }
              })));
            } else {
              this.Ha(k, D, b, x);
            }
          };
          J.prototype.Ba = function (A, y, b) {
            var u = this.leftItemContainer;
            if (A) {
              A.removeFromParent(false);
            }
            if (y) {
              this.leftItemContainer.addChild(y);
            }
            u.opacity = 0x0;
            u.runAction(cc.sequence(cc.fadeIn(0.3).easing(cc.easeOut(0x3)), cc.callFunc(function () {
              if (b) {
                b();
              }
            })));
          };
          J.prototype.Ha = function (A, y, b, u) {
            var k = this.middleItemContainer;
            if (A) {
              A.removeFromParent(false);
            }
            if (y) {
              k.addChild(y);
            }
            this.titleLabel.string = b;
            k.opacity = 0x0;
            k.runAction(cc.sequence(cc.fadeIn(0.3), cc.callFunc(function () {
              if (u) {
                u();
              }
            })));
          };
          J.prototype.Ia = function (A, y, b) {
            var u = this;
            if (A) {
              A.removeFromParent(false);
            }
            if (y) {
              this.rightItemContainer.addChild(y);
            }
            this.rightItemContainer.opacity = 0x0;
            this.rightItemContainer.runAction(cc.sequence(cc.fadeIn(0.3).easing(cc.easeOut(0x3)), cc.callFunc(function () {
              u._a = u.titleLabel.node.color;
              if (b) {
                b();
              }
            })));
          };
          J.prototype.Sa = function (A) {
            if (A && A.parent) {
              A.removeFromParent(false);
            }
          };
          J.prototype.ga = function (A, y) {
            if (A && y) {
              A.addChild(y);
            }
          };
          __decorate([q(cc.Node)], J.prototype, "animatedLayer", undefined);
          __decorate([q(cc.Prefab)], J.prototype, "defaultLeftItem", undefined);
          __decorate([q(cc.Node)], J.prototype, "rightItemContainer", undefined);
          __decorate([q(cc.Node)], J.prototype, "leftItemContainer", undefined);
          __decorate([q(cc.Node)], J.prototype, "middleItemContainer", undefined);
          __decorate([q(cc.Label)], J.prototype, "titleLabel", undefined);
          __decorate([q(cc.Sprite)], J.prototype, "background", undefined);
          __decorate([q(cc.Node)], J.prototype, "shadow", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'NavigationController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "d742diXy4tHCIVIgSy1jEIb", "NavigationController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("ViewController");
        var q = B("NavigationBar");
        var N = B("TransitionEnum");
        var J = B("NavigationDefaultTransition");
        var A = B("TransitionContext");
        var y = B("UIKit");
        var b = B("TabBarItem");
        var k = cc._decorator;
        var D = k.ccclass;
        var x = k.property;
        var G = function (Y) {
          function m() {
            var W = null !== Y && Y.apply(this, arguments) || this;
            W.defaultNavigationBar = undefined;
            W.statusBarPlaceholderNode = undefined;
            W.contentNode = undefined;
            W.Ga = undefined;
            W.Na = [];
            W.Ta = false;
            W.Pa = undefined;
            return W;
          }
          __extends(m, Y);
          Object.defineProperty(m.prototype, "controllers", {
            'get': function () {
              return this.Na.slice();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(m.prototype, "tabBarItem", {
            'get': function () {
              return this.Pa;
            },
            'set': function (W) {
              this.Pa = W;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(m.prototype, "topController", {
            'get': function () {
              var W = this.controllers;
              if (W && W.length > 0x0) {
                return W[W.length - 0x1];
              }
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(m.prototype, "backController", {
            'get': function () {
              var W = this.controllers;
              if (W && W.length > 0x1) {
                return W[W.length - 0x2];
              }
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(m.prototype, "navigationBar", {
            'get': function () {
              if (!this.Ga) {
                this.Ga = this.defaultNavigationBar;
                if (this.Ga) {
                  this.Ga.navigator = this;
                }
              }
              return this.Ga;
            },
            'set': function (W) {
              if (W !== this.Ga) {
                var F = this.Ga;
                this.Ga = W;
                if (this.Ga) {
                  this.Ga.navigator = this;
                }
                if (F) {
                  F.navigator = undefined;
                }
              }
            },
            'enumerable': false,
            'configurable': true
          });
          m.prototype.onLoad = function () {
            var W = cc.Canvas.instance.designResolution;
            var F = W.height;
            var E = W.width;
            this.node.setContentSize(E, F);
            this.navigationBar.node.width = E;
            var v = "land" === shell.environment.getOrientationMode() ? y.NavigationConfigs.bar.landscape : y.NavigationConfigs.bar.portrait;
            var I = this.navigationBar.getBarHeight(v, this.safeAreaInsets);
            var w = F - I;
            this.contentNode.setContentSize(E, w);
            this.contentNode.y = -I;
            this.statusBarPlaceholderNode.height = this.safeAreaInsets.top;
            this.node.on("size-changed", this.La, this);
          };
          m.prototype.onEnable = function () {
            var W = this.topController;
            if (W) {
              W.enabled = true;
            }
          };
          m.prototype.onDisable = function () {
            var W = this.topController;
            if (W) {
              W.enabled = false;
            }
          };
          m.prototype.viewWillAppear = function (W) {
            var F = this.topController;
            if (F) {
              F.viewWillAppear(W);
            }
          };
          m.prototype.viewDidAppear = function (W) {
            var F = this.topController;
            if (F) {
              F.viewDidAppear(W);
            }
          };
          m.prototype.viewWillDisappear = function (W) {
            var F = this.topController;
            if (F) {
              F.viewWillDisappear(W);
            }
          };
          m.prototype.viewDidDisappear = function (W) {
            var F = this.topController;
            if (F) {
              F.viewDidDisappear(W);
            }
          };
          m.prototype.viewDidLayoutSubviews = function () {};
          m.prototype.pushController = function (W, F) {
            if (!this.Ta && W) {
              this.Ta = true;
              var E = this.contentNode;
              var I = E.width;
              var w = E.height;
              W.navigator = this;
              W.view.setContentSize(I, w);
              var j = (W.node.anchorY - E.anchorY) * w;
              var Z = (W.node.anchorX - E.anchorX) * I;
              if (F) {
                Z = (W.node.anchorX - E.anchorX + 0x1) * I;
              }
              W.view.setPosition(cc.v2(Z, j));
              E.addChild(W.view);
              W.enabled = true;
              if (this.Ra()) {
                W.viewWillAppear(F);
              } else {
                F = false;
              }
              var X = this.topController;
              if (X) {
                X.viewWillDisappear(F);
              }
              this.navigationBar.pushItem(W, F);
              if (F) {
                var V = undefined;
                var H = this.navigationDelegate;
                V = H && H.animationForOperation ? H.animationForOperation(N.NavigationControllerOperation.Push) : new J.DefaultNavigationPushTransition();
                var z = X ? X.view : undefined;
                var P = new A.TransitionContext(X, W, z, W.view, E);
                var p = this.Ea.bind(this, W, true);
                V.animateTransition(P, p);
              } else {
                this.Ea(W, false);
              }
            }
          };
          m.prototype.popController = function (W) {
            var F = this.topController;
            var E = this.backController;
            if (!this.Ta && F && E) {
              this.Ta = true;
              E.enabled = true;
              E.viewWillAppear(W);
              F.viewWillDisappear(W);
              this.navigationBar.popItem(W);
              if (W) {
                var v = undefined;
                var I = this.navigationDelegate;
                v = I && I.animationForOperation ? I.animationForOperation(N.NavigationControllerOperation.Pop) : new J.DefaultNavigationPopTransition();
                var w = new A.TransitionContext(F, E, F.view, E.view, this.contentNode);
                var j = this.ka.bind(this, true);
                v.animateTransition(w, j);
              } else {
                this.ka(false);
              }
            }
          };
          m.prototype.popToController = function (W, F) {
            for (var E = this.controllers.length - F; E;) {
              var v = this.topController;
              if (v) {
                v.enabled = false;
                this.navigationBar.popItem(false);
                this.contentNode.removeChild(v.view);
                this.Na.pop();
                v.node.destroy();
              }
              E -= 0x1;
            }
            this.popController(W);
          };
          m.prototype.popToRootController = function (W) {
            for (var F = this.controllers.length - 0x2; F;) {
              var E = this.topController;
              if (E) {
                E.enabled = false;
                this.navigationBar.popItem(false);
                this.contentNode.removeChild(E.view);
                this.Na.pop();
                E.node.destroy();
              }
              F -= 0x1;
            }
            this.popController(W);
          };
          m.prototype.hideNavigationBarBackground = function () {
            this.navigationBar.background.node.active = false;
            this.navigationBar.shadow.active = false;
          };
          m.prototype.showNavigationBarBackground = function () {
            this.navigationBar.background.node.active = true;
            this.navigationBar.shadow.active = true;
          };
          m.prototype.hideNavigationBar = function (W) {
            if (undefined === W) {
              W = true;
            }
            this.navigationBar.node.active = false;
            if (W) {
              this.La();
            }
          };
          m.prototype.showNavigationBar = function (W) {
            if (undefined === W) {
              W = true;
            }
            this.navigationBar.node.active = true;
            if (W) {
              this.La();
            }
          };
          m.prototype.enableItems = function () {
            this.navigationBar.enableButtons();
          };
          m.prototype.disableItems = function () {
            this.navigationBar.disableButtons();
          };
          m.prototype.setControllers = function (W) {
            if (W && W.length && !(W.length < 0x1)) {
              var F = this.controllers;
              var E = F.filter(function (j) {
                return W.indexOf(j) < 0x0;
              });
              for (var v = E.length - 0x1; v >= 0x0; v--) {
                var I = E[v];
                I.enabled = false;
                this.contentNode.removeChild(I.view);
                var w = F.indexOf(I);
                this.navigationBar.removeItemsAtIndex(w);
                I.node.destroy();
              }
              this.Na = W;
            }
          };
          m.prototype.La = function () {
            this.Ua();
            this.ja();
          };
          m.prototype.Ua = function () {
            var W = this.contentNode;
            var F = this.navigationBar.node.active ? this.navigationBar.node.height : this.statusBarPlaceholderNode.height;
            var E = this.node.height - F;
            W.setContentSize(this.node.width, E);
            W.y = -F;
          };
          m.prototype.ja = function () {
            var W = this.contentNode;
            var F = W.width;
            var E = W.height;
            var v = W.anchorX;
            var I = W.anchorY;
            this.controllers.forEach(function (w) {
              var j = w.node;
              var Z = (j.anchorX - v) * F;
              var X = (j.anchorY - I) * E;
              w.viewWillLayoutSubviews();
              j.setContentSize(F, E);
              j.setPosition(cc.v2(Z, X));
              w.viewDidLayoutSubviews();
            });
          };
          m.prototype.Ea = function (W, F) {
            if (undefined === F) {
              F = false;
            }
            if (this.Ra()) {
              W.viewDidAppear(F);
            }
            var E = this.topController;
            this.Na.push(W);
            W.view.setContentSize(this.contentNode.width, this.contentNode.height);
            this.Ta = false;
            if (E) {
              E.viewDidDisappear(F);
              E.enabled = false;
            }
          };
          m.prototype.ka = function (W) {
            if (undefined === W) {
              W = false;
            }
            var F = this.backController;
            if (F) {
              F.viewDidAppear(W);
            }
            this.scheduleOnce(this.Da.bind(this, W));
          };
          m.prototype.Da = function (W) {
            var F = this.topController;
            if (F) {
              this.contentNode.removeChild(F.view);
              this.Na.pop();
              this.Ta = false;
              F.viewDidDisappear(W);
              F.enabled = false;
              if (F.destroy) {
                F.destroy();
              }
              F.node.destroy();
            }
          };
          m.prototype.Ra = function () {
            return !(this.tabBarItem instanceof b["default"] && !this.topController);
          };
          __decorate([x(q["default"])], m.prototype, "defaultNavigationBar", undefined);
          __decorate([x(cc.Node)], m.prototype, "statusBarPlaceholderNode", undefined);
          __decorate([x(cc.Node)], m.prototype, "contentNode", undefined);
          return __decorate([D], m);
        }(S["default"]);
        C["default"] = G;
        cc._RF.pop();
      }
    }, RA],
    'NavigationDefaultTransition': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "2472eYgH9NBWJvtIuLXvIEh", "NavigationDefaultTransition")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.DefaultNavigationPopTransition = Q.DefaultNavigationPushTransition = undefined;
        var K = M("ViewControllerTransition");
        var S = function (N) {
          function f() {
            return null !== N && N.apply(this, arguments) || this;
          }
          __extends(f, N);
          f.prototype.transitionDuration = function () {};
          f.prototype.animateTransition = function (J, A) {
            var y = J.getToController();
            var b = J.getFromController();
            var u = J.getContainer();
            var k = (b.node.anchorX - u.anchorX - 0x1) * u.width;
            var D = (b.node.anchorY - u.anchorY) * u.height;
            b.node.runAction(cc.sequence(cc.moveTo(0.4, cc.v2(k, D)).easing(cc.easeSineIn()), cc.callFunc(function () {
              b.node.setPosition(k, D);
            })));
            var x = (y.node.anchorX - u.anchorX) * u.width;
            var G = (y.node.anchorY - u.anchorY) * u.height;
            y.node.runAction(cc.sequence(cc.moveTo(0.4, cc.v2(x, G)).easing(cc.easeSineIn()), cc.callFunc(function () {
              y.node.setPosition(x, G);
              if (A) {
                A();
              }
            })));
          };
          f.prototype.animationEnd = function () {};
          return f;
        }(K["default"]);
        Q.DefaultNavigationPushTransition = S;
        var q = function (N) {
          function f() {
            return null !== N && N.apply(this, arguments) || this;
          }
          __extends(f, N);
          f.prototype.transitionDuration = function () {};
          f.prototype.animateTransition = function (J, A) {
            var y = J.getToController();
            var b = J.getFromController();
            var u = J.getContainer();
            var k = (b.node.anchorX - u.anchorX + 0x1) * u.width;
            var D = (b.node.anchorY - u.anchorY) * u.height;
            b.node.runAction(cc.sequence(cc.moveTo(0.4, cc.v2(k, D)).easing(cc.easeSineIn()), cc.callFunc(function () {
              b.node.setPosition(k, D);
            })));
            var x = (y.node.anchorX - u.anchorX) * u.width;
            var G = (y.node.anchorY - u.anchorY) * u.height;
            y.node.runAction(cc.sequence(cc.moveTo(0.4, cc.v2(x, G)).easing(cc.easeSineIn()), cc.callFunc(function () {
              y.node.setPosition(x, G);
              if (A) {
                A();
              }
            })));
          };
          f.prototype.animationEnd = function () {};
          return f;
        }(K["default"]);
        Q.DefaultNavigationPopTransition = q;
        cc._RF.pop();
      }
    }, Ry],
    'NoSoundAdapter': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "d85610Qhw9DzLM9jdvZsDKB", "NoSoundAdapter")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = B("AudioAdapter");
        var N = {
          'load': function (y, b) {
            setTimeout(b, 0x0);
          },
          'unload': function () {}
        };
        var J = function (y) {
          function b(u) {
            var k = y.call(this) || this;
            k.Wa = false;
            k.U = 0x1;
            k.W = false;
            k.j = 0x1;
            k.xa = 0x2;
            k.Fa = 0x0;
            k.Va = 0x0;
            k.za = k.za.bind(k);
            k.Ja = k.Ja.bind(k);
            k.reset(u);
            return k;
          }
          __extends(b, y);
          b.prototype.reset = function (u) {
            this.Fa = 0x0;
            this.Va = 0x0;
            if (undefined !== u) {
              var k = u.loop;
              var D = u.volume;
              var x = u.muted;
              var G = u.rate;
              var Y = u.duration;
              if ("boolean" == typeof k) {
                this.W = k;
              }
              if ("number" == typeof D && D >= 0x0 && D <= 0x1) {
                this.U = D;
              }
              if ("boolean" == typeof x) {
                this.Wa = x;
              }
              if ("number" == typeof G && G > 0x0) {
                this.j = G;
              }
              if ("number" == typeof Y && Y > 0x0) {
                this.xa = Y;
              }
            }
          };
          b.prototype.destroy = function () {
            this.reset();
            this.removeAll();
          };
          Object.defineProperty(b.prototype, "instantVolume", {
            'get': function () {
              return this.U;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "volume", {
            'get': function () {
              return this.U;
            },
            'set': function (u) {
              this.U = u;
              this.qa(undefined);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "loop", {
            'get': function () {
              return this.W;
            },
            'set': function (u) {
              if (u !== this.W) {
                this.W = u;
                if (u) {
                  this.Ka(undefined);
                } else {
                  this.Qa();
                }
              }
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "paused", {
            'get': function () {
              return this.Fa > 0x0 && this.Va > 0x0;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "playing", {
            'get': function () {
              return this.Fa > 0x0 && 0x0 === this.Va;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "stopped", {
            'get': function () {
              return 0x0 === this.Fa && 0x0 === this.Va;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "rate", {
            'get': function () {
              return this.j;
            },
            'set': function (u) {
              if ("number" == typeof u && u > 0x0 && u !== this.j) {
                this.j = u;
              }
            },
            'enumerable': false,
            'configurable': true
          });
          b.prototype.pause = function () {
            if (!this.paused) {
              this.Va = Date.now();
              this.qa(undefined);
              this.Ka(undefined);
            }
          };
          b.prototype.resume = function () {
            if (this.paused) {
              this.Fa += Date.now() - this.Va;
              this.Va = 0x0;
              if (!this.W) {
                this.Qa();
              }
            }
          };
          Object.defineProperty(b.prototype, "muted", {
            'get': function () {
              return this.Wa;
            },
            'set': function (u) {
              this.Wa = u;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "duration", {
            'get': function () {
              return this.xa;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "currentTime", {
            'get': function () {
              return this.Va > 0x0 ? (this.Va - this.Fa) / 0x3e8 % this.xa : (Date.now() - this.Fa) / 0x3e8 % this.xa;
            },
            'enumerable': false,
            'configurable': true
          });
          b.prototype.seek = function (u) {
            this.qa(undefined);
            if (u >= this.xa && !this.W) {
              this.Ka(undefined);
              this.Fa = 0x0;
              this.Va = 0x0;
              this.Ja();
              return void this.emit(shell.WebAudioEvent.ENDED);
            }
            if (this.paused) {
              this.resume();
            }
            this.Fa = Date.now() - 0x3e8 * u;
            if (!this.W) {
              this.Qa();
            }
            this.emit(shell.WebAudioEvent.SEEK);
          };
          b.prototype.play = function (u, k) {
            this.Fa = Date.now();
            this.xa = "number" == typeof k && k > 0x0 ? k : this.xa;
            if (!this.W) {
              this.Qa();
            }
          };
          b.prototype.za = function () {
            if (this.Ya) {
              this.qa(undefined);
              this.Ja();
            }
            this.Fa = 0x0;
            this.Va = 0x0;
            this.emit(shell.WebAudioEvent.ENDED);
          };
          b.prototype.stop = function () {
            this.qa(undefined);
            this.Ka(undefined);
            this.Fa = 0x0;
            this.Va = 0x0;
            this.emit(shell.WebAudioEvent.STOP);
          };
          b.prototype.fade = function (u, k, D) {
            this.U = k;
            this.qa(D);
          };
          b.prototype.Ja = function () {
            this.emit(shell.WebAudioEvent.FADED);
          };
          b.prototype.Qa = function () {
            var u = this.xa - this.currentTime;
            if (u >= 0x0) {
              this.Ka(u);
            } else {
              this.Ka(undefined);
            }
          };
          b.prototype.Ka = function (u) {
            var k = this.Xa;
            if (k) {
              k();
            }
            this.Xa = null == u ? undefined : S.delayCallback(u)(this.za);
          };
          b.prototype.qa = function (u) {
            var k = this.Ya;
            if (k) {
              k();
            }
            this.Ya = null == u ? undefined : S.delayCallback(u)(this.Ja);
          };
          return b;
        }(shell.CustomEventTarget);
        var A = function (y) {
          function b(u) {
            var k = this;
            u.loader = N;
            (k = y.call(this, u) || this).Za = u.estimatedDuration || 0x2;
            return k;
          }
          __extends(b, y);
          b.prototype.getDuration = function (u) {
            return "number" == typeof u ? y.prototype.getDuration.call(this, u) : this.Za;
          };
          b.prototype.getAudioFromPool = function () {
            var u = this.factory.get();
            var k = {
              duration: this.Za
            };
            var D = {
              duration: this.Za
            };
            return u ? (u.reset(k), u) : new J(D);
          };
          return b;
        }(q["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, Rc],
    'NodePoolHandler': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "b0ddew/TJxHpLx+HkJnRSBk", "NodePoolHandler")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.nodePoolHandler = Q.NodePoolHandler = undefined;
        var K = cc._decorator.ccclass;
        var S = function (N) {
          function f() {
            var J = null !== N && N.apply(this, arguments) || this;
            J.ni = Object.create(null);
            J.$a = Object.create(null);
            J.tu = Object.create(null);
            return J;
          }
          __extends(f, N);
          f.prototype.registerReusableItem = function (J, A, y, b) {
            if (J && A) {
              var u = this.$a;
              if (!u[J]) {
                u[J] = A;
                var k = this.ni;
                if (!k[J]) {
                  k[J] = y ? new cc.NodePool(y) : new cc.NodePool();
                  var D = this.tu;
                  if (!D[J]) {
                    D[J] = b;
                    for (var x = 0x0; x < b; x++) {
                      var G = cc.instantiate(A);
                      this.enqueueReusableItem(G, J);
                    }
                  }
                }
              }
            }
          };
          f.prototype.dequeueReusableItem = function (J) {
            var A = this.ni[J];
            if (A.size() > 0x0) {
              return A.get();
            }
            var y = this.$a[J];
            return cc.instantiate(y);
          };
          f.prototype.enqueueReusableItem = function (J, A) {
            var y = this.ni[A];
            var c = this.tu[A];
            if (y.size() < c) {
              y.put(J);
            } else {
              J.destroy();
            }
          };
          f.prototype.getPool = function (J) {
            return this.ni[J];
          };
          f.prototype.destroy = function () {
            var J = this;
            Object.keys(this.ni).forEach(function (A) {
              J.ni[A].clear();
            });
            return N.prototype.destroy.call(this);
          };
          return __decorate([K], f);
        }(cc.Object);
        Q.NodePoolHandler = S;
        var q = new S();
        Q.nodePoolHandler = q;
        cc._RF.pop();
      }
    }, {}],
    'NormalPrizeDecorator': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "106e2xHvchPlqWVXmeFLDHr", "NormalPrizeDecorator")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SlotGameConstants");
        var q = B("SlotAnalyticsEnum");
        var N = B("AutoSpinHandler");
        var f = B("ButtonHitTest");
        var J = B("JakeSlotGameTemplate");
        var A = function () {
          function y(b, u) {
            this.name = "Normal Prize Decorator";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.dataSource = b;
            this.generalControllers = u.generalControllers;
          }
          y.prototype.destroy = function () {
            this.clearAvailableActions();
            this.dataSource = undefined;
            this.generalControllers = undefined;
          };
          y.prototype.setAvailableActions = function () {
            var b = this.generalControllers.spinButtonController;
            if (b.isAutoSpin()) {
              b.setOnClickCallback(this.iu.bind(this, q.SpinTrigger.CLICK));
              if (!J.JSGTConfig.spaceBarInterrupterEnabled) {
                cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
              }
            }
          };
          y.prototype.clearAvailableActions = function () {
            this.generalControllers.spinButtonController.clearOnClickCallback();
            if (!J.JSGTConfig.spaceBarInterrupterEnabled) {
              cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
            }
          };
          y.prototype.No = function (b) {
            if (!J.JSGTConfig.spaceBarInterrupterEnabled && f.buttonHitTest(this.generalControllers.spinButtonController.node)) {
              switch (b.keyCode) {
                case S.SPIN_BUTTON_TRIGGER_KEY:
                  this.iu(q.SpinTrigger.SPACEBAR);
              }
            }
          };
          y.prototype.iu = function () {
            var b = this.generalControllers;
            var u = b.spinButtonController;
            N.exitAutoSpin(b.spinButtonController);
            this.clearAvailableActions();
            u.disableButton();
          };
          return y;
        }();
        C["default"] = A;
        cc._RF.pop();
      }
    }, Rb],
    'NormalResultDecorator': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "94e3b2snKRKspFrhelPCcrj", "NormalResultDecorator")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SlotStateMachine");
        var q = B("SlotAnalyticsEnum");
        var N = B("AutoSpinHandler");
        var f = B("SlotGameConstants");
        var J = B("ButtonHitTest");
        var A = B("JakeSlotGameTemplate");
        var y = B("SpinConfigHandler");
        var b = function () {
          function k(D, x) {
            this.triggerFastStop = undefined;
            this.name = "Normal Result Decorator";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.dataSource = D;
            this.generalControllers = x.generalControllers;
          }
          k.prototype.destroy = function () {
            this.clearAvailableActions();
            this.triggerFastStop = undefined;
            this.dataSource = undefined;
            this.generalControllers = undefined;
          };
          k.prototype.setAvailableActions = function () {
            var D = this.generalControllers.spinButtonController;
            if (D.isAutoSpin() || y.featureConfig.fastStopFeature && !this.su()) {
              D.setOnClickCallback(this.iu.bind(this, q.SpinTrigger.CLICK));
              if (!A.JSGTConfig.spaceBarInterrupterEnabled) {
                cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
              }
            }
          };
          k.prototype.clearAvailableActions = function () {
            this.generalControllers.spinButtonController.clearOnClickCallback();
            if (!A.JSGTConfig.spaceBarInterrupterEnabled) {
              cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
            }
          };
          k.prototype.renderFeature = function (D) {
            var x = this.generalControllers.spinButtonController;
            if (!x.isAutoSpin()) {
              this.clearAvailableActions();
            }
            x.stopSpin();
            if (D) {
              x.disableButton();
            }
          };
          k.prototype.fastStopTriggeredWhileSpinning = function () {
            this.eu();
          };
          k.prototype.triggerFastStopWhileStopping = function () {
            this.eu();
          };
          k.prototype.No = function (D) {
            if (!A.JSGTConfig.spaceBarInterrupterEnabled && J.buttonHitTest(this.generalControllers.spinButtonController.node)) {
              switch (D.keyCode) {
                case f.SPIN_BUTTON_TRIGGER_KEY:
                  this.iu(q.SpinTrigger.SPACEBAR);
              }
            }
          };
          k.prototype.iu = function (D) {
            if (this.generalControllers.spinButtonController.isAutoSpin()) {
              this.vo();
            } else if (this.triggerFastStop && y.featureConfig.fastStopFeature && !this.su()) {
              var x = this.triggerFastStop;
              this.triggerFastStop = undefined;
              x(D);
            }
          };
          k.prototype.vo = function () {
            var D = this.generalControllers;
            var x = D.spinButtonController;
            N.exitAutoSpin(D.spinButtonController);
            if (!(y.featureConfig.fastStopFeature && !this.su())) {
              x.disableButton();
            }
          };
          k.prototype.eu = function () {
            this.clearAvailableActions();
            this.generalControllers.spinButtonController.disableButton();
          };
          k.prototype.su = function () {
            return this.generalControllers.slotController.getStopStyle() === S.StopStyle.FAST;
          };
          return k;
        }();
        C["default"] = b;
        cc._RF.pop();
      }
    }, Rn],
    'NormalSlotHandler': [function (S, q, N) {
      'use strict';

      if (!cc._RF.push(q, "4e7ffkKWR9IMJQyzAP4dvoP", "NormalSlotHandler")) {
        var f = {
          value: true
        };
        Object.defineProperty(N, "__esModule", f);
        N.NormalSlotHandler = N.NORMAL_SLOT_SETUP_PROPERTIES = undefined;
        var J;
        var A = S("SlotHandler");
        var y = S("SlotProperties");
        var b = S("GNormalStopScroller");
        var k = S("Utils");
        var D = S("AudioManager");
        var x = S("GeneralAudioConstant");
        var G = {
          accelerateDuration: 0.1,
          accelerateFactor: 1.6,
          accelerateDistance: -0xe6,
          bounceDistance: 0x28,
          bounceDuration: 0.1,
          bounceFactor: 1.22
        };
        var Y = {
          endSpeed: -0x740,
          bounceDistance: -0x28,
          bounceDuration: 0.4,
          bounceFactor: 0x1
        };
        var m = {
          accelerateDuration: 0.1,
          accelerateFactor: 1.68,
          accelerateDistance: -0xfc,
          bounceDistance: 0x28,
          bounceDuration: 0.1,
          bounceFactor: 1.22
        };
        var W = {
          endSpeed: 0x0,
          bounceDistance: 0x0,
          bounceDuration: 0x0,
          bounceFactor: 0x0
        };
        (function (E) {
          E[E.NORMAL = 0x0] = "NORMAL";
          E[E.RESPIN = 0x1] = "RESPIN";
        })(J || (J = {}));
        N.NORMAL_SLOT_SETUP_PROPERTIES = {
          'topExtraBufferRow': 0x0,
          'bottomExtraBufferRow': 0x0,
          'scrollInterval': 0.1,
          'stopScrollInterval': 0.3,
          'maxSpeed': -0x1110,
          'turboSpeedFactor': 1.67,
          'blurSpeedFactor': 0.4,
          'unblurSpeedFactor': 0.8,
          'slowDownSpeedDuration': 0.5,
          'slowDownSpeed': -0xd48,
          'startScrollerConfig': Object.freeze(G),
          'stopScrollerConfig': Object.freeze(Y),
          'turboStartScrollerConfig': Object.freeze(m),
          'interruptScrollStopScrollerConfig': Object.freeze(W)
        };
        var F = function (E) {
          function v() {
            var I = null !== E && E.apply(this, arguments) || this;
            I.nu = undefined;
            I.L = J.NORMAL;
            I.onReelStopCallback = undefined;
            I.ou = undefined;
            return I;
          }
          __extends(v, E);
          v.prototype.init = function (I) {
            I = __assign(__assign(__assign({}, I), N.NORMAL_SLOT_SETUP_PROPERTIES), {
              'getRandomSymbol': this.cu.bind(this),
              'stopScroller': b["default"]
            });
            E.prototype.init.call(this, I);
          };
          Object.defineProperty(v.prototype, "onReelStop", {
            'set': function (I) {
              this.onReelStopCallback = I;
            },
            'enumerable': false,
            'configurable': true
          });
          v.prototype.onReelStopCallbackWrapper = function (I) {
            if (this.onReelStopCallback) {
              this.onReelStopCallback(I, this.L === J.RESPIN);
            }
          };
          v.prototype.updateRespinSlotConfig = function () {
            this.stopScrollInterval = N.NORMAL_SLOT_SETUP_PROPERTIES.stopScrollInterval;
            this.slotHelper.setStopScrollerEndSpeed(0x2, N.NORMAL_SLOT_SETUP_PROPERTIES.stopScrollerConfig.endSpeed);
            this.slotHelper.updateRespinSlotHelperConfig();
            this.L = J.RESPIN;
          };
          v.prototype.updateNormalSpinSlotConfig = function () {
            this.stopScrollInterval = N.NORMAL_SLOT_SETUP_PROPERTIES.stopScrollInterval;
            this.slotHelper.setStopScrollerEndSpeed(0x2, N.NORMAL_SLOT_SETUP_PROPERTIES.stopScrollerConfig.endSpeed);
            this.slotHelper.updateNormalSpinSlotHelperConfig();
            this.L = J.NORMAL;
          };
          v.prototype.resetHiddenMiddleReel = function () {
            this.slotHelper.setReelData(this.orl);
            this.slotHelper.reloadSlot();
          };
          v.prototype.setOnReelReachesBouncePointCallback = function (I) {
            this.slotHelper.setOnScrollerReachesBouncePointCallback(I);
          };
          v.prototype.setOnReelReachesLowestPointCallback = function (I) {
            this.slotHelper.setOnScrollerReachesLowestPointCallback(I);
          };
          v.prototype.setOnReelReachesSlowDownPointCallback = function (I) {
            this.slotHelper.setOnScrollerReachesSlowDownPointCallback(I);
          };
          v.prototype.runStopScroller = function (I) {
            var w = this;
            if (this.isFastStop) {
              this.runInterrupt();
            } else {
              var j;
              j = function (X, V) {
                if (w.isFastStop) {
                  w.runInterrupt();
                } else {
                  I(X);
                  if (V) {
                    V();
                  }
                }
              };
              var Z = this.scheduleIterator(j, this.stopScrollInterval, this.numberOfColumn);
              this.abortIterator = Z;
            }
          };
          v.prototype.setReelData = function (I) {
            this.orl = I;
            this.slotHelper.setReelData(I);
          };
          v.prototype.cu = function () {
            if (this.L === J.RESPIN) {
              var I = Math.floor(0x6 * Math.random() + 0x1);
              return I >= 0x1 && I <= 0x2 ? -0x1 : I >= 0x3 && I <= 0x5 ? this.nu : y.SLOT_INDEX.WILD;
            }
            var w = y.getRandomSlotSymbol(0x1);
            if (w === y.SLOT_INDEX.WILD && Math.floor(0x2 * Math.random() + 0x1) > 0x1) {
              w = y.getRandomSlotSymbol(0x1, 0x2);
            }
            return w;
          };
          v.prototype.extraFastStopAction = function () {
            var I = x.GENERAL_AUDIO.spinStopQuick.key;
            D.stopAudioIfPlaying(I);
            D.playAudioIfNotPlaying(I);
            var w = x.GENERAL_AUDIO.spinActiveLoop.key;
            D.stopAudioIfPlaying(w);
          };
          v.prototype.extraSpinInitialization = function () {};
          v.prototype.onSpinStopCallbackWrapper = function () {
            this.abortIterator = undefined;
            var I = this.ou;
            this.ou = undefined;
            if (I) {
              I();
            }
            if (this.spinStopCallback) {
              this.spinStopCallback();
            }
          };
          v.prototype.hu = function () {
            var I = 1.2 * N.NORMAL_SLOT_SETUP_PROPERTIES.startScrollerConfig.bounceDuration;
            if (D.GeneralAudioPool.spin_active_loop.isPlaying()) {
              D.GeneralAudioPool.spin_active_loop.stop();
            }
            if (D.GeneralAudioPool.fs_reel_loop.isPlaying()) {
              D.GeneralAudioPool.fs_reel_loop.stop();
            }
            if (this.ou) {
              this.ou();
            }
            this.ou = undefined;
            this.ou = k.delayCallback(I)(function () {
              D.GeneralAudioPool.spin_active_loop.setVolume(0x1);
              D.GeneralAudioPool.spin_active_loop.play();
            });
          };
          v.prototype.setRespinSymbol = function (I) {
            this.nu = I;
          };
          v.prototype.disableAllSprite = function () {
            var I;
            (I = this.slotHelper.slotItemHandler).getSlotItems.apply(I, __spread([0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8])).forEach(function (w) {
              if (w) {
                w.disableSprite();
              }
            });
          };
          return v;
        }(A.SlotHandler);
        N.NormalSlotHandler = F;
        cc._RF.pop();
      }
    }, Ru],
    'NormalSpinDecorator': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "2e3a0I2XG9HlaoLlfg0FwUG", "NormalSpinDecorator")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SlotStateMachine");
        var q = B("AutoSpinHandler");
        var N = B("SlotAnalyticsEnum");
        var f = B("SlotGameConstants");
        var J = B("ButtonHitTest");
        var A = B("SettingMenuHelper");
        var y = B("JakeSlotGameTemplate");
        var b = B("SpinConfigHandler");
        var k = function () {
          function D(x, G) {
            this.triggerFastStop = undefined;
            this.name = "Normal Spin Decorator";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.dataSource = x;
            this.generalControllers = G.generalControllers;
          }
          D.prototype.destroy = function () {
            this.clearAvailableActions();
            this.triggerFastStop = undefined;
            this.dataSource = undefined;
            this.generalControllers = undefined;
          };
          D.prototype.stateWillStartSpin = function () {
            this.generalControllers.spinButtonController.spin();
          };
          D.prototype.setAvailableActions = function () {
            var x = this.generalControllers.spinButtonController;
            if (x.isAutoSpin() || b.featureConfig.fastStopFeature && !A.settingMenuHelper.turboSpinOn) {
              x.setOnClickCallback(this.iu.bind(this, N.SpinTrigger.CLICK));
              if (!y.JSGTConfig.spaceBarInterrupterEnabled) {
                cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
              }
            } else {
              x.disableButton();
            }
          };
          D.prototype.clearAvailableActions = function () {
            this.generalControllers.spinButtonController.clearOnClickCallback();
            if (!y.JSGTConfig.spaceBarInterrupterEnabled) {
              cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
            }
          };
          D.prototype.slotFastStopTriggered = function () {
            this.clearAvailableActions();
            this.generalControllers.spinButtonController.disableButton();
          };
          D.prototype.startSlotController = function () {
            this.generalControllers.slotController.spin(A.settingMenuHelper.turboSpinOn);
          };
          D.prototype.No = function (x) {
            if (!y.JSGTConfig.spaceBarInterrupterEnabled && J.buttonHitTest(this.generalControllers.spinButtonController.node)) {
              switch (x.keyCode) {
                case f.SPIN_BUTTON_TRIGGER_KEY:
                  this.iu(N.SpinTrigger.SPACEBAR);
              }
            }
          };
          D.prototype.iu = function (x) {
            if (this.generalControllers.spinButtonController.isAutoSpin()) {
              this.vo();
            } else if (b.featureConfig.fastStopFeature && !this.su()) {
              var G = this.triggerFastStop;
              this.triggerFastStop = undefined;
              G(x);
            }
          };
          D.prototype.vo = function () {
            var x = this.generalControllers;
            var G = x.spinButtonController;
            q.exitAutoSpin(x.spinButtonController);
            if (!(b.featureConfig.fastStopFeature && !this.su())) {
              G.disableButton();
            }
          };
          D.prototype.su = function () {
            return this.generalControllers.slotController.getStopStyle() === S.StopStyle.FAST;
          };
          return D;
        }();
        C["default"] = k;
        cc._RF.pop();
      }
    }, Rk],
    'NormalUIHelper': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "8e1caArY3JI+JrliWQwAV70", "NormalUIHelper")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SettingMenuHelper");
        var q = B("GSlotTransactionModel");
        var N = B("BaseUIHelper");
        var J = B("SlotProperties");
        var A = B("Utils");
        var y = B("GConstants");
        var b = B("SlotStateMachine");
        var k = B("GeneralAudioConstant");
        var D = B("AudioManager");
        var x = function (G) {
          function Y(m, W) {
            var F = G.call(this, m, W) || this;
            F.name = "Normal UI Helper";
            return F;
          }
          __extends(Y, G);
          Y.prototype.extraPreSpinningCleanup = function (m) {
            var W = this.generalControllers;
            var F = W.paySelectEffectController;
            var E = W.slotController;
            var v = this.dataSource.transactionModel;
            var I = v.winLines;
            var w = v.accumulatedWinAmount;
            if (I || w > 0x0) {
              F.hide(function () {
                F.stopPaySelect();
                if (m) {
                  m();
                }
              });
            } else if (m) {
              m();
            }
            E.onSpinEffect();
          };
          Y.prototype.renderBonusFeatureBeforeResult = function (m, W) {
            A.sequenceCallback(function (F) {
              if (m) {
                m();
              }
              if (F) {
                F();
              }
            }, this.ru.bind(this))(function () {
              if (W) {
                W();
              }
            });
          };
          Y.prototype.renderFeatureDuringResult = function (m) {
            var W = this.dataSource.transactionModel;
            var F = W.isShowTease;
            var E = W.stateTransitionTo;
            var v = function () {
              if (m) {
                m();
              }
            };
            if (F && E !== q.SpinType.RESPIN) {
              this.au(v);
            } else {
              v();
            }
          };
          Y.prototype.renderFeatureAfterResult = function (W) {
            var F = this.generalControllers;
            var E = F.trailParticleEffectController;
            var I = F.slotController;
            var w = F.tigerController;
            var j = this.dataSource.transactionModel;
            var Z = j.reels;
            var X = j.isTriggerWild;
            var V = j.stateTransitionTo;
            var H = j.wildCount;
            var z = function () {
              if (W) {
                W();
              }
            };
            var P = S.settingMenuHelper.turboSpinOn;
            var O = J.getSlotWilds(Z);
            var L = I.getSlotItem(O);
            var U = w.getIngotWorldPos();
            if (X && V === q.SpinType.NORMAL) {
              E.playWildCollectEffect(L, U, P, function () {
                w.playIngot(H);
                var T = k.GENERAL_AUDIO.symWildReach.key;
                D.stopAudioIfPlaying(T);
                D.playAudioIfNotPlaying(T);
              }, z);
            } else {
              z();
            }
          };
          Y.prototype.renderTeaseFeatureBeforeResult = function (m, W) {
            var F = this;
            A.sequenceCallback(function (E) {
              m();
              if (E) {
                E();
              }
            }, function (E) {
              F.uu(function () {
                if (E) {
                  E();
                }
              });
            })(function () {
              if (W) {
                W();
              }
            });
          };
          Y.prototype.uu = function (m) {
            var W = this.generalControllers;
            var F = W.uiShiftController;
            var E = W.backgroundController;
            var v = W.tigerController;
            var I = W.slotController;
            var w = W.backgroundController2;
            A.sequenceCallback(A.spawnCallback(function (j) {
              F.teaseDown(y.TEASE_TIMING.ENTER_TEASE_DURATION, function () {
                if (j) {
                  j();
                }
              });
            }, function (j) {
              w.teaseZoomOut();
              I.teaseZoomOut();
              v.teaseZoomOut();
              E.teaseZoomOut(function () {
                if (j) {
                  j();
                }
              });
            }), A.delayCallback(0.1))(function () {
              if (m) {
                m();
              }
            });
          };
          Y.prototype.au = function (m) {
            var W = this.generalControllers;
            var F = W.uiShiftController;
            var E = W.backgroundController;
            var v = W.backgroundController2;
            var I = W.slotController;
            var w = W.tigerController;
            var j = this.dataSource.transactionModel.wildCount;
            var Z = I.getStopStyle() === b.StopStyle.FAST;
            var X = S.settingMenuHelper.turboSpinOn || Z ? y.TEASE_TIMING.EXIT_TEASE_DURATION * (0x1 - y.TURBO_SPIN_SPEEDUP_FACTOR) : y.TEASE_TIMING.EXIT_TEASE_DURATION;
            A.spawnCallback(function (V) {
              F.teaseUp(X, function () {
                if (V) {
                  V();
                }
              });
            }, function (V) {
              v.teaseZoomIn();
              I.teaseZoomIn();
              w.teaseZoomIn(j);
              E.teaseZoomIn(function () {
                if (V) {
                  V();
                }
              });
            })(function () {
              if (m) {
                m();
              }
            });
          };
          Y.prototype.ru = function (W) {
            var F = this.generalControllers;
            var E = F.uiShiftController;
            var I = F.backgroundController;
            var w = F.foregroundController;
            var j = F.tigerController;
            var Z = F.infoboardController;
            var X = F.slotController;
            var V = F.backgroundController2;
            var H = F.stickyController;
            var z = F.angpaoController;
            var P = this.dataSource.transactionModel.featureWinSymbol;
            var O = y.FEATURE_TRANSITION_TIMING.UI_TRANSITION_INTO_BONUS_DURATION;
            var L = function (U) {
              w.playRespin(U);
              X.setupRespinSlotConfig();
              X.playRespin();
              var T = k.GENERAL_AUDIO.featureStart.key;
              D.stopAudioIfPlaying(T);
              D.playAudioIfNotPlaying(T);
            };
            A.sequenceCallback(A.deferCallback(true), A.spawnCallback(function (U) {
              E.shiftDown(O, U);
              Z.playZoom();
              Z.resumeInfoboard();
              H.resetAudioCount();
            }, A.sequenceCallback(function (U) {
              V.zoomOut();
              j.zoomOut();
              X.zoomOut();
              I.zoomOut();
              z.playRespin(P, L, U);
            }, function (U) {
              j.playRespin(U);
            })))(function () {
              if (W) {
                W();
              }
            });
          };
          Y.prototype.extraSmallWinAction = function () {};
          Y.prototype.extraMediumWinAction = function () {};
          return Y;
        }(N["default"]);
        C["default"] = x;
        cc._RF.pop();
      }
    }, RD],
    'NotifyHelper': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "9dba9c1YjJGvYgyg8KnkuQD", "NotifyHelper")) {
        var B = System.get("bvframework").Notify;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'NumberCurvedController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "22ff3ETL9NJ6LV0gfCqckfH", "NumberCurvedController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("NumberDisplayController");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.curveness = 0.1;
            return b;
          }
          __extends(y, A);
          y.prototype.dequeueNumberContainer = function (b) {
            var u = this.numberContainer.children[b];
            if (!u) {
              (u = new cc.Node("container")).width = this.nodeNumberWidth;
              this.numberContainer.addChild(u);
              var k = new cc.Node("numberSprite");
              k.addComponent(cc.Sprite);
              u.addChild(k);
            }
            return u;
          };
          y.prototype.displayNumber = function (b, k, D) {
            if (undefined === k) {
              k = true;
            }
            A.prototype.displayNumber.call(this, b, k, D);
            this.lu.updateLayout();
            var x = 0x0;
            this.numberContainer.children.forEach(function (v) {
              x += v.width;
            });
            for (var G = 0x0; G < this.numberContainer.children.length; G++) {
              var Y = this.dequeueNumberContainer(G);
              var m = x / 0x2;
              var W = (0x64 / Math.abs(this.curveness) + m) / this.numberContainer.scale;
              var F = undefined;
              var E = undefined;
              if (this.curveness > 0x0) {
                F = Math.sqrt(Math.pow(W, 0x2) - Math.pow(Y.x, 0x2));
                E = 0xb4 * Math.atan2(Math.abs(F), Y.x) / Math.PI;
                Y.angle = -(0x5a - E);
              } else if (this.curveness < 0x0) {
                F = Math.sqrt(Math.pow(W, 0x2) + Math.pow(Y.x, 0x2));
                E = 0xb4 * Math.atan2(Math.abs(F), Y.x) / Math.PI;
                Y.angle = 0x5a - E;
              } else {
                Y.angle = 0x0;
              }
              Y.y = F - W;
            }
          };
          __decorate([f({
            'min': -0xa,
            'max': 0xa,
            'slide': true,
            'tooltip': false,
            'type': cc.Float
          })], y.prototype, "curveness", undefined);
          return __decorate([N], y);
        }(S["default"]);
        C["default"] = J;
        cc._RF.pop();
      }
    }, Rr],
    'NumberDisplayController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "e13cc9FLShL66GevrFVSv5p", "NumberDisplayController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = B("NumberDisplayInterface");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var x = null !== y && y.apply(this, arguments) || this;
            x.numberSpriteAtlas = undefined;
            x.numberBlurSpriteAtlas = undefined;
            x.numberSprite = [];
            x.numberBlurSprite = [];
            x.kSprite = undefined;
            x.srcBlendFactor = cc.macro.BlendFactor.SRC_ALPHA;
            x.dstBlendFactor = cc.macro.BlendFactor.ONE_MINUS_SRC_ALPHA;
            x.nodeNumberWidth = 0x8d;
            x.nodeNumberY = 0x0;
            x.nodeNumberScale = 0x1;
            x.commaWidth = 0x32;
            x.commaY = 0x0;
            x.commaScale = 0x1;
            x.decimalWidth = 0x3c;
            x.decimalY = 0x0;
            x.decimalScale = 0x1;
            x.decimalNumberWidth = 0x79;
            x.decimalNumberY = 0x1;
            x.decimalNumberScale = 0.9;
            x.multiplySpriteWidth = 0x32;
            x.multiplySpriteY = 0x0;
            x.multiplySpriteScale = 0x1;
            x.layoutSpacingX = 0x0;
            x.layoutSpacingY = 0x0;
            x.blurScale = 0x1;
            x.spriteColor = "FFFFFF";
            x.disableFixedWidth = false;
            x.enablePrefixNumber = false;
            x.fu = false;
            x.du = false;
            x.vu = '0';
            x._u = 0x0;
            x.mu = 0x0;
            x.attributesForNumberContainer = undefined;
            return x;
          }
          var u = {
            tooltip: false
          };
          var k = {
            tooltip: false
          };
          var D = {
            tooltip: false
          };
          __extends(b, y);
          Object.defineProperty(b.prototype, "preview", {
            'get': function () {
              return this.du;
            },
            'set': function (x) {
              this.du = x;
              if (x) {
                this.displayNumber(this.previewNumber);
              } else {
                this.clear();
              }
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "previewNumber", {
            'get': function () {
              return this.vu;
            },
            'set': function (x) {
              this.vu = x;
              this.displayNumber(x);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "currentNumberBlurSprite", {
            'get': function () {
              return this.numberBlurSpriteAtlas ? this.numberBlurSpriteAtlas.getSpriteFrames() : this.numberBlurSprite;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "currentNumberSprite", {
            'get': function () {
              return this.numberSpriteAtlas ? this.numberSpriteAtlas.getSpriteFrames() : this.numberSprite;
            },
            'enumerable': false,
            'configurable': true
          });
          b.prototype.onLoad = function () {
            this._u = this.numberContainer.scaleX;
            this.mu = this.numberContainer.scaleY;
            this.numberContainer.on(cc.Node.EventType.SIZE_CHANGED, this.resizeNumberIfNeeded, this);
          };
          b.prototype.getNumberList = function (x, G) {
            var Y = /(?:\d+)(?:\.\d+)?/gm.exec(x.toString());
            if (Y) {
              var m = parseFloat(Y[0x0]);
              var W = this.pu(m, G);
              var F = "number" == typeof x ? W : x.replace(Y[0x0], W);
              var a = Array.from(F);
              if (this.enablePrefixNumber) {
                a.unshift('x');
              }
              return a;
            }
            return Array.from(x.toString());
          };
          b.prototype.getSpriteConfig = function (x) {
            switch (x) {
              case ',':
                var G = {
                  width: this.commaWidth,
                  scale: this.commaScale,
                  'y': this.commaY,
                  spriteFrame: this.currentNumberSprite[0xa]
                };
                return G;
              case '.':
                var Y = {
                  width: this.decimalWidth,
                  scale: this.decimalScale,
                  'y': this.decimalY,
                  spriteFrame: this.currentNumberSprite[0xb]
                };
                return Y;
              case 'x':
                var m = {
                  width: this.multiplySpriteWidth,
                  scale: this.multiplySpriteScale,
                  'y': this.multiplySpriteY,
                  spriteFrame: this.currentNumberSprite[0xc]
                };
                return m;
              case 'k':
                var W = {
                  width: this.nodeNumberWidth,
                  scale: this.nodeNumberScale,
                  'y': this.nodeNumberY,
                  spriteFrame: this.kSprite
                };
                return W;
              case " ":
                var F = {
                  width: this.commaWidth,
                  scale: this.commaScale,
                  'y': this.commaY,
                  spriteFrame: undefined
                };
                return F;
              default:
                return;
            }
          };
          b.prototype.getNumberSpriteConfig = function (x, G, Y) {
            return Y ? {
              'scale': G ? this.decimalNumberScale * this.blurScale : this.decimalNumberScale,
              'width': this.decimalNumberWidth,
              'y': this.decimalNumberY,
              'spriteFrame': G ? this.currentNumberBlurSprite[parseInt(x, 0xa)] : this.currentNumberSprite[parseInt(x, 0xa)]
            } : {
              'scale': this.nodeNumberScale,
              'width': this.nodeNumberWidth,
              'y': this.nodeNumberY,
              'spriteFrame': G ? this.currentNumberBlurSprite[parseInt(x, 0xa)] : this.currentNumberSprite[parseInt(x, 0xa)]
            };
          };
          b.prototype.displayNumber = function (x, G, Y) {
            if (undefined === G) {
              G = true;
            }
            this.bu();
            var m = this.getNumberList(x, G);
            m = m.reverse();
            var W = false;
            this.Su(m.length);
            for (var F = 0x0; F < m.length; F++) {
              var E = this.dequeueNumberContainer(F);
              var v = E.getChildByName("numberSprite").getComponent(cc.Sprite);
              var I = this.getSpriteConfig(m[F]);
              if (I) {
                E.width = I.width;
                E.scaleX = E.scaleY = I.scale;
                v.node.y = I.y;
                v.spriteFrame = I.spriteFrame;
              } else {
                W = false;
                var w = S.getDefaultCurrencyFormat().decimalSeparator;
                var j = F < m.indexOf(w);
                if (j && -0x1 !== m.indexOf(w)) {
                  W = !G;
                }
                var Z = this.getNumberSpriteConfig(m[F], W, j && -0x1 !== m.indexOf(w));
                E.scale = Z.scale;
                E.width = Z.width;
                v.node.y = Z.y;
                v.spriteFrame = Z.spriteFrame;
              }
              if (this.disableFixedWidth || -0x1 === E.width) {
                E.width = v.node.width;
              }
              this.gu(F, m[F], W, E);
            }
            if (Y) {
              Y();
            }
          };
          b.prototype.Su = function (x) {
            var G = this.numberContainer.children.length;
            if (x < G) {
              for (var Y = G - x; 0x0 !== Y;) {
                var m = this.numberContainer.children[0x0];
                m.removeFromParent();
                m.destroy();
                Y--;
              }
            }
          };
          b.prototype.clear = function () {
            this.numberContainer.removeAllChildren();
            this.Cu();
            this.numberContainer.width = 0x0;
          };
          b.prototype.Cu = function () {
            if (this._u && this.mu) {
              this.numberContainer.scaleX = this._u;
              this.numberContainer.scaleY = this.mu;
            }
          };
          b.prototype.pu = function (x, G) {
            var Y = x;
            var m = '';
            var W = 0x1;
            if (this.enableShortenNumber && x > 0x3e7) {
              W = 0x3e8;
              m = 'k';
            }
            var F = !S.getDefaultCurrencyFormat().hideDecimal && this.enableDecimal;
            Y = F ? Math.floor(Y / W) : Math.round(Y / W);
            if (this.enableComma) {
              Y = this.numberWithComma(Y);
            }
            if (F) {
              Y += this.yu(x, G);
            }
            return Y + m;
          };
          b.prototype.yu = function (x, G) {
            var Y;
            var m;
            var W;
            var F = S.getDefaultCurrencyFormat().decimalSeparator;
            if (this.enableShortenNumber && x > 0x3e7) {
              Y = Math.round(x / 0x64) / 0xa;
              m = 0x2;
              W = G ? '' : F + '0';
            } else {
              Y = x;
              m = 0x3;
              W = F + '00';
            }
            var a = Y.toString();
            if (-0x1 !== a.indexOf('.')) {
              for (W = F + (W = a.substring(a.indexOf('.') + 0x1, a.indexOf('.') + m)); W.length !== m;) {
                W += '0';
              }
            }
            return W;
          };
          b.prototype.gu = function (x, G, Y, m) {
            if (this.attributesForNumberContainer) {
              this.attributesForNumberContainer(x, G, Y, m);
            }
          };
          b.prototype.dequeueNumberContainer = function (x) {
            var G = this.numberContainer.children[x];
            if (!G) {
              (G = new cc.Node("container")).width = this.nodeNumberWidth;
              this.numberContainer.addChild(G);
              var Y = new cc.Node("numberSprite");
              Y.addComponent(cc.Sprite);
              var m = Y.getComponent(cc.Sprite);
              m.srcBlendFactor = this.srcBlendFactor;
              m.dstBlendFactor = this.dstBlendFactor;
              G.addChild(Y);
              Y.color = new cc.Color().fromHEX(this.spriteColor);
            }
            return G;
          };
          b.prototype.resizeNumberIfNeeded = function () {
            var x = this.numberContainer.width;
            var G = this.maxContainerSize / x;
            var Y = x * this.numberContainer.scaleX;
            if (isFinite(G) && Math.round(Y) > this.maxContainerSize) {
              this.numberContainer.scale = G;
            }
          };
          b.prototype.Mu = function (x, G, Y) {
            this.numberContainer.runAction(cc.sequence(cc.scaleTo(0.08, x), cc.scaleTo(0.05, G), cc.callFunc(Y, this)));
          };
          b.prototype.bu = function () {
            if (!this.lu) {
              var x = this.lu = this.numberContainer.getComponent(cc.Layout);
              if (!x) {
                x = this.lu = this.numberContainer.addComponent(cc.Layout);
              }
              x.resizeMode = cc.Layout.ResizeMode.CONTAINER;
              x.horizontalDirection = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT;
              x.type = cc.Layout.Type.HORIZONTAL;
              x.spacingX = this.layoutSpacingX;
              x.spacingY = this.layoutSpacingY;
            }
          };
          b.prototype.onDestroy = function () {
            this.attributesForNumberContainer = undefined;
          };
          __decorate([J({
            'type': cc.SpriteAtlas,
            'tooltip': false
          })], b.prototype, "numberSpriteAtlas", undefined);
          __decorate([J({
            'type': cc.SpriteAtlas,
            'tooltip': false
          })], b.prototype, "numberBlurSpriteAtlas", undefined);
          __decorate([J({
            'type': [cc.SpriteFrame],
            'tooltip': false
          })], b.prototype, "numberSprite", undefined);
          __decorate([J({
            'type': [cc.SpriteFrame]
          })], b.prototype, "numberBlurSprite", undefined);
          __decorate([J({
            'type': cc.SpriteFrame
          })], b.prototype, "kSprite", undefined);
          __decorate([J({
            'type': cc.macro.BlendFactor,
            'tooltip': false
          }), J({
            'type': cc.macro.BlendFactor,
            'tooltip': false
          })], b.prototype, "srcBlendFactor", undefined);
          __decorate([J({
            'type': cc.macro.BlendFactor,
            'tooltip': false
          })], b.prototype, "dstBlendFactor", undefined);
          __decorate([J({
            'type': cc.Integer,
            'tooltip': false
          })], b.prototype, "nodeNumberWidth", undefined);
          __decorate([J({
            'type': cc.Integer,
            'tooltip': false
          })], b.prototype, "nodeNumberY", undefined);
          __decorate([J({
            'type': cc.Float,
            'tooltip': false
          })], b.prototype, "nodeNumberScale", undefined);
          __decorate([J({
            'type': cc.Float,
            'tooltip': false
          })], b.prototype, "commaWidth", undefined);
          __decorate([J({
            'type': cc.Integer,
            'tooltip': false
          })], b.prototype, "commaY", undefined);
          __decorate([J({
            'type': cc.Float,
            'tooltip': false
          })], b.prototype, "commaScale", undefined);
          __decorate([J({
            'type': cc.Integer,
            'tooltip': false
          })], b.prototype, "decimalWidth", undefined);
          __decorate([J({
            'type': cc.Integer,
            'tooltip': false
          })], b.prototype, "decimalY", undefined);
          __decorate([J({
            'type': cc.Float,
            'tooltip': false
          })], b.prototype, "decimalScale", undefined);
          __decorate([J({
            'type': cc.Integer,
            'tooltip': false
          })], b.prototype, "decimalNumberWidth", undefined);
          __decorate([J({
            'type': cc.Integer,
            'tooltip': false
          })], b.prototype, "decimalNumberY", undefined);
          __decorate([J({
            'type': cc.Float,
            'tooltip': false
          })], b.prototype, "decimalNumberScale", undefined);
          __decorate([J({
            'type': cc.Integer,
            'tooltip': false
          })], b.prototype, "multiplySpriteWidth", undefined);
          __decorate([J({
            'type': cc.Integer,
            'tooltip': false
          })], b.prototype, "multiplySpriteY", undefined);
          __decorate([J({
            'type': cc.Float,
            'tooltip': false
          })], b.prototype, "multiplySpriteScale", undefined);
          __decorate([J({
            'type': cc.Float,
            'tooltip': false
          })], b.prototype, "layoutSpacingX", undefined);
          __decorate([J({
            'type': cc.Float,
            'tooltip': false
          })], b.prototype, "layoutSpacingY", undefined);
          __decorate([J({
            'type': cc.Float,
            'tooltip': false
          })], b.prototype, "blurScale", undefined);
          __decorate([J(u)], b.prototype, "spriteColor", undefined);
          __decorate([J(k)], b.prototype, "disableFixedWidth", undefined);
          __decorate([J(D)], b.prototype, "enablePrefixNumber", undefined);
          __decorate([J({
            'type': cc.Float,
            'visible': function () {
              return this.preview;
            }
          })], b.prototype, "previewNumber", null);
          return __decorate([f], b);
        }(q["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, Rx],
    'NumberDisplayInterface': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "6e9deOwoQZHDb/Mv4FAbr3R", "NumberDisplayInterface")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var D = null !== A && A.apply(this, arguments) || this;
            D.numberContainer = undefined;
            D.maxContainerSize = 0x476;
            D.enableComma = true;
            D.enableDecimal = true;
            D.enableShortenNumber = false;
            return D;
          }
          var b = {
            tooltip: false
          };
          var u = {
            tooltip: false
          };
          var k = {
            tooltip: false
          };
          __extends(y, A);
          y.prototype.numberWithComma = function (D) {
            var r = S.getDefaultCurrencyFormat().groupSeparator;
            return D.toString().replace(/\B(?=(\d{3})+(?!\d))/g, r);
          };
          y.prototype.setResizeAnimation = function (D) {
            this.Au = D;
          };
          y.prototype.displayNumber = function (D, r) {
            if (undefined === r) {
              r = true;
            }
            throw Error("NumberDisplayInterface: method must be overriden");
          };
          y.prototype.clear = function () {
            throw Error("NumberDisplayInterface: method must be overriden");
          };
          y.prototype.resizeNumberIfNeeded = function () {
            throw Error("NumberDisplayInterface: method must be overriden");
          };
          __decorate([f(cc.Node)], y.prototype, "numberContainer", undefined);
          __decorate([f(cc.Float)], y.prototype, "maxContainerSize", undefined);
          __decorate([f(b)], y.prototype, "enableComma", undefined);
          __decorate([f(u)], y.prototype, "enableDecimal", undefined);
          __decorate([f(k)], y.prototype, "enableShortenNumber", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, Re],
    'NumberLabelControllerLite': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "88c0bvJUDVGt4Zbi3DnKpmf", "NumberLabelControllerLite")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = cc.misc.lerp;
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var u = null !== y && y.apply(this, arguments) || this;
            u.label = undefined;
            u.rollDuration = 0x2;
            u.maxWidth = 0x0;
            u.Iu = false;
            u.wu = 0x0;
            u.Ou = 0x0;
            u.Hu = 0x0;
            u.Bu = false;
            return u;
          }
          __extends(b, y);
          b.prototype.play = function (u, k) {
            if (this.Bu) {
              this.unschedule(this.Gu);
              this.Bu = false;
            }
            this.Ou = u;
            this.Hu = k;
            this.wu = 0x0;
            this.Bu = true;
            this.Iu = !(u > k);
            this.schedule(this.Gu, 0x0);
          };
          b.prototype.skip = function (u) {
            if (this.Bu) {
              this.unschedule(this.Gu);
              this.Bu = false;
            }
            this.label.string = S.formatCurrency(u);
          };
          b.prototype.Gu = function (u) {
            this.wu += u;
            var k = this.wu / this.rollDuration;
            k = k >= 0x1 ? 0x1 : 0x1 - Math.cos(k * Math.PI * 0.5);
            var D = q(this.Ou, this.Hu, k);
            if (this.Iu) {
              if (D >= this.Hu) {
                D = this.Hu;
                this.unschedule(this.Gu);
                this.Bu = false;
              }
            } else if (D <= this.Hu) {
              D = this.Hu;
              this.unschedule(this.Gu);
              this.Bu = false;
            }
            this.label.string = S.formatCurrency(D);
          };
          __decorate([J(cc.Label)], b.prototype, "label", undefined);
          __decorate([J(cc.Integer)], b.prototype, "rollDuration", undefined);
          __decorate([J(cc.Float)], b.prototype, "maxWidth", undefined);
          return __decorate([f], b);
        }(cc.Component);
        C["default"] = A;
        cc._RF.pop();
      }
    }, RG],
    'NumberLabelController': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "b6e176hgIFCvo12TMjQIRc7", "NumberLabelController")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("NumberDisplayInterface");
        var S = M("Utils");
        var q = cc._decorator.ccclass;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.fu = false;
            A._u = 0x0;
            A.mu = 0x0;
            A.Ac = undefined;
            return A;
          }
          __extends(J, f);
          J.prototype.onLoad = function () {
            this._u = this.numberContainer.scaleX;
            this.mu = this.numberContainer.scaleY;
            this.bu();
            this.numberContainer.on(cc.Node.EventType.SIZE_CHANGED, this.resizeNumberIfNeeded, this);
          };
          J.prototype.setPrefix = function (A) {
            this.Nu = A;
          };
          J.prototype.displayNumber = function (A, y, b) {
            if (undefined === y) {
              y = true;
            }
            this.Tu = b;
            var u = this.getNumberList(A, y);
            this.Ac.string = this.Nu ? this.Nu + u : u;
            if (y) {
              var k = this.Tu;
              this.Tu = null;
              if (k) {
                k();
              }
            }
          };
          J.prototype.getNumberList = function (A, y) {
            var b = /(?:\d+)(?:\.\d+)?/gm.exec(A.toString());
            if (b) {
              var u = parseFloat(b[0x0]);
              var k = this.pu(u, y);
              return "number" == typeof A ? k : A.replace(b[0x0], k);
            }
            return A.toString();
          };
          J.prototype.pu = function (A, y) {
            var b = A;
            var u = '';
            var k = 0x1;
            if (this.enableShortenNumber && A > 0x3e7) {
              k = 0x3e8;
              u = 'k';
            }
            var D = !S.getDefaultCurrencyFormat().hideDecimal && this.enableDecimal;
            b = D ? Math.floor(b / k) : Math.round(b / k);
            if (this.enableComma) {
              b = this.numberWithComma(b);
            }
            if (D) {
              b += this.yu(A, y);
            }
            return b + u;
          };
          J.prototype.yu = function (A, y) {
            var b;
            var u;
            var k;
            var D = S.getDefaultCurrencyFormat().decimalSeparator;
            if (this.enableShortenNumber && A > 0x3e7) {
              b = Math.round(A / 0x64) / 0xa;
              u = 0x2;
              k = y ? '' : D + '0';
            } else {
              b = A;
              u = 0x3;
              k = D + '00';
            }
            var r = b.toString();
            if (-0x1 !== r.indexOf(D)) {
              for (k = r.substring(r.indexOf(D), r.indexOf(D) + u); k.length !== u;) {
                k += '0';
              }
            }
            return k;
          };
          J.prototype.clear = function () {
            this.Ac.string = '';
            this.Cu();
          };
          J.prototype.resizeNumberIfNeeded = function () {
            var A = this;
            if (!this.fu) {
              var y = this.numberContainer.width;
              var b = this.maxContainerSize / y;
              var u = y * this.numberContainer.scaleX;
              var k = this.Tu;
              this.Tu = null;
              if (isFinite(b) && !this.fu && Math.round(u) > this.maxContainerSize) {
                this.fu = true;
                var D = b - 0.06;
                var r = function () {
                  A.fu = false;
                  if (k) {
                    k();
                  }
                };
                if (this.Au) {
                  this.Au(this.numberContainer, D, b, r);
                } else {
                  this.Mu(D, b, r);
                }
              } else {
                S.delayCallback(0x0)(function () {
                  if (k) {
                    k();
                  }
                });
              }
            }
          };
          J.prototype.Cu = function () {
            if (this._u && this.mu) {
              this.numberContainer.scaleX = this._u;
              this.numberContainer.scaleY = this.mu;
            }
          };
          J.prototype.Mu = function (A, y, b) {
            this.numberContainer.runAction(cc.sequence(cc.scaleTo(0.08, A), cc.scaleTo(0.05, y), cc.callFunc(b, this)));
          };
          J.prototype.bu = function () {
            this.Ac = this.numberContainer.getComponent(cc.Label);
            if (!this.Ac) {
              this.Ac = this.numberContainer.addComponent(cc.Label);
              this.Ac.fontSize = 0x2d;
              this.Ac.lineHeight = 0x3c;
              this.Ac.string = '';
            }
          };
          J.prototype.onDestroy = function () {
            this.Tu = null;
            this.Au = null;
          };
          return __decorate([q], J);
        }(K["default"]);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, RY],
    'NumberRollBaseController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "b940fHCDN9PkIykJo0EuNqR", "NumberRollBaseController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("NumberDisplayInterface");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.rollDuration = 0x2;
            b.displayController = undefined;
            b.Ou = 0x0;
            b.Pu = 0x0;
            b.xa = 0x0;
            b.wu = 0x0;
            return b;
          }
          __extends(y, A);
          y.prototype.onLoad = function () {
            this.enabled = false;
          };
          y.prototype.play = function (b, u, k, D) {
            if (undefined === D) {
              D = true;
            }
            if (!(u < 0x0 || b < 0x0)) {
              if (b === u) {
                if (D) {
                  this.displayController.clear();
                }
                return void this.displayController.displayNumber(u, true, k);
              }
              this.Lu = k;
              this.Ou = b;
              this.Pu = u;
              this.xa = this.rollDuration;
              this.wu = 0x0;
              if (D) {
                this.displayController.clear();
              }
              this.displayController.displayNumber(b, false);
              this.enabled = true;
            }
          };
          y.prototype.skip = function () {
            var b = this;
            if (this.enabled) {
              this.stop(false);
              this.displayController.displayNumber(this.Pu, true, function () {
                var u = b.Lu;
                b.Lu = undefined;
                if (u) {
                  u();
                }
              });
            }
          };
          y.prototype.stop = function (b) {
            this.enabled = false;
            if (b) {
              this.displayController.clear();
              this.Lu = undefined;
            }
          };
          y.prototype.update = function (b) {
            var u = this;
            this.wu += b;
            var k = this.wu / this.xa;
            if (k >= 0x1) {
              this.stop(false);
              this.displayController.displayNumber(this.Pu, true, function () {
                var r = u.Lu;
                u.Lu = undefined;
                if (r) {
                  r();
                }
              });
            } else {
              k = 0x1 - Math.cos(k * Math.PI * 0.5);
              var D = cc.misc.lerp(this.Ou, this.Pu, k);
              this.displayController.displayNumber(D, false);
            }
          };
          __decorate([f(cc.Integer)], y.prototype, "rollDuration", undefined);
          __decorate([f({
            'override': true,
            'type': S["default"]
          })], y.prototype, "displayController", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, Rm],
    'NumberRollController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "6ce4aSiKeVGJZPyEX2VbsSD", "NumberRollController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("NumberDisplayController");
        var q = B("NumberRollBaseController");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var k = null !== y && y.apply(this, arguments) || this;
            k.displayController = undefined;
            return k;
          }
          var u = {
            type: S["default"],
            override: true
          };
          __extends(b, y);
          __decorate([J(u)], b.prototype, "displayController", undefined);
          return __decorate([f], b);
        }(q["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, Ri],
    'NumberRollCurveController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "a0a6doEXuNKgJy7Sh2yc8T3", "NumberRollCurveController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("NumberCurvedController");
        var q = B("NumberRollBaseController");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var k = null !== y && y.apply(this, arguments) || this;
            k.displayController = undefined;
            return k;
          }
          var u = {
            type: S["default"],
            override: true
          };
          __extends(b, y);
          __decorate([J(u)], b.prototype, "displayController", undefined);
          return __decorate([f], b);
        }(q["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, RW],
    'NumberRollLabelController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "9b7acp+xyJLMJ5gESfkIJHz", "NumberRollLabelController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("NumberLabelController");
        var q = B("NumberRollBaseController");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var k = null !== y && y.apply(this, arguments) || this;
            k.displayController = undefined;
            return k;
          }
          var u = {
            type: S["default"],
            override: true
          };
          __extends(b, y);
          __decorate([J(u)], b.prototype, "displayController", undefined);
          return __decorate([f], b);
        }(q["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, RF],
    'OperatorJurisdictionModel': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "bcfa7PvQx1LKqzexGjCVrpW", "OperatorJurisdictionModel")) {
        var B = System.get("bvframework").OperatorJurisdictionModel;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'PageControlButton': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "49dd983G1VDGoSnw7stgTlI", "PageControlButton")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Button");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.sprite = undefined;
            b.selectImg = undefined;
            b.normalImg = undefined;
            b.selectTintColor = undefined;
            b.normalTintColor = undefined;
            b.index = 0x0;
            b.Ru = false;
            return b;
          }
          __extends(y, A);
          y.prototype.init = function () {
            if (this.selectImg) {
              this.sprite.SpriteFrame = this.normalImg;
            }
            this.normalColor = this.normalTintColor;
            this.Ru = false;
          };
          y.prototype.setSelect = function () {
            if (!this.Ru) {
              if (this.selectImg) {
                this.sprite.spriteFrame = this.selectImg;
              }
              this.normalColor = this.selectTintColor;
              this.Ru = true;
            }
          };
          y.prototype.setUnselect = function () {
            if (this.Ru) {
              if (this.selectImg) {
                this.sprite.spriteFrame = this.normalImg;
              }
              this.normalColor = this.normalTintColor;
              this.Ru = false;
            }
          };
          y.prototype.selectDot = function () {
            if (!(this.delegate && this.delegate.canChangePage && !this.delegate.canChangePage() || this.Ru)) {
              if (this.selectImg) {
                this.sprite.spriteFrame = this.selectImg;
              }
              this.normalColor = this.selectTintColor;
              this.Ru = true;
              if (this.delegate && this.delegate.didSelectDotAtIndex) {
                this.delegate.didSelectDotAtIndex(this.index);
              }
            }
          };
          __decorate([f(cc.Sprite)], y.prototype, "sprite", undefined);
          __decorate([f(cc.SpriteFrame)], y.prototype, "selectImg", undefined);
          __decorate([f(cc.SpriteFrame)], y.prototype, "normalImg", undefined);
          __decorate([f(cc.Color)], y.prototype, "selectTintColor", undefined);
          __decorate([f(cc.Color)], y.prototype, "normalTintColor", undefined);
          __decorate([f(cc.Integer)], y.prototype, "index", undefined);
          return __decorate([N], y);
        }(S["default"]);
        C["default"] = J;
        cc._RF.pop();
      }
    }, Ra],
    'PageControl': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "db0df9/6UZNW6sskb9QIFSg", "PageControl")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("PageControlButton");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.buttonPrefab = undefined;
            b.delegate = undefined;
            b.Eu = 0x0;
            b.ku = 0x0;
            b.Uu = [];
            return b;
          }
          __extends(y, A);
          y.prototype.init = function (b, u, k) {
            if (!(b >= u || b < 0x0)) {
              this.node.removeAllChildren();
              this.ku = u;
              this.delegate = k;
              var D = [];
              for (var r = 0x0; r < u; r++) {
                var x = cc.instantiate(this.buttonPrefab);
                x.parent = this.node;
                var G = x.getComponent(S["default"]);
                G.index = r;
                G.delegate = this;
                G.init();
                D.push(G);
              }
              D[b].setSelect();
              this.Eu = b;
              this.Uu = D;
            }
          };
          y.prototype.layoutContainer = function (b) {
            this.getComponent(cc.Layout).spacingX = b;
          };
          y.prototype.changeCurrentPage = function (b) {
            var u = this.ku;
            if (!(b < 0x0 || b >= u)) {
              var k = this.Uu;
              k[this.Eu].setUnselect();
              k[b].setSelect();
              this.Eu = b;
            }
          };
          y.prototype.getCurrentPage = function () {
            return this.Eu;
          };
          y.prototype.didSelectDotAtIndex = function (b) {
            this.Uu[this.Eu].setUnselect();
            this.Eu = b;
            if (this.delegate && this.delegate.changePage) {
              this.delegate.changePage(b);
            }
          };
          y.prototype.canChangePage = function () {
            var b = this.delegate;
            return !(b && b.enableChangePage && !b.enableChangePage());
          };
          __decorate([f(cc.Prefab)], y.prototype, "buttonPrefab", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, RE],
    'PayLineController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "c9f44ISS95Bv42TJHp3d0he", "PayLineController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.LINE_POINT_MAP = undefined;
        var S = B("SlotProperties");
        var q = B("Line");
        C.LINE_POINT_MAP = [[cc.v2(-0x1db, 0x0), cc.v2(0x1db, 0x0)], [cc.v2(-0x1db, 0x104), cc.v2(0x1db, 0x104)], [cc.v2(-0x1db, -0x111), cc.v2(0x1db, -0x111)], [cc.v2(-0x1db, 0x16c), cc.v2(0x1db, -0x16d)], [cc.v2(-0x1db, -0x16d), cc.v2(0x1db, 0x16c)]];
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var u = null !== y && y.apply(this, arguments) || this;
            u.circlePrefab = undefined;
            u.lineAnimation = undefined;
            u.circleAnimation = undefined;
            u.itemColumns = [];
            u.holder = undefined;
            u.lineHeaderPrefab = undefined;
            u.lineMediumPrefab = undefined;
            u.lineTailPrefab = undefined;
            u.ju = [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined];
            u.Du = undefined;
            u.Wu = undefined;
            return u;
          }
          __extends(b, y);
          b.prototype.init = function () {
            var u = this;
            this.Du = this.lineAnimation.duration;
            this.Wu = this.circleAnimation.duration;
            var k = S.NORMAL_SLOT_ITEM_SIZE.height;
            var D = S.NORMAL_SLOT_ITEM_SIZE.width / 0x2;
            this.itemColumns.forEach(function (G, Y) {
              G.position = cc.v2(D * (Y - 0x2), 0x0);
            });
            this.ju.forEach(function (G, Y) {
              var m = S.getColumnFromIndex(Y);
              var W = S.getRowFromIndex(Y);
              var F = cc.v2(0x0, -k * (W - 0x1));
              var E = S.NORMAL_SLOT_ROW - W;
              var v = u.itemColumns[0x2 * m];
              var I = cc.instantiate(u.circlePrefab);
              var w = I.getComponent("PayLineItemController");
              v.addChild(I, E);
              I.position = F;
              w.init();
              u.ju[Y] = w;
            });
            q.Line.init(this.holder, 0x0, this.lineHeaderPrefab, this.lineMediumPrefab, this.lineTailPrefab);
            var x = [];
            C.LINE_POINT_MAP.forEach(function (G, Y) {
              x[Y] = [];
              G.forEach(function (m, W) {
                x[Y][W] = cc.v2(m.x, m.y);
              });
            });
            q.Line.setLineMap(x);
            q.Line.updateLineMargin(0x8, 8.5, 0x8);
            q.Line.updateLineAnimName("payline_header", "payline_medium", "payline_tail");
          };
          b.prototype.destroy = function () {
            this.ju.forEach(function (u) {
              u.stop();
              u.node.destroy();
            });
            this.ju = [];
            return y.prototype.destroy.call(this);
          };
          b.prototype.show = function (u, k, D) {
            var x = this;
            var G = 0.4;
            if (D) {
              G *= 0.6;
            }
            u.forEach(function (Y) {
              var m = x.ju[Y];
              m.node.active = true;
              m.play(0x0, D);
            });
            this.itemColumns.forEach(function (Y) {
              Y.runAction(cc.sequence(cc.delayTime(0x0), cc.fadeIn(G)));
            });
            if (k.length > 0x0) {
              q.Line.showLines(k);
              q.Line.startLineAnimation(true);
            }
          };
          b.prototype.showLine = function (u) {
            if (q.Line) {
              q.Line.hideAllLines();
            }
            if (u.length > 0x0) {
              q.Line.showLines(u);
              q.Line.startLineAnimation(true);
            }
          };
          b.prototype.hide = function () {
            if (q.Line) {
              q.Line.hideAllLines();
            }
            this.ju.forEach(function (u) {
              u.stop();
              u.node.active = false;
            });
            this.itemColumns.forEach(function (u) {
              u.stopAllActions();
              u.opacity = 0x0;
            });
          };
          __decorate([J(cc.Prefab)], b.prototype, "circlePrefab", undefined);
          __decorate([J(cc.AnimationClip)], b.prototype, "lineAnimation", undefined);
          __decorate([J(cc.AnimationClip)], b.prototype, "circleAnimation", undefined);
          __decorate([J([cc.Node])], b.prototype, "itemColumns", undefined);
          __decorate([J(cc.Node)], b.prototype, "holder", undefined);
          __decorate([J(cc.Prefab)], b.prototype, "lineHeaderPrefab", undefined);
          __decorate([J(cc.Prefab)], b.prototype, "lineMediumPrefab", undefined);
          __decorate([J(cc.Prefab)], b.prototype, "lineTailPrefab", undefined);
          return __decorate([f], b);
        }(cc.Component);
        C["default"] = A;
        cc._RF.pop();
      }
    }, Rv],
    'PayLineItemController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "2147bFZHrVDQYbyCvZS/DhX", "PayLineItemController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("GConstants");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.animation = undefined;
            return b;
          }
          __extends(y, A);
          y.prototype.init = function () {
            this.node.active = false;
          };
          y.prototype.play = function (b, u, k) {
            var D = this;
            if (this.xu) {
              throw Error("PayLineItemController: play - onPlayComplete callback from the previous iteration still exists!");
            }
            this.xu = function () {
              D.xu = undefined;
              if (k) {
                k();
              }
            };
            this.Fu();
            this.animation.stop();
            this.node.runAction(cc.sequence(cc.delayTime(b), cc.callFunc(function () {
              D.animation.defaultClip.speed = u ? 0x1 + S.TURBO_SPIN_SPEEDUP_FACTOR : 0x1;
              D.animation.setCurrentTime(0x0);
              D.animation.play();
              D.animation.on("finished", D.xu.bind(D));
            })));
          };
          y.prototype.stop = function () {
            this.Vu();
            this.Fu();
            if (this.xu) {
              var b = this.xu;
              this.xu = undefined;
              if (b) {
                b();
              }
            }
          };
          y.prototype.unuse = function () {
            this.stop();
          };
          y.prototype.destroy = function () {
            this.stop();
            return A.prototype.destroy.call(this);
          };
          y.prototype.Vu = function () {
            this.animation.off("finished");
            this.animation.stop();
            this.animation.setCurrentTime(0x0);
          };
          y.prototype.Fu = function () {
            this.node.stopAllActions();
          };
          __decorate([f(cc.Animation)], y.prototype, "animation", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, RI],
    'PayLineNumberController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "37901L1qc1MGaIbS5+1jIyr", "PayLineNumberController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("PayLineNumberItem");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = [cc.v2(-0x1fe, 0x1cc), cc.v2(0x1fe, 0x1cc), cc.v2(-0x1fe, 0x2bc), cc.v2(0x1fe, 0x2bc), cc.v2(-0x1fe, 0xc8), cc.v2(0x1fe, 0xc8), cc.v2(-0x1fe, 0x30c), cc.v2(0x1fe, 0x78), cc.v2(-0x1fe, 0x78), cc.v2(0x1fe, 0x30c)];
        var A = [0x1, 0x1, 0x2, 0x2, 0x3, 0x3, 0x4, 0x4, 0x5, 0x5];
        var y = function (b) {
          function u() {
            var k = null !== b && b.apply(this, arguments) || this;
            k.payLineNumberItemPrefab = undefined;
            k.activeLines = [];
            k.map = [];
            return k;
          }
          __extends(u, b);
          u.prototype.init = function () {
            for (var k = 0x0; k < 0xa; k++) {
              var D = cc.instantiate(this.payLineNumberItemPrefab);
              var x = D.getComponent(S["default"]);
              var G = A[k];
              var Y = {
                'payLineNumberItem': x,
                'line': G
              };
              var m = J[k];
              x.init(G);
              D.setPosition(m);
              this.node.addChild(D);
              this.map.push(Y);
            }
          };
          u.prototype.destroy = function () {
            this.activeLines.length = 0x0;
            this.map.length = 0x0;
            this.node.destroyAllChildren();
            this.node.destroy();
            return b.prototype.destroy.call(this);
          };
          u.prototype.show = function (k) {
            var D = this;
            k.forEach(function (x) {
              D.activeLines.push(x);
            });
            this.map.forEach(function (x) {
              var G = x.payLineNumberItem;
              var Y = x.line;
              if (k.includes(Y)) {
                G.play();
              }
            });
          };
          u.prototype.disable = function () {
            this.map.forEach(function (k) {
              k.payLineNumberItem.disable();
            });
            this.activeLines.length = 0x0;
          };
          u.prototype.idle = function () {
            this.map.forEach(function (k) {
              k.payLineNumberItem.idle();
            });
            this.activeLines.length = 0x0;
          };
          __decorate([f(cc.Prefab)], u.prototype, "payLineNumberItemPrefab", undefined);
          return __decorate([N], u);
        }(cc.Component);
        C["default"] = y;
        cc._RF.pop();
      }
    }, Rw],
    'PayLineNumberItem': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "0c976li/9BBQLbmNpe4DNk4", "PayLineNumberItem")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S;
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        (function (A) {
          A[A.NORMAL = 0x0] = "NORMAL";
          A[A.DARK = 0x1] = "DARK";
          A[A.GREY = 0x2] = "GREY";
          A[A.DARK_GREY = 0x3] = "DARK_GREY";
        })(S || (S = {}));
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.normalNumberDisplayNode = undefined;
            b.greyNumberDisplayNode = undefined;
            b.backgroundSprite = undefined;
            b.zu = undefined;
            b.Ju = undefined;
            return b;
          }
          __extends(y, A);
          y.prototype.init = function (b) {
            this.zu = this.normalNumberDisplayNode.getComponent("NumberDisplayController");
            this.zu.displayNumber(b, false);
            this.Ju = this.greyNumberDisplayNode.getComponent("NumberDisplayController");
            this.Ju.displayNumber(b, false);
            this.idle();
          };
          y.prototype.play = function () {
            this.normalNumberDisplayNode.active = true;
            this.greyNumberDisplayNode.active = false;
            this.backgroundSprite.node.active = true;
            this.node.scale = 0x1;
            this.node.opacity = 0xff;
          };
          y.prototype.disable = function () {
            this.normalNumberDisplayNode.active = false;
            this.greyNumberDisplayNode.active = true;
            this.backgroundSprite.node.active = false;
            this.node.scale = 0.8;
            this.node.opacity = 127.5;
          };
          y.prototype.idle = function () {
            this.normalNumberDisplayNode.active = false;
            this.greyNumberDisplayNode.active = true;
            this.backgroundSprite.node.active = false;
            this.node.scale = 0.8;
            this.node.opacity = 127.5;
          };
          __decorate([f(cc.Node)], y.prototype, "normalNumberDisplayNode", undefined);
          __decorate([f(cc.Node)], y.prototype, "greyNumberDisplayNode", undefined);
          __decorate([f(cc.Sprite)], y.prototype, "backgroundSprite", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, {}],
    'PayOutEffectController': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "099ab3FAXlCS6JRUtR13wsh", "PayOutEffectController")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.payOutItemNode = undefined;
            A.qu = undefined;
            A.Ku = undefined;
            return A;
          }
          __extends(J, f);
          J.prototype.init = function (A) {
            this.qu = A;
            this.Ku = this.payOutItemNode.getComponent("PayOutItem");
            this.Ku.init();
          };
          J.prototype.destroy = function () {
            this.Ku = undefined;
            this.qu = undefined;
            return f.prototype.destroy.call(this);
          };
          J.prototype.play = function (A, y, b) {
            var u = this.Qu(A);
            var k = this.node.convertToNodeSpaceAR(u);
            this.payOutItemNode.setPosition(k);
            this.Ku.setup(y);
            this.Ku.play();
            if (b) {
              b();
            }
          };
          J.prototype.stop = function () {
            this.Ku.stop();
          };
          J.prototype.Qu = function (A) {
            var y = A[0x1];
            var b = this.qu.getSlotItemWorldPosition([y])[0x0];
            var u = cc.v2(b.x, b.y);
            if (0x5 === y) {
              u = cc.v2(b.x, b.y + 0x41);
            }
            return u;
          };
          __decorate([q(cc.Node)], J.prototype, "payOutItemNode", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'PayOutItem': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "2c10b5izwFC+pBQLe/G4U1m", "PayOutItem")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.winAmountDisplayNode = undefined;
            A.winAmountBackgroundNode = undefined;
            A.Yu = undefined;
            return A;
          }
          __extends(J, f);
          J.prototype.init = function () {
            this.Yu = this.winAmountDisplayNode.getComponent("NumberDisplayController");
            this.node.active = false;
          };
          J.prototype.destroy = function () {
            this.Yu = undefined;
            return f.prototype.destroy.call(this);
          };
          J.prototype.setup = function (A) {
            this.Yu.clear();
            this.Yu.displayNumber(A);
            var y = A.toFixed(0x2).length - 0x6;
            if (y > 0x0) {
              var b = 0.15 * y;
              this.winAmountBackgroundNode.scaleX = 0x1 + b;
            } else {
              this.winAmountBackgroundNode.scaleX = 0x1;
            }
          };
          J.prototype.play = function () {
            this.node.active = true;
          };
          J.prototype.stop = function () {
            this.node.active = false;
          };
          __decorate([q(cc.Node)], J.prototype, "winAmountDisplayNode", undefined);
          __decorate([q(cc.Node)], J.prototype, "winAmountBackgroundNode", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'PaySelectEffectController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "e2f7cLFCHFFprer2z6wff9/", "PaySelectEffectController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = B("SlotProperties");
        var N = B("GConstants");
        var J = B("SpineConfigHandler");
        var A = B("AudioManager");
        var y = B("GeneralAudioConstant");
        var b = cc._decorator;
        var k = b.ccclass;
        var D = b.property;
        var x = function (G) {
          function Y() {
            var m = null !== G && G.apply(this, arguments) || this;
            m.paySelectItemPrefab = undefined;
            m.paySelectItemHolderNode = undefined;
            m.Xu = new cc.NodePool("PaySelectItem");
            m.Zu = [];
            m.$u = undefined;
            m.tl = undefined;
            m.il = undefined;
            m.qu = undefined;
            m.sl = undefined;
            m.el = undefined;
            m.nl = undefined;
            return m;
          }
          __extends(Y, G);
          Y.prototype.init = function (m, W, F, E) {
            this.qu = m;
            this.$u = W;
            this.il = F;
            this.tl = E;
            this.ol(q.NO_OF_SLOT_ITEMS);
          };
          Y.prototype.destroy = function () {
            this.qu = undefined;
            this.$u = undefined;
            this.il = undefined;
            this.tl = undefined;
            this.Zu = undefined;
            this.Xu.clear();
            return G.prototype.destroy.call(this);
          };
          Y.prototype.playAllLines = function (m, W, F, E) {
            this.node.opacity = 0xff;
            this.cl();
            this.hl();
            this.il.disable();
            var v = m.winPositions;
            v.forEach(function (X, V) {
              v[V] = parseInt(X, 0xa);
            });
            var I = q.getFilteredWinPositions(m);
            var w = W ? N.PAY_SELECT_TIMING.ALL_LINE_ONE_BY_ONE_INTERVAL : 0x0;
            var j = E;
            var Z = N.PAY_SELECT_TIMING.PLAY_ALL_LINE_DURATION;
            if (Z > 0x0) {
              j = undefined;
              S.delayCallback(Z)(j);
            }
            this.al(v, I, W, w, F, j);
          };
          Y.prototype.playAlternateLines = function (m, W) {
            var F = this;
            this.node.opacity = 0xff;
            var E = m.winPositions;
            var v = N.PAY_SELECT_TIMING.PLAY_ALTERNATE_LINE_DURATION;
            var I = N.PAY_SELECT_TIMING.ALTERNATE_LINE_ONE_BY_ONE_INTERVAL;
            var w = N.PAY_SELECT_TIMING.ALL_LINE_ONE_BY_ONE_INTERVAL;
            var j = 0x0;
            var Z = function () {
              F.cl();
              F.hl();
              F.il.disable();
              var X;
              var V;
              var H;
              var z;
              var P = y.GENERAL_AUDIO.prizePayoutIdle.key;
              A.stopAudioIfPlaying(P);
              A.playAudioIfNotPlaying(P);
              if (j === E.length) {
                X = q.getFilteredWinPositions(m);
                V = true;
                H = w;
                z = E;
                j = 0x0;
              } else {
                X = m.getWinLinesByPosition(E[j]);
                V = true;
                H = I;
                var p = W.getWinValueByPosition(E[j]);
                F.$u.play(X, p);
                z = [E[j]];
                j++;
              }
              z.forEach(function (O, L) {
                z[L] = parseInt(O, 0xa);
              });
              F.al(z, X, V, H, false, undefined);
            };
            this.unscheduleDelayPlayAlternateLine = S.delayCallback(N.PAY_SELECT_TIMING.ALTERNATE_LINE_DELAY_TIME)(function () {
              F.unscheduleDelayPlayAlternateLine = undefined;
              Z();
              F.schedule(Z, v, undefined, 0x0);
            });
          };
          Y.prototype.stopPaySelect = function (m) {
            if (undefined === m) {
              m = true;
            }
            this.cl();
            this.hl();
            if (m) {
              this.il.idle();
            }
            this.unscheduleAllCallbacks();
            var W = this.unscheduleDelayPlayAlternateLine;
            this.unscheduleDelayPlayAlternateLine = undefined;
            if (W) {
              W();
            }
          };
          Y.prototype.show = function () {
            this.node.opacity = 0xff;
          };
          Y.prototype.hide = function (m) {
            this.unscheduleAllCallbacks();
            var W = this.unscheduleDelayPlayAlternateLine;
            this.unscheduleDelayPlayAlternateLine = undefined;
            if (W) {
              W();
            }
            this.node.runAction(cc.sequence(cc.fadeOut(0.1), cc.callFunc(function () {
              if (m) {
                m();
              }
            })));
          };
          Y.prototype.al = function (m, W, F, E, v, I) {
            var w = this;
            this.Zu = [];
            var j = q.sortReelIndex(W);
            var Z = this.qu.getSlotItem(j);
            var X = 0x0;
            var V = function () {
              if (X === Z.length - 0x1) {
                if (I) {
                  I();
                }
              } else {
                X++;
              }
            };
            this.tl.show(W, m, v);
            this.il.show(m);
            Z.forEach(function (H, z) {
              var P = H.symbolIndex;
              var p = j[z];
              q.getColumnFromIndex(p);
              var O = H.worldPosition;
              var L = H.node.zIndex;
              var U = w.paySelectItemHolderNode.convertToNodeSpaceAR(O);
              var T = w.ul();
              var g = T.getComponent("PaySelectItem");
              var h0 = J.spineConfigHandler.getNormalSymbolSpine(P);
              T.setPosition(U);
              T.zIndex = L;
              w.paySelectItemHolderNode.addChild(T);
              w.Zu.push(g);
              T.active = false;
              g.setup(h0, H);
              g.play(0x0, v, V);
            });
          };
          Y.prototype.cl = function () {
            var m = this;
            if (this.el) {
              this.el();
            }
            this.el = undefined;
            this.Zu.forEach(function (W) {
              m.ll(W.node);
            });
          };
          Y.prototype.hl = function () {
            this.$u.stop();
            this.tl.hide();
          };
          Y.prototype.ol = function (m) {
            for (var W = 0x0; W < m; W++) {
              this.Xu.put(cc.instantiate(this.paySelectItemPrefab));
            }
          };
          Y.prototype.ul = function () {
            return this.Xu.size() > 0x0 ? this.Xu.get() : cc.instantiate(this.paySelectItemPrefab);
          };
          Y.prototype.ll = function (m) {
            this.Xu.put(m);
          };
          __decorate([D(cc.Prefab)], Y.prototype, "paySelectItemPrefab", undefined);
          __decorate([D(cc.Node)], Y.prototype, "paySelectItemHolderNode", undefined);
          return __decorate([k], Y);
        }(cc.Component);
        C["default"] = x;
        cc._RF.pop();
      }
    }, Rt],
    'PaySelectItem': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "9f6dfKNzXBHb5TYrbsh+sWw", "PaySelectItem")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = B("GConstants");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var u = null !== y && y.apply(this, arguments) || this;
            u.payoutSpine = undefined;
            u.particle = undefined;
            u.fl = undefined;
            u.dl = undefined;
            u.vl = undefined;
            return u;
          }
          __extends(b, y);
          b.prototype.unuse = function () {
            if (this.fl && this.vl) {
              this.fl.visible = true;
            }
            this.fl = undefined;
            if (this.dl) {
              this.dl();
            }
            this.payoutSpine.clearTracks();
            this.payoutSpine.setToSetupPose();
            this.node.active = false;
          };
          b.prototype.setup = function (u, k, D) {
            if (undefined === D) {
              D = true;
            }
            this.fl = k;
            this.vl = D;
            this.payoutSpine.skeletonData = u;
          };
          b.prototype.play = function (u, k, D) {
            var x = this;
            this.particle.stop();
            this.particle.setCurrentTime(0x0);
            this.particle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            var G = function () {
              if (D) {
                D();
              }
            };
            var Y = function () {
              if (x.fl) {
                x.fl.visible = false;
              }
              x.node.active = true;
              x.payoutSpine.clearTracks();
              x.payoutSpine.setToSetupPose();
              x.particle.play();
              x.payoutSpine.timeScale = k ? 0x1 + q.TURBO_SPIN_SPEEDUP_FACTOR : 0x1;
              var m = x.payoutSpine.setAnimation(0x0, "win", false);
              x.payoutSpine.addAnimation(0x0, "idle", true);
              var W = k ? m.animation.duration * (0x1 - q.TURBO_SPIN_SPEEDUP_FACTOR) : m.animation.duration;
              x.payoutSpine.addAnimation(0x0, "win_idle", true, 0x0);
              S.delayCallback(W)(G);
            };
            if (u > 0x0) {
              this.dl = S.delayCallback(u)(Y);
            } else {
              Y();
            }
          };
          b.prototype._l = function (u) {
            return {
              'pl': u,
              'easing': function (k) {
                return 0x0 === k || 0x1 === k ? k : Math.pow(0x2, -0x14 * k) * Math.sin((k - this.pl / 0x4) * Math.PI * 0x2 / this.pl) + 0x1;
              },
              'reverse': function () {
                return cc.easeElasticIn(this.pl);
              }
            };
          };
          b.prototype.destroy = function () {
            this.node.destroy();
            y.prototype.destroy.call(this);
          };
          __decorate([J(sp.Skeleton)], b.prototype, "payoutSpine", undefined);
          __decorate([J(cc.Animation)], b.prototype, "particle", undefined);
          return __decorate([f], b);
        }(cc.Component);
        C["default"] = A;
        cc._RF.pop();
      }
    }, Rj],
    'PlayerModel': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "a0229IKmbpNBb61dHEQilWX", "PlayerModel")) {
        var B = System.get("bvframework").PlayerModel;
        M.exports["default"] = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'PopOutItemHandler': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "ed9375KsD1NcYjBhMUREze+", "PopOutItemHandler")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator.ccclass;
        var S = function () {
          function q() {
            this.zi = undefined;
            this.bl = undefined;
            this.Sl = undefined;
            this.gl = undefined;
            this.Cl = undefined;
          }
          q.prototype.init = function (N, f) {
            var o = cc.instantiate(N);
            f.addChild(o);
            this.gl = o;
            this.Cl = o.getComponent("PopOutItem");
            this.bl = this.Cl.show.bind(this.Cl);
            this.Sl = this.Cl.hide.bind(this.Cl);
            o.active = false;
          };
          q.prototype.getPopoutItem = function () {
            return this.gl;
          };
          q.prototype.setCancelCallback = function (N) {
            this.zi = N;
          };
          q.prototype.yl = function () {
            var N = this.zi;
            if (N) {
              N();
            }
          };
          q.prototype.destroy = function () {
            this.node.destroy();
            _super.prototype.destroy.call(this);
          };
          q.prototype.setPopoutItemShowCallback = function (N) {
            this.bl = N;
          };
          q.prototype.runPopoutItemShowCallback = function (N, f, J, A, y, b, u, k, D) {
            this.gl.active = true;
            this.gl.on(cc.Node.EventType.TOUCH_END, this.yl, this);
            this.Cl.setCancelCallback(this.yl.bind(this));
            if (this.bl) {
              this.bl(N, f, J, A, y, b, u, k, D);
            }
          };
          q.prototype.setPopoutItemHideCallback = function (N) {
            this.Sl = N;
          };
          q.prototype.runPopoutItemHideCallback = function () {
            var N = this;
            if (this.Sl) {
              this.Sl(function () {
                N.gl.off(cc.Node.EventType.TOUCH_END, N.yl, N);
                N.gl.active = false;
              });
            }
          };
          return __decorate([K], q);
        }();
        Q["default"] = S;
        cc._RF.pop();
      }
    }, {}],
    'PopOutItem': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "5beaedmutZIkKPi8z2EJ82d", "PopOutItem")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        K.property;
        var q = function (N) {
          function f() {
            return null !== N && N.apply(this, arguments) || this;
          }
          __extends(f, N);
          f.prototype.show = function (J, A, y, b, u, k, D, x, G) {
            this.showItem(J, A, y, b, u, k, D, x, G);
          };
          f.prototype.hide = function () {
            this.hideItem();
          };
          f.prototype.showItem = function (J, A, y, c, b) {
            this.setPayoutValue(c, A);
            this.node.active = true;
            this.node.setPosition(b);
            if (J) {
              J();
            }
          };
          f.prototype.hideItem = function () {
            this.node.active = false;
          };
          f.prototype.destroy = function () {
            this.node.destroy();
            N.prototype.destroy.call(this);
          };
          f.prototype.setPayoutValue = function (J, A) {
            var y = A[J];
            Object.keys(y).reverse();
          };
          f.prototype.setCancelCallback = function (J) {
            this.Ml = J;
          };
          f.prototype.cancalCallback = function () {
            if (this.Ml) {
              this.Ml();
            }
          };
          return __decorate([S], f);
        }(cc.Component);
        Q["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'PopOutTintController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "58b31+llD1BAb9tUvY4+l2s", "PopOutTintController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = {
          positionX: 0x0,
          positionY: 0x0,
          width: 0x438,
          height: 0x924,
          color: cc.Color.BLACK,
          opacityFadeTo: 0x96,
          defaultOpacity: 0x0,
          fadeInDuration: 0.2,
          fadeOutDuration: 0.2
        };
        var N = cc._decorator.ccclass;
        var f = function (J) {
          function A() {
            var y = null !== J && J.apply(this, arguments) || this;
            y.Al = 0x0;
            y.Il = 0.2;
            y.wl = 0.2;
            return y;
          }
          __extends(A, J);
          A.prototype.unuse = function () {
            this.node.opacity = 0x0;
          };
          A.prototype.reuse = function () {
            this.node.opacity = 0x0;
          };
          A.prototype.setup = function (y) {
            var c = __assign(__assign({}, S), y);
            this.node.setPosition(c.positionX, c.positionY);
            this.node.setContentSize(c.width, c.height);
            this.node.color = c.color;
            this.node.opacity = this.Ol = c.defaultOpacity;
            this.Al = c.opacityFadeTo;
            this.Il = c.fadeInDuration;
            this.wl = c.fadeOutDuration;
          };
          A.prototype.show = function (y) {
            var c = this;
            if (this.Hl) {
              if (y) {
                y();
              }
            } else {
              this.node.stopAllActions();
              this.node.runAction(cc.sequence(cc.fadeTo(this.Il, this.Al), cc.callFunc(function () {
                c.Hl = true;
                if (y) {
                  y();
                }
              })));
            }
          };
          A.prototype.hide = function (y) {
            this.Hl = false;
            this.node.stopAllActions();
            this.node.runAction(cc.sequence(cc.fadeTo(this.wl, this.Ol), cc.callFunc(function () {
              if (y) {
                y();
              }
            })));
          };
          A.prototype.destroy = function () {
            this.node.destroy();
            J.prototype.destroy.call(this);
          };
          return __decorate([N], A);
        }(cc.Component);
        C["default"] = f;
        cc._RF.pop();
      }
    }, {}],
    'Preference': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "f7e90cT1I9BDL45c7FgvgSo", "Preference")) {
        var B = System.get("common").Preference;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'Printer': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "75992e1c0JLNIAsOHARyF2L", "Printer")) {
        var B = System.get("bvframework").Printer;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'PrizeState': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "b8e16tOyU5GT4m5ZQseMAOn", "PrizeState")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        M("TweaksData");
        var K = M("SettingMenuHelper");
        var S = M("Utils");
        var q = M("GameEventHandler");
        var N = function () {
          function f(J, A, y, b) {
            this.name = "Prize State";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.finalCallback = undefined;
            this.Bl = undefined;
            this.dataSource = J;
            this.generalControllers = A.generalControllers;
            this.finalCallback = y;
            if (b) {
              this.Bl = b;
            }
          }
          f.prototype.setAvailableActions = function () {};
          f.prototype.clearAvailableActions = function () {};
          f.prototype.renderPrize = function () {
            S.spawnCallback(this.renderLines.bind(this), this.playPrize.bind(this))(this.exitState.bind(this));
          };
          f.prototype.renderLines = function (J) {
            if (this.dataSource.transactionModel.winLines) {
              this.playAllLines(J);
            } else if (J) {
              J();
            }
          };
          f.prototype.playAllLines = function (J) {
            var A = this.dataSource.transactionModel;
            this.generalControllers.paySelectEffectController.playAllLines(A.winLines, A.reels, J, true);
          };
          f.prototype.playPrize = function (J) {
            var A = this;
            var y = this.dataSource.transactionModel.totalWinAmount;
            var b = this.getWinThresholds();
            var k = {
              displayState: "Start",
              effectType: "BigWin"
            };
            if (b.bigWinThreshold && y >= b.bigWinThreshold) {
              q.emitGameEffectStateChangedEvent(k);
              this.runBigPrizeState(y, function () {
                var r = {
                  displayState: "End",
                  effectType: "BigWin"
                };
                q.emitGameEffectStateChangedEvent(r);
                A.winAnnouncement("BigWin", J)();
              });
            } else if (b.mediumWinThreshold && y >= b.mediumWinThreshold) {
              this.runMediumPrizeState(y, this.winAnnouncement("MediumWin", J));
            } else if (y > 0x0) {
              this.runSmallPrizeState(y, this.winAnnouncement("SmallWin", J));
            } else {
              var D = this.dataSource.playerModel.balance;
              K.settingMenuHelper.setBalance(D);
              if (J) {
                J();
              }
            }
          };
          f.prototype.exitState = function () {
            if (this.Bl && this.Bl.clearAvailableActions) {
              this.Bl.clearAvailableActions();
            }
            this.clearAvailableActions();
            this.preExitStateCleanup();
            var J = this.finalCallback;
            this.finalCallback = undefined;
            this.destroy();
            S.deferCallback(true)(function () {
              S.deferCallback(true)(J);
            });
          };
          f.prototype.preExitStateCleanup = function () {};
          f.prototype.additionalDestroyCleanups = function () {};
          f.prototype.run = function () {
            if (this.Bl && this.Bl.setAvailableActions) {
              this.Bl.setAvailableActions();
            }
            this.setAvailableActions();
            this.renderPrize();
          };
          f.prototype.destroy = function () {
            this.dataSource = undefined;
            this.finalCallback = undefined;
            this.generalControllers = undefined;
            if (this.Bl) {
              this.Bl.destroy();
              this.Bl = undefined;
            }
            this.additionalDestroyCleanups();
          };
          f.prototype.winAnnouncement = function (J, A) {
            return function () {
              if (A) {
                A();
              }
            };
          };
          f.prototype.getWinThresholds = function () {
            var J = this.dataSource.systemModel;
            var A = J.maxLineNumber;
            var y = J.winThresholds;
            var b = this.dataSource.transactionModel;
            var u = b.betSizeValue;
            var k = b.betLevelValue;
            return y.getAllThresholds(u, k, A);
          };
          f.prototype.runBigPrizeState = function (J, A) {
            if (A) {
              A();
            }
          };
          f.prototype.runMediumPrizeState = function (J, A) {
            if (A) {
              A();
            }
          };
          return f;
        }();
        Q["default"] = N;
        cc._RF.pop();
      }
    }, RZ],
    'QuitGameWithEvent': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "810d7ZWlFFHNJtnMN8hmalR", "QuitGameWithEvent")) {
        var B = System.get("bvframework").QuitGameWithEvent;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'QuitGame': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "d5fa8VRcgJD0a9wBWcZ0zoO", "QuitGame")) {
        var B = System.get("bvframework").QuitGame;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'RefreshWorldHandler': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "0ba58fxYb1OnKR6fFDkRBO6", "RefreshWorldHandler")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("WalletHelper");
        var q = B("SettingMenuHelper");
        var N = B("Utils");
        var f = B("RequestHandler");
        var J = function () {
          function A(y, b, u) {
            if (undefined === u) {
              u = false;
            }
            this.ci = undefined;
            this.Gl = undefined;
            this.Nl = false;
            this.ci = y;
            this.Gl = b;
            this.Nl = u;
          }
          A.prototype.refreshWorldByChangeWalletIdle = function (y) {
            N.sequenceCallback(this.zs(), this.Js(), this.qs(), this.Ks(), this.Tl(), this.Qs(), this.Pl(), this.Ys())(function () {
              if (y) {
                y();
              }
            });
          };
          A.prototype.refreshWorldByBetOptionsIdle = function (y) {
            N.sequenceCallback(this.zs(), this.Ll(), this.Tl(), this.Qs(), this.Rl(q.settingMenuHelper.betSizeValue, q.settingMenuHelper.betLevelValue), this.Js(), this.Ks(), this.Pl(), this.El(), this.Ys())(function () {
              if (y) {
                y();
              }
            });
          };
          A.prototype.refreshWorldByBetOptionsPreIdle = function (y) {
            N.sequenceCallback(this.zs(), this.Ll(), this.Tl(), this.Qs(), this.Rl(q.settingMenuHelper.betSizeValue, q.settingMenuHelper.betLevelValue), this.Js(), this.Ks(), this.Pl(), this.El())(function () {
              if (y) {
                y();
              }
            });
          };
          A.prototype.refreshWorldByFeatureMode = function (y) {
            N.sequenceCallback(this.zs(), this.Js(), this.Ks(), this.Tl(), this.Qs(), this.kl(), this.Ul(), this.Pl())(function () {
              if (y) {
                y();
              }
            });
          };
          A.prototype.Qs = function () {
            return N.deferCallback();
          };
          A.prototype.Ks = function () {
            var y = this;
            return function (b) {
              var u = y.ci.lastTransactionRawData;
              var k = y.ci.transactionModel.accumulatedWinAmount;
              var D = y.ci.playerModel.balance;
              S.walletHelper.setupWallet(u);
              q.settingMenuHelper.setBalance(D);
              q.settingMenuHelper.setWinAmount(k);
              if (b) {
                b();
              }
            };
          };
          A.prototype.qs = function () {
            var y = this;
            return function (b) {
              if (q.settingMenuHelper.reevaluateBet()) {
                if (y.Nl) {
                  y.jl(b);
                } else {
                  q.settingMenuHelper.updateBetValues();
                  b();
                }
              } else {
                b();
              }
            };
          };
          A.prototype.Js = function () {
            var y = this;
            return function (b) {
              var u = y.ci.systemModel;
              var k = u.betSizeList;
              var D = u.betLevelList;
              var x = y.ci.transactionModel;
              var G = x.betLevelValue;
              var Y = x.betSizeValue;
              q.settingMenuHelper.betSizeList = k;
              q.settingMenuHelper.betSizeValue = Y;
              q.settingMenuHelper.betLevelList = D;
              q.settingMenuHelper.betLevelValue = G;
              q.settingMenuHelper.updateBetValues();
              if (b) {
                b();
              }
            };
          };
          A.prototype.Rl = function (y, b) {
            var u = this;
            return function (k) {
              var D = {
                'cs': y,
                'ml': b
              };
              u.Dl(D, k);
            };
          };
          A.prototype.Tl = function () {
            var y = this;
            return function (b) {
              y.cleanup();
              if (b) {
                b();
              }
            };
          };
          A.prototype.Ys = function () {
            var y = this;
            return function (b) {
              y.enableSpinButton();
              if (b) {
                b();
              }
            };
          };
          A.prototype.zs = function () {
            var y = this;
            return function (b) {
              y.disableSpinButton();
              if (b) {
                b();
              }
            };
          };
          A.prototype.El = function () {
            var y = this;
            return function (b) {
              y.hideLoadingPage(b);
            };
          };
          A.prototype.Ll = function () {
            var y = this;
            return function (b) {
              y.showLoadingPage(b);
            };
          };
          A.prototype.Pl = function () {
            var y = this;
            return function (b) {
              y.setupNewWorld(b);
            };
          };
          A.prototype.kl = function () {
            var y = this;
            return function (b) {
              y.releaseResource(b);
            };
          };
          A.prototype.Ul = function () {
            var y = this;
            return function (b) {
              y.loadResource(b);
            };
          };
          A.prototype.Dl = function (y, b) {
            f.doAPIRequest({
              'name': "Update Game Info",
              'apiRequest': this.Gl.updateGameInfo.bind(this.Gl),
              'apiRequestParam': y
            }, function (u, k) {
              if (k && k.dt && b) {
                b();
              }
            });
          };
          A.prototype.jl = function (y) {
            N.sequenceCallback(this.Rl(q.settingMenuHelper.betSizeValue, q.settingMenuHelper.betLevelValue), this.Js())(y);
          };
          return A;
        }();
        C["default"] = J;
        cc._RF.pop();
      }
    }, RX],
    'RegionUtils': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "478c5ZURp1N1Ide2QVm+Hgx", "RegionUtils")) {
        var B = System.get("bvframework").RegionUtils;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'ReplayModeHandler': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "10cedajpphPS4PRVhRvT3S5", "ReplayModeHandler")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.fmReplayModeHandler = undefined;
        var S = B("TransactionStateMachineHandler");
        var q = B("Utils");
        var N = B("SpaceBarInterrupter");
        var f = function () {
          function A() {
            this.Wl = false;
            this.xl = false;
          }
          A.prototype.startReplay = function () {
            S.cacheTransitionCallback();
            S.clearTransition();
            N.spaceBarInterrupter.pause();
            this.xl = true;
          };
          A.prototype.completeReplay = function () {
            this.Wl = true;
          };
          A.prototype.stopReplay = function (y) {
            q.deferCallback(this)(function () {
              S.retrieveTransitionCallback();
              if (y) {
                y();
              }
            });
          };
          A.prototype.endReplay = function () {
            this.xl = false;
            this.Wl = false;
            N.spaceBarInterrupter.resume();
          };
          A.prototype.replayStarted = function () {
            return this.xl;
          };
          A.prototype.replayCompleted = function () {
            return this.Wl;
          };
          return A;
        }();
        C["default"] = f;
        var J = new f();
        C.fmReplayModeHandler = J;
        cc._RF.pop();
      }
    }, RV],
    'RequestHandler': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "d74abPCXkJA5YnU3Ax3A+KB", "RequestHandler")) {
        var B = System.get("bvframework").RequestHandler;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'ResRC': [function (M, B) {
      'use strict';

      if (!cc._RF.push(B, "741a8m7jWlDQowhgiMh2U/V", "ResRC")) {
        var Q = {
          unloadBundleAsset: "releaseBundleAsset",
          unload: "release",
          unloadBundle: "releaseBundle",
          deleteBundle: "removeBundle",
          loadByBundleAsset: "loadBundleAsset",
          loadRemoteBySingle: "loadRemoteSingle"
        };
        var C = function (S, q) {
          var N = {};
          for (var f in q) if (S.hasOwnProperty(f)) {
            N[S[f]] = q[f];
          } else {
            N[f] = q[f];
          }
          return N;
        }(Q, System.get("common").ResRC);
        for (var K in C) if (C.hasOwnProperty(K)) {
          B.exports[K] = C[K];
        }
        B.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'ResourceLoader': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "517d1jsi4lLyboQPLjM/Od/", "ResourceLoader")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.LoaderType = undefined;
        var S;
        var q = B("RetryHandler");
        var N = B("ResRC");
        var f = B("ResourceQualifierHelper");
        (function (A) {
          A[A.CUSTOM = -0x1] = "CUSTOM";
        })(S = C.LoaderType || (C.LoaderType = {}));
        var J = function () {
          function A() {
            this.Fl = new q["default"]();
          }
          A.prototype.loadAsset = function (y) {
            return y.type === S.CUSTOM ? this.Vl(y) : this.zl(y);
          };
          A.prototype.releaseAsset = function (y) {
            return y.type === S.CUSTOM ? this.Jl(y) : this.ql(y);
          };
          A.prototype.loadBundle = function (y) {
            var b = this;
            var u = this.Fl;
            var k = y.bundle;
            var D = y.retryMessage;
            var r = y.retryHandling;
            var x = y.retryingCallback;
            var G = y.progressCallback;
            return new Promise(function (Y) {
              var m = 0x0;
              var W = k.length;
              var F = k.slice();
              var E = k.slice();
              var I = [];
              var w = Object.create(null);
              u.init(D, function () {
                F = I.slice();
                E = I.slice();
                I = [];
                Z();
              });
              var j = function () {
                if (0x0 === E.length) {
                  if (0x0 === I.length) {
                    return void Y(w);
                  }
                  if (I.length > 0x0) {
                    if (u.canRetry()) {
                      x(u.getRetryCount());
                      u.execute();
                    } else {
                      r(u.execute.bind(u), w, I, u.getRetryCount());
                    }
                  }
                }
              };
              var Z = function () {
                F.forEach(function (X) {
                  b.loadAsset(X).then(function (V) {
                    m++;
                    var H = V.config.name;
                    w[H];
                    w[H] = V;
                    E.splice(E.indexOf(X), 0x1);
                    G(m, W);
                    j();
                  })["catch"](function () {
                    I.push(X);
                    E.splice(E.indexOf(X), 0x1);
                    j();
                  });
                });
              };
              Z();
            });
          };
          A.prototype.releaseBundle = function (y) {
            var b = this;
            var u = [];
            y.forEach(function (k) {
              u.push(b.releaseAsset(k));
            });
            return new Promise(function (k) {
              Promise.all(u).then(function (D) {
                var r = Object.create(null);
                D.forEach(function (x) {
                  r[x.config.name] = x;
                });
                k(r);
              });
            });
          };
          A.prototype.zl = function (y) {
            return new Promise(function (b, u) {
              var k = y.isLocalized ? f.getResourceURL(y.url) : y.url;
              N.load(k, y.type, function (D, r) {
                var x = {
                  config: y,
                  result: r
                };
                if (D) {
                  u(D);
                } else {
                  b(x);
                }
              });
            });
          };
          A.prototype.Vl = function (y) {
            return new Promise(function (b, u) {
              y.loadFunc(function (k) {
                var D = {
                  config: y,
                  result: k
                };
                b(D);
              }, function (k) {
                u(k);
              });
            });
          };
          A.prototype.ql = function (y) {
            return new Promise(function (b) {
              var u = y.isLocalized ? f.getResourceURL(y.url) : y.url;
              N.release(u, y.type);
              b({
                'config': y
              });
            });
          };
          A.prototype.Jl = function (y) {
            return new Promise(function (b) {
              if (y.releaseFunc) {
                new Promise(y.releaseFunc).then(function () {
                  var u = {
                    config: y
                  };
                  b(u);
                });
              } else {
                b({
                  'config': y
                });
              }
            });
          };
          return A;
        }();
        C["default"] = J;
        cc._RF.pop();
      }
    }, RH],
    'ResourceQualifierHelper': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "95cabP+u+lNbIwBxruULrww", "ResourceQualifierHelper")) {
        var B = System.get("bvframework").ResourceQualifierHelper;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'RespinReelStatusHandler': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "d93adui3bdMRqlY/gx8HH9d", "RespinReelStatusHandler")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.respinReelStatusHandler = Q.RespinReelStatus = undefined;
        var K;
        var S = M("SlotProperties");
        (function (f) {
          f[f.NORMAL = 0x0] = "NORMAL";
          f[f.GOOD = 0x1] = "GOOD";
          f[f.GREAT = 0x2] = "GREAT";
        })(K = Q.RespinReelStatus || (Q.RespinReelStatus = {}));
        var q = function () {
          function f() {
            this.ci = undefined;
            this.Kl = undefined;
            this.Ql = undefined;
            this.Kl = 0x0;
            this.Ql = 0x0;
          }
          f.prototype.updateRespinReelStatus = function (J) {
            var A = J.transactionModel;
            var y = A.betLevelValue;
            var b = A.betSizeValue;
            var u = A.accumulatedWinAmount;
            var k = A.reels;
            var D = u / (J.systemModel.maxLineNumber * y * b);
            if (k[0x0] === k[0x1] === k[0x2] === S.SLOT_INDEX.WILD) {
              this.Kl = K.GOOD;
              this.Ql = u > 0x0 && D >= 0x14 ? K.GREAT : K.NORMAL;
            } else if (k[0x0] === k[0x1] === k[0x2] === S.SLOT_INDEX.FU) {
              this.Kl = K.GOOD;
              this.Ql = u > 0x0 ? K.GREAT : K.NORMAL;
            } else {
              this.Kl = K.NORMAL;
              this.Ql = u > 0x0 && D >= 0x14 ? K.GOOD : K.NORMAL;
            }
          };
          Object.defineProperty(f.prototype, "leftReelStatus", {
            'get': function () {
              return this.Kl;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(f.prototype, "rightReelStatus", {
            'get': function () {
              return this.Ql;
            },
            'enumerable': false,
            'configurable': true
          });
          return f;
        }();
        Q["default"] = q;
        var N = new q();
        Q.respinReelStatusHandler = N;
        cc._RF.pop();
      }
    }, Rz],
    'RespinUIHelper': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "6078eW/s/VLPI6NLX3ti/oi", "RespinUIHelper")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("GSlotTransactionModel");
        var q = B("BaseUIHelper");
        var N = B("Utils");
        var f = B("AutomationDecorator");
        var J = B("WinLine.spec");
        var A = B("BGMHandler");
        var y = B("GeneralAudioConstant");
        var b = B("AudioManager");
        var k = function (D) {
          function x(G, Y) {
            var m = D.call(this, G, Y) || this;
            m.name = "Respin UI Helper";
            return m;
          }
          __extends(x, D);
          x.prototype.extraPreSpinningCleanup = function (G) {
            var Y = this.dataSource.transactionModel.stateTransitionTo;
            var m = this.generalControllers.slotController;
            if (Y === S.SpinType.RESPIN) {
              m.disableAllSprite();
            }
            if (G) {
              G();
            }
          };
          x.prototype.playAllLines = function (G) {
            var Y = this.dataSource.transactionModel;
            var m = Y.reels;
            var W = Y.featureWinSymbol;
            var F = Y.winLines;
            Y.stateTransitionTo;
            var E = this.generalControllers;
            var v = E.stickyController;
            var I = E.payLineNumberController;
            var w = E.payLineController;
            E.angpaoController;
            var j = function () {
              if (G) {
                G();
              }
            };
            if (W) {
              var Z = F.winPositions;
              Z.forEach(function (X, V) {
                Z[V] = parseInt(X, 0xa);
              });
              I.show(Z);
              w.showLine(Z);
              v.playSticky(m, F, W, j);
            } else {
              j();
            }
          };
          x.prototype.renderFeatureAfterResult = function (G) {
            var Y = this.generalControllers.slotController;
            var m = this.dataSource.transactionModel;
            var W = m.stateTransitionFrom;
            var F = m.stateTransitionTo;
            if (W === S.SpinType.RESPIN && F === S.SpinType.NORMAL) {
              Y.resetHiddenMiddleReel();
            }
            if (G) {
              G();
            }
          };
          x.prototype.extraPlayAllLinesAction = function () {};
          x.prototype.exitRespinTransition = function (G) {
            this.Yl(function () {
              if (G) {
                G();
              }
            });
          };
          x.prototype.Yl = function (G) {
            var Y = this.generalControllers;
            var m = Y.uiShiftController;
            var W = Y.backgroundController;
            var F = Y.backgroundController2;
            var E = Y.tigerController;
            var v = Y.slotController;
            var I = Y.angpaoController;
            A.crossFadePlayRespinBGMtoNormal();
            N.spawnCallback(function (w) {
              m.shiftUp(1.75, w);
            }, function (w) {
              N.delayCallback(0.2)(function () {
                var j = y.GENERAL_AUDIO.featureQuit.key;
                b.stopAudioIfPlaying(j);
                b.playAudioIfNotPlaying(j);
              });
              F.zoomIn();
              E.zoomIn();
              v.zoomIn();
              I.stopRespin();
              W.zoomIn(w);
            }, function (w) {
              E.playNormal(w);
            })(function () {
              if (G) {
                G();
              }
            });
          };
          __decorate([f.automationDec({
            'func': J.winHighlightShown
          })], x.prototype, "playAllLines", null);
          return x;
        }(q["default"]);
        C["default"] = k;
        cc._RF.pop();
      }
    }, Rd],
    'ResultState': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "08d5bAN5GxAf5RE9cTgDCu5", "ResultState")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SlotStateMachine");
        var q = B("SlotAnalyticsHelper");
        var N = B("SlotAnalyticsEnum");
        var f = B("Utils");
        var J = B("SpinConfigHandler");
        var A = function () {
          function y(b, u, k, D) {
            this.name = "Result State";
            this.process = N.SpinStateProcess.REEL_SPINNING;
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.finalCallback = undefined;
            this.hasFeature = undefined;
            this.Bl = undefined;
            this.dataSource = b;
            this.generalControllers = u.generalControllers;
            this.finalCallback = k;
            if (D) {
              this.Bl = D;
              D.triggerFastStop = this.handleSlotRegionFastStop.bind(this);
            }
          }
          y.prototype.setAvailableActions = function () {};
          y.prototype.resultDidStartRender = function (b) {
            if (b) {
              b();
            }
          };
          y.prototype.slotDidStartStopping = function (b) {
            if (b) {
              b();
            }
          };
          y.prototype.invokeSlotStop = function () {
            var b = this.generalControllers.slotController;
            if (b.getStopStyle() === S.StopStyle.FAST) {
              b.fastStop();
            } else {
              b.stopSpin();
            }
          };
          y.prototype.setupFeatureProperties = function () {
            this.hasFeature = false;
          };
          y.prototype.preExitStateCleanup = function () {};
          y.prototype.clearAvailableActions = function () {};
          y.prototype.additionalDestroyCleanups = function () {};
          y.prototype.setSlotData = function () {
            this.generalControllers.slotController.setReelData(this.dataSource.transactionModel.originalReels);
          };
          y.prototype.run = function () {
            this.Xl();
            this.Zl();
          };
          y.prototype.Xl = function () {
            this.$l();
            if (this.Bl && this.Bl.setAvailableActions) {
              this.Bl.setAvailableActions();
            }
            this.setAvailableActions();
          };
          y.prototype.Zl = function () {
            f.sequenceCallback(this.resultDidStartRender.bind(this), this.tf.bind(this), this['if'].bind(this), this.sf.bind(this))(this.Is.bind(this));
          };
          y.prototype.tf = function (b) {
            this.setSlotData();
            f.spawnCallback(this.ef.bind(this), this.slotDidStartStopping.bind(this))(b);
          };
          y.prototype.ef = function (b) {
            if (this.process === N.SpinStateProcess.REEL_SPINNING) {
              this.process = N.SpinStateProcess.REEL_STOPPING;
              this.generalControllers.slotController.setStopCompletedCallback(b);
              this.invokeSlotStop();
            } else if (b) {
              b();
            }
          };
          y.prototype['if'] = function (b) {
            this.setupFeatureProperties();
            if (b) {
              b();
            }
          };
          y.prototype.sf = function (b) {
            var u = this.dataSource.transactionModel.winLines;
            this.process = N.SpinStateProcess.REEL_STOPPED;
            if (this.Bl && this.Bl) {
              this.Bl.renderFeature(u || this.hasFeature);
            }
            this.renderFeature(b);
          };
          y.prototype.Is = function () {
            this.generalControllers.slotController.setOnClickCallback(undefined);
            this.preExitStateCleanup();
            var b = this.finalCallback;
            this.finalCallback = undefined;
            this.destroy();
            f.deferCallback(true)(b);
          };
          y.prototype.destroy = function () {
            this.generalControllers.slotController.setOnClickCallback(undefined);
            if (this.Bl && this.Bl.clearAvailableActions) {
              this.Bl.clearAvailableActions();
            }
            this.clearAvailableActions();
            this.dataSource = undefined;
            this.finalCallback = undefined;
            this.generalControllers = undefined;
            if (this.Bl) {
              this.Bl.destroy();
              this.Bl = undefined;
            }
            this.additionalDestroyCleanups();
          };
          y.prototype.$l = function () {
            var b = this.generalControllers.slotController;
            if (J.featureConfig.fastStopFeature && b.getStopStyle() !== S.StopStyle.FAST) {
              b.setOnClickCallback(this.handleSlotRegionFastStop.bind(this, N.SpinTrigger.CLICK));
            }
          };
          y.prototype.handleSlotRegionFastStop = function (b) {
            var u = this.generalControllers;
            var k = u.slotController;
            switch (this.process) {
              case N.SpinStateProcess.REEL_SPINNING:
                q.sendFastStopGA(b, u.spinButtonController.isAutoSpin());
                if (this.Bl && this.Bl.fastStopTriggeredWhileSpinning) {
                  this.Bl.fastStopTriggeredWhileSpinning();
                }
                this.fastStopTriggeredWhileSpinning();
                k.setOnClickCallback(undefined);
                k.markFastStop();
                break;
              case N.SpinStateProcess.REEL_STOPPING:
                q.sendFastStopGA(b, u.spinButtonController.isAutoSpin());
                if (this.Bl && this.Bl.triggerFastStopWhileStopping) {
                  this.Bl.triggerFastStopWhileStopping();
                }
                this.triggerFastStopWhileStopping();
                k.setOnClickCallback(undefined);
                k.fastStop();
            }
          };
          y.prototype.fastStopTriggeredWhileSpinning = function () {};
          y.prototype.triggerFastStopWhileStopping = function () {};
          return y;
        }();
        C["default"] = A;
        cc._RF.pop();
      }
    }, RP],
    'RetryHandler': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "e77ca51GO5Az7liIm6SBn3P", "RetryHandler")) {
        var B = System.get("bvframework").RetryHandler;
        M.exports["default"] = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'RtConfig': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "7712dgg0/hBbbrh98akcuVw", "RtConfig")) {
        Q.__esModule = true;
        Q.cs_Config = undefined;
        var C = M("LaunchConfig");
        Q.cs_Launch = C.cs_Launch;
        var K = {
          gameId: 126,
          globalDomain: "com.pgsoft",
          bundleId: "com.pgsoft.slot.fortunetiger",
          loginMethod: window.LoginMethod,
          apiDomain: window.ApiDomain,
          version: "2.15.0.3",
          certifiedVersion: "1.0.0.0"
        };
        var S = Object.freeze(K);
        Q.cs_Config = S;
        cc._RF.pop();
      }
    }, Rp],
    'ScrollViewEx': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "4403eAPMfNGO4d5KWMoVrU7", "ScrollViewEx")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.speed = 0x1;
            A.freeCells = [];
            A.snapPause = false;
            A.snapDone = false;
            A.nextAppearTarget = undefined;
            A.snapFinish = undefined;
            A.clickPos = undefined;
            A.clickTarget = undefined;
            A.timer = undefined;
            return A;
          }
          __extends(J, f);
          J.prototype.cellsInsertToParent = function () {
            if (this.freeCells.length) {
              for (var A = 0x0; A < this.content.children.length; A++) {
                if (this.freeCells[A]) {
                  this.freeCells[A].cellNode.parent = this.content.children[A];
                  this.freeCells[A].cellNode.setPosition(cc.v2(0x0, 0x0));
                  this._i(this.freeCells[A].cellNode);
                }
              }
              this.freeCells = [];
            }
            this.snapPause = false;
          };
          J.prototype.cellsPullOutFromParent = function (A) {
            if (!this.freeCells.length) {
              this.snapPause = true;
              this.setSnapDone(true);
              for (var y = 0x0; y < this.content.children.length; y++) {
                var b = this.content.children[y].children[0x0];
                if (b) {
                  this.nf(b);
                  var u = b.parent.convertToWorldSpaceAR(b.getPosition());
                  var k = A.convertToNodeSpaceAR(u);
                  this.freeCells[y] = {
                    'cellNode': b,
                    'position': k,
                    'index': y
                  };
                  this.freeCells[y].cellNode.setPosition(k);
                  this.freeCells[y].cellNode.parent = A;
                }
              }
              return this.freeCells;
            }
          };
          J.prototype.setSnapPause = function (A) {
            this.snapPause = A;
          };
          J.prototype.setSnapDone = function (A) {
            this.snapDone = A;
          };
          J.prototype.isSnapDone = function () {
            return this.snapDone;
          };
          J.prototype.setNextAppearTarget = function (A) {
            this.nextAppearTarget = A;
          };
          J.prototype.setSnapFinish = function (A) {
            this.snapFinish = A;
          };
          J.prototype._i = function (A) {
            A.on(cc.Node.EventType.TOUCH_START, this.cf, this);
            A.on(cc.Node.EventType.TOUCH_END, this.hf, this);
            A.on(cc.Node.EventType.TOUCH_MOVE, this.rf, this);
            A.on(cc.Node.EventType.TOUCH_CANCEL, this.af, this);
          };
          J.prototype.nf = function (A) {
            A.off(cc.Node.EventType.TOUCH_START, this.cf, this);
            A.off(cc.Node.EventType.TOUCH_END, this.hf, this);
            A.off(cc.Node.EventType.TOUCH_MOVE, this.rf, this);
            A.off(cc.Node.EventType.TOUCH_CANCEL, this.af, this);
          };
          J.prototype.cf = function (A) {
            var y = A.touch.getLocation();
            this.clickPos = y;
            this.clickTarget = A.currentTarget;
            this.timer = Date.now();
          };
          J.prototype.rf = function () {};
          J.prototype.hf = function (A) {
            if (this.clickPos) {
              var y = A.touch.getLocation();
              var b = this.clickPos;
              var u = this.timer;
              if (!(this.Mi(b.x, y.x) || this.Mi(b.y, y.y) || !u || Date.now() - u > 0x78)) {
                this.uf();
              }
            }
          };
          J.prototype.af = function (A) {
            if (this.clickPos) {
              var y = A.touch.getLocation();
              var b = this.clickPos;
              var u = this.timer;
              if (!(this.Mi(b.x, y.x) || this.Mi(b.y, y.y) || !u || Date.now() - u > 0x78)) {
                this.uf();
              }
            }
          };
          J.prototype.Mi = function (A, y) {
            return Math.abs(y - A) > 0x64;
          };
          J.prototype.bi = function (A, y, b, u, k) {
            if (undefined === u) {
              u = 0x1;
            }
            D = cc.v2(A, 0x0);
            r = cc.v2(y, 0x0);
            if (D.sub(r).mag() <= 0x1) {
              this.setSnapDone(true);
              if (k) {
                k();
              }
              return y;
            }
            var D;
            var r;
            var x = A + (b *= u) * (y - A);
            if (A >= y) {
              if (x <= y) {
                if (k) {
                  k();
                }
                x = y;
              }
            } else if (x >= y) {
              if (k) {
                k();
              }
              x = y;
            }
            return x;
          };
          J.prototype.uf = function () {
            this.clickTarget = undefined;
            this.timer = undefined;
          };
          __decorate([q(cc.Integer)], J.prototype, "speed", undefined);
          return __decorate([S], J);
        }(cc.ScrollView);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'Serializer': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "0e825vJtv1K6qUCtfPjN7c9", "Serializer")) {
        var B = System.get("common").Serialiser;
        M.exports.Serializer = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'SettingInfoFooterController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "06e65rpYzVNHbDR0e2vljl/", "SettingInfoFooterController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.SettingInfoFooterController = C.ICON_FOOTER_TYPE = C.WALLET_FOOTER_TYPE = undefined;
        var S;
        var q = B("Utils");
        var N = B("UIAppearanceHelper");
        var f = cc._decorator;
        var J = f.ccclass;
        var A = f.property;
        (function (b) {
          b[b.CASH = 0x1] = "CASH";
          b[b.FREE_GAME = 0x2] = "FREE_GAME";
          b[b.BONUS = 0x3] = "BONUS";
          b[b.POINT = 0x4] = "POINT";
        })(S = C.WALLET_FOOTER_TYPE || (C.WALLET_FOOTER_TYPE = {}));
        (function (b) {
          b[b.SPIN = 0x2] = "SPIN";
          b[b.ROLL_OVER = 0x3] = "ROLL_OVER";
        })(C.ICON_FOOTER_TYPE || (C.ICON_FOOTER_TYPE = {}));
        var y = function (b) {
          function u() {
            var k = null !== b && b.apply(this, arguments) || this;
            k.background = undefined;
            k.balanceNode = undefined;
            k.customLeftFooterTitle = undefined;
            k.balanceValueNode = undefined;
            k.rightSlotNode = undefined;
            k.winValueNode = undefined;
            k.winHolderNode = undefined;
            k.winCashIconNode = undefined;
            k.winButton = undefined;
            k.totalWinNode = undefined;
            k.totalWinValueNode = undefined;
            k.freeGamesNode = undefined;
            k.specialIcon = undefined;
            k.freeSpinValue = undefined;
            k.walletButton = undefined;
            k.walletButtonSensor = undefined;
            k.walletNavigateIcon = undefined;
            k.walletNotificationIcon = undefined;
            k.betAmountLabel = undefined;
            k.betOptionsButton = undefined;
            k.betOptionsIcon = undefined;
            k.walletFooterTypeSFList = [];
            k.rewardFooterTypeSFList = [];
            k.maxBetButtonHolder = undefined;
            k.languageSensitiveLayoutList = [];
            k.lf = false;
            k.ff = false;
            k.currentBalance = 0x0;
            k.targetBalance = 0x0;
            k.winBalance = 0x0;
            k.walletNotify = false;
            k.lockWalletButton = false;
            k.lockBetOptionsButton = false;
            k.df = 0x0;
            k.vf = false;
            return k;
          }
          __extends(u, b);
          u.prototype.updateBetAmount = function (k, D) {
            var x = this;
            if (undefined === D) {
              D = 0x0;
            }
            if (this._f) {
              this.betAmountLabel.string = this.mf = this._f;
              this.betAmountLabel.node.stopAllActions();
              var G = 0.5 * D + 1.2;
              this.betAmountLabel.node.runAction(cc.sequence(cc.scaleTo(0.1, G).easing(cc.easeOut(0.2)), cc.callFunc(function () {
                x.betAmountLabel.string = k;
              }), cc.scaleTo(0.2, 0.9), cc.scaleTo(0.1, 1.05), cc.scaleTo(0.1, 0.95), cc.scaleTo(0.1, 0x1)));
              this._f = k;
            } else {
              this.betAmountLabel.string = this.mf = this._f = k;
            }
          };
          Object.defineProperty(u.prototype, "currentBetAmount", {
            'get': function () {
              if (undefined === this.mf || 0x0 === this.mf.length) {
                throw Error("SettingInfoFooterController :: currentBetAmount : Please set legit bet amount by calling updateBetAmount first!");
              }
              return parseFloat(this.mf);
            },
            'enumerable': false,
            'configurable': true
          });
          u.prototype.setOpenBetOptionsMenuCallback = function (k) {
            this.bf = k;
          };
          u.prototype.openBetOptionsMenu = function () {
            if (this.bf) {
              this.bf();
            }
          };
          u.prototype.setBetOptionsButtonLock = function (k) {
            if (undefined === k) {
              k = false;
            }
            this.lockBetOptionsButton = k;
          };
          u.prototype.interactableBetOptionsButton = function (k) {
            this.betOptionsButton.interactable = k;
            if (k) {
              if (undefined === this.Sf) {
                throw Error("SettingInfoFooter :: interactableBetOptionsButton : Please call boot() to setup default label color first!");
              }
              this.betAmountLabel.node.color = this.Sf;
            } else {
              this.betAmountLabel.node.color = cc.Color.WHITE;
            }
          };
          u.prototype.setOpenWinMenuCallback = function (k) {
            this.gf = k;
          };
          u.prototype.openWinMenu = function () {
            if (this.gf) {
              this.gf();
            }
          };
          u.prototype.interactableWinButton = function (k) {
            this.winButton.interactable = k;
            if (k) {
              if (undefined === this.Sf) {
                throw Error("SettingInfoFooter :: interactableWinButton : Please call boot() to setup default label color first!");
              }
              this.winValueNode.color = this.freeSpinValue.node.color = this.Sf;
            } else {
              this.winValueNode.color = this.freeSpinValue.node.color = cc.Color.WHITE;
            }
          };
          u.prototype.setWinIcon = function (k) {
            this.winCashIconNode.spriteFrame = k;
          };
          u.prototype.setWalletNavigateIcon = function (k) {
            switch (k) {
              case S.CASH:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = this.walletFooterTypeSFList[k - 0x1];
                break;
              case S.FREE_GAME:
              case S.BONUS:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = this.walletFooterTypeSFList[k - 0x1];
                this.specialIcon.spriteFrame = this.rewardFooterTypeSFList[k - 0x2];
                break;
              default:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = undefined;
            }
          };
          u.prototype.boot = function () {
            this.Cf = this.balanceValueNode.getComponent("NumberLabelControllerLite");
            this.yf = this.winValueNode.getComponent("NumberLabelControllerLite");
            this.Mf = this.totalWinValueNode.getComponent("NumberLabelControllerLite");
            this.betOptionsButton.normalColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.betOptionsButton.pressedColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.betOptionsButton.hoverColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.betOptionsButton.disabledColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.walletButton.normalColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.walletButton.pressedColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.walletButton.hoverColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.walletButton.disabledColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.winButton.normalColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.winButton.pressedColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.winButton.hoverColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.winButton.disabledColor = N.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.Sf = this.betAmountLabel.node.color;
            this.Cf.skip(0x0);
            this.yf.skip(0x0);
            this.Mf.skip(0x0);
          };
          u.prototype.changeWalletIconColor = function (k) {
            this.walletNavigateIcon.opacity = k ? N.uiAppearanceHelper.v("setting.color_button_transition_a.pressed").a : N.uiAppearanceHelper.v("setting.color_button_transition_a.normal").a;
          };
          u.prototype.showBackground = function (k, D) {
            if (undefined === D) {
              D = 0xe1;
            }
            this.background.active = k;
            this.background.opacity = D;
          };
          u.prototype.setOpenWalletMenuCallback = function (k) {
            this.Af = k;
          };
          u.prototype.setWalletButtonLock = function (k) {
            if (undefined === k) {
              k = false;
            }
            this.lockWalletButton = k;
          };
          u.prototype.interactableWalletButton = function (k) {
            this.walletButton.interactable = k;
            if (k) {
              if (undefined === this.Sf) {
                throw Error("SettingInfoFooter :: interactableWalletButton : Please call boot() to setup default label color first!");
              }
              this.balanceValueNode.color = this.Sf;
            } else {
              this.balanceValueNode.color = cc.Color.WHITE;
            }
          };
          u.prototype.changeWalletButtonColor = function (k) {
            this.walletNavigateIcon.opacity = k ? N.uiAppearanceHelper.v("setting.color_button_transition_a.pressed").a : N.uiAppearanceHelper.v("setting.color_button_transition_a.normal").a;
          };
          u.prototype.showBalanceNode = function (k) {
            this.balanceNode.active = k;
          };
          u.prototype.showTotalWinNode = function (k) {
            this.totalWinNode.active = k;
          };
          u.prototype.showFreeGamesNode = function (k) {
            this.freeGamesNode.active = k;
          };
          u.prototype.activateWalletNotify = function (k) {
            this.walletNotify = k;
            if (true === k) {
              this.walletNotificationIcon.active = k;
              this.walletNotificationIcon.stopAllActions();
              this.walletNotificationIcon.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.5, 1.2), cc.scaleTo(0.5, 0x1))));
            } else {
              this.walletNotificationIcon.stopAllActions();
              this.walletNotificationIcon.active = k;
            }
          };
          u.prototype.openWalletMenu = function () {
            if (this.Af) {
              this.Af();
            }
          };
          u.prototype.changeHolder = function (k) {
            if (!this.If) {
              this.If = k;
            }
            this.node.removeFromParent(false);
            k.addChild(this.node);
          };
          u.prototype.returnHolder = function () {
            if (!this.If) {
              throw Error("SettingInfoFooter :: returnHolder : Do not have parent to return");
            }
            this.node.removeFromParent(false);
            this.If.addChild(this.node);
          };
          u.prototype.showCustomInfoFooter = function () {
            this.lf = true;
            this.freeGamesNode.active = true;
            if (this.lf) {
              this.wf(true);
            }
          };
          u.prototype.hideCustomInfoFooter = function () {
            this.lf = false;
            this.freeGamesNode.active = false;
            this.winHolderNode.active = true;
            var k = this.Of;
            this.Of = undefined;
            if (k) {
              k();
            }
            var D = this.Hf;
            this.Hf = undefined;
            if (D) {
              D();
            }
            this.rightSlotNode.stopAllActions();
            this.rightSlotNode.scale = 0x1;
          };
          u.prototype.isCustomInfoFooter = function () {
            return this.lf;
          };
          u.prototype.updateBalance = function (k, D, x) {
            if (undefined === this.Cf) {
              throw Error("SettingInfoFooter :: updateBalance : Please call boot() to setup balance label controller first!");
            }
            k = this.currentBalance ? this.currentBalance : this.currentBalance = q.isNumeric(D) ? D : 0x0;
            if (q.isNumeric(D)) {
              this.targetBalance = D;
            } else {
              D = this.targetBalance;
            }
            if (D <= k) {
              x = false;
            }
            if (x) {
              this.Cf.play(k, D);
            } else {
              this.Cf.skip(D);
            }
            this.currentBalance = this.targetBalance;
          };
          Object.defineProperty(u.prototype, "currentWinAmount", {
            'get': function () {
              return this.df;
            },
            'enumerable': false,
            'configurable': true
          });
          u.prototype.updateWinAmount = function (k, D, x) {
            if (undefined === x) {
              x = true;
            }
            if (undefined === this.yf) {
              throw Error("SettingInfoFooter :: updateWinAmount : Please call boot() to setup win label controller first!");
            }
            var G = this.df;
            if (q.isNumeric(k)) {
              this.winBalance = k;
            } else {
              k = this.winBalance;
            }
            if (k <= G) {
              D = false;
            }
            if (D) {
              this.yf.play(G, k);
            } else {
              this.yf.skip(k);
            }
            if (this.lf && !this.ff) {
              this.wf(false, x);
            }
            this.df = this.winBalance;
          };
          u.prototype.updateTotalWinAmount = function (k, D) {
            if (undefined === this.Mf) {
              throw Error("SettingInfoFooter :: updateTotalWinAmount : Please call boot() to setup total win label controller first!");
            }
            if (q.isNumeric(k)) {
              this.currentBalance = k;
            } else {
              k = this.currentBalance;
            }
            if (D) {
              this.Mf.play(0x0, k);
            } else {
              this.Mf.skip(k);
            }
          };
          u.prototype.setCustomMiddleInfoFooter = function (k, D) {
            if (undefined === D) {
              D = true;
            }
            this.freeSpinValue.string = k;
            this.ff = !D;
            if (this.lf) {
              this.wf(true, D);
            }
          };
          u.prototype.updateLayout = function (k) {
            this.languageSensitiveLayoutList.forEach(function (D) {
              return D.horizontalDirection = k ? cc.Layout.HorizontalDirection.RIGHT_TO_LEFT : cc.Layout.HorizontalDirection.LEFT_TO_RIGHT;
            });
          };
          u.prototype.wf = function (k, D) {
            if (undefined === D) {
              D = true;
            }
            var x = 0x0;
            if (k) {
              this.winHolderNode.active = false;
              this.freeGamesNode.active = true;
              x = 0x3;
              this.vf = true;
            } else {
              this.winHolderNode.active = true;
              this.freeGamesNode.active = false;
              x = 0x5;
              this.vf = false;
            }
            this.Bf(x, D);
          };
          u.prototype.Bf = function (k, D) {
            if (undefined === D) {
              D = true;
            }
            var x = this.Of;
            this.Of = undefined;
            if (x) {
              x();
            }
            var G = this.Hf;
            this.Hf = undefined;
            if (G) {
              G();
            }
            this.rightSlotNode.stopAllActions();
            this.rightSlotNode.scale = 0x1;
            if (D) {
              this.Of = q.delayCallback(k)(this.Gf.bind(this));
            }
          };
          u.prototype.Gf = function () {
            var k = this;
            this.Of = undefined;
            var D = function () {
              if (k.vf) {
                k.winHolderNode.active = true;
                k.freeGamesNode.active = false;
                k.vf = false;
              } else {
                k.winHolderNode.active = false;
                k.freeGamesNode.active = true;
                k.vf = true;
              }
            };
            this.Hf = q.sequenceCallback(function (x) {
              k.rightSlotNode.runAction(cc.sequence(cc.scaleTo(0.1, 0x1, 0x0), cc.callFunc(D), cc.scaleTo(0.1, 0x1, 0x1), cc.callFunc(function () {
                x();
              })));
            })(function () {
              var x;
              x = k.vf ? 0x3 : 0x5;
              k.Hf = undefined;
              k.Bf(x);
            });
          };
          __decorate([A(cc.Node)], u.prototype, "background", undefined);
          __decorate([A(cc.Node)], u.prototype, "balanceNode", undefined);
          __decorate([A(cc.Label)], u.prototype, "customLeftFooterTitle", undefined);
          __decorate([A(cc.Node)], u.prototype, "balanceValueNode", undefined);
          __decorate([A(cc.Node)], u.prototype, "rightSlotNode", undefined);
          __decorate([A(cc.Node)], u.prototype, "winValueNode", undefined);
          __decorate([A(cc.Node)], u.prototype, "winHolderNode", undefined);
          __decorate([A(cc.Sprite)], u.prototype, "winCashIconNode", undefined);
          __decorate([A(cc.Button)], u.prototype, "winButton", undefined);
          __decorate([A(cc.Node)], u.prototype, "totalWinNode", undefined);
          __decorate([A(cc.Node)], u.prototype, "totalWinValueNode", undefined);
          __decorate([A(cc.Node)], u.prototype, "freeGamesNode", undefined);
          __decorate([A(cc.Sprite)], u.prototype, "specialIcon", undefined);
          __decorate([A(cc.Label)], u.prototype, "freeSpinValue", undefined);
          __decorate([A(cc.Button)], u.prototype, "walletButton", undefined);
          __decorate([A(cc.Node)], u.prototype, "walletButtonSensor", undefined);
          __decorate([A(cc.Node)], u.prototype, "walletNavigateIcon", undefined);
          __decorate([A(cc.Node)], u.prototype, "walletNotificationIcon", undefined);
          __decorate([A(cc.Label)], u.prototype, "betAmountLabel", undefined);
          __decorate([A(cc.Button)], u.prototype, "betOptionsButton", undefined);
          __decorate([A(cc.Node)], u.prototype, "betOptionsIcon", undefined);
          __decorate([A([cc.SpriteFrame])], u.prototype, "walletFooterTypeSFList", undefined);
          __decorate([A([cc.SpriteFrame])], u.prototype, "rewardFooterTypeSFList", undefined);
          __decorate([A(cc.Node)], u.prototype, "maxBetButtonHolder", undefined);
          __decorate([A([cc.Layout])], u.prototype, "languageSensitiveLayoutList", undefined);
          return __decorate([J], u);
        }(cc.Component);
        C.SettingInfoFooterController = y;
        cc._RF.pop();
      }
    }, RO],
    'SettingMenuButtonHelper': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "1ddf5VqGQ9OiqajxiLxeBVw", "SettingMenuButtonHelper")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator.ccclass;
        var S = function () {
          function q() {
            this.Nf = [];
            this.Tf = Object.create(null);
            this.Pf = Object.create(null);
            this.Lf = Object.create(null);
            this.Rf = Object.create(null);
            this.Ef = Object.create(null);
            this.kf = Object.create(null);
          }
          q.prototype.setButtonPrefab = function (N, f, o) {
            this.Tf[N] = f;
            this.kf[N] = o;
          };
          q.prototype.totalButtonsOccupied = function () {
            return this.Nf.length;
          };
          q.prototype.getButtonInList = function (N) {
            return cc.instantiate(this.Tf[N]).getComponent("GenericSettingButton");
          };
          q.prototype.setupSettingMenuButtonInList = function (N, f, o) {
            var J = cc.instantiate(this.Tf[N]);
            var A = J.getComponent("GenericSettingButton");
            this.Nf.push(A.button);
            A.onClick = f;
            this.Lf[N] = false;
            this.Rf[N] = A;
            if (o) {
              J.getComponent("ButtonTheme").colorKey = o;
            }
            return A;
          };
          q.prototype.setupIndependentSettingMenuButton = function (N, f) {
            if (this.Tf[N]) {
              var o = cc.instantiate(this.Tf[N]).getComponent("GenericSettingButton");
              o.onClick = f;
              this.Lf[N] = false;
              this.Rf[N] = o;
              return o;
            }
          };
          q.prototype.setupOtherButtonInList = function (N, f) {
            var o = {
              isInteractable: f
            };
            this.Lf[N] = false;
            this.Ef[N] = o;
            this.kf[N] = false;
          };
          q.prototype.setButtonInteractableFlag = function (N, f) {
            if (undefined === f) {
              f = false;
            }
            this.Pf[N] = f;
          };
          q.prototype.setButtonInteractable = function (N) {
            if (!(this.kf[N] || false !== this.Lf[N])) {
              if (this.Ef[N]) {
                this.Ef[N].isInteractable(this.Pf[N]);
              } else {
                this.Rf[N].isInteractable = this.Pf[N];
              }
            }
          };
          q.prototype.setButtonLock = function (N, f) {
            if (undefined === f) {
              f = false;
            }
            this.Lf[N] = f;
          };
          q.prototype.isButtonLocked = function (N) {
            return this.Lf[N];
          };
          q.prototype.setAllButtonsInteractable = function (N) {
            var f = Object.keys(this.Rf);
            var o = 0x0;
            for (var J = f.length; o < J; o++) {
              this.setButtonInteractableFlag(parseInt(f[o]), N);
              this.setButtonInteractable(parseInt(f[o]));
            }
            var A = Object.keys(this.Ef);
            o = 0x0;
            for (J = A.length; o < J; o++) {
              this.setButtonInteractableFlag(parseInt(A[o]), N);
              this.setButtonInteractable(parseInt(A[o]));
            }
          };
          q.prototype.setButtonsLock = function (N) {
            var f = 0x0;
            for (var o = Object.keys(this.Rf).length; f < o; f++) {
              this.setButtonLock(f + 0x1, N);
            }
            f = 0x0;
            for (o = Object.keys(this.Ef).length; f < o; f++) {
              this.setButtonLock(f + 0x1, N);
            }
          };
          q.prototype.setLockAccess = function (N, f) {
            this.setButtonLock(N, f);
            if (f) {
              if (this.Ef[N]) {
                this.Ef[N].isInteractable(!f);
              } else {
                this.Rf[N].isInteractable = !f;
              }
            } else {
              this.setButtonInteractable(N);
            }
          };
          q.prototype.getButtonNode = function (N) {
            var f = this.Rf[N];
            return f ? f.node : undefined;
          };
          return __decorate([K("SettingMenuButtonHelper")], q);
        }();
        Q["default"] = S;
        cc._RF.pop();
      }
    }, {}],
    'SettingMenuController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "fba916JMWpJiL2n5fnfp4nN", "SettingMenuController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.SettingMenuController = undefined;
        var S = B("CanvasResizeBroadcaster");
        var q = B("HitPassThrough");
        var N = B("Utils");
        var f = B("UIAppearanceHelper");
        var J = B("BVFramework");
        var A = cc._decorator;
        var y = A.ccclass;
        var b = A.property;
        var k = function (D) {
          function x() {
            var G = null !== D && D.apply(this, arguments) || this;
            G.blackTintBackground = undefined;
            G.dimBackground = undefined;
            G.subControllerHolder = undefined;
            G.menusLayerHolder = undefined;
            G.defaultMenuLayerNode = undefined;
            G.moreMenuLayerNode = undefined;
            G.subControllerBG = undefined;
            G.settingInfoFooterFrontHolder = undefined;
            G.settingInfoFooterMiddleBottomHolder = undefined;
            G.settingInfoFooterBottomHolder = undefined;
            G.walletButtonSensor = undefined;
            G.hitPassThroughComponent = undefined;
            G.settingToast = undefined;
            G.settingToastBg = undefined;
            G.settingToastLayout = undefined;
            G.settingToastLabel = undefined;
            G.settingTurboSprite = undefined;
            G.settingTurboOnSprite = undefined;
            G.settingTurboOffSprite = undefined;
            G.featureBuyToast = undefined;
            G.featureBuyToastBg = undefined;
            G.featureBuyToastLayout = undefined;
            G.featureBuyToastLabel = undefined;
            G.featureBuyTurboSprite = undefined;
            G.reminderBoard = undefined;
            G.originalBetAmountLabel = undefined;
            G.reminderBoardLabel = undefined;
            G.holders = [];
            G.muteIcon = undefined;
            G.settingMenuUIBlock = undefined;
            G.Uf = false;
            G.xc = true;
            G.Wc = false;
            G.jf = [];
            G._h = [];
            G.Df = false;
            G.FRONT_MAX_HOLDER = 0x4;
            G.Wf = false;
            G.xf = false;
            G.Ff = 0.2;
            G.Vf = false;
            G.zf = 0x0;
            G.Jf = false;
            return G;
          }
          __extends(x, D);
          x.prototype.onLoad = function () {
            this.settingTurboSprite.node.color = f.uiAppearanceHelper.v("setting.theme_color");
            this.defaultMenuLayerNode.y = 0x0;
            this.settingToast.opacity = 0x0;
            this.featureBuyToast.opacity = 0x0;
            this.moreMenuLayerNode.y = -this.defaultMenuLayerNode.height;
            this.moreMenuLayerNode.opacity = 0x0;
            this.moreMenuLayerNode.active = false;
            this.reminderBoard.active = false;
            this.reminderBoard.opacity = 0x1;
            this.blackTintBackground.active = false;
            this.settingMenuUIBlock.active = false;
            this.subControllerHolder.height = this.jc = cc.view.getVisibleSize().height;
            var G = S["default"].subscribe(this.ui.bind(this));
            this.Dc = "function" == typeof G ? G : undefined;
            this.qf = J.getGameContext();
          };
          x.prototype.ui = function () {
            var G = this;
            var Y = this.Kf;
            this.Kf = undefined;
            if (Y) {
              Y();
            }
            var m = [];
            if (this.Df) {
              m.push(function () {
                var W = cc.view.getVisibleSize().height;
                var F = G.Uc();
                G.subControllerHolder.height = W - F;
                G.subControllerBG.height = W;
              });
            } else {
              m.push(function () {
                if (undefined === G.jc) {
                  throw Error("SettingMenuController :: _onSizeChanged : Please update holder height using updateSubControllerHolderHeight first!");
                }
                var W = G.Uc();
                G.subControllerHolder.height = G.jc;
                G.subControllerBG.height = G.jc + W;
              });
            }
            this.Kf = N.sequenceCallback(N.delayCallback(0x0))(function () {
              G.Kf = undefined;
              for (var W = 0x0; W < m.length; W++) {
                m[W]();
              }
            });
          };
          x.prototype.onDestroy = function () {
            var G = this.Dc;
            this.Dc = undefined;
            if (G) {
              G();
            }
          };
          x.prototype.setBetChangeReminderLabel = function (G) {
            this.reminderBoardLabel.string = G;
          };
          x.prototype.showBetReminderBoard = function (G) {
            if (!this.xf) {
              this.xf = true;
              this.reminderBoard.active = true;
              this.reminderBoard.stopAllActions();
              this.reminderBoard.runAction(cc.fadeIn(0.2));
              this.originalBetAmountLabel.string = G;
            }
          };
          x.prototype.hideBetReminderBoard = function () {
            var G = this;
            if (this.xf) {
              this.xf = false;
              this.reminderBoard.stopAllActions();
              this.reminderBoard.runAction(cc.sequence(cc.fadeOut(0.2), cc.callFunc(function () {
                G.reminderBoard.active = false;
              })));
            }
          };
          x.prototype.isSettingBetReminderBoardShowed = function () {
            return this.xf;
          };
          x.prototype.cancelToChangeBetAmount = function () {
            if (this.Qf) {
              this.Qf();
            }
          };
          x.prototype.confirmToChangeBetAmount = function () {
            if (this.Yf) {
              this.Yf();
            }
          };
          x.prototype.setBetReminderCancelAndConfirmCallback = function (G, Y) {
            this.Qf = G;
            this.Yf = Y;
          };
          x.prototype.showSettingTurboToast = function (G, Y, m) {
            var W = this;
            if (undefined === m) {
              m = 0x2;
            }
            var F = this.Xf;
            this.Xf = undefined;
            if (F) {
              F();
            }
            this.settingToast.stopAllActions();
            if (!F) {
              this.settingToast.opacity = 0x1;
            }
            this.settingToastLabel.string = G;
            this.settingTurboSprite.node.active = true;
            this.settingTurboSprite.spriteFrame = Y ? this.settingTurboOnSprite : this.settingTurboOffSprite;
            this.settingTurboSprite.node.stopAllActions();
            this.settingTurboSprite.node.opacity = 0x0;
            this.Xf = N.delayCallback(0x0)(function () {
              W.settingToastBg.width = W.settingToastLabel.node.width + 0x30 + W.settingTurboSprite.node.width;
              W.settingToastBg.height = W.settingToastLabel.node.height + 0x18;
              W.settingToast.opacity = 0xff;
              W.settingToast.runAction(cc.sequence(cc.scaleTo(0.1, 1.2), cc.spawn(cc.scaleTo(0.1, 0x1), cc.sequence(cc.delayTime(0.05), cc.callFunc(function () {
                W.settingTurboSprite.node.runAction(cc.fadeTo(0.05, 0xff));
              }))), cc.delayTime(m), cc.fadeOut(0.3), cc.callFunc(function () {
                W.Xf = undefined;
              })));
            });
          };
          x.prototype.showSettingToast = function (G, Y) {
            var m = this;
            if (undefined === Y) {
              Y = 0x2;
            }
            var W = this.Xf;
            this.Xf = undefined;
            if (W) {
              W();
            }
            this.settingToast.stopAllActions();
            this.settingTurboSprite.node.stopAllActions();
            this.settingTurboSprite.node.active = false;
            this.settingTurboSprite.node.opacity = 0x0;
            if (!W) {
              this.settingToast.opacity = 0x1;
            }
            this.settingToastLabel.string = G;
            this.Xf = N.delayCallback(0x0)(function () {
              m.settingToastBg.width = m.settingToastLabel.node.width + 0x30;
              m.settingToastBg.height = m.settingToastLabel.node.height + 0x18;
              m.settingToast.opacity = 0xff;
              m.settingToast.runAction(cc.sequence(cc.scaleTo(0.1, 1.2), cc.scaleTo(0.1, 0x1), cc.delayTime(Y), cc.fadeOut(0.3), cc.callFunc(function () {
                m.Xf = undefined;
              })));
            });
          };
          x.prototype.hideSettingToast = function () {
            var G = this;
            var Y = this.Xf;
            this.Xf = undefined;
            if (Y) {
              Y();
            }
            this.settingToast.stopAllActions();
            this.settingToast.runAction(cc.sequence(cc.fadeOut(0.3), cc.callFunc(function () {
              G.Xf = undefined;
            })));
          };
          x.prototype.showFeatureBuyToast = function (G, Y) {
            var m = this;
            if (undefined === Y) {
              Y = 0x2;
            }
            var W = this.Zf;
            this.Zf = undefined;
            if (W) {
              W();
            }
            this.featureBuyToast.stopAllActions();
            this.featureBuyTurboSprite.node.stopAllActions();
            this.featureBuyTurboSprite.node.active = false;
            this.featureBuyTurboSprite.node.opacity = 0x0;
            if (!W) {
              this.featureBuyToast.opacity = 0x1;
            }
            this.featureBuyToastLabel.string = G;
            this.Zf = N.delayCallback(0x0)(function () {
              m.featureBuyToastBg.width = m.featureBuyToastLabel.node.width - 0x32;
              m.featureBuyToastBg.height = m.featureBuyToastLabel.node.height + 0x28;
              m.featureBuyToast.opacity = 0xff;
              m.featureBuyToast.runAction(cc.sequence(cc.scaleTo(0.1, 1.2), cc.scaleTo(0.1, 0x1), cc.delayTime(Y), cc.fadeOut(0.3), cc.callFunc(function () {
                m.Zf = undefined;
              })));
            });
          };
          x.prototype.hideFeatureBuyToast = function () {
            var G = this;
            var Y = this.Zf;
            this.Zf = undefined;
            if (Y) {
              Y();
            }
            this.featureBuyToast.stopAllActions();
            this.featureBuyToast.runAction(cc.sequence(cc.fadeOut(0.3), cc.callFunc(function () {
              G.Zf = undefined;
            })));
          };
          x.prototype.setFeatureBuyToastNodePosition = function (G, Y, m) {
            this.featureBuyToast.setPosition(G, Y, m);
          };
          x.prototype.buttonsHolder = function () {
            return this.holders;
          };
          x.prototype.addMenuItem = function (G) {
            this.holders[this.jf.length].addChild(G);
            this.jf.push(G);
            this.Fc();
            return this.holders[this.jf.length - 0x1];
          };
          x.prototype.addEmptyItem = function () {
            this.jf.push(null);
            this.Fc();
            return this.holders[this.jf.length - 0x1];
          };
          x.prototype.replaceMenuItems = function (G) {
            this.jf.length = 0x0;
            var Y = 0x0;
            for (var m = G.length; Y < m; Y++) {
              this.jf.push(G[Y]);
            }
            this.Fc();
          };
          x.prototype.Fc = function () {
            this._h.length = 0x0;
            var G = 0x0;
            for (var Y = this.jf.length; G < Y; G++) {
              if (this.xc) {
                if (G >= this.FRONT_MAX_HOLDER) {
                  break;
                }
                this._h.push(this.jf[G]);
              } else if (G >= this.FRONT_MAX_HOLDER) {
                this._h.push(this.jf[G]);
              }
            }
          };
          x.prototype.isItemVisible = function (G) {
            return -0x1 !== this._h.indexOf(G);
          };
          x.prototype.visibleItems = function () {
            return this._h.slice();
          };
          x.prototype.getTotalItems = function () {
            return this.jf.slice();
          };
          x.prototype.isIdle = function () {
            return !this.Uf && this.xc;
          };
          x.prototype.isShowingDefaultMenu = function () {
            return this.xc;
          };
          x.prototype.setHitPassThroughPosAndSize = function (G, Y, m, W) {
            var F = this.walletButtonSensor.convertToNodeSpaceAR(cc.v2(G, Y));
            this.hitPassThroughComponent.passPoint = cc.v2(F.x, F.y);
            this.hitPassThroughComponent.passSize = cc.size(m, W);
          };
          x.prototype.setHidden = function (G) {
            this.node.active = !G;
          };
          x.prototype.getSettingInfoFooterFrontHolder = function () {
            return this.settingInfoFooterFrontHolder;
          };
          x.prototype.getSettingInfoFooterBottomHolder = function () {
            return this.settingInfoFooterBottomHolder;
          };
          x.prototype.getSettingInfoFooterMiddleBottomHolder = function () {
            return this.settingInfoFooterMiddleBottomHolder;
          };
          x.prototype.setMenusLayerHolderOffsetPosition = function (G, Y) {
            var m = this.menusLayerHolder;
            m.setPosition(m.x + G, m.y + Y);
          };
          x.prototype.isSwitchingMenuLayer = function () {
            return this.Wc;
          };
          x.prototype.showMoreMenuLayer = function (G) {
            var Y = this;
            if (undefined === G) {
              G = false;
            }
            if (!this.Wc) {
              this.Wc = true;
              this.xc = false;
              this.Fc();
              this.defaultMenuLayerNode.runAction(cc.sequence(cc.spawn(cc.moveTo(0.2, 0x0, -this.defaultMenuLayerNode.height).easing(cc.easeQuadraticActionOut()), cc.fadeOut(0.2)), cc.callFunc(function () {
                Y.defaultMenuLayerNode.active = false;
                Y.Wc = false;
                if (Y.onMenuEndChanged) {
                  Y.onMenuEndChanged();
                }
              })));
              this.moreMenuLayerNode.active = true;
              this.moreMenuLayerNode.runAction(cc.spawn(cc.moveTo(0.2, 0x0, 0x0).easing(cc.easeQuadraticActionOut()), cc.fadeIn(0.2).easing(cc.easeQuadraticActionOut())));
              if (G) {
                this.blackTintBackground.active = true;
                this.blackTintBackground.runAction(cc.fadeTo(0.2, 127.5));
              }
              var m = this.onMenuStartChanged;
              if (m) {
                m(true, true);
              }
            }
          };
          x.prototype.hideMoreMenuLayer = function () {
            var G = this;
            if (!this.Wc) {
              this.Wc = true;
              this.xc = true;
              this.Fc();
              this.defaultMenuLayerNode.active = true;
              this.defaultMenuLayerNode.runAction(cc.sequence(cc.spawn(cc.moveTo(0.2, 0x0, 0x0).easing(cc.easeQuadraticActionOut()), cc.fadeIn(0.2)), cc.callFunc(function () {
                G.Wc = false;
                if (G.onMenuEndChanged) {
                  G.onMenuEndChanged();
                }
              })));
              this.moreMenuLayerNode.runAction(cc.sequence(cc.spawn(cc.moveTo(0.2, 0x0, -this.defaultMenuLayerNode.height).easing(cc.easeQuadraticActionOut()), cc.fadeOut(0.2).easing(cc.easeQuadraticActionOut())), cc.callFunc(function () {
                G.moreMenuLayerNode.active = false;
              })));
              if (true === this.blackTintBackground.active) {
                this.blackTintBackground.runAction(cc.sequence(cc.fadeOut(0.2), cc.callFunc(function () {
                  G.blackTintBackground.active = false;
                })));
              }
              var Y = this.onMenuStartChanged;
              if (Y) {
                Y(false, true);
              }
            }
          };
          x.prototype.isControllerPresenting = function () {
            return this.Uf;
          };
          x.prototype.setIsControllerPresenting = function (G) {
            this.Uf = G;
          };
          x.prototype.setSubControllerHolderMoveDuration = function (G) {
            this.Ff = G;
          };
          x.prototype.Uc = function () {
            return this.node.parent.convertToWorldSpaceAR(cc.v2(this.node.x, this.node.y)).y;
          };
          x.prototype.getGapBetweenBottomScreenValue = function () {
            return this.Uc();
          };
          x.prototype.updateSubControllerHolderHeight = function (G) {
            this.subControllerHolder.height = this.jc = G;
          };
          x.prototype.isPanelTouchMoving = function () {
            return this.Wf;
          };
          x.prototype.startMovePanel = function (G, Y) {
            if (!this.Uf) {
              this.Wf = false;
              this.Vf = false;
              this.subControllerHolder.height = Y;
              this.subControllerHolder.y = -Y;
              this.zf = G;
              this.subControllerBG.height = this.Uc() + Y;
            }
          };
          x.prototype.movePanel = function (G) {
            if (!this.Uf) {
              this.Wf = true;
              var Y = this.subControllerHolder;
              var m = this.subControllerHolder.height;
              var W = Y.parent.convertToNodeSpaceAR(cc.v2(0x0, G)).y;
              var F = Math.abs(this.zf - G);
              if (this.Vf) {
                Y.y = W - m;
                if (Y.y >= 0x0) {
                  Y.y = 0x0;
                }
              } else if (F > 0x3c) {
                if (G > this.zf) {
                  this.Vf = true;
                  this.subControllerBG.opacity = 0xff;
                  if (this.$f) {
                    this.$f();
                  }
                }
              } else {
                Y.y = W - m;
              }
            }
          };
          x.prototype.closePanel = function () {
            var G = this;
            if (!this.Uf) {
              this.Uf = true;
              var Y = this.subControllerHolder.height + this.Uc();
              this.subControllerHolder.runAction(cc.sequence(cc.moveTo(this.Ff, 0x0, -Y), cc.callFunc(function () {
                G.Uf = false;
                G.Wf = false;
                G.subControllerBG.opacity = 0x0;
              })));
            }
          };
          x.prototype.getCurrentPanelTopPositionY = function () {
            var G = this.subControllerHolder;
            return G.y + G.height;
          };
          x.prototype.setWalletButtonLock = function (G) {
            if (undefined === G) {
              G = false;
            }
            this.Jf = G;
          };
          x.prototype.interactableWalletButton = function (G, Y) {
            if (false === this.Jf && !G && Y) {
              this.closePanel();
            }
          };
          x.prototype.setMenuUIBlock = function (G) {
            this.settingMenuUIBlock.active = G;
          };
          x.prototype.updateLayout = function (G) {
            if (G) {
              this.settingToastLayout.horizontalDirection = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT;
            }
          };
          __decorate([b(cc.Node)], x.prototype, "blackTintBackground", undefined);
          __decorate([b(cc.Node)], x.prototype, "dimBackground", undefined);
          __decorate([b(cc.Node)], x.prototype, "subControllerHolder", undefined);
          __decorate([b(cc.Node)], x.prototype, "menusLayerHolder", undefined);
          __decorate([b(cc.Node)], x.prototype, "defaultMenuLayerNode", undefined);
          __decorate([b(cc.Node)], x.prototype, "moreMenuLayerNode", undefined);
          __decorate([b(cc.Node)], x.prototype, "subControllerBG", undefined);
          __decorate([b(cc.Node)], x.prototype, "settingInfoFooterFrontHolder", undefined);
          __decorate([b(cc.Node)], x.prototype, "settingInfoFooterMiddleBottomHolder", undefined);
          __decorate([b(cc.Node)], x.prototype, "settingInfoFooterBottomHolder", undefined);
          __decorate([b(cc.Node)], x.prototype, "walletButtonSensor", undefined);
          __decorate([b(q["default"])], x.prototype, "hitPassThroughComponent", undefined);
          __decorate([b(cc.Node)], x.prototype, "settingToast", undefined);
          __decorate([b(cc.Node)], x.prototype, "settingToastBg", undefined);
          __decorate([b(cc.Layout)], x.prototype, "settingToastLayout", undefined);
          __decorate([b(cc.Label)], x.prototype, "settingToastLabel", undefined);
          __decorate([b(cc.Sprite)], x.prototype, "settingTurboSprite", undefined);
          __decorate([b(cc.SpriteFrame)], x.prototype, "settingTurboOnSprite", undefined);
          __decorate([b(cc.SpriteFrame)], x.prototype, "settingTurboOffSprite", undefined);
          __decorate([b(cc.Node)], x.prototype, "featureBuyToast", undefined);
          __decorate([b(cc.Node)], x.prototype, "featureBuyToastBg", undefined);
          __decorate([b(cc.Layout)], x.prototype, "featureBuyToastLayout", undefined);
          __decorate([b(cc.RichText)], x.prototype, "featureBuyToastLabel", undefined);
          __decorate([b(cc.Sprite)], x.prototype, "featureBuyTurboSprite", undefined);
          __decorate([b(cc.Node)], x.prototype, "reminderBoard", undefined);
          __decorate([b(cc.Label)], x.prototype, "originalBetAmountLabel", undefined);
          __decorate([b(cc.Label)], x.prototype, "reminderBoardLabel", undefined);
          __decorate([b([cc.Node])], x.prototype, "holders", undefined);
          __decorate([b(cc.Node)], x.prototype, "muteIcon", undefined);
          __decorate([b(cc.Node)], x.prototype, "settingMenuUIBlock", undefined);
          return __decorate([y], x);
        }(cc.Component);
        C.SettingMenuController = k;
        cc._RF.pop();
      }
    }, RL],
    'SettingMenuHandlers': [function (Q, C, K) {
      'use strict';

      if (!cc._RF.push(C, "e4a87/dIGtMT5oq5NQEGbT5", "SettingMenuHandlers")) {
        var S = {
          value: true
        };
        Object.defineProperty(K, "__esModule", S);
        K.handleSettingMenuMusicChange = K.handleSettingMenuFlipped = K.additionalBetCalculation = K.updateDataSourceBetValue = K.getBetChangeCallback = K.updateBetChangesCallback = K.initializeSettingMenu = K.setupSettingMenu = undefined;
        var q = {
          settingMenuLibPath: "lib/setting_menu/"
        };
        var N = Q("LaunchConfig");
        var J = Q("AnalyticsHelper");
        var A = Q("QuitGameWithEvent");
        K.setupSettingMenu = function (m) {
          var W = Object.assign({}, q, m.settingMenuDependenciesPath);
          var F = m.settingMenuHelper;
          var E = m.dataSource;
          var v = m.callback;
          F.path = W.settingMenuLibPath;
          F.showChangeBetReminder = m.isProgressiveGame;
          F.manualUpdateBetFactorCallBack = k(E, F, m.betChangeCallback);
          F.betModifierUpdateCallback = b(E, F, m.betChangeCallback);
          F.reevaluateBetCallback = D(E, m.reevaluateBetCallback);
          F.additionalBetCalculationCallback = m.additionalBetCalculation ? m.additionalBetCalculation : x;
          F.changeSoundVolume = Y(m.toggleEffectMuted, m.toggleMusicMuted);
          var I = '1' !== N.cs_Launch.noAudio;
          F.audioConfigure = I;
          if (v) {
            v();
          }
        };
        K.initializeSettingMenu = function (m) {
          var W = m.settingMenuHelper;
          var F = m.dataSource;
          var E = m.callback;
          W.setSettingMenuController(m.settingController);
          W.addSettingInfoFooter(m.settingWalletPanelController);
          W.setOnClickReturnButtonCallback(function () {
            A.quitGameWithEvent("Setting Quit")();
          });
          W.setupSettingMenuButtons();
          W.menuChangedCallBack = m.settingMenuChangedHandling ? m.settingMenuChangedHandling : G(m.spinButtonController);
          var v = F.playerModel.balance;
          W.setBalance(v);
          W.updateBetValues();
          W.setAllButtonsInteractable(false);
          if (E) {
            E();
          }
        };
        K.updateBetChangesCallback = b;
        K.getBetChangeCallback = k;
        K.updateDataSourceBetValue = D;
        K.additionalBetCalculation = x;
        K.handleSettingMenuFlipped = G;
        K.handleSettingMenuMusicChange = Y;
        cc._RF.pop();
      }
      function b(m, W, F) {
        return function (E, v) {
          var I = m.systemModel.maxLineNumber;
          W.betSizeValue = E;
          W.betLevelValue = v;
          D(m)(E, v);
          J.sendEvent(shell.ga.CATEGORY_GAME, shell.ga.EVENT_SLOT_CHANGE_BET, {
            'amount': E * v * I
          });
          if (F) {
            F();
          }
        };
      }
      function k(m, W, F) {
        return function (E, v) {
          b(m, W)(E, v);
          W.updateBetValues();
          if (F) {
            F();
          }
        };
      }
      function D(m, W) {
        return function (F, E) {
          m.transactionModel.betSizeValue = F;
          m.transactionModel.betLevelValue = E;
          if (W) {
            W();
          }
        };
      }
      function x(m, W, F) {
        return m * W * F;
      }
      function G(m) {
        return function (W) {
          if (W) {
            m.hide();
          } else {
            m.show();
          }
        };
      }
      function Y(m, W) {
        return function (F) {
          m(!F);
          W(!F);
        };
      }
    }, RU],
    'SettingMenuHelper': [function (B, Q, K) {
      'use strict';

      if (!cc._RF.push(Q, "35d29M3VudMFqjm4gRoo2G6", "SettingMenuHelper")) {
        var q = {
          value: true
        };
        Object.defineProperty(K, "__esModule", q);
        K.BackButtonType = K.settingMenuHelper = K.SettingMenuType = K.ButtonPrefabType = K.SubControllers = undefined;
        var N;
        var J;
        var A;
        var y = B("Utils");
        var k = B("SettingMenuButtonHelper");
        var D = B("NotifyHelper");
        var x = B("Preference");
        var G = B("BVFramework");
        var Y = B("GameEventHandler");
        var W = System.get("wallet");
        var F = System.get("slot-menu");
        var E = System.get("game-history");
        var I = System.get("paytable-rules");
        var w = cc._decorator.ccclass;
        var j = x.getPreference("setting_menu");
        j.defineItem("soundOn", true);
        (function (z) {
          z[z.SPIN_OPTIONS = 0x0] = "SPIN_OPTIONS";
          z[z.BET_OPTIONS = 0x1] = "BET_OPTIONS";
          z[z.SOUND = 0x2] = "SOUND";
          z[z.HISTORY = 0x3] = "HISTORY";
          z[z.PAYTABLE = 0x4] = "PAYTABLE";
          z[z.RULE = 0x5] = "RULE";
          z[z.WALLET = 0x6] = "WALLET";
        })(K.SubControllers || (K.SubControllers = {}));
        (function (z) {
          z[z.SPIN_OPTIONS = 0x2] = "SPIN_OPTIONS";
          z[z.BET_OPTIONS = 0x3] = "BET_OPTIONS";
          z[z.MORE_MENU = 0x4] = "MORE_MENU";
          z[z.SOUND = 0x5] = "SOUND";
          z[z.PAYTABLE = 0x6] = "PAYTABLE";
          z[z.RULE = 0x7] = "RULE";
          z[z.HISTORY = 0x8] = "HISTORY";
          z[z.HIDE_MORE = 0x9] = "HIDE_MORE";
          z[z.MINUS_BET = 0xa] = "MINUS_BET";
          z[z.PLUS_BET = 0xb] = "PLUS_BET";
          z[z.WALLET = 0xc] = "WALLET";
          z[z.WIN = 0xd] = "WIN";
          z[z.TURBO_SPIN = 0xe] = "TURBO_SPIN";
          z[z.QUIT = 0xf] = "QUIT";
          z[z.MAX_BET = 0x10] = "MAX_BET";
        })(N = K.ButtonPrefabType || (K.ButtonPrefabType = {}));
        (function (z) {
          z[z.HIDDEN = 0x0] = "HIDDEN";
          z[z.NORMAL_BACK_FUNC = 0x1] = "NORMAL_BACK_FUNC";
        })(J || (J = {}));
        K.BackButtonType = J;
        (function (z) {
          z[z.LEGACY = 0x0] = "LEGACY";
          z[z.NEW = 0x1] = "NEW";
        })(A = K.SettingMenuType || (K.SettingMenuType = {}));
        var Z = new (function (z) {
          function P() {
            var O = z.call(this) || this;
            var L = {
              sliderEffect: "audio/slider_effect",
              listItemClick: "audio/list_item_click",
              menuIconPress: "audio/menu_icon_press",
              walletCountingAbove: "audio/wallet_counting_above"
            };
            var U = {
              sliderEffect: false,
              listItemClick: false,
              menuIconPress: false,
              walletCountingAbove: false
            };
            O.soundOn = j.soundOn;
            O.turboSpinOn = false;
            O.isFreeGameMode = false;
            O.td = false;
            O.sd = true;
            O.ed = J.HIDDEN;
            O.nd = 0x0;
            O.od = '';
            O.hd = 0x0;
            O.rd = [];
            O.ad = [];
            O.lt = 0x0;
            O.ut = 0x0;
            O.ud = '';
            O.ld = L;
            O.fd = U;
            O.dd = 0x0;
            O.balanceAmountLessThan = 0x0;
            O.autoSpinCount = 0x0;
            O.balanceAmountMoreThan = 0x0;
            O.singleWinAmount = 0x0;
            O.vd = false;
            O._d = false;
            O.md = false;
            O.pd = new k["default"]();
            O.qf = G.getGameContext();
            O.bd = false;
            O.Sd();
            O.gd();
            O.qf.on("Game.Initialized", O.Cd.bind(O));
            return O;
          }
          __extends(P, z);
          Object.defineProperty(P.prototype, "path", {
            'get': function () {
              return this.od;
            },
            'set': function (O) {
              this.od = O;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.setSettingMenuController = function (O) {
            this.yd = O;
          };
          Object.defineProperty(P.prototype, "settingMenuController", {
            'get': function () {
              if (!this.yd) {
                throw Error("SettingMenuHelper :: settingMenuController : Cannot find settingMenuController. Please setup using setSettingMenuController first!");
              }
              return this.yd;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.initAudio = function (O) {
            this.Md(O);
          };
          P.prototype.loadAudio = function (O) {
            this.Ad(O);
          };
          P.prototype.setButtonPrefab = function (O, L, U) {
            if (undefined === U) {
              U = false;
            }
            this.pd.setButtonPrefab(O, L, U);
          };
          Object.defineProperty(P.prototype, "autoSpinButtonLocaleIcon", {
            'get': function () {
              if (!this.Id) {
                throw Error("SettingMenuHelper :: autoSpinButtonLocaleIcon : Cannot find autoSpinButtonLocaleIcon. Please setup using settingMenuLocaleIcons setter first!");
              }
              return this.Id;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "historyButtonLocaleIcon", {
            'get': function () {
              if (!this.wd) {
                throw Error("SettingMenuHelper :: historyButtonLocaleIcon : Cannot find historyButtonLocaleIcon. Please setup using settingMenuLocaleIcons setter first!");
              }
              return this.wd;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "settingInfoFooterLocaleWinIcon", {
            'get': function () {
              if (!this.Od) {
                throw Error("SettingMenuHelper :: settingInfoFooterLocaleWinIcon : Cannot find settingInfoFooterLocaleWinIcon. Please setup using settingMenuLocaleIcons setter first!");
              }
              return this.Od;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "turboOnButtonLocaleIcon", {
            'get': function () {
              if (!this.Hd) {
                throw Error("SettingMenuHelper :: turboOnButtonLocaleIcon : Cannot find turboOnButtonLocaleIcon. Please setup using settingMenuLocaleIcons setter first!");
              }
              return this.Hd;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "turboOffButtonLocaleIcon", {
            'get': function () {
              if (!this.Bd) {
                throw Error("SettingMenuHelper :: turboOffButtonLocaleIcon : Cannot find turboOffButtonLocaleIcon. Please setup using settingMenuLocaleIcons setter first!");
              }
              return this.Bd;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "settingMenuLocaleIcons", {
            'set': function (O) {
              this.Id = O.getSpriteFrame("txt_auto");
              this.wd = O.getSpriteFrame("ic_hist");
              if (this.Gd) {
                this.Gd.setIconSprite(this.wd);
              }
              this.Od = O.getSpriteFrame("ic_win");
              if (this.Nd) {
                this.Nd.setWinIcon(this.Od);
              }
              this.Hd = O.getSpriteFrame("txt_turbo_on");
              this.Bd = O.getSpriteFrame("txt_turbo_off");
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.Td = function () {
            var O = this;
            var L = this.settingMenuController;
            var U = this.pd.setupSettingMenuButtonInList(N.TURBO_SPIN, function () {
              if (!L.isSwitchingMenuLayer()) {
                O.setTurboSpinButtonState(!O.turboSpinOn);
                O.playMenuIconPressSound();
                if ("land" === shell.environment.getOrientationMode()) {
                  L.hideMoreMenuLayer();
                }
              }
            });
            U.setTurboSprites(this.turboOnButtonLocaleIcon, this.turboOffButtonLocaleIcon);
            U.getTurboSpinCallback = function () {
              return this.turboSpinOn;
            }.bind(this);
            U.setButtonOnColor("setting", "color_button_transition_a");
            U.setButtonOffColor("setting", "white_button_transition_a");
            U.sprite.spriteFrame = U.turboSpinOn;
            U.spriteEffect.spriteFrame = U.turboSpinEffectOn;
            U.changeButtonColor(true);
            U.changeSpriteEffectColor();
            var T = this;
            this.Pd = function () {
              this.stopTurboLighting();
              if (T.turboSpinOn) {
                this.playTurboLighting();
              } else {
                this.sprite.spriteFrame = this.turboSpinOff;
                this.spriteEffect.spriteFrame = U.turboSpinEffectOff;
              }
              this.changeButtonColor(true);
              L.showSettingTurboToast(T.turboSpinOn ? shell.I18n.t("SettingMenu.TurboSpinEnable") : shell.I18n.t("SettingMenu.TurboSpinDisable"), T.turboSpinOn, 0x2);
              T.sendEventToGoogleAnalytic(T.turboSpinOn);
            }.bind(U);
            this.Ld = y.observeCallback(this, "turboSpinOn")(this.Pd);
            L.addMenuItem(U.node);
            this.qf.on("Game.OnTurboSpin", function () {
              O.setTurboSpinButtonState(true);
            });
            this.qf.on("Game.OffTurboSpin", function () {
              O.setTurboSpinButtonState(false);
            });
          };
          P.prototype.setTurboSpinButtonState = function (O) {
            this.turboSpinOn = O;
            this.qf.emit("Game.TurboSpinStateChanged", this.turboSpinOn);
          };
          P.prototype.sendEventToGoogleAnalytic = function (O) {
            var L = {
              name: "Turbo Spin",
              index: O
            };
            if (cc.sys.isBrowser) {
              shell.ga.sendEvent(shell.ga.CATEGORY_GENERAL, shell.ga.EVENT_CHANGE_SETTING, L);
            }
          };
          P.prototype.setupSettingMenuButtons = function () {
            var O = this;
            var L = this.settingMenuController;
            var U = this.pd;
            var T = this;
            this.Rd = function () {
              if ("land" === shell.environment.getOrientationMode()) {
                L.muteIcon.active = false;
              } else if (L.isIdle()) {
                L.muteIcon.active = !O.soundOn;
              }
            };
            this.Rd();
            this.Ed = y.observeCallback(this, "soundOn")(this.Rd);
            var h0;
            var h1 = function (h2) {
              var h3 = U.setupSettingMenuButtonInList(N.SOUND, function () {
                O.kd();
                if ("land" === shell.environment.getOrientationMode()) {
                  L.hideMoreMenuLayer();
                }
              });
              h3.setTitle(shell.I18n.t("SettingMenu.SettingSoundWord"));
              var h4 = L.addMenuItem(h3.node);
              O.Ud = function () {
                this.sprite.spriteFrame = T.soundOn ? this.soundOn : this.soundOff;
                if (this.largeSprite) {
                  this.largeSprite.spriteFrame = T.soundOn ? this.largeSoundOnIcon : this.largeSoundOffIcon;
                }
              }.bind(h3);
              O.jd = h3.node;
              O.Dd = h4;
              if (!O.sd) {
                O.soundEnable = O.sd;
                O.setLockAccess(N.SOUND, true);
              }
              O.Ud();
              O.Wd = y.observeCallback(O, "soundOn")(O.Ud);
              if (h2) {
                h3.sprite.node.y = 0x0;
                h3.title.node.active = false;
              }
            };
            if (this.xd) {
              this.Td();
              if ("land" === shell.environment.getOrientationMode()) {
                (function () {
                  var h2 = U.setupIndependentSettingMenuButton(N.SOUND, function () {
                    O.kd();
                    L.hideMoreMenuLayer();
                  });
                  if (!h2) {
                    throw Error("SettingMenuHelper :: setupSettingMenuButtons : fail to setupIndependentSettingMenuButton when creating landscape sound button");
                  }
                  h2.setTitle(shell.I18n.t("SettingMenu.SettingSoundWord"));
                  L.landscapeSoundButtonHolder.addChild(h2.node);
                  O.Ud = function () {
                    this.sprite.spriteFrame = T.soundOn ? this.soundOn : this.soundOff;
                    if (this.largeSprite) {
                      this.largeSprite.spriteFrame = T.soundOn ? this.largeSoundOnIcon : this.largeSoundOffIcon;
                    }
                  }.bind(h2);
                  O.jd = h2.node;
                  O.Dd = L.landscapeSoundButtonHolder;
                  if (!O.sd) {
                    O.soundEnable = O.sd;
                    O.setLockAccess(N.SOUND, true);
                  }
                  O.Ud();
                  O.Wd = y.observeCallback(O, "soundOn")(O.Ud);
                  h2.sprite.node.y = 0x0;
                  h2.title.node.active = false;
                })();
              }
            } else {
              h1(true);
            }
            (h0 = this.Fd = U.setupSettingMenuButtonInList(N.MINUS_BET, this.decreaseBet.bind(this))).setShowSettingToastCallback(L.showSettingToast.bind(L));
            h0.setHideSettingToastCallback(L.hideSettingToast.bind(L));
            L.addMenuItem(h0.node);
            (h0 = this.Vd = U.setupSettingMenuButtonInList(N.PLUS_BET, this.increaseBet.bind(this))).setShowSettingToastCallback(L.showSettingToast.bind(L));
            h0.setHideSettingToastCallback(L.hideSettingToast.bind(L));
            L.addMenuItem(h0.node);
            if (this.zd) {
              (h0 = this.Jd = U.setupSettingMenuButtonInList(N.SPIN_OPTIONS, this.qd.bind(this))).setAutoSpinSprite(this.autoSpinButtonLocaleIcon);
              L.addMenuItem(h0.node);
            }
            h0 = U.setupSettingMenuButtonInList(N.MORE_MENU, this.showMoreMenuLayer.bind(this), this.zd ? "white_button_transition_a" : "color_button_transition_a");
            L.addMenuItem(h0.node);
            if (!this.zd) {
              L.addEmptyItem();
              this.nd += 0x1;
            }
            if (this.ed === J.NORMAL_BACK_FUNC) {
              h0 = U.setupSettingMenuButtonInList(N.QUIT, this.onClickQuitButton.bind(this));
              L.addMenuItem(h0.node);
            }
            if (this.xd && !("land" === shell.environment.getOrientationMode())) {
              h1(false);
            }
            h0 = U.setupSettingMenuButtonInList(N.PAYTABLE, this.Kd.bind(this));
            L.addMenuItem(h0.node);
            h0 = U.setupSettingMenuButtonInList(N.RULE, this.Qd.bind(this));
            L.addMenuItem(h0.node);
            (h0 = this.Gd = U.setupSettingMenuButtonInList(N.HISTORY, this.Yd.bind(this))).setIconSprite(this.historyButtonLocaleIcon);
            L.addMenuItem(h0.node);
            h0 = U.setupSettingMenuButtonInList(N.HIDE_MORE, this.Xd.bind(this));
            L.addMenuItem(h0.node);
            if (h0 = this.Zd = this.pd.setupIndependentSettingMenuButton(N.MAX_BET, this.maxBet.bind(this))) {
              this.settingInfoFooter.maxBetButtonHolder.addChild(h0.node);
              h0.setShowSettingToastCallback(L.showSettingToast.bind(L));
              h0.setHideSettingToastCallback(L.hideSettingToast.bind(L));
            }
            this.$d();
            L.updateLayout(shell.isRTLLanguage && shell.isRTLLanguage());
          };
          P.prototype.$d = function () {
            var O = this.settingMenuController.buttonsHolder();
            var L = this.pd.totalButtonsOccupied();
            var U = O.length - L - this.nd;
            for (var T = O.length - 0x1; T >= 0x0 && !(U <= 0x0); T--) {
              O[T].active = false;
              U--;
            }
          };
          P.prototype.setFeatureBuyToastNodePosition = function (O, L, U) {
            this.settingMenuController.setFeatureBuyToastNodePosition(O, L, U);
          };
          Object.defineProperty(P.prototype, "menuChangedCallBack", {
            'set': function (O) {
              this.tv = O;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "backButtonType", {
            'get': function () {
              return this.ed;
            },
            'set': function (O) {
              this.ed = O;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.setOnClickReturnButtonCallback = function (O) {
            this.iv = O;
          };
          P.prototype.setIsControllerPresenting = function (O) {
            this.settingMenuController.setIsControllerPresenting(O);
          };
          P.prototype.qd = function () {
            this.playMenuIconPressSound();
            if (!this.settingMenuController.isPanelTouchMoving()) {
              this.openAutoSpinMenu();
            }
          };
          P.prototype.sv = function () {
            this.playMenuIconPressSound();
            if (!this.settingMenuController.isPanelTouchMoving()) {
              this.openBetMenu();
            }
          };
          P.prototype.kd = function () {
            this.playMenuIconPressSound();
            this.toggleSound();
          };
          P.prototype.Yd = function (O) {
            if (undefined === O) {
              O = false;
            }
            this.playMenuIconPressSound();
            if (!this.settingMenuController.isPanelTouchMoving()) {
              this.openHistoryMenu(O);
            }
          };
          P.prototype.Kd = function () {
            this.playMenuIconPressSound();
            if (!this.settingMenuController.isPanelTouchMoving()) {
              this.openPayoutMenu();
            }
          };
          P.prototype.Qd = function () {
            this.playMenuIconPressSound();
            if (!this.settingMenuController.isPanelTouchMoving()) {
              this.openRulesMenu();
            }
          };
          P.prototype.ev = function () {
            this.playMenuIconPressSound();
            this.openWalletMenu();
          };
          P.prototype.Xd = function () {
            this.playMenuIconPressSound();
            this.hideMoreMenuLayer();
          };
          P.prototype.openAutoSpinMenu = function () {
            var O = this.settingMenuController;
            if (!(O.isControllerPresenting() || O.isSwitchingMenuLayer())) {
              this.nv();
              if ("land" === shell.environment.getOrientationMode()) {
                O.hideMoreMenuLayer();
              }
              O.setIsControllerPresenting(true);
              this.qf.emit("SlotMenu.ShowSpinOptions", undefined);
            }
          };
          P.prototype.openBetMenu = function () {
            var O = this.settingMenuController;
            if (!(O.isControllerPresenting() || O.isSwitchingMenuLayer())) {
              this.nv();
              this.hideMoreMenuLayer();
              O.setIsControllerPresenting(true);
              this.ov(true);
              this.qf.emit("SlotMenu.ShowBetOptions", undefined);
            }
          };
          P.prototype.toggleSound = function () {
            var O = this.settingMenuController;
            if (!O.isControllerPresenting() && !O.isSwitchingMenuLayer()) {
              this.soundEnable = !this.soundEnable;
              var L = true === this.soundEnable ? "OnGameSound" : "OffGameSound";
              this.cv(L);
              this.playMenuIconPressSound();
            }
          };
          P.prototype.openHistoryMenu = function (O) {
            if (undefined === O) {
              O = false;
            }
            var L = this.settingMenuController;
            if (!(L.isControllerPresenting() || L.isSwitchingMenuLayer())) {
              if (O) {
                this.hideMoreMenuLayer();
              }
              L.setIsControllerPresenting(true);
              this.qf.emit("History.ShowGame");
              this.nv();
            }
          };
          P.prototype.openPayoutMenu = function () {
            var O = this.settingMenuController;
            if (!(O.isControllerPresenting() || O.isSwitchingMenuLayer())) {
              if ("land" === shell.environment.getOrientationMode()) {
                O.hideMoreMenuLayer();
              }
              O.setIsControllerPresenting(true);
              this.qf.emit("Paytable.Show");
            }
          };
          P.prototype.openRulesMenu = function () {
            var O = this.settingMenuController;
            if (!(O.isControllerPresenting() || O.isSwitchingMenuLayer())) {
              if ("land" === shell.environment.getOrientationMode()) {
                O.hideMoreMenuLayer();
              }
              O.setIsControllerPresenting(true);
              this.qf.emit("GameRules.Show");
            }
          };
          P.prototype.openWalletMenu = function () {
            var O = this.settingMenuController;
            if (!(O.isControllerPresenting() || O.isSwitchingMenuLayer())) {
              if (W) {
                this.activateWalletNotify(false);
                this.hv(W.WalletEventEnum.EN_WALLET_LIST_ANIM);
              }
            }
          };
          P.prototype.showMoreMenuLayer = function () {
            var O = this.settingMenuController;
            this.playMenuIconPressSound();
            if ("port" === shell.environment.getOrientationMode()) {
              O.muteIcon.active = false;
            }
            if (!O.isControllerPresenting() && !O.isSwitchingMenuLayer()) {
              this.nv();
              O.showMoreMenuLayer(this.md);
              var L = this.tv;
              if (L) {
                L(true, true);
              }
            }
          };
          P.prototype.hideMoreMenuLayer = function () {
            var O = this.settingMenuController;
            if ("land" === shell.environment.getOrientationMode()) {
              O.muteIcon.active = false;
            } else if (this.soundOn) {
              O.muteIcon.active = false;
            } else {
              O.muteIcon.active = true;
            }
            if (!O.isControllerPresenting() && !O.isSwitchingMenuLayer()) {
              this.settingInfoFooter.changeHolder(O.getSettingInfoFooterFrontHolder());
              O.hideMoreMenuLayer();
              var L = this.tv;
              if (L) {
                L(false, true);
              }
            }
          };
          P.prototype.onClickQuitButton = function () {
            var O = this;
            var L = this.settingMenuController;
            if (!L.isSwitchingMenuLayer() && !L.isControllerPresenting()) {
              var U = {
                'title_message': shell.I18n.t("SettingMenuHelper.QuitGameTitle"),
                'content_message': shell.I18n.t("SettingMenuHelper.QuitGameMessage"),
                'actions': [{
                  'title': shell.I18n.t("SettingMenuHelper.Cancel"),
                  'handler': function () {
                    L.setIsControllerPresenting(false);
                  }
                }, {
                  'title': shell.I18n.t("SettingMenuHelper.Quit"),
                  'handler': function () {
                    L.setIsControllerPresenting(false);
                    if (O.iv) {
                      O.iv();
                    }
                  },
                  'auto_dismiss': false
                }]
              };
              L.setIsControllerPresenting(true);
              D.showDialog(U);
              this.playMenuIconPressSound();
            }
          };
          P.prototype.isBalanceHitTargetInAutoSpinMode = function (O, L) {
            var U = false;
            var T = this.singleWinAmount;
            var h0 = this.balanceAmountMoreThan;
            var h1 = this.balanceAmountLessThan;
            var h2 = this.dd;
            if (T && O > T) {
              U = true;
            }
            if (h0 && L >= h2 + h0) {
              U = true;
            }
            if (h1 && L <= h2 - h1) {
              U = true;
            }
            return U;
          };
          P.prototype.stopSpinOptionButtonAnim = function () {
            if (this.Jd) {
              this.Jd.stopAutoSpinAnim();
            }
          };
          P.prototype.playSpinOptionButtonAnim = function () {
            if (this.Jd) {
              this.Jd.playAutoSpinAnim();
            }
          };
          Object.defineProperty(P.prototype, "autoSpinCallback", {
            'set': function (O) {
              var L = this;
              this.rv = function (U) {
                var T = U.payload;
                L.autoSpinCount = T.autoSpinCount;
                L.singleWinAmount = T.singleWinAmount;
                L.balanceAmountMoreThan = T.balanceAmountMoreThan;
                L.balanceAmountLessThan = T.balanceAmountLessThan;
                L.dd = T.autoSpinStartBalance;
                if (L.autoSpinCount > 0x0) {
                  L.playSpinOptionButtonAnim();
                }
                if (O) {
                  O();
                }
              };
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "turboSpinCallback", {
            'set': function (O) {
              if (this.av) {
                if (this.uv) {
                  this.uv();
                }
                this.av = undefined;
              }
              this.av = function () {
                if (O) {
                  O();
                }
              };
              this.uv = y.observeCallback(this, "turboSpinOn")(this.av);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "additionalBetCalculationCallback", {
            'set': function (O) {
              this.qf.emit("SlotMenu.UpdateAdditionalBetCalculation", O);
              this.lv = O;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "audioConfigure", {
            'get': function () {
              return this.sd;
            },
            'set': function (O) {
              this.sd = O;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "showChangeBetReminder", {
            'set': function (O) {
              this.vd = O;
              this.qf.emit("SlotMenu.SetShowChangeBetReminder", O);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "showForfeitProgressReminder", {
            'set': function (O) {
              this._d = O;
              this.qf.emit("SlotMenu.SetShowForfeitProgressReminder", O);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "manualUpdateBetFactorCallBack", {
            'set': function (O) {
              var L = this;
              this.fv = function (U, T) {
                L.checkSelectedValue(y.toDecimalWithExp(U * T * L.betLineValue, 0x2));
                O(U, T);
              };
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "finishBetPickCallback", {
            'set': function (O) {
              this.dv = O;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "cancelBetPanelCallback", {
            'set': function (O) {
              this.vv = O;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.updateBetLabelCallback = function (O) {
            this._v = O;
          };
          P.prototype.updateBetValues = function (O) {
            if (undefined === O) {
              O = 0x0;
            }
            if (!this.lv) {
              this.lv = function (T, h0, h1) {
                return T * h0 * h1;
              };
              this.qf.emit("SlotMenu.UpdateAdditionalBetCalculation", this.lv);
            }
            this.mv = y.toFixed(this.betLineValue * this.betLevelValue * this.betSizeValue, 0x2);
            var L = this.lv(this.betLineValue, this.betLevelValue, this.betSizeValue);
            var U = y.formatCurrency(L);
            if (this._v) {
              this._v(U, O);
            }
            this.pv({
              'totalBet': y.toDecimalWithExp(L, 0x2)
            });
          };
          P.prototype.bv = function () {
            var O = this.betSizeList;
            var L = this.betSizeValue;
            return !(!O || !cc.js.isNumber(L)) && -0x1 !== O.indexOf(L);
          };
          P.prototype.Sv = function () {
            var O = this.betLevelList;
            var L = this.betLevelValue;
            return !(!O || !cc.js.isNumber(L)) && -0x1 !== O.indexOf(L);
          };
          P.prototype.reevaluateBet = function () {
            var O = this.betLineValue * this.betLevelValue * this.betSizeValue;
            return !(this.bv() && this.Sv() && !(this.gv && O < this.gv && (!this.Cv || O > this.Cv)) || (this.betSizeValue = this.betSizeList[0x0], this.betLevelValue = this.betLevelList[0x0], this.preCalculateCombination(), this.checkSelectedValue(y.toDecimalWithExp(this.betSizeValue * this.betLevelValue * this.betLineValue, 0x2)), this.yv && this.yv(this.betSizeValue, this.betLevelValue), 0x0));
          };
          P.prototype.showInvalidBetDialog = function () {
            var O = this;
            var L = {
              'title_message': undefined,
              'content_message': shell.I18n.t("SettingMenuHelper.ReevaluateBet"),
              'actions': [{
                'title': shell.I18n.t("SettingMenuHelper.Select"),
                'handler': function () {
                  O.openBetMenu();
                }
              }]
            };
            D.showDialog(L);
          };
          Object.defineProperty(P.prototype, "betModifierUpdateCallback", {
            'get': function () {
              return this.Mv;
            },
            'set': function (O) {
              this.Mv = O;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "reevaluateBetCallback", {
            'set': function (O) {
              this.yv = O;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.nv = function () {
            var O = this.settingMenuController;
            if (O.isSettingBetReminderBoardShowed()) {
              this.mv = this.Av;
              this.betSizeValue = this.Iv;
              this.betLevelValue = this.wv;
              this.Ov = this.Hv;
              this.updateBetValues();
              this.checkSelectedValue(this.Av);
              O.hideBetReminderBoard();
              if (this.Bv) {
                this.Bv();
              }
            }
          };
          P.prototype.setBetReminderCancelAndConfirmCallback = function (O, L) {
            var U = this;
            var T = this.settingMenuController;
            this.Bv = O;
            T.setBetReminderCancelAndConfirmCallback(this.nv.bind(this), function () {
              if (U.Iv !== U.betSizeValue || U.wv !== U.betLevelValue) {
                T.hideBetReminderBoard();
                if (L) {
                  L(U.betSizeValue, U.betLevelValue);
                }
                U.qf.emit("SlotMenu.ChangeBet", U.mv);
              } else {
                U.nv();
              }
            });
          };
          P.prototype.setBetReminderTriggerCallback = function (O) {
            this.Gv = O;
          };
          P.prototype.preCalculateCombination = function () {
            var O = this.betSizeList || [];
            var L = this.betLevelList || [];
            var U = this.betLineValue || 0x0;
            if (0x0 !== O.length && 0x0 !== L.length && 0x0 !== U) {
              var T;
              var h0 = this.gv;
              var h1 = this.Cv;
              var h2 = [];
              if (h0) {
                if (h1) {
                  T = [];
                }
                h7 = 0x0;
                for (var h3 = O.length; h7 < h3; h7++) {
                  var h4 = 0x0;
                  for (var h5 = L.length; h4 < h5; h4++) {
                    var h6 = y.toDecimalWithExp(O[h7] * L[h4] * U, 0x2);
                    if (h6 >= h0) {
                      h2[h7] = L.slice(h4);
                      break;
                    }
                    if (h1 && (h1 < h0 && h6 <= h1 || h1 >= h0 && h6 < h0)) {
                      if (!T[h7]) {
                        T[h7] = [];
                      }
                      T[h7].push(L[h4]);
                    }
                    if (h4 === h5 - 0x1) {
                      h2[h7] = [];
                    }
                  }
                }
              } else {
                for (var h7 = 0x0; h7 < O.length; h7++) {
                  h2[h7] = L;
                }
              }
              var h8 = 0x0;
              var h9 = function (hl, hQ) {
                var hC = hQ.length;
                var hK = (hl > 0x1 ? 0x3 : 0x5 - hl) + h8;
                h8 = 0x0;
                if (hK > 0x5) {
                  h8 += hK - 0x5;
                  hK = 0x5;
                }
                if (hC < hK) {
                  h8 += hK - hC;
                  return hQ.slice();
                }
                var hS = hQ[hQ.length - 0x1];
                var hq = [hS];
                if (hK > 0x1) {
                  hK--;
                  var hN = [Math.floor(hC / 0x2) || 0x1, Math.round(hC / 0x5) || 0x1, Math.round(hC / 0xa) || 0x1];
                  for (var hf = 0x0; hf < hK - 0x1; hf++) {
                    var ho = hq[0x0] - hN[hf];
                    hq.unshift(ho);
                  }
                  var hs = hQ[0x0];
                  var hJ = hq[0x0] !== hs ? hs : hS - (Math.floor(hC / 0x3) || 0x1);
                  hq.unshift(hJ);
                }
                return hq;
              };
              var hh = Object.create(null);
              h7 = 0x0;
              for (h3 = O.length; h7 < h3; h7++) {
                var hM = h9(h7, h2[h7]);
                if (T && T[h7]) {
                  hM = hM.concat(T[h7]);
                }
                if (0x0 !== hM.length) {
                  h4 = 0x0;
                  for (h5 = L.length; h4 < h5; h4++) {
                    if (hM.includes(L[h4])) {
                      var hB = y.toFixed(O[h7] * L[h4] * U, 0x2);
                      var hR = {
                        betSize: O[h7],
                        betLevel: L[h4]
                      };
                      if (!hh[hB]) {
                        hh[hB] = hR;
                      }
                    }
                  }
                }
              }
              this.Nv = hh;
            }
          };
          P.prototype.checkSelectedValue = function (O) {
            var L;
            var U;
            var T = +O;
            if (this.gv && T < this.gv && (!this.Cv || T > this.Cv)) {
              T = this.gv;
            }
            O = y.toFixed(T, 0x2);
            if (!this.Nv) {
              throw Error("SettingMenuHelper :: checkSelectedValue : bet combination did not generate due to size or level empty");
            }
            var h0 = Object.keys(this.Nv).sort(function (h2, h3) {
              var h4 = parseFloat(h2);
              var h5 = parseFloat(h3);
              return h4 < h5 ? -0x1 : h4 > h5 ? 0x1 : 0x0;
            });
            var h1 = h0.indexOf(O);
            if (-0x1 === h1) {
              this.mv = O;
              this.Ov = undefined;
              this.Fd.updateBetModifierColor(0x1);
              this.Vd.updateBetModifierColor(0x1, h0.length - 0x1);
              if (!(null === (L = this.Zd) || undefined === L)) {
                L.updateBetModifierColor(0x1, h0.length - 0x1);
              }
            } else {
              this.Ov = h1;
              this.Fd.updateBetModifierColor(h1);
              this.Vd.updateBetModifierColor(h1, h0.length - 0x1);
              if (!(null === (U = this.Zd) || undefined === U)) {
                U.updateBetModifierColor(h1, h0.length - 0x1);
              }
            }
          };
          P.prototype.Tv = function (O) {
            var L;
            var U = this;
            var T = this.settingMenuController;
            if (this.vd || this._d) {
              if (!T.isSettingBetReminderBoardShowed()) {
                this.Av = this.mv;
                this.Iv = this.betSizeValue;
                this.wv = this.betLevelValue;
                this.Hv = this.Ov;
                if (O.selectedBet !== this.Hv) {
                  if (!(null === (L = this.qf) || undefined === L)) {
                    L.emit("SlotMenu.GetShowChangeBetReminder", undefined, function (h0) {
                      var h1;
                      var h2 = '';
                      if (h0.response) {
                        h2 = shell.I18n.t("BetOptions.BetChangeProgressRemind");
                        T.setBetChangeReminderLabel(h2);
                      } else if (!(null === (h1 = U.qf) || undefined === h1)) {
                        h1.emit("SlotMenu.GetShowForfeitProgressReminder", undefined, function (h3) {
                          if (h3.response) {
                            h2 = shell.I18n.t("BetOptions.BetChangeForfeitProgressRemind");
                            T.setBetChangeReminderLabel(h2);
                          }
                        });
                      }
                      T.showBetReminderBoard(y.formatCurrency(parseFloat(U.Av)));
                    });
                  }
                  if (this.Gv) {
                    this.Gv();
                  }
                }
              }
            } else {
              this.Pv(parseFloat(O.selectedBetAmount));
            }
          };
          P.prototype.Lv = function (O, L) {
            var U = RegExp('<' + O + " style=['\"]color:\\s*([^'\"]+)['\"]>", 'gi');
            return L.replace(U, "<color=$1>").replace('</' + O + '>', "</color>");
          };
          P.prototype.Rv = function (O) {
            if (O < this.minimumBetAmount && O <= this.featureBuyThreshold) {
              var L = this.Lv("span", shell.I18n.t("FeatureBuy.BetForFeatureBuyOnly"));
              var U = this.Lv("span", shell.I18n.t("FeatureBuy.BetSuggestion", {
                'amount': y.formatCurrency(this.minimumBetAmount)
              }));
              this.settingMenuController.showFeatureBuyToast(L + "\n" + U, 0x2);
            } else {
              this.settingMenuController.hideFeatureBuyToast();
            }
          };
          P.prototype.increaseBet = function () {
            var O;
            var L = this.settingMenuController;
            if (!L.isSwitchingMenuLayer()) {
              if (!this.Nv) {
                throw Error("SettingMenuHelper :: increaseBet : bet combination did not generate");
              }
              var U = Object.keys(this.Nv).sort(function (h1, h2) {
                var h3 = parseFloat(h1);
                var h4 = parseFloat(h2);
                return h3 < h4 ? -0x1 : h3 > h4 ? 0x1 : 0x0;
              });
              var T = this.Vd.increaseBet(U, this.Ov, this.mv);
              this.Tv(T);
              this.Rv(+T.selectedBetAmount);
              this.Fd.updateBetModifierColor(T.selectedBet);
              this.Vd.updateBetModifierColor(T.selectedBet, U.length - 0x1);
              if (!(null === (O = this.Zd) || undefined === O)) {
                O.updateBetModifierColor(T.selectedBet, U.length - 0x1);
              }
              var h0 = this.Ov = T.selectedBet;
              this.mv = T.selectedBetAmount;
              this.betSizeValue = this.Nv[U[h0]].betSize;
              this.betLevelValue = this.Nv[U[h0]].betLevel;
              this.updateBetValues((h0 + 0x1) / Object.keys(this.Nv).length);
              if (!(this.vd || this._d)) {
                if (this.Mv) {
                  this.Mv(this.betSizeValue, this.betLevelValue);
                }
              }
              if ("land" === shell.environment.getOrientationMode()) {
                L.hideMoreMenuLayer();
              }
            }
          };
          P.prototype.decreaseBet = function () {
            var O;
            var L = this.settingMenuController;
            if (!L.isSwitchingMenuLayer()) {
              if (!this.Nv) {
                throw Error("SettingMenuHelper :: decreaseBet : bet combination did not generate");
              }
              var U = Object.keys(this.Nv).sort(function (h1, h2) {
                var h3 = parseFloat(h1);
                var h4 = parseFloat(h2);
                return h3 < h4 ? -0x1 : h3 > h4 ? 0x1 : 0x0;
              });
              var T = this.Fd.decreaseBet(U, this.Ov, this.mv);
              this.Tv(T);
              this.Rv(+T.selectedBetAmount);
              this.Fd.updateBetModifierColor(T.selectedBet);
              this.Vd.updateBetModifierColor(T.selectedBet, U.length - 0x1);
              if (!(null === (O = this.Zd) || undefined === O)) {
                O.updateBetModifierColor(T.selectedBet, U.length - 0x1);
              }
              var h0 = this.Ov = T.selectedBet;
              this.mv = T.selectedBetAmount;
              this.betSizeValue = this.Nv[U[h0]].betSize;
              this.betLevelValue = this.Nv[U[h0]].betLevel;
              this.updateBetValues((h0 + 0x1) / Object.keys(this.Nv).length);
              if (!(this.vd || this._d)) {
                if (this.Mv) {
                  this.Mv(this.betSizeValue, this.betLevelValue);
                }
              }
              if ("land" === shell.environment.getOrientationMode()) {
                L.hideMoreMenuLayer();
              }
            }
          };
          P.prototype.maxBet = function () {
            var O = this.settingMenuController;
            if (!O.isSwitchingMenuLayer()) {
              if (!this.Nv) {
                throw Error("SettingMenuHelper :: maxBet : bet combination did not generate");
              }
              if (!this.Zd) {
                throw Error("SettingMenuHelper :: maxBet : max bet button cannot be found");
              }
              var L = Object.keys(this.Nv).sort(function (h0, h1) {
                var h2 = parseFloat(h0);
                var h3 = parseFloat(h1);
                return h2 < h3 ? -0x1 : h2 > h3 ? 0x1 : 0x0;
              });
              var U = this.Zd.maxBet(L);
              this.Tv(U);
              this.Fd.updateBetModifierColor(U.selectedBet);
              this.Vd.updateBetModifierColor(U.selectedBet, L.length - 0x1);
              this.Zd.updateBetModifierColor(U.selectedBet, L.length - 0x1);
              var T = this.Ov = U.selectedBet;
              this.mv = U.selectedBetAmount;
              this.betSizeValue = this.Nv[L[T]].betSize;
              this.betLevelValue = this.Nv[L[T]].betLevel;
              this.updateBetValues((T + 0x1) / Object.keys(this.Nv).length);
              if (!(this.vd || this._d)) {
                if (this.Mv) {
                  this.Mv(this.betSizeValue, this.betLevelValue);
                }
              }
              if ("land" === shell.environment.getOrientationMode()) {
                O.hideMoreMenuLayer();
              }
            }
          };
          Object.defineProperty(P.prototype, "changeSoundVolume", {
            'set': function (O) {
              var L = this;
              if (this.Ev) {
                if (this.kv) {
                  this.kv();
                }
                this.Ev = undefined;
              }
              this.Ev = function () {
                L.Uv(L.soundOn);
                if (O) {
                  O(L.soundOn);
                }
              };
              this.kv = y.observeCallback(this, "soundOn")(this.Ev);
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.setBalance = function (O, L) {
            var U = this;
            if (undefined === L) {
              L = true;
            }
            var T = this.jv(O);
            this.Dv(function (h0) {
              if (T) {
                U.playWalletCountingAboveSfx();
              }
              var h1 = y.toDecimalWithExp(h0 && h0.balance || O, 0x2);
              U.settingInfoFooter.updateBalance(undefined, h1, L);
              U.pv({
                'balance': h1
              });
            });
          };
          P.prototype.setWinAmount = function (O, L, U) {
            if (undefined === L) {
              L = true;
            }
            if (undefined === U) {
              U = true;
            }
            this.settingInfoFooter.updateWinAmount(O, L, U);
            this.qf.emit("SlotMenu.UpdateWinAmount", O);
            this.pv({
              'totalWin': y.toDecimalWithExp(O, 0x2)
            });
          };
          P.prototype.setAllButtonsInteractable = function (O, L) {
            if (undefined === L) {
              L = true;
            }
            this.pd.setAllButtonsInteractable(O);
            if (O) {
              this.checkSelectedValue(y.toDecimalWithExp(this.betSizeValue * this.betLevelValue * this.betLineValue, 0x2));
            }
          };
          P.prototype.setLockAccess = function (O, L) {
            this.pd.setLockAccess(O, L);
          };
          P.prototype.isButtonLocked = function (O) {
            return this.pd.isButtonLocked(O);
          };
          P.prototype.setButtonInteractableFlag = function (O, L) {
            if (undefined === L) {
              L = false;
            }
            this.pd.setButtonInteractableFlag(O, L);
          };
          P.prototype.setButtonInteractable = function (O) {
            this.pd.setButtonInteractable(O);
          };
          P.prototype.setLockAccessAutoSpinPanel = function (O) {
            this.setLockAccess(N.SPIN_OPTIONS, O);
          };
          P.prototype.setLockAccessBetPanel = function (O) {
            this.setLockAccess(N.BET_OPTIONS, O);
          };
          P.prototype.setLockMoreMenuButton = function (O) {
            this.setLockAccess(N.MORE_MENU, O);
          };
          P.prototype.setHidden = function (O) {
            this.td = O;
            this.settingMenuController.setHidden(O);
          };
          P.prototype.isIdle = function () {
            return this.settingMenuController.isIdle();
          };
          Object.defineProperty(P.prototype, "isShowBlackTintBg", {
            'set': function (O) {
              this.md = O;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.activateWalletNotify = function (O) {
            this.settingInfoFooter.activateWalletNotify(O);
          };
          P.prototype.addSettingInfoFooter = function (O) {
            this.Nd = O;
            this.pd.setupOtherButtonInList(N.WALLET, O.interactableWalletButton.bind(O));
            O.updateLayout(shell.isRTLLanguage && shell.isRTLLanguage());
            O.setWinIcon(this.settingInfoFooterLocaleWinIcon);
            O.setOpenWalletMenuCallback(this.ev.bind(this));
            O.showBackground(false);
            O.changeHolder(this.settingMenuController.getSettingInfoFooterFrontHolder());
            this.pd.setupOtherButtonInList(N.BET_OPTIONS, O.interactableBetOptionsButton.bind(O));
            O.setOpenBetOptionsMenuCallback(this.sv.bind(this));
            this.updateBetLabelCallback(O.updateBetAmount.bind(O));
            this.pd.setupOtherButtonInList(N.WIN, O.interactableWinButton.bind(O));
            O.setOpenWinMenuCallback(this.Yd.bind(this, true));
            O.boot();
          };
          P.prototype.getSettingInfoFooter = function () {
            return this.settingInfoFooter;
          };
          Object.defineProperty(P.prototype, "settingInfoFooter", {
            'get': function () {
              if (!this.Nd) {
                throw Error("SettingMenuHelper :: settingInfoFooter : Cannot find settingInfoFooter. Please setup setting info footer first! (addSettingInfoFooter)");
              }
              return this.Nd;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.showSettingInfoFooterBackground = function (O) {
            this.settingInfoFooter.showBackground(O);
          };
          P.prototype.setFreeGameMode = function (O) {
            var L;
            var U;
            this.isFreeGameMode = O;
            if (O) {
              this.setLockAccess(N.BET_OPTIONS, true);
              this.Vd.buttonActivate(false);
              this.Fd.buttonActivate(false);
              if (!(null === (L = this.Zd) || undefined === L)) {
                L.buttonActivate(false);
              }
            } else {
              this.setLockAccess(N.BET_OPTIONS, false);
              this.Vd.buttonActivate(true);
              this.Fd.buttonActivate(true);
              if (!(null === (U = this.Zd) || undefined === U)) {
                U.buttonActivate(true);
              }
              this.checkSelectedValue(y.toDecimalWithExp(this.betSizeValue * this.betLevelValue * this.betLineValue, 0x2));
            }
          };
          P.prototype.getCurrentBalance = function () {
            return this.settingInfoFooter.currentBalance;
          };
          P.prototype.additionalBetCalculation = function () {
            if (!this.lv) {
              throw Error("SettingMenuHelper :: additionalBetCalculation : Please set calculation callback via additionalBetCalculationCallback setter first!");
            }
            return this.lv(this.betLineValue, this.betLevelValue, this.betSizeValue);
          };
          Object.defineProperty(P.prototype, "betLineValue", {
            'get': function () {
              return this.hd;
            },
            'set': function (O) {
              this.qf.emit("SlotMenu.SetBetLineValue", O);
              this.hd = O;
              this.preCalculateCombination();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "betSizeList", {
            'get': function () {
              return this.rd;
            },
            'set': function (O) {
              this.qf.emit("SlotMenu.SetBetSizeList", O);
              this.rd = O;
              this.preCalculateCombination();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "betSizeValue", {
            'get': function () {
              return this.lt;
            },
            'set': function (O) {
              this.qf.emit("SlotMenu.SetBetSizeValue", O);
              this.lt = O;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "minimumBetAmount", {
            'get': function () {
              return this.gv;
            },
            'set': function (O) {
              this.qf.emit("SlotMenu.SetMinimumBetAmount", O);
              this.gv = O;
              this.preCalculateCombination();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "featureBuyThreshold", {
            'get': function () {
              return this.Cv;
            },
            'set': function (O) {
              this.qf.emit("SlotMenu.SetFeatureBuyThreshold", O);
              this.Cv = O;
              this.preCalculateCombination();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "betLevelList", {
            'get': function () {
              return this.ad;
            },
            'set': function (O) {
              this.qf.emit("SlotMenu.SetBetLevelList", O);
              this.ad = O;
              this.preCalculateCombination();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "betLevelValue", {
            'get': function () {
              return this.ut;
            },
            'set': function (O) {
              this.qf.emit("SlotMenu.SetBetLevelValue", O);
              this.ut = O;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "baseBet", {
            'get': function () {
              return this.ud;
            },
            'set': function (O) {
              this.ud = O;
              this.qf.emit("SlotMenu.SetBaseBet", O);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "soundEnable", {
            'get': function () {
              return j.soundOn;
            },
            'set': function (O) {
              this.soundOn = O;
              j.soundOn = O;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.playWalletCountingAboveSfx = function () {
            var O = this.walletCountingAbove;
            if (O) {
              O.play();
            }
          };
          P.prototype.playMenuIconPressSound = function () {
            var O = this.menuIconPress;
            if (O) {
              O.play();
            }
          };
          P.prototype.playListItemClickSound = function () {
            var O = this.listItemClick;
            if (O) {
              O.play();
            }
          };
          P.prototype.playSliderEffectSound = function () {
            var O = this.sliderEffect;
            if (O) {
              O.play();
            }
          };
          P.prototype.Md = function (O) {
            for (var L in this.ld) this[L] = new O({
              'preload': false,
              'src': y.getCocosMajor() >= 0x4 ? "/lib/setting_menu/" + this.ld[L] : cc.url.raw("/resources/lib/setting_menu/" + this.ld[L] + ".mp3")
            });
          };
          P.prototype.Ad = function (O) {
            var L = this;
            if (this.Wv) {
              var U = this.Wv;
              this.Wv = undefined;
              if (U) {
                U();
              }
            }
            this.Wv = y.sequenceCallback(function (T) {
              L.xv("menuIconPress", function (h0) {
                if (h0) {
                  O(h0);
                } else {
                  T();
                }
              });
            }, function (T) {
              L.xv("listItemClick", function (h0) {
                if (h0) {
                  O(h0);
                } else {
                  T();
                }
              });
            }, function (T) {
              L.xv("sliderEffect", function (h0) {
                if (h0) {
                  O(h0);
                } else {
                  T();
                }
              });
            }, function (T) {
              L.xv("walletCountingAbove", function (h0) {
                if (h0) {
                  O(h0);
                } else {
                  T();
                }
              });
            })(O);
          };
          P.prototype.xv = function (O, L) {
            var U = this;
            if (this.fd[O]) {
              if (L) {
                L();
              }
            } else {
              var T = this[O];
              var h0 = function () {
                T.off("loaderror", h1);
                U.fd[O] = true;
                if (L) {
                  L();
                }
              };
              var h1 = function (h2, h3) {
                T.off("load", h0);
                if (L) {
                  L(h3);
                }
              };
              T.once("load", h0);
              T.once("loaderror", h1);
              T.load();
            }
          };
          P.prototype.reset = function () {
            var O = {
              sliderEffect: false,
              listItemClick: false,
              menuIconPress: false
            };
            if (this.Ld) {
              this.Ld();
            }
            if (this.uv) {
              this.uv();
            }
            if (this.Wd) {
              this.Wd();
            }
            if (this.kv) {
              this.kv();
            }
            if (this.Ed) {
              this.Ed();
            }
            this._v = undefined;
            this.rv = undefined;
            this.av = undefined;
            this.Ev = undefined;
            this.tv = undefined;
            this.Ud = undefined;
            this.Pd = undefined;
            this.pd = new k["default"]();
            this.Wv = undefined;
            this.fd = O;
          };
          P.prototype.hv = function (O) {
            this.qf.emit("Wallet.ShowWalletList", O);
          };
          P.prototype.pv = function (O) {
            this.qf.emit("Game.TransactionInfoChanged", O);
          };
          P.prototype.Uv = function (O) {
            var L = O ? 'On' : "Off";
            this.qf.emit("Game.AudioStateChanged", L);
          };
          P.prototype.Sd = function () {
            var O = this;
            Y.setGamePlayUIBlockEventCallback("settingmenu", function (L) {
              O.settingMenuController.setMenuUIBlock(L);
            });
            if (W) {
              this.qf.on("Wallet.Hidden", function () {
                O.settingMenuController.setIsControllerPresenting(false);
              });
              this.qf.on("Wallet.Shown", function () {
                O.nv();
                O.hideMoreMenuLayer();
                O.settingMenuController.setIsControllerPresenting(true);
                O.activateWalletNotify(false);
              });
              this.qf.on("SlotMenu.StartAutoSpin", function (L) {
                if (O.rv) {
                  O.rv(L);
                }
              }, this);
            }
            if (F) {
              this.qf.on("SlotMenu.HiddenBetOptions", function () {
                O.settingMenuController.setIsControllerPresenting(false);
              });
              this.qf.on("SlotMenu.HiddenSpinOptions", function () {
                O.settingMenuController.setIsControllerPresenting(false);
              });
              this.qf.on("Game.ShowOptions", this.openBetMenu, this);
              this.qf.on("Game.HideOptions", this.Fv, this);
              this.qf.on("SlotMenu.ManualUpdateBetFactorCallback", function (L) {
                var U = L.payload;
                var T = U.betSize;
                var h0 = U.betLevel;
                if (O.fv) {
                  O.fv(T, h0);
                }
              }, this);
              this.qf.on("SlotMenu.CancelBetPanelCallback", function () {
                if (O.vv) {
                  O.vv();
                }
              }, this);
              this.qf.on("SlotMenu.FinishBetPickCallback", function (L) {
                var U = L.payload;
                var T = U.betSize;
                var h0 = U.betLevel;
                if (O.dv) {
                  O.dv(T, h0);
                }
              }, this);
            }
            if (I) {
              this.qf.on("Paytable.Hide", function () {
                O.settingMenuController.setIsControllerPresenting(false);
              });
              this.qf.on("GameRules.Hide", function () {
                O.settingMenuController.setIsControllerPresenting(false);
              });
            }
            if (E) {
              this.qf.on("History.Close", function () {
                O.settingMenuController.setIsControllerPresenting(false);
              });
            }
            this.qf.on("Game.OnAudio", function () {
              O.soundEnable = true;
            });
            this.qf.on("Game.OffAudio", function () {
              O.soundEnable = false;
            });
            this.qf.on("Game.RequestAudioState", function (L) {
              if (true === O.soundEnable) {
                L.response = 'On';
              } else {
                L.response = "Off";
              }
            });
            this.qf.on("SettingMenuHelper.GetSettingMenuType", function (L) {
              L.response = A.NEW;
            });
            this.qf.on("Game.GetSettingMenuType", function (L) {
              L.response = A.NEW;
            });
            this.qf.on("Game.ReplayInitiated", function () {
              var L = O.settingMenuController;
              if ("land" === shell.environment.getOrientationMode()) {
                L.muteIcon.active = false;
              } else if (O.soundOn) {
                L.muteIcon.active = false;
              } else {
                L.muteIcon.active = true;
              }
              if (!L.isControllerPresenting() && !L.isSwitchingMenuLayer()) {
                L.hideMoreMenuLayer();
                var U = O.tv;
                if (U) {
                  U(O.td, true);
                }
              }
            });
          };
          P.prototype.gd = function () {
            var O = this;
            this.qf.on("Game.TransactionStateComplete", function (L) {
              if (O.Vv) {
                var U = L.payload.to;
                if ("setup" === U && O.bd) {
                  O.bd = false;
                }
                if (!("action" !== U || O.bd)) {
                  O.bd = true;
                }
              }
            });
            this.qf.on("Game.TransactionInfoUpdated", function (L) {
              if (O.Vv) {
                O.zv = L.payload.tbb;
              }
            });
          };
          P.prototype.Cd = function () {
            var O = this;
            this.qf.emit("Game.RequestSession", undefined, function (L) {
              var U = L.response;
              if (!U || !U.gameId) {
                throw Error("SettingMenuHelper:: Game.RequestSession return invalid data");
              }
              O.xd = U.operatorJurisdictionConfig.turboSpinEnable;
              O.zd = U.operatorJurisdictionConfig.autoPlayConfig;
              O.Vv = U.operatorJurisdictionConfig.hideNonProfitEffect;
              O.ed = U.operatorJurisdictionConfig.backButton;
            });
            this.qf.off("Game.Initialized", this.Cd.bind(this));
          };
          P.prototype.ov = function (O) {
            if (O) {
              this.qf.on("Game.HideOptions", this.Fv, this);
            } else {
              this.qf.off("Game.HideOptions", this.Fv, this);
            }
          };
          P.prototype.Fv = function () {
            this.ov(false);
            this.qf.emit("SlotMenu.HideBetOptions");
          };
          P.prototype.Dv = function (O) {
            if (O) {
              this.qf.emit("Game.RequestTransactionInfo", undefined, function (L) {
                O(L.response);
              });
            }
          };
          P.prototype.cv = function (O) {
            var L = {
              actionName: O
            };
            this.qf.emit("Analytics.Event", L);
          };
          P.prototype.Pv = function (O) {
            var L = this;
            if (this.Jv) {
              this.Jv();
            } else {
              this.qv = parseFloat(this.mv);
            }
            this.Jv = y.delayCallback(0.6)(function () {
              if (O !== L.qv) {
                L.qf.emit("SlotMenu.ChangeBet", O);
              }
              L.Jv = undefined;
              L.qv = undefined;
            });
          };
          P.prototype.changeSoundButtonHolder = function () {
            if ("land" === shell.environment.getOrientationMode()) {
              var O = this.settingInfoFooter;
              if (O.landscapeSoundButtonHolder && this.jd) {
                this.jd.parent = O.landscapeSoundButtonHolder;
                if (!this.xd) {
                  this.jd.getComponent("GenericSettingButton").sprite.node.active = true;
                  this.jd.getComponent("GenericSettingButton").largeSprite.node.active = false;
                }
              }
            }
          };
          P.prototype.returnSoundButtonHolder = function () {
            if ("land" === shell.environment.getOrientationMode() && this.Dd && this.jd) {
              this.jd.parent = this.Dd;
              if (!this.xd) {
                this.jd.getComponent("GenericSettingButton").largeSprite.node.active = true;
                this.jd.getComponent("GenericSettingButton").sprite.node.active = false;
              }
            }
          };
          P.prototype.getSettingMenuButtonNode = function (O) {
            return this.pd.getButtonNode(O);
          };
          P.prototype.jv = function (O) {
            var L = this.settingInfoFooter;
            if (this.bd && this.Vv) {
              var U = L.currentBalance;
              var T = +y.toFixed(O - L.currentBalance, 0x2);
              if (this.zv && O > U && T > this.zv) {
                return true;
              }
            }
            return false;
          };
          return __decorate([w("SettingMenuHelper")], P);
        }(cc.Object))();
        K.settingMenuHelper = Z;
        cc._RF.pop();
      }
    }, RT],
    'SettingSliderNum': [function (h, M, B) {
      'use strict';

      if (!cc._RF.push(M, "89028I5vilAgJwUYY+0IKoT", "SettingSliderNum")) {
        B.__esModule = true;
        B["default"] = undefined;
        var Q = h("Utils");
        var C = cc.Class({
          'extends': cc.Component,
          'properties': {
            'numberLabel': cc.Label,
            'numSprites': [cc.Sprite],
            'pixelSprites': [cc.SpriteFrame],
            'num': 0xa,
            'shortLine': cc.Node,
            'onColor': cc.Color,
            'offColor': cc.Color,
            'isMin': false
          },
          'setColor': function (K, S) {
            this.onColor = K;
            this.offColor = S;
          },
          'setDisplayValue': function (K, S) {
            this.numberLabel.string = S;
            this.numberLabel.node.active = K;
          },
          'onLoad': function () {
            if (this.isMin) {
              this.shortLine.active = false;
            }
          },
          'setLight': function (K) {
            if (K) {
              0x0;
              Q.setNodeColorWithOpacity(this.numberLabel.node, this.onColor);
            } else {
              0x0;
              Q.setNodeColorWithOpacity(this.numberLabel.node, this.offColor);
            }
          }
        });
        B["default"] = C;
        M.exports = B["default"];
        cc._RF.pop();
      }
    }, Rg],
    'SettingSliderSingleNum': [function (h, M, B) {
      'use strict';

      if (!cc._RF.push(M, "449bftyQ69GBqYbHra7PRW2", "SettingSliderSingleNum")) {
        B.__esModule = true;
        B["default"] = undefined;
        var Q = h("Utils");
        var C = cc.Class({
          'extends': cc.Component,
          'properties': {
            'numberLabel': cc.Label,
            'num': 0xa,
            'onColor': cc.Color,
            'offColor': cc.Color
          },
          'onLoad': function () {
            this.numberLabel.string = this.num;
          },
          'setColor': function (K, S) {
            this.onColor = K;
            this.offColor = S;
          },
          'setLight': function (K) {
            if (K) {
              0x0;
              Q.setNodeColorWithOpacity(this.numberLabel.node, this.onColor);
            } else {
              0x0;
              Q.setNodeColorWithOpacity(this.numberLabel.node, this.offColor);
            }
          }
        });
        B["default"] = C;
        M.exports = B["default"];
        cc._RF.pop();
      }
    }, l0],
    'SettingSliderSingle': [function (h, M, B) {
      'use strict';

      if (!cc._RF.push(M, "41cdfy0E9FKC7KilcTyf7iZ", "SettingSliderSingle")) {
        B.__esModule = true;
        B["default"] = undefined;
        var Q = cc.Class({
          'extends': cc.Component,
          'properties': {
            'settingSliderNum': cc.Prefab,
            'numbers': [cc.Float],
            'content': cc.Node,
            'valueLabel': cc.Label,
            'alwaysShow': false
          },
          'onEnable': function () {
            this.Kv();
            this.node.on("size-changed", this.Kv, this);
          },
          'onDisable': function () {
            this.node.off("size-changed", this.Kv, this);
          },
          'Kv': function () {
            this.Qv = cc.Canvas.instance.node.width / 0x2;
            if (this.Yv) {
              var C = this.Xv;
              var K = 0x0;
              for (var S = C.length; K < S; K++) {
                C[K].node.x = this.Qv + 0xb7 * K;
              }
              this.updateSlider();
            }
          },
          'setBiggestValue': function () {
            var C = this.numbers.length - 0x1;
            this.setLight(C);
            this.content.x = -this.Qv - 0xb7 * C;
          },
          'setNumberList': function (C) {
            this.numbers = C;
          },
          'setValueColor': function (C, K) {
            this.Zv = C;
            this.$v = K;
          },
          'setPlaySound': function (C) {
            this.t_ = C;
          },
          'init': function () {
            var C = this;
            this.Yv = false;
            var K = this.Xv = [];
            var S = this.numbers;
            var q = this.numbers.length - 0x1;
            var N = this.content;
            var J = 0x0;
            for (var A = this.numbers.length; J < A; J++) {
              var y = cc.instantiate(this.settingSliderNum);
              var b = K[J] = y.getComponent("SettingSliderSingleNum");
              b.setColor(this.Zv, this.$v);
              b.num = S[J];
              y.x = this.Qv + 0xb7 * J;
              y.parent = this.content;
            }
            var k = -this.Qv - 0xb7 * q;
            var D = -this.Qv;
            var x = this.node;
            x.on(cc.Node.EventType.TOUCH_START, function (Y) {
              if (x.active) {
                Y.stopPropagation();
                C.i_ = Y.getLocation().x;
                C.s_ = N.x;
              }
            });
            x.on(cc.Node.EventType.TOUCH_MOVE, function (Y) {
              if (x.active) {
                Y.stopPropagation();
                var m = Y.getLocation().x - C.i_;
                var W = C.s_ + m;
                if (W < k) {
                  N.x = k;
                  C.setLight(q);
                } else if (W > D) {
                  N.x = D;
                  C.setLight(0x0);
                } else {
                  var F = Math.round(m / 0xb7);
                  var E = 0xb7 * F;
                  var v = C.s_ + E;
                  N.x = v;
                  C.setLight(-((C.Qv + C.s_) / 0xb7 + F));
                }
              }
            });
            x.on(cc.Node.EventType.TOUCH_CANCEL, function (Y) {
              if (x.active) {
                Y.stopPropagation();
                if (C.updateValue) {
                  C.updateValue(C.e_);
                }
              }
            });
            x.on(cc.Node.EventType.TOUCH_END, function (Y) {
              if (x.active) {
                Y.stopPropagation();
                if (C.updateValue) {
                  C.updateValue(C.e_);
                }
              }
            });
            if (this.alwaysShow) {
              var G = this.e_ || 0x0;
              this.setDefaultFirstSliderNum(G);
            } else {
              x.active = false;
            }
            this.Yv = true;
          },
          'setLight': function (C, K) {
            if (undefined === K) {
              K = false;
            }
            C = Math.round(C);
            var S = this.e_;
            if (this.valueLabel) {
              this.e_ = this.valueLabel.string = this.numbers[C];
            } else {
              this.e_ = this.numbers[C];
            }
            if (!(K || S == this.e_)) {
              this.t_();
            }
            if (C % 0x1 == 0x0) {
              var q = this.Xv[C];
              if (q == this.n_) {
                return;
              }
              q.setLight(true);
              if (this.n_) {
                this.n_.setLight(false);
              }
              this.n_ = q;
            } else if (this.n_) {
              this.n_.setLight(false);
              this.n_ = null;
            }
            if (this.saveValue) {
              this.saveValue(this.e_);
            }
          },
          'setDefaultFirstSliderNum': function (C) {
            var K = this.numbers.indexOf(C);
            if (-0x1 === K) {
              K = 0x0;
            }
            var S = 0xb7 * K;
            var q = -this.Qv - S;
            this.content.x = q;
            this.setLight(K, true);
          },
          'setValue': function (C) {
            this.e_ = C;
          },
          'getValue': function () {
            return this.e_;
          },
          'updateSlider': function () {
            this.setDefaultFirstSliderNum(this.e_);
          },
          'testSetSliderNum': function () {
            this.setDefaultFirstSliderNum(0x5 * Math.floor(0x15 * Math.random()));
          },
          't_': function () {}
        });
        B["default"] = Q;
        M.exports = B["default"];
        cc._RF.pop();
      }
    }, {}],
    'SettingSlider': [function (h, M, B) {
      'use strict';

      if (!cc._RF.push(M, "357638pYQ9Eibsf8KFNqaZK", "SettingSlider")) {
        B.__esModule = true;
        B["default"] = undefined;
        var Q = cc.Class({
          'extends': cc.Component,
          'properties': {
            'settingSliderNum': cc.Prefab,
            'numInterval': 0xa,
            'maxUnit': 0xa,
            'minNum': 0x0,
            'content': cc.Node,
            'alwaysShow': false,
            'isPositive': false,
            'showValue': false
          },
          'setValueColor': function (C, K) {
            this.Zv = C;
            this.$v = K;
          },
          'init': function () {
            var C = this;
            var K = this.Xv = [];
            var S = this.numInterval;
            var q = this.minNum;
            var N = this.maxUnit;
            var f = this.content;
            for (var J = 0x0; J <= N; J++) {
              var A = cc.instantiate(this.settingSliderNum);
              var y = K[J] = A.getComponent("SettingSliderNum");
              y.setColor(this.Zv, this.$v);
              y.num = q + J * S;
              A.x = 0x26d + 0xd2 * J;
              if (0x0 == J) {
                y.isMin = true;
              } else {
                y.setDisplayValue(this.showValue, y.num);
              }
              A.parent = f;
            }
            var b = -0x26d - 0xd2 * N;
            var k = this.node;
            k.on(cc.Node.EventType.TOUCH_START, function (x) {
              if (k.active) {
                x.stopPropagation();
                C.i_ = x.getLocation().x;
                C.s_ = f.x;
              }
            });
            k.on(cc.Node.EventType.TOUCH_MOVE, function (x) {
              if (k.active) {
                x.stopPropagation();
                var G = x.getLocation().x - C.i_;
                var Y = C.s_ + G;
                if (Y < b) {
                  f.x = b;
                  C.setLight(N);
                } else if (Y > -0x26d) {
                  f.x = -0x26d;
                  C.setLight(0x0);
                } else {
                  var m = Math.round(G / 0x69);
                  var W = 0x69 * m;
                  var F = C.s_ + W;
                  f.x = F;
                  C.setLight(-((0x26d + C.s_) / 0x69 + m) / 0x2);
                }
              }
            });
            k.on(cc.Node.EventType.TOUCH_CANCEL, function (x) {
              if (k.active) {
                x.stopPropagation();
                if (C.saveValue) {
                  C.saveValue(C.e_);
                }
              }
            });
            k.on(cc.Node.EventType.TOUCH_END, function (x) {
              if (k.active) {
                x.stopPropagation();
                if (C.saveValue) {
                  C.saveValue(C.e_);
                }
              }
            });
            if (this.alwaysShow) {
              var D = this.e_ || 0x0;
              this.setDefaultFirstSliderNum(D);
            } else {
              k.active = false;
            }
          },
          'setLight': function (C, K) {
            if (undefined === K) {
              K = false;
            }
            this.e_;
            if (!K) {
              this.e_;
            }
            if (C % 0x1 == 0x0) {
              var S = this.Xv[C];
              if (S == this.n_) {
                return void (this.saveValue && this.saveValue(this.e_));
              }
              S.setLight(true);
              if (this.n_) {
                this.n_.setLight(false);
              }
              this.n_ = S;
            } else if (this.n_) {
              this.n_.setLight(false);
              this.n_ = null;
            }
            if (this.saveValue) {
              this.saveValue(this.e_);
            }
          },
          'setDefaultFirstSliderNum': function (C) {
            var K = (C - this.minNum) / 0x5;
            var S = -0x26d - 0x69 * K;
            this.content.x = S;
            this.setLight(K / 0x2, true);
          },
          'setValue': function (C) {
            this.e_ = C;
          },
          'getValue': function () {
            return this.e_;
          },
          'updateSlider': function () {
            this.setDefaultFirstSliderNum(this.e_);
          },
          'testSetSliderNum': function () {
            this.setDefaultFirstSliderNum(0x5 * Math.floor(0x15 * Math.random()));
          }
        });
        B["default"] = Q;
        M.exports = B["default"];
        cc._RF.pop();
      }
    }, {}],
    'SettingTurboSpinButton': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "eaed475bBBLf69c2AHexgPy", "SettingTurboSpinButton")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("GenericSettingButton");
        var q = B("UIAppearanceHelper");
        var N = B("Utils");
        var f = B("TurboButtonEffect");
        var J = cc._decorator;
        var A = J.ccclass;
        var y = J.property;
        var k = function (D) {
          function x() {
            var G = null !== D && D.apply(this, arguments) || this;
            G.sprite = undefined;
            G.spriteEffect = undefined;
            G.titleLabel = undefined;
            G.turboSpinOn = undefined;
            G.turboSpinOff = undefined;
            G.turboSpinEffectOn = undefined;
            G.turboSpinEffectOff = undefined;
            G.turboSpinEffectAnim = undefined;
            G.lightingEffectAnim = undefined;
            G.spriteLightEffectNode = undefined;
            G.spriteLightShadowEffectNode = undefined;
            G.turboButtonEffect = undefined;
            G.Gr = true;
            G.o_ = undefined;
            G.c_ = undefined;
            G.h_ = [{
              'animName': "turbo_lighting_style_1",
              'positionOffsetXLeft': 0x0,
              'positionOffsetXRight': Math.floor(Math.random() * 3) + 0x1,
              'positionOffsetYLeft': Math.floor(Math.random() * 4) + 0x0,
              'positionOffsetYRight': Math.floor(Math.random() * 7) + 0x0,
              'scaleX': 1.2,
              'scaleY': 1.2,
              'rotation': 0x0
            }, {
              'animName': "turbo_lighting_style_2",
              'positionOffsetXLeft': Math.floor(Math.random() * 5) + 0x0,
              'positionOffsetXRight': Math.floor(Math.random() * 11) + 0x0,
              'positionOffsetYLeft': Math.floor(Math.random() * 23) + 0x0,
              'positionOffsetYRight': Math.floor(Math.random() * 9) + 0x0,
              'scaleX': 1.4,
              'scaleY': 1.2,
              'rotation': 0x0
            }, {
              'animName': "turbo_lighting_style_3",
              'positionOffsetXLeft': Math.floor(Math.random() * 12) + 0x0,
              'positionOffsetXRight': Math.floor(Math.random() * 23) + 0x0,
              'positionOffsetYLeft': Math.floor(Math.random() * 6) + 0x0,
              'positionOffsetYRight': Math.floor(Math.random() * 21) + 0x0,
              'scaleX': 1.2,
              'scaleY': 1.2,
              'rotation': Math.floor(Math.random() * 21) + -0xa
            }];
            return G;
          }
          __extends(x, D);
          x.prototype.onLoad = function () {
            D.prototype.onLoad.call(this);
            this.turboButtonEffect.getComponent(f["default"]).setUpdateTurboMiddleIconCallback(this.changeTurboSprite.bind(this));
          };
          x.prototype.setTurboSprites = function (G, Y) {
            this.turboSpinOn = G;
            this.turboSpinOff = Y;
          };
          x.prototype.playTurboLighting = function () {
            this.spriteEffect.spriteFrame = undefined;
            this.turboSpinEffectAnim.once("finished", this.r_, this);
            if (this.Gr) {
              this.turboSpinEffectAnim.play("turbo_icon_1st_up");
              this.Gr = undefined;
            } else {
              this.turboSpinEffectAnim.play("turbo_icon_up");
            }
          };
          x.prototype.stopTurboLighting = function () {
            var G = this.o_;
            this.o_ = undefined;
            if (G) {
              G();
            }
            var Y = this.c_;
            this.c_ = undefined;
            if (Y) {
              Y();
            }
            this.turboSpinEffectAnim.stop();
            this.lightingEffectAnim.stop();
            this.spriteLightShadowEffectNode.opacity = 0x0;
            this.spriteLightEffectNode.getComponent(cc.Sprite).spriteFrame = undefined;
            this.spriteLightEffectNode.x = 0x0;
            this.spriteLightEffectNode.y = 0x0;
            this.spriteEffect.node.opacity = 0xff;
          };
          x.prototype.changeTurboSprite = function () {
            var G = this.getTurboSpinCallback && this.getTurboSpinCallback();
            this.sprite.spriteFrame = G ? this.turboSpinOn : this.turboSpinOff;
          };
          x.prototype.r_ = function () {
            this.a_();
            this.u_();
          };
          x.prototype.a_ = function () {
            var G = this;
            this.c_ = N.delayCallback(0x1)(function () {
              var Y = G.h_[Math.floor(Math.random() * 3) + 0x0];
              var m = Math.floor(Math.random() * 2) + 0x0;
              var W = Math.floor(Math.random() * 2) + 0x0;
              G.spriteLightEffectNode.x = m ? Y.positionOffsetXRight : -Y.positionOffsetXLeft;
              G.spriteLightEffectNode.y = W ? Y.positionOffsetYRight : -Y.positionOffsetYLeft;
              G.spriteLightEffectNode.scaleX = Y.scaleX;
              G.spriteLightEffectNode.scaleY = Y.scaleY;
              G.spriteLightEffectNode.angle = -Y.rotation;
              G.lightingEffectAnim.once("finished", G.a_, G);
              G.lightingEffectAnim.play(Y.animName);
            });
          };
          x.prototype.u_ = function () {
            var G = this;
            this.o_ = N.delayCallback(0x3)(function () {
              G.turboSpinEffectAnim.once("finished", G.u_, G);
              G.turboSpinEffectAnim.play("turbo_icon_loop");
            });
          };
          x.prototype.setSpriteScaleSize = function (G) {
            this.sprite.node.setScale(cc.v2(G, G));
          };
          x.prototype.setTitle = function (G) {
            this.titleLabel.string = G;
          };
          x.prototype.setButtonOnColor = function (G, Y) {
            this.l_ = G;
            this.f_ = Y;
          };
          x.prototype.setButtonOffColor = function (G, Y) {
            this.d_ = G;
            this.v_ = Y;
          };
          x.prototype.changeButtonColor = function (G) {
            this.buttonTheme.domainKey = G ? this.l_ : this.d_;
            this.buttonTheme.colorKey = G ? this.f_ : this.v_;
            D.prototype.changeButtonColor.call(this, false);
          };
          x.prototype.changeButtonPressedColor = function (G) {
            if (G) {
              this.node.runAction(cc.scaleTo(0.05, 0.9));
            } else {
              this.node.runAction(cc.sequence(cc.scaleTo(0.05, 1.1), cc.scaleTo(0.05, 1.05), cc.scaleTo(0.05, 0x1)));
            }
          };
          x.prototype.interactableButtonColor = function (G) {
            if (this.buttonTheme) {
              var Y = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var m = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              var W = G ? Y : m;
              this.turboSpinEffectAnim.node.opacity = W.a;
              N.setNodeColorWithOpacity(this.iconSprite, W);
              N.setNodeColorWithOpacity(this.spriteEffect.node, W);
              N.setNodeColorWithOpacity(this.spriteLightEffectNode, W);
              N.setNodeColorWithOpacity(this.spriteLightShadowEffectNode, W);
              N.setNodeColorWithOpacity(this.sprite.node, W);
            }
          };
          x.prototype.changeSpriteEffectColor = function () {
            if (this.buttonTheme) {
              var G = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              N.setNodeColorWithOpacity(this.spriteEffect.node, G);
              N.setNodeColorWithOpacity(this.spriteLightEffectNode, G);
              N.setNodeColorWithOpacity(this.iconSprite, G);
              N.setNodeColorWithOpacity(this.spriteLightShadowEffectNode, G);
            }
          };
          x.prototype.destroy = function () {
            this.stopTurboLighting();
            return D.prototype.destroy.call(this);
          };
          __decorate([y(cc.Sprite)], x.prototype, "sprite", undefined);
          __decorate([y(cc.Sprite)], x.prototype, "spriteEffect", undefined);
          __decorate([y(cc.Label)], x.prototype, "titleLabel", undefined);
          __decorate([y(cc.SpriteFrame)], x.prototype, "turboSpinOn", undefined);
          __decorate([y(cc.SpriteFrame)], x.prototype, "turboSpinOff", undefined);
          __decorate([y(cc.SpriteFrame)], x.prototype, "turboSpinEffectOn", undefined);
          __decorate([y(cc.SpriteFrame)], x.prototype, "turboSpinEffectOff", undefined);
          __decorate([y(cc.Animation)], x.prototype, "turboSpinEffectAnim", undefined);
          __decorate([y(cc.Animation)], x.prototype, "lightingEffectAnim", undefined);
          __decorate([y(cc.Node)], x.prototype, "spriteLightEffectNode", undefined);
          __decorate([y(cc.Node)], x.prototype, "spriteLightShadowEffectNode", undefined);
          __decorate([y(f["default"])], x.prototype, "turboButtonEffect", undefined);
          return __decorate([A], x);
        }(S["default"]);
        C["default"] = k;
        cc._RF.pop();
      }
    }, l1],
    'SinglePayoutModel': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "029b1Bdw8RM4ZEeOX8HEoFh", "SinglePayoutModel")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = function () {
          function S() {
            this.__ = [];
          }
          Object.defineProperty(S.prototype, "reelData", {
            'get': function () {
              return this.__;
            },
            'set': function (q) {
              this.__ = q;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(S.prototype, "payoutData", {
            'get': function () {
              return this.m_;
            },
            'set': function (q) {
              this.m_ = q;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(S.prototype, "extendSymbolData", {
            'get': function () {
              return this.p_;
            },
            'set': function (q) {
              this.p_ = q;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(S.prototype, "extendBlockData", {
            'get': function () {
              return this.b_;
            },
            'set': function (q) {
              this.b_ = q;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(S.prototype, "positionArray", {
            'get': function () {
              return this.S_;
            },
            'set': function (q) {
              this.S_ = q;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(S.prototype, "additionalData", {
            'get': function () {
              return this.g_;
            },
            'set': function (q) {
              this.g_ = q;
            },
            'enumerable': false,
            'configurable': true
          });
          return S;
        }();
        Q["default"] = K;
        cc._RF.pop();
      }
    }, {}],
    'SkipHandler': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "eee58Gk/h5Ii6sEAYgH+CZ6", "SkipHandler")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator.ccclass;
        var S = new (function (q) {
          function N() {
            var f = null !== q && q.apply(this, arguments) || this;
            f.clickEffectController = null;
            f.notifyStack = [];
            return f;
          }
          __extends(N, q);
          N.prototype.init = function (f, o) {
            this.clickEffectController = o;
            f.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this, false);
          };
          N.prototype.subscribeOnce = function (f) {
            var o = this;
            this.notifyStack.push(f);
            return function () {
              var J = o.notifyStack.indexOf(f);
              if (J > -0x1) {
                o.notifyStack.splice(J, 0x1);
              }
            };
          };
          N.prototype.onTouchStart = function (f) {
            if (this.clickEffectController && !(this.notifyStack.length < 0x1)) {
              this.clickEffectController.showClickEffect(f.getLocation());
              var o = this.notifyStack.shift();
              if (o) {
                o();
              }
            }
          };
          N.prototype.removeEvent = function (f) {
            f.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this, false);
          };
          return __decorate([K], N);
        }(cc.Object))();
        Q["default"] = S;
        cc._RF.pop();
      }
    }, {}],
    'SliderEx': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "dbb33H+Xs1Dw7xtUJLC1l6D", "SliderEx")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.content = undefined;
            A.contentHeight = 0x0;
            return A;
          }
          __extends(J, f);
          J.prototype.onEnable = function () {
            this.node.on(cc.Node.EventType.TOUCH_START, this.Si, this);
            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
            this.node.on(cc.Node.EventType.TOUCH_END, this.yi, this);
            this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.Ii, this);
            if (this.handle && this.handle.isValid) {
              this.handle.node.on(cc.Node.EventType.TOUCH_START, this.C_, this);
              this.handle.node.on(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
              this.handle.node.on(cc.Node.EventType.TOUCH_END, this.yi, this);
            }
            this.y_();
          };
          J.prototype.onDisable = function () {
            this.node.off(cc.Node.EventType.TOUCH_START, this.Si, this);
            this.node.off(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
            this.node.off(cc.Node.EventType.TOUCH_END, this.yi, this);
            this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.Ii, this);
            if (this.handle && this.handle.isValid) {
              this.handle.node.off(cc.Node.EventType.TOUCH_START, this.C_, this);
              this.handle.node.off(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
              this.handle.node.off(cc.Node.EventType.TOUCH_END, this.yi, this);
            }
            this.M_();
          };
          J.prototype.A_ = function (A) {
            this.I_(A);
            this.ho();
            this.w_();
          };
          J.prototype.ki = function (A) {
            var y = -cc.view._scaleY;
            var b = cc.v2(0x0, A.getScrollY() * y);
            var u = this.node.convertToWorldSpace(this.handle.node.position).x;
            var k = u + b.y / 0xa;
            this.progress = cc.misc.clamp01(this.progress + (k - u) / this.node.width);
            this.O_();
            this.ho();
            this.w_();
          };
          J.prototype.y_ = function () {
            if (this.content) {
              this.content.parent.on(cc.Node.EventType.MOUSE_WHEEL, this.ki, this, true);
            }
          };
          J.prototype.M_ = function () {
            if (this.content) {
              this.content.parent.off(cc.Node.EventType.MOUSE_WHEEL, this.ki, this, true);
            }
          };
          J.prototype.ho = function () {
            if (this.content) {
              this.content.y = this.progress * (this.content.height - cc.view.getVisibleSize().height);
            }
          };
          __decorate([q(cc.Node)], J.prototype, "content", undefined);
          return __decorate([S], J);
        }(cc.Slider);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'SlotAnalyticsEnum': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "c270fgpIPxIwJGIYJlAbqmn", "SlotAnalyticsEnum")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.SpinStateProcess = Q.SpinCredits = Q.SpinTrigger = undefined;
        (function (K) {
          K[K.CLICK = 0x0] = "CLICK";
          K[K.SPACEBAR = 0x1] = "SPACEBAR";
          K[K.AUTOSPIN = 0x2] = "AUTOSPIN";
        })(Q.SpinTrigger || (Q.SpinTrigger = {}));
        (function (K) {
          K[K.FREE_GAME = 0x0] = "FREE_GAME";
          K[K.CASH = 0x1] = "CASH";
          K[K.BONUS = 0x2] = "BONUS";
          K[K.INSUFFICIENT = 0x3] = "INSUFFICIENT";
        })(Q.SpinCredits || (Q.SpinCredits = {}));
        (function (K) {
          K[K.REEL_SPINNING = 0x0] = "REEL_SPINNING";
          K[K.REEL_STOPPING = 0x1] = "REEL_STOPPING";
          K[K.REEL_STOPPED = 0x2] = "REEL_STOPPED";
        })(Q.SpinStateProcess || (Q.SpinStateProcess = {}));
        cc._RF.pop();
      }
    }, {}],
    'SlotAnalyticsHelper': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "4d769Qc8epMlozoEYpeBTit", "SlotAnalyticsHelper")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.sendFastStopGA = undefined;
        var K = M("AnalyticsHelper");
        Q.sendFastStopGA = function (S, q) {
          var N = {
            type: S,
            is_auto: q
          };
          K.sendEvent(shell.ga.CATEGORY_GAME, shell.ga.EVENT_SLOT_STOP_SPIN, N);
        };
        cc._RF.pop();
      }
    }, l2],
    'SlotController.spec': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "a3e43/zCkNOHLpHC2GOChmq", "SlotController.spec")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.initSlotControllerNodes = undefined;
        Q.initSlotControllerNodes = function (K) {
          var S = System.get("automation") && System.get("automation").GameConfigs;
          if (S) {
            S.initNodeConfig(K.reelNode, "reel_area");
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'SlotController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "b51b3D3XN5Phpw2GjwMG4k+", "SlotController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SlotStateMachine");
        var q = B("NodePoolHandler");
        var N = B("SlotProperties");
        var J = B("NormalSlotHandler");
        var A = B("GeneralAudioConstant");
        var y = B("AudioManager");
        var b = cc._decorator;
        var k = b.ccclass;
        var D = b.property;
        var x = function (G) {
          function Y() {
            var m = null !== G && G.apply(this, arguments) || this;
            m.slotItemPrefab = undefined;
            m.wildItemPrefab = undefined;
            m.slotHolder = undefined;
            m.fallingAnim = undefined;
            m.backGold = undefined;
            m.frontGold = undefined;
            m.reelShine = undefined;
            m.H_ = new J.NormalSlotHandler();
            m.B_ = new S["default"]();
            m.G_ = undefined;
            m.zi = undefined;
            m.N_ = undefined;
            m.T_ = undefined;
            m.P_ = undefined;
            m.L_ = undefined;
            m.R_ = undefined;
            m.E_ = undefined;
            m.k_ = undefined;
            m.ou = undefined;
            return m;
          }
          __extends(Y, G);
          Y.prototype.setOnClickCallback = function (m) {
            this.zi = m;
          };
          Y.prototype.setStopCompletedCallback = function (m) {
            this.N_ = m;
          };
          Y.prototype.setDoneReloadDataCallback = function (m) {
            this.T_ = m;
          };
          Y.prototype.setReelStopCallback = function (m) {
            this.P_ = m;
          };
          Y.prototype.setSlotHandlerReelStopCallback = function (m) {
            this.H_.onReelStop = m;
          };
          Y.prototype.setOnSlotBeginInterruptCallback = function (m) {
            this.L_ = m;
          };
          Y.prototype.setOnSlotInterruptCallback = function (m) {
            this.R_ = m;
          };
          Y.prototype.setOnReelReachesBouncePointCallback = function (m) {
            this.H_.setOnReelReachesBouncePointCallback(m);
          };
          Y.prototype.setOnReelReachesLowestPointCallback = function (m) {
            this.H_.setOnReelReachesLowestPointCallback(m);
          };
          Y.prototype.setOnReelReachesSlowDownPointCallback = function (m) {
            this.H_.setOnReelReachesSlowDownPointCallback(m);
          };
          Y.prototype.setSymbolImageHandler = function (m) {
            this.U_ = m;
          };
          Y.prototype.setSpinTiming = function (m, W) {
            this.E_ = m;
            this.k_ = W;
          };
          Y.prototype.setClickEffectController = function (m) {
            this.j_ = m;
          };
          Y.prototype.setSlotItemsVisible = function (m, W) {
            if (W && 0x0 !== W.length) {
              this.H_.setSlotItemsVisible(m, W);
            }
          };
          Y.prototype.disableAllSprite = function () {
            this.H_.disableAllSprite();
          };
          Y.prototype.getStopStyle = function () {
            return this.B_.getStopStyle();
          };
          Y.prototype.getSlotItem = function (m) {
            if (m) {
              return 0x0 === m.length ? [] : this.H_.getSlotItemByIndices(m);
            }
          };
          Y.prototype.getSlotItemWorldPosition = function (m) {
            if (m) {
              return 0x0 === m.length ? [] : this.H_.getSlotItemsWorldPosition(m);
            }
          };
          Y.prototype.getIsFastStopped = function () {
            return this.H_.getFastStop();
          };
          Object.defineProperty(Y.prototype, "mask", {
            'get': function () {
              return this.H_.mask;
            },
            'enumerable': false,
            'configurable': true
          });
          Y.prototype.init = function (m, W, F) {
            var E = {
              'up': -0x5,
              down: -0xa,
              left: -0xa,
              right: -0xf
            };
            q.nodePoolHandler.registerReusableItem("slotItem", this.slotItemPrefab, "GSlotItem", 0xf);
            q.nodePoolHandler.registerReusableItem("wildItem", this.wildItemPrefab, "WildItemController", 0x9);
            this.H_.init({
              'reelData': m,
              'containerNode': this.slotHolder,
              'row': N.NORMAL_SLOT_ROW,
              'column': N.NORMAL_SLOT_COLUMN,
              'slotItemSize': {
                'height': N.NORMAL_SLOT_ITEM_SIZE.height,
                'width': N.NORMAL_SLOT_ITEM_SIZE.width
              },
              'symbolNormalScale': N.NORMAL_SYMBOL_SCALE,
              'symbolBlurScale': N.BLUR_SCALE,
              'normalSymbolSpriteFrame': this.U_.symbolImages,
              'blurSymbolSpriteFrame': this.U_.blurredSymbolImages,
              'maskMargin': E,
              'onReelStopCallbackWrapper': this.D_.bind(this),
              'onSpinStopCallbackWrapper': this.W_.bind(this)
            });
            if (F) {
              F();
            }
          };
          Y.prototype.setReelData = function (m) {
            this.H_.setReelData(m);
          };
          Y.prototype.reloadData = function (m) {
            this.H_.reloadData(m);
          };
          Y.prototype.setupRespinSlotConfig = function () {
            this.H_.updateRespinSlotConfig();
          };
          Y.prototype.setupNormalSpinSlotConfig = function () {
            this.H_.updateNormalSpinSlotConfig();
          };
          Y.prototype.resetHiddenMiddleReel = function () {
            this.H_.resetHiddenMiddleReel();
          };
          Y.prototype.show = function () {
            this.node.active = true;
          };
          Y.prototype.hide = function () {
            this.node.active = false;
          };
          Y.prototype.spin = function (m, W) {
            if (undefined === W) {
              W = false;
            }
            var F = W ? 0.5 : 0x0;
            var E = m ? this.E_ : this.E_ + this.H_.scrollInterval * N.NORMAL_SLOT_COLUMN + F;
            var v = this.k_ - 0.25 + F;
            this.L_ = undefined;
            this.B_.spin(E, v);
            this.H_.spin(m);
            var I = A.GENERAL_AUDIO.spinActiveLoop.key;
            y.stopAudioIfPlaying(I);
            y.playAudioIfNotPlaying(I, false, 0x0, true);
            if (m) {
              this.markFastStop();
            } else {
              this.x_();
            }
          };
          Y.prototype.stopSpin = function () {
            var m = this;
            this.B_.stop(function () {
              m.H_.stopSpin();
            });
          };
          Y.prototype.fastStop = function () {
            var m = this;
            this.B_.fastStop(function () {
              var W = m.L_;
              m.L_ = undefined;
              if (W) {
                W();
              }
              m.H_.fastStop();
              if (m.R_) {
                m.R_();
              }
            });
          };
          Y.prototype.markFastStop = function () {
            this.B_.markFastStop();
          };
          Y.prototype.unmarkFastStop = function () {
            this.B_.unmarkFastStop();
            this.H_.unsetFastStop();
          };
          Y.prototype.enableTouchEvent = function () {
            this.x_();
          };
          Y.prototype.disableTouchEvent = function () {
            this.F_();
          };
          Y.prototype.D_ = function (m) {
            var W = this.P_;
            if (W) {
              W(m);
            }
          };
          Y.prototype.W_ = function () {
            this.B_.stopped();
            this.L_ = undefined;
            var m = this.N_;
            this.N_ = undefined;
            if (m) {
              m();
            }
            var W = A.GENERAL_AUDIO.spinActiveLoop.key;
            y.stopAudioIfPlaying(W);
          };
          Y.prototype.V_ = function (m) {
            var W = m + 0x1;
            var F = this.z_;
            if (F) {
              F(W);
            }
          };
          Y.prototype.x_ = function () {
            this.node.on(cc.Node.EventType.TOUCH_START, this.J_, this);
          };
          Y.prototype.F_ = function () {
            this.node.off(cc.Node.EventType.TOUCH_START, this.J_, this);
          };
          Y.prototype.J_ = function (m) {
            if (this.zi) {
              this.F_();
              this.j_.showClickEffect(m.getLocation());
              this.j_.showFlash();
              var W = this.zi;
              this.zi = undefined;
              if (W) {
                W();
              }
            }
          };
          Y.prototype.onKeyBoardDownClicked = function () {
            if (this.zi) {
              var m = this.zi;
              this.zi = undefined;
              if (m) {
                m();
              }
            }
          };
          Y.prototype.setRespinSymbol = function (m) {
            this.H_.setRespinSymbol(m);
          };
          Y.prototype.playRespin = function () {
            this.fallingAnim.node.opacity = 0x0;
            this.fallingAnim.node.runAction(cc.fadeIn(0.5));
            this.fallingAnim.play();
          };
          Y.prototype.stopRespin = function () {
            this.fallingAnim.stop();
            this.fallingAnim.setCurrentTime(0x0);
            this.fallingAnim.node.getComponent(cc.Sprite).spriteFrame = undefined;
          };
          Y.prototype.zoomOut = function () {
            this.backGold.stopAllActions();
            this.frontGold.stopAllActions();
            this.backGold.scale = 1.62;
            this.backGold.runAction(cc.sequence(cc.delayTime(0.5), cc.scaleTo(2.1, 1.58).easing(cc.easeCubicActionInOut())));
            this.frontGold.scale = 1.6;
            this.frontGold.runAction(cc.scaleTo(2.1, 1.55).easing(cc.easeCubicActionInOut()));
          };
          Y.prototype.zoomIn = function () {
            this.backGold.stopAllActions();
            this.frontGold.stopAllActions();
            this.backGold.scale = 1.58;
            this.backGold.runAction(cc.scaleTo(2.5, 1.6).easing(cc.easeCubicActionInOut()));
            this.frontGold.scale = 1.55;
            this.frontGold.runAction(cc.scaleTo(2.1, 1.6).easing(cc.easeCubicActionInOut()));
          };
          Y.prototype.teaseZoomOut = function () {
            this.backGold.stopAllActions();
            this.frontGold.stopAllActions();
            this.backGold.scale = 1.62;
            this.backGold.runAction(cc.sequence(cc.delayTime(0.5), cc.scaleTo(0x1, 1.6).easing(cc.easeCubicActionInOut())));
            this.frontGold.scale = 1.6;
            this.frontGold.runAction(cc.scaleTo(0x1, 1.575).easing(cc.easeCubicActionInOut()));
          };
          Y.prototype.teaseZoomIn = function () {
            this.backGold.stopAllActions();
            this.frontGold.stopAllActions();
            this.backGold.scale = 1.6;
            this.backGold.runAction(cc.scaleTo(0x1, 1.6).easing(cc.easeCubicActionInOut()));
            this.frontGold.scale = 1.575;
            this.frontGold.runAction(cc.scaleTo(0x1, 1.6).easing(cc.easeCubicActionInOut()));
          };
          Y.prototype.onSpinEffect = function () {
            this.reelShine.stop();
            this.reelShine.setCurrentTime(0x0);
            this.reelShine.play();
          };
          Y.prototype.setupToNormalState = function () {
            this.backGold.scale = 1.62;
            this.frontGold.scale = 1.6;
          };
          Y.prototype.setupToRespinState = function () {
            this.backGold.scale = 1.58;
            this.frontGold.scale = 1.55;
          };
          __decorate([D(cc.Prefab)], Y.prototype, "slotItemPrefab", undefined);
          __decorate([D(cc.Prefab)], Y.prototype, "wildItemPrefab", undefined);
          __decorate([D(cc.Node)], Y.prototype, "slotHolder", undefined);
          __decorate([D(cc.Animation)], Y.prototype, "fallingAnim", undefined);
          __decorate([D(cc.Node)], Y.prototype, "backGold", undefined);
          __decorate([D(cc.Node)], Y.prototype, "frontGold", undefined);
          __decorate([D(cc.Animation)], Y.prototype, "reelShine", undefined);
          return __decorate([k], Y);
        }(cc.Component);
        C["default"] = x;
        cc._RF.pop();
      }
    }, l3],
    'SlotDataHandler': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "c92e6Vflr1IcZlyJUaCowMg", "SlotDataHandler")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = function () {
          function S() {
            this.slotViews = undefined;
            this.spinType = undefined;
            this.topBufferRow = undefined;
            this.bottomBufferRow = undefined;
            this.numberOfRow = undefined;
            this.numberOfColumn = undefined;
            this.getSymbolSize = undefined;
            this.getRandomSymbol = undefined;
            this.isStopping = undefined;
            this.formattedReelData = undefined;
            this.backupBufferedSymbol = undefined;
            this.bufferedEmptyItemInfo = undefined;
            this.formattedDataPositions = undefined;
          }
          S.prototype.init = function (q) {
            this.slotViews = q.slotViews;
            this.topBufferRow = q.topBufferRow ? q.topBufferRow : 0x0;
            this.bottomBufferRow = q.bottomBufferRow ? q.bottomBufferRow : 0x0;
            this.numberOfRow = q.numberOfRow;
            this.numberOfColumn = q.numberOfColumn;
            this.getSymbolSize = q.getSymbolSize;
            this.getRandomSymbol = q.getRandomSymbol;
            this.formattedDataPositions = [];
            this.bufferedEmptyItemInfo = [];
            for (var N = 0x0; N < q.numberOfColumn; N++) {
              this.formattedDataPositions[N] = -this.bottomBufferRow;
            }
            this.setSpinType(q.spinType);
            this.setReelData(q.reelData, q.largeSymbolDatas);
          };
          S.prototype.reset = function () {
            this.isStopping = false;
            this.bufferedEmptyItemInfo.length = 0x0;
            for (var q = 0x0; q < this.formattedDataPositions.length; q++) {
              this.formattedDataPositions[q] = -this.bottomBufferRow;
            }
          };
          S.prototype.setSpinType = function (q) {
            this.spinType = q;
          };
          S.prototype.setReelDataPosition = function (q, N) {
            this.isStopping = true;
            this.formattedDataPositions[q] = N - this.bottomBufferRow;
          };
          S.prototype.getReelDataPosition = function (q) {
            return this.formattedDataPositions[q] + this.bottomBufferRow;
          };
          S.prototype.getItemInfo = function (q, N) {
            var f = this.slotViews.indexOf(q);
            var J = this.bufferedEmptyItemInfo[f];
            if (J) {
              this.bufferedEmptyItemInfo[f] = undefined;
              return J;
            }
            var A = N;
            for (var y = this.getSymbol(f, A); undefined === y;) {
              A--;
              y = this.getSymbol(f, A);
            }
            if (y < 0x0) {
              return this.createEmptyItemInfo(-y, A);
            }
            var b = this.getSymbolSize;
            var u = b ? b(y) : cc.size(0x1, 0x1);
            var k = {
              positionIndex: A,
              symbolColumn: u.width,
              symbolRow: u.height,
              symbolIndex: y
            };
            return k;
          };
          S.prototype.setReelData = function (q, N) {
            var J = this.numberOfColumn;
            var A = this.numberOfRow;
            var y = this.topBufferRow;
            var b = this.bottomBufferRow;
            var k = this.spinType;
            var D = this.getRandomSymbol;
            var x = b + A;
            var G = x + y;
            var Y = this.backupBufferedSymbol = [];
            for (var m = 0x0; m < J; m++) {
              var W = Y[m] = [];
              for (var F = 0x0; F < b; F++) {
                W[F] = D(m, k, F, false, true, 0x1);
              }
              for (F = x; F < G; F++) {
                W[F] = D(m, k, F, false, true, 0x1);
              }
            }
            this.updateReelData(q, N);
          };
          S.prototype.updateReelData = function (q, N) {
            var f = this.numberOfColumn;
            var J = this.numberOfRow;
            var A = this.bottomBufferRow;
            var y = this.backupBufferedSymbol;
            var b = this.getSymbolSize;
            var k = this.formattedReelData = [];
            for (var D = 0x0; D < f; D++) {
              var x = D * J;
              var G = __spread(y[D]);
              G.splice.apply(G, __spread([A, J], q.slice(x, x + J).reverse()));
              k.push(G);
            }
            if (b && N) {
              N.forEach(function (Y) {
                Y.sort(function (V, H) {
                  return V - H;
                });
                var m;
                var W;
                var F = q[Y[0x0]];
                var E = b(F);
                var I = Math.floor(Y[0x0] / J);
                var w = Y[0x0] % J;
                for (var j = 0x1; j < Y.length; j++) {
                  if (Math.floor(Y[j] / J) !== I) {
                    m = Y[j - 0x1] % J;
                    break;
                  }
                }
                W = 0x0 === w ? J - m - 0x1 + A : J - w + A - E.height;
                for (j = 0x0; j < E.width; j++) {
                  var Z = k[j + I];
                  Z[W] = j ? -E.height : F;
                  for (var X = 0x1; X < E.height; X++) {
                    Z[X + W] = undefined;
                  }
                }
              });
            }
          };
          S.prototype.getFormattedData = function (q) {
            return __spread(this.formattedReelData[q]);
          };
          S.prototype.overwriteFormattedData = function (q, N, f) {
            this.formattedReelData[q][N] = f;
          };
          S.prototype.getSymbol = function (q, N) {
            var f = this.formattedDataPositions[q];
            if (undefined !== f) {
              var J = this.formattedReelData[q];
              if (N >= f && N <= f + J.length - 0x1) {
                return J[N - f];
              }
            }
            var A = this.getSymbolSize;
            var y = 0x1;
            if (A) {
              for (var b = q + 0x1; b < this.numberOfColumn && !this.slotViews[b].isIndexVisible(N); b++) {
                y++;
              }
            }
            var u = this.getRandomSymbol(q, this.spinType, N, this.isStopping, false, y);
            if (A) {
              var k = A(u);
              for (b = 0x1; b < k.width; b++) {
                this.bufferedEmptyItemInfo[q + b] = this.createEmptyItemInfo(k.height, N);
              }
            }
            return u;
          };
          S.prototype.createEmptyItemInfo = function (q, N) {
            var f = {
              positionIndex: N,
              symbolColumn: 0x1,
              symbolRow: q,
              symbolIndex: -0x1
            };
            return f;
          };
          return S;
        }();
        Q["default"] = K;
        cc._RF.pop();
      }
    }, {}],
    'SlotGameConstants': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "d7af7yj0OxMqZa0P2+9ESqP", "SlotGameConstants")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.DEFAULT_AUTO_SPIN_DELAY_TIME = Q.SPIN_BUTTON_TRIGGER_KEY = Q.TOTAL_WIN_DISMISS_TIME = Q.BIG_WIN_DISMISS_TIME = undefined;
        Q.BIG_WIN_DISMISS_TIME = 0x6;
        Q.TOTAL_WIN_DISMISS_TIME = 0x6;
        Q.SPIN_BUTTON_TRIGGER_KEY = cc.macro.KEY.space;
        Q.DEFAULT_AUTO_SPIN_DELAY_TIME = 0.3;
        cc._RF.pop();
      }
    }, {}],
    'SlotGenerator': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "213874uZn5HSqZznN5luzQQ", "SlotGenerator")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.generateSlot = undefined;
        var S = {
          'up': 0x0,
          down: 0x0,
          left: 0x0,
          right: 0x0
        };
        var q = B("SlotView");
        var N = B("SlotScrollerController");
        var J = {
          'containerNode': undefined,
          'numberOfColumn': undefined,
          'slotView': q["default"],
          'slotScrollerController': N["default"]
        };
        C.generateSlot = function (A) {
          var y;
          var b = (A = __assign(__assign({}, J), A)).containerNode;
          var k = A.slotSize ? A.slotSize : b.getContentSize();
          var D = k.width;
          var x = k.height;
          var G = new cc.Node("slot_scroller");
          if (A.dontGenerateMask) {
            G.parent = b;
            G.width = D;
            G.height = x;
          } else {
            var Y = __assign(__assign({}, S), A.maskMargin);
            var m = new cc.Node("slot_mask");
            m.parent = b;
            m.width = D + Y.left + Y.right;
            m.height = x + Y.up + Y.down;
            m.x = (Y.right - Y.left) / 0x2;
            m.y = (Y.up - Y.down) / 0x2;
            (y = m.addComponent(cc.Mask)).type = cc.Mask.Type.RECT;
            y.inverted = false;
            G.parent = m;
            G.width = D;
            G.height = x;
            G.x = -m.x;
            G.y = -m.y;
          }
          var W = A.numberOfColumn;
          var F = D / W;
          var E = (F - D) / 0x2;
          var I = [];
          for (var w = 0x0; w < W; w++) {
            I[w] = new A.slotView(G, E + F * w);
          }
          return {
            'mask': y,
            'slotScrollerController': G.addComponent(A.slotScrollerController),
            'slotViews': I
          };
        };
        cc._RF.pop();
      }
    }, l4],
    'SlotHandler': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "c4b3eXoiTVPErUy7lNx9598", "SlotHandler")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.SlotHandler = undefined;
        var S = B("SlotDataHandler");
        var q = B("SlotView");
        var N = B("SlotScrollerController");
        var J = B("SlotGenerator");
        var A = B("SlotHelper");
        var y = B("GSlotItem");
        var b = B("GSlotHelper");
        var k = B("GSlotItemPool");
        var D = B("SlotProperties");
        var x = B("Utils");
        var G = function () {
          function Y() {
            this.slotHelper = undefined;
            this.onReelStartCallback = undefined;
            this.spinStopCallback = undefined;
            this.onFastScrollEffectStartCallback = undefined;
            this.onFastScrollEffectStopCallback = undefined;
            this.isFastStop = false;
            this.isTurbo = false;
            this.isInterrupt = false;
            this.abortIterator = undefined;
            this.numberOfRow = undefined;
            this.numberOfColumn = undefined;
            this.slot = undefined;
            this.maxSpeed = undefined;
            this.startScrollerConfig = undefined;
            this.turboSpeedFactor = undefined;
            this.turboStartScrollerConfig = undefined;
            this.scrollInterval = undefined;
            this.stopScrollInterval = undefined;
            this.interruptScrollStopScrollerConfig = undefined;
            this.orl = [];
            this.allSymbolIndexList = undefined;
          }
          Y.prototype.init = function (W) {
            var F = this;
            var E = this.numberOfColumn = W.column;
            var I = this.numberOfRow = W.row;
            var w = W.slotItemSize.height;
            var j = W.slotItemSize.width;
            var Z = this.maxSpeed = W.maxSpeed;
            var X = cc.size(j, w);
            var V = this.startScrollerConfig = __assign(__assign({}, W.startScrollerConfig), {
              'maxSpeed': Z
            });
            var H = __assign(__assign({}, W.stopScrollerConfig), {
              'maxSpeed': Z
            });
            this.turboSpeedFactor = W.turboSpeedFactor;
            this.turboStartScrollerConfig = W.turboStartScrollerConfig;
            this.scrollInterval = W.scrollInterval;
            this.stopScrollInterval = W.stopScrollInterval;
            this.interruptScrollStopScrollerConfig = W.interruptScrollStopScrollerConfig;
            var z = W.containerNode;
            z.height = w * I;
            z.width = j * E;
            var P = {
              containerNode: z,
              numberOfColumn: E,
              maskMargin: W.maskMargin,
              dontGenerateMask: W.dontGenerateMask,
              slotScrollerController: N["default"],
              slotView: q["default"]
            };
            var O = this.slot = J.generateSlot(P);
            var L = this.slotHelper = new b["default"]();
            var U = new k["default"]();
            this.orl = W.reelData;
            L.init({
              'slotItem': y["default"],
              'slotItemPool': U,
              'numberOfColumn': E,
              'numberOfRow': I,
              'topBufferRow': W.topExtraBufferRow,
              'bottomBufferRow': W.bottomExtraBufferRow,
              'sortBottomItemToFront': true,
              'getSymbolZOrder': this.getSymbolZOrder.bind(this),
              'stopScroller': W.stopScroller,
              'startScrollerConfig': V,
              'stopScrollerConfig': H,
              'reelData': W.reelData,
              'symbolSize': X,
              'normalSymbolScale': W.symbolNormalScale,
              'blurSymbolScale': W.symbolBlurScale,
              'slotViews': O.slotViews,
              'slotScrollerController': O.slotScrollerController,
              'normalSymbolSpriteFrame': W.normalSymbolSpriteFrame,
              'blurSymbolSpriteFrame': W.blurSymbolSpriteFrame,
              'getRandomSymbol': W.getRandomSymbol,
              'calculateStopIndexOffset': W.calculateStopIndexOffset,
              'calculateStopDistanceIndexOffset': W.calculateStopDistanceIndexOffset,
              'runScroller': this.runScroller.bind(this),
              'blurSpeedFactor': W.blurSpeedFactor,
              'unblurSpeedFactor': W.unblurSpeedFactor,
              'slotDataHandler': new S["default"]()
            });
            L.setOnReelStopCallback(function (T) {
              var h0 = W.onReelStopCallbackWrapper;
              if (h0) {
                h0(T);
              }
              F.onReelStopCallbackWrapper(T);
            });
            L.setOnSlotStopCallback(function () {
              var T = W.onSpinStopCallbackWrapper;
              if (T) {
                T();
              }
              F.onSpinStopCallbackWrapper();
            });
            this.extraInitialization();
          };
          Y.prototype.extraInitialization = function () {};
          Y.prototype.preSpinningCleanup = function () {};
          Object.defineProperty(Y.prototype, "onReelStart", {
            'set': function (m) {
              this.onReelStartCallback = m;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(Y.prototype, "onSpinStop", {
            'set': function (m) {
              this.spinStopCallback = m;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(Y.prototype, "onFastScrollEffectStart", {
            'set': function (m) {
              this.onFastScrollEffectStartCallback = m;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(Y.prototype, "onFastScrollEffectStop", {
            'set': function (m) {
              this.onFastScrollEffectStopCallback = m;
            },
            'enumerable': false,
            'configurable': true
          });
          Y.prototype.onReelStopCallbackWrapper = function () {};
          Y.prototype.onSpinStopCallbackWrapper = function () {
            this.abortIterator = undefined;
            if (this.spinStopCallback) {
              this.spinStopCallback();
            }
          };
          Y.prototype.reloadData = function (m) {
            var W = this.slotHelper;
            this.setReelData(m);
            W.reloadSlot();
          };
          Y.prototype.spin = function (m) {
            if (undefined === m) {
              m = false;
            }
            this.preSpinningCleanup();
            var W = this.slotHelper;
            if (this.isTurbo !== m) {
              this.isTurbo = m;
              var F = this.maxSpeed * (m ? this.turboSpeedFactor : 0x1);
              var E = m ? this.turboStartScrollerConfig : this.startScrollerConfig;
              for (var v = 0x0; v < this.numberOfColumn; v++) {
                W.setStartScrollerConfig(v, __assign({
                  'maxSpeed': F
                }, E));
                W.setStopScrollerConfig(v, {
                  'maxSpeed': F
                });
              }
            }
            W.startScroll();
            this.isInterrupt = false;
            this.isFastStop = false;
            this.abortIterator = undefined;
            this.extraSpinInitialization();
            if (m) {
              this.setFastStop(false);
            }
          };
          Y.prototype.stopSpin = function () {
            this.slotHelper.stopScroll();
          };
          Y.prototype.setReelData = function (m) {
            this.setReelData(m);
          };
          Y.prototype.setFastStop = function (m) {
            if (undefined === m) {
              m = false;
            }
            this.isInterrupt = m;
            this.isFastStop = true;
          };
          Y.prototype.unsetFastStop = function () {
            this.isInterrupt = false;
            this.isFastStop = false;
          };
          Y.prototype.fastStop = function () {
            this.isFastStop = true;
            this.extraFastStopAction();
            this.runInterrupt();
          };
          Y.prototype.extraFastStopAction = function () {};
          Y.prototype.getFastStop = function () {
            return this.isFastStop;
          };
          Y.prototype.changeSymbol = function (m, W) {
            this.slotHelper.changeSymbol(m, W);
          };
          Y.prototype.getSlotItemsWorldPosition = function (m) {
            var W;
            return (W = this.slotHelper).getItemsWorldPositionAR.apply(W, __spread(m));
          };
          Y.prototype.setSlotItemsVisible = function (m, W) {
            var F;
            (F = this.slotHelper.slotItemHandler).getSlotItems.apply(F, __spread(W)).forEach(function (E) {
              if (E) {
                E.setActive(m);
              }
            });
          };
          Y.prototype.getSlotItemByIndices = function (m) {
            var W;
            return (W = this.slotHelper.slotItemHandler).getSlotItems.apply(W, __spread(m));
          };
          Object.defineProperty(Y.prototype, "mask", {
            'get': function () {
              return this.slot.mask;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(Y.prototype, "slotViewNode", {
            'get': function () {
              return this.slot.slotScrollerController.node;
            },
            'enumerable': false,
            'configurable': true
          });
          Y.prototype.getSymbolZOrder = function (m) {
            return m === D.SLOT_INDEX.WILD ? 0x2 : 0x1;
          };
          Y.prototype.runScroller = function (m, W) {
            return m === A.SlotState.START ? this.runStartScroller(W) : m === A.SlotState.STOP ? this.runStopScroller(W) : undefined;
          };
          Y.prototype.runStartScroller = function (m) {
            var W = this;
            var F = this.onReelStartCallback;
            if (!this.isTurbo && 0x0 !== this.scrollInterval) {
              var E = 0x0;
              var v = this.scheduleIterator(function (w, j) {
                m(w);
                if (F) {
                  F(w);
                }
                E++;
                j();
              }, this.scrollInterval, this.numberOfColumn);
              return function () {
                v();
                for (var w = E; w < W.numberOfColumn; w++) {
                  if (F) {
                    F(w);
                  }
                }
              };
            }
            for (var I = 0x0; I < this.numberOfColumn; I++) {
              m(I);
              if (F) {
                F(I);
              }
            }
          };
          Y.prototype.runStopScroller = function (m) {
            var W = this;
            if (this.isFastStop) {
              this.runInterrupt();
            } else {
              var F;
              F = function (v, I) {
                if (W.isFastStop) {
                  W.runInterrupt();
                } else {
                  m(v);
                  if (I) {
                    I();
                  }
                }
              };
              var E = this.scheduleIterator(F, this.stopScrollInterval, this.numberOfColumn);
              this.abortIterator = E;
            }
          };
          Y.prototype.runInterrupt = function () {
            for (var m = 0x0; m < this.numberOfColumn; m++) {
              this.slotHelper.scrollerAtIndex(m).updateRunTimeConfig(this.interruptScrollStopScrollerConfig);
            }
            var W = this.abortIterator;
            if (W) {
              W();
            }
            this.slotHelper.instantStopScroll();
            this.slotHelper.reloadSlot();
          };
          Y.prototype.setReelData = function (m) {
            this.orl = m;
            this.slotHelper.setReelData(m);
          };
          Y.prototype.extraSpinInitialization = function () {};
          Y.prototype.scheduleIterator = function (m, W, F, E) {
            var v = 0x0;
            var I = 0x0;
            var w = function () {
              if (++I === F && E) {
                E();
              }
            };
            var j = function () {
              m(v, w);
              v++;
            };
            j();
            if (F >= 0x2) {
              x.getSharedScheduler().schedule(j, W, F - 0x2);
            }
            return function () {
              if (F >= 0x2) {
                x.getSharedScheduler().unschedule(j);
              }
              E = undefined;
            };
          };
          return Y;
        }();
        C.SlotHandler = G;
        cc._RF.pop();
      }
    }, l5],
    'SlotHelper': [function (Q, C, K) {
      'use strict';

      if (!cc._RF.push(C, "f967cJUpgBPeZxa4E081RBj", "SlotHelper")) {
        var S = {
          value: true
        };
        Object.defineProperty(K, "__esModule", S);
        K.SlotState = undefined;
        var q;
        var N = Q("SlotItem");
        var J = Q("SlotItemPool");
        var A = Q("SlotItemHandler");
        var y = Q("SlotDataHandler");
        var b = Q("BaseScroller");
        var k = Q("DefaultStartScroller");
        var D = Q("DefaultStopScroller");
        (function (m) {
          m[m.IDLE = 0x0] = "IDLE";
          m[m.START = 0x1] = "START";
          m[m.STOP = 0x2] = "STOP";
        })(q = K.SlotState || (K.SlotState = {}));
        var x = {
          spinType: undefined,
          reelData: undefined,
          symbolSize: undefined,
          numberOfColumn: undefined,
          numberOfRow: undefined,
          normalSymbolSpriteFrame: undefined,
          blurSymbolSpriteFrame: undefined,
          slotViews: undefined,
          slotScrollerController: undefined,
          getSymbolSize: undefined,
          getRandomSymbol: undefined,
          runScroller: undefined,
          topBufferRow: 0x1,
          bottomBufferRow: 0x1,
          normalSymbolScale: 0x1,
          blurSymbolScale: 0x1,
          blurSpeedFactor: 0.9,
          unblurSpeedFactor: 0.9,
          slotItem: N["default"],
          startScroller: k["default"],
          stopScroller: D["default"]
        };
        var Y = function () {
          function m() {
            this.q_ = undefined;
            this.K_ = undefined;
            this.Q_ = undefined;
            this.Y_ = undefined;
            this.X_ = undefined;
            this.Z_ = undefined;
            this.tm = undefined;
            this.se = undefined;
            this.im = undefined;
            this.sm = undefined;
            this.ie = undefined;
            this.em = undefined;
            this.nm = undefined;
            this.om = undefined;
            this.P_ = undefined;
            this.cm = undefined;
          }
          var W = {
            get: function () {
              return this.em;
            },
            enumerable: false,
            configurable: true
          };
          var F = {
            get: function () {
              return this.nm;
            },
            enumerable: false,
            configurable: true
          };
          Object.defineProperty(m.prototype, "slotDataHandler", W);
          Object.defineProperty(m.prototype, "slotItemPool", F);
          Object.defineProperty(m.prototype, "slotItemHandler", {
            'get': function () {
              return this.om;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(m.prototype, "slotViews", {
            'get': function () {
              return this.se;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(m.prototype, "isSlotViewBlur", {
            'get': function () {
              return this.Q_;
            },
            'enumerable': false,
            'configurable': true
          });
          m.prototype.init = function (E) {
            x.getScroller = this.getScroller.bind(this);
            x.willChangeSlotState = this.willChangeSlotState.bind(this);
            x.onSlotStateEnd = this.onScrollerEnd.bind(this);
            x.slotViewGetItem = this.slotViewGetItem.bind(this);
            x.slotViewReleaseItem = this.slotViewReleaseItem.bind(this);
            x.onScrollerAccelerate = this.onScrollerAccelerate.bind(this);
            x.onScrollerDecelerate = this.onScrollerDecelerate.bind(this);
            x.onScrollerStop = this.onScrollerStop.bind(this);
            var I = (E = __assign(__assign({}, x), E)).symbolSize;
            var w = this.q_ = E.numberOfColumn;
            var j = this.K_ = E.numberOfRow;
            var Z = this.se = E.slotViews;
            var X = this.im = E.slotScrollerController;
            var V = !!E.getSymbolSize;
            this.Y_ = E.blurSpeedFactor;
            this.X_ = E.unblurSpeedFactor;
            var H = E.topBufferRow;
            var z = E.bottomBufferRow;
            this.Z_ = H * (V ? 0x2 : 0x1) + this.K_;
            this.tm = z * (V ? 0x2 : 0x1) + 0x1;
            var P = this.Q_ = [];
            for (var O = 0x0; O < j; O++) {
              P[O] = false;
            }
            (this.nm = E.slotItemPool ? E.slotItemPool : new J["default"]()).init({
              'slotItem': E.slotItem,
              'normalSpriteFrame': E.normalSymbolSpriteFrame,
              'blurSpriteFrame': E.blurSymbolSpriteFrame,
              'normalScale': E.normalSymbolScale,
              'blurScale': E.blurSymbolScale,
              'getSymbolZOrder': E.getSymbolZOrder
            });
            (this.om = E.slotItemHandler ? E.slotItemHandler : new A["default"]()).init(j);
            (this.em = E.slotDataHandler ? E.slotDataHandler : new y["default"]()).init({
              'slotViews': Z,
              'reelData': E.reelData,
              'largeSymbolDatas': E.largeSymbolDatas,
              'spinType': E.spinType,
              'numberOfColumn': w,
              'numberOfRow': j,
              'topBufferRow': H,
              'bottomBufferRow': z,
              'getSymbolSize': E.getSymbolSize,
              'getRandomSymbol': E.getRandomSymbol
            });
            var L = this.sm = [];
            var U = this.ie = [];
            var T = this.scrollerGetStopDistance.bind(this);
            var h0 = this.scrollerScroll.bind(this);
            for (O = 0x0; O < Z.length; O++) {
              var h1 = {
                functionalRow: j,
                symbolSize: I,
                getItem: E.slotViewGetItem,
                releaseItem: E.slotViewReleaseItem,
                sortBottomItemToFront: E.sortBottomItemToFront
              };
              var h2 = {
                scrollCallback: h0
              };
              Z[O].init(h1);
              (L[O] = new E.startScroller(__assign(h2, E.startScrollerConfig))).on(b.SCROLLER_EVENT.ACCELERATE, E.onScrollerAccelerate);
              var h3 = {
                scrollCallback: h0,
                getStopDistance: T
              };
              var h4 = U[O] = new E.stopScroller(__assign(h3, E.stopScrollerConfig));
              h4.on(b.SCROLLER_EVENT.DECELERATE, E.onScrollerDecelerate);
              h4.on(b.SCROLLER_EVENT.END, E.onScrollerStop);
            }
            var h5 = {
              getScroller: E.getScroller,
              releaseScroller: E.releaseScroller,
              runScroller: E.runScroller,
              willChangeSlotState: E.willChangeSlotState,
              didChangeSlotState: E.didChangeSlotState,
              onSlotStateEnd: E.onSlotStateEnd
            };
            this.hm();
            X.init(Z, h5);
            X.setSlotState(q.IDLE);
          };
          m.prototype.changeSymbol = function (E, v) {
            var I = this.om.getSlotItems(E)[0x0];
            this.nm.updateSlotItemSymbolIndex(I, v);
          };
          m.prototype.setOnReelStopCallback = function (E) {
            this.P_ = E;
          };
          m.prototype.setOnSlotStopCallback = function (E) {
            this.cm = E;
          };
          m.prototype.setSpinType = function (E) {
            this.em.setSpinType(E);
          };
          m.prototype.setReelData = function (E, v) {
            this.em.setReelData(E, v);
          };
          m.prototype.updateReelData = function (E, v) {
            this.em.updateReelData(E, v);
          };
          m.prototype.getReelStopPosition = function (E) {
            return this.em.getReelDataPosition(E);
          };
          m.prototype.getFormattedData = function (E) {
            return this.em.getFormattedData(E);
          };
          m.prototype.overwriteFormattedData = function (E, v, I) {
            this.em.overwriteFormattedData(E, v, I);
          };
          m.prototype.reloadSlot = function () {
            var E = this.em;
            var v = this.se;
            var I = 0x0;
            for (var w = this.se.length; I < w; I++) {
              E.setReelDataPosition(I, 0x0);
              v[I].reloadItems();
            }
            this.hm();
          };
          m.prototype.setFunctionalRow = function (E) {
            this.se.forEach(function (v) {
              return v.setFunctionalRow(E);
            });
          };
          m.prototype.setSlotAnchor = function (E) {
            this.se.forEach(function (v) {
              return v.setSlotAnchor(E);
            });
          };
          m.prototype.setItemsVisible = function (E) {
            var v;
            var I = [];
            for (var w = 0x1; w < arguments.length; w++) {
              I[w - 0x1] = arguments[w];
            }
            (v = this.om).getSlotItems.apply(v, __spread(I)).forEach(function (j) {
              return j.visible = E;
            });
          };
          m.prototype.setItemsBlur = function (E, v) {
            var I = this.se[v];
            this.Q_[v] = E;
            var w = I.getVisibleItems();
            var j = 0x0;
            for (var Z = w.length; j < Z; j++) {
              w[j].setBlur(E);
            }
          };
          m.prototype.getItemsVisible = function () {
            var E;
            var v = [];
            for (var I = 0x0; I < arguments.length; I++) {
              v[I] = arguments[I];
            }
            var w = [];
            (E = this.om).getSlotItems.apply(E, __spread(v)).forEach(function (j) {
              return w.push(j.visible);
            });
            return w;
          };
          m.prototype.getItemsWorldPositionAR = function () {
            var E;
            var v = [];
            for (var I = 0x0; I < arguments.length; I++) {
              v[I] = arguments[I];
            }
            var w = cc.v2();
            var j = [];
            (E = this.om).getSlotItems.apply(E, __spread(v)).forEach(function (Z) {
              return j.push(Z.node.convertToWorldSpaceAR(w));
            });
            return j;
          };
          m.prototype.scrollerAtIndex = function (E) {
            return this.im.scrollerAtIndex(E);
          };
          m.prototype.indexOfScroller = function (E) {
            return this.im.indexOfScroller(E);
          };
          m.prototype.getSlotState = function () {
            return this.im.getSlotState();
          };
          m.prototype.startScroll = function () {
            var E = this.im;
            if (E.getSlotState() === q.IDLE) {
              this.em.reset();
              E.setSlotState(q.START);
            }
          };
          m.prototype.stopScroll = function () {
            var E = this.im;
            if (E.getSlotState() === q.START) {
              E.setSlotState(q.STOP);
            }
          };
          m.prototype.instantStopScroll = function () {
            var E = this.im;
            if (E.getSlotState() !== q.IDLE) {
              E.setSlotState(q.STOP);
              E.endCurrentState();
            }
          };
          m.prototype.setStartScrollerConfig = function (E, v) {
            this.sm[E].setConfig(v);
          };
          m.prototype.setStopScrollerConfig = function (E, v) {
            this.ie[E].setConfig(v);
          };
          m.prototype.updateStartScrollerRunTimeConfig = function (E, v) {
            this.sm[E].updateRunTimeConfig(v);
          };
          m.prototype.updateStopScrollerRunTimeConfig = function (E, v) {
            this.ie[E].updateRunTimeConfig(v);
          };
          m.prototype.hm = function () {
            var E = this.om;
            E.reset();
            this.se.forEach(function (v, I) {
              v.getFunctionalItems().forEach(function (w) {
                if (-0x1 !== w.symbolIndex) {
                  E.setSlotItem(I, w);
                }
              });
            });
          };
          m.prototype.slotViewGetItem = function (E, v) {
            var I = this.em.getItemInfo(E, v);
            var w = this.se.indexOf(E);
            var j = this.nm.getSlotItem(I.symbolIndex, this.Q_[w]);
            j.positionIndex = I.positionIndex;
            j.symbolColumn = I.symbolColumn;
            j.symbolRow = I.symbolRow;
            return j;
          };
          m.prototype.slotViewReleaseItem = function (E, v) {
            this.nm.releaseSlotItem(v);
          };
          m.prototype.scrollerScroll = function (E, v) {
            var I = this.im.indexOfScroller(E);
            this.se[I].changePositionY(v);
          };
          m.prototype.scrollerGetStopDistance = function (E) {
            var v;
            var I = this.im.indexOfScroller(E);
            var w = this.se[I];
            v = E.getRunTimeConfig().maxSpeed > 0x0 ? w.getNextBottomIndex(this.Z_) : w.getNextTopIndex(this.tm);
            this.em.setReelDataPosition(I, v);
            return w.getDistanceToIndex(v);
          };
          m.prototype.onScrollerAccelerate = function (E) {
            var v = E.speedFactor;
            var I = this.Q_;
            var w = this.im.indexOfScroller(E.scroller);
            if (v > this.Y_ && !I[w]) {
              this.setItemsBlur(true, w);
            }
          };
          m.prototype.onScrollerDecelerate = function (E) {
            var v = E.speedFactor;
            var I = this.Q_;
            var w = this.im.indexOfScroller(E.scroller);
            if (v < this.X_ && I[w]) {
              this.setItemsBlur(false, w);
            }
          };
          m.prototype.onScrollerStop = function (E) {
            var v = this.im.indexOfScroller(E.scroller);
            var I = this.se[v];
            var w = this.om;
            I.resetPositionIndex();
            I.getFunctionalItems().forEach(function (Z) {
              if (-0x1 !== Z.symbolIndex) {
                w.setSlotItem(v, Z);
              }
            });
            var j = this.P_;
            if (j) {
              j(v);
            }
          };
          m.prototype.getScroller = function (E, v, I) {
            return I === q.START ? this.sm[E] : I === q.STOP ? this.ie[E] : undefined;
          };
          m.prototype.willChangeSlotState = function (E, v) {
            if (E === q.IDLE && v === q.STOP) {
              this.im.endCurrentState();
            }
          };
          m.prototype.onScrollerEnd = function (E) {
            if (E === q.STOP) {
              this.im.setSlotState(q.IDLE);
              var v = this.cm;
              if (v) {
                v();
              }
            }
          };
          return m;
        }();
        K["default"] = Y;
        cc._RF.pop();
      }
    }, l6],
    'SlotItemHandler': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "cbfb0c2igtO8oHCc6bYN0xe", "SlotItemHandler")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = function () {
          function S() {
            this.numberOfRow = undefined;
            this.functionalSlotItems = undefined;
          }
          S.prototype.init = function (q) {
            this.numberOfRow = q;
            this.functionalSlotItems = [];
          };
          S.prototype.reset = function () {
            this.functionalSlotItems.length = 0x0;
          };
          S.prototype.setSlotItem = function (q, N, f) {
            if (undefined === f) {
              f = 0x0;
            }
            var J = this.numberOfRow;
            var A = J - 0x1 - (N.positionIndex - f);
            if (0x1 === N.symbolRow && 0x1 === N.symbolColumn) {
              this.functionalSlotItems[q * this.numberOfRow + A] = N;
            } else {
              var y = Math.min(J - 0x1, A);
              var b = Math.max(0x0, A - N.symbolRow + 0x1);
              var u = q + N.symbolColumn - 0x1;
              for (var k = q; k <= u; k++) {
                for (var D = b; D <= y; D++) {
                  this.functionalSlotItems[k * J + D] = N;
                }
              }
            }
          };
          S.prototype.getSlotItems = function () {
            var q = [];
            for (var N = 0x0; N < arguments.length; N++) {
              q[N] = arguments[N];
            }
            var f = this.functionalSlotItems;
            if (q.length) {
              var o = [];
              q.forEach(function (J) {
                o.push(f[J]);
              });
              return o;
            }
            return __spread(f);
          };
          return S;
        }();
        Q["default"] = K;
        cc._RF.pop();
      }
    }, {}],
    'SlotItemPool': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "4cb49tzG5ZEy6QJghScmBDK", "SlotItemPool")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = function () {
          function S() {
            this.slotItemConstructor = undefined;
            this.slotItemPool = undefined;
            this.normalSpriteFrames = undefined;
            this.blurSpriteFrames = undefined;
            this.normalScale = undefined;
            this.blurScale = undefined;
            this.getSymbolZOrder = undefined;
          }
          S.prototype.init = function (q) {
            this.slotItemConstructor = q.slotItem;
            var N = q.normalSpriteFrame;
            this.normalSpriteFrames = N[0x0] instanceof Array ? N[0x0] : N;
            var f = q.blurSpriteFrame;
            this.blurSpriteFrames = f ? f[0x0] instanceof Array ? f[0x0] : f : this.normalSpriteFrames;
            this.normalScale = undefined === q.normalScale ? 0x1 : q.normalScale;
            this.blurScale = undefined === q.blurScale ? 0x1 : q.blurScale;
            this.getSymbolZOrder = q.getSymbolZOrder;
            this.slotItemPool = new cc.NodePool(q.slotItem);
          };
          S.prototype.getSlotItem = function (q, N) {
            if (undefined === N) {
              N = false;
            }
            if (q < 0x0) {
              var f = new cc.Node().addComponent(this.slotItemConstructor);
              f.symbolIndex = q;
              return f;
            }
            var o;
            var J = this.slotItemPool;
            (o = J.size() ? J.get().getComponent(this.slotItemConstructor) : this.createNewSlotItem()).setup(q, this.normalSpriteFrames[q], this.blurSpriteFrames[q], N);
            return o;
          };
          S.prototype.releaseSlotItem = function (q) {
            if (q.symbolIndex < 0x0) {
              q.node.destroy();
            } else {
              this.slotItemPool.put(q.node);
            }
          };
          S.prototype.updateSlotItemSymbolIndex = function (q, N) {
            q.setup(N, this.normalSpriteFrames[N], this.blurSpriteFrames[N]);
          };
          S.prototype.createNewSlotItem = function () {
            var q = new cc.Node("slot_item");
            var N = new cc.Node("sprite");
            N.parent = q;
            var f = N.addComponent(cc.Sprite);
            f.sizeMode = cc.Sprite.SizeMode.RAW;
            f.trim = false;
            var o = q.addComponent(this.slotItemConstructor);
            var J = {
              sprite: f,
              normalScale: this.normalScale,
              blurScale: this.blurScale,
              getSymbolZOrder: this.getSymbolZOrder
            };
            o.init(J);
            return o;
          };
          return S;
        }();
        Q["default"] = K;
        cc._RF.pop();
      }
    }, {}],
    'SlotItem': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "cba1dJ8KHJAlrAxCvyls0+u", "SlotItem")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("SlotSymbol");
        var S = cc._decorator.ccclass;
        var q = function (N) {
          function f() {
            var J = null !== N && N.apply(this, arguments) || this;
            J.positionIndex = 0x0;
            J.sprite = undefined;
            J.normalSpriteFrame = undefined;
            J.blurSpriteFrame = undefined;
            J.normalScale = undefined;
            J.blurScale = undefined;
            J.getSymbolZOrder = undefined;
            return J;
          }
          __extends(f, N);
          Object.defineProperty(f.prototype, "visible", {
            'get': function () {
              return this.sprite && this.sprite.node.active;
            },
            'set': function (J) {
              if (this.sprite) {
                this.sprite.node.active = J;
              }
            },
            'enumerable': false,
            'configurable': true
          });
          f.prototype.init = function (J) {
            this.sprite = J.sprite;
            var A = this.normalScale = undefined === J.normalScale ? 0x1 : J.normalScale;
            this.blurScale = undefined === J.blurScale ? A : J.blurScale;
            this.getSymbolZOrder = J.getSymbolZOrder;
          };
          f.prototype.setup = function (J, A, y, c) {
            if (undefined === c) {
              c = false;
            }
            this.symbolIndex = J;
            this.normalSpriteFrame = A;
            this.blurSpriteFrame = y;
            this.zOrder = this.getSymbolZOrder ? this.getSymbolZOrder(J) : 0x0;
            this.setZIndex();
            this.setBlur(c);
          };
          f.prototype.setZIndex = function (J) {
            if (undefined === J) {
              J = 0x0;
            }
            this.node.zIndex = J + 0x64 * this.zOrder;
          };
          f.prototype.unuse = function () {
            this.normalSpriteFrame = undefined;
            this.blurSpriteFrame = undefined;
            this.visible = true;
            N.prototype.unuse.call(this);
          };
          f.prototype.setBlur = function (J) {
            var A = this.sprite;
            if (A) {
              A.spriteFrame = J ? this.blurSpriteFrame : this.normalSpriteFrame;
              A.node.scale = J ? this.blurScale : this.normalScale;
            }
          };
          return __decorate([S], f);
        }(K["default"]);
        Q["default"] = q;
        cc._RF.pop();
      }
    }, l7],
    'SlotProperties': [function (N, f, o) {
      'use strict';

      var J = {
        value: true
      };
      var A = {
        width: 0x140,
        height: 0x131
      };
      var y = {
        'x': 0x1,
        'y': 0x1
      };
      var c = {
        'x': 0x2,
        'y': 0x2
      };
      var b = {
        width: 0x408,
        height: 0x384
      };
      var n = {
        'x': 3.043,
        'y': 2.916
      };
      var u = {
        width: 0x196,
        height: 0x196
      };
      var k = {
        WILD: 0x0,
        SCATTER: 0x1,
        INGOTS: 0x2,
        RUYI: 0x3,
        MONEYBAG: 0x4,
        REDPACKETS: 0x5,
        FIRECRACKER: 0x6,
        ORANGE: 0x7,
        EMPTY: 0x63
      };
      if (!cc._RF.push(f, "23a69zGpqhNhJndUhrzZ/2c", "SlotProperties")) {
        Object.defineProperty(o, "__esModule", J);
        o.tenShake = o.createSymbolShake = o.parseRespinReelData = o.getSlotWildsAtReel = o.getSlotWilds = o.slotContainsWild = o.getRandomSlotSymbol = o.getIndicesFromReel = o.sortReelIndex = o.getRowFromIndex = o.getColumnFromIndex = o.getFilteredWinPositions = o.SLOT_INDEX = o.SLOT_ITEM_IMAGE_SIZE = o.MAX_NO_OF_BONUS_SLOT_ITEMS = o.BONUS_SYMBOL_SCALE = o.BONUS_SLOT_COLUMN = o.BONUS_SLOT_ROW = o.BONUS_SLOT_ITEM_SIZE = o.NO_OF_SLOT_ITEMS = o.BLUR_SCALE = o.NORMAL_SYMBOL_SCALE = o.NORMAL_SLOT_COLUMN = o.NORMAL_SLOT_ROW = o.NORMAL_SLOT_ITEM_SIZE = undefined;
        o.NORMAL_SLOT_ITEM_SIZE = A;
        o.NORMAL_SLOT_ROW = 0x3;
        o.NORMAL_SLOT_COLUMN = 0x3;
        o.NORMAL_SYMBOL_SCALE = y;
        o.BLUR_SCALE = c;
        o.NO_OF_SLOT_ITEMS = 0x9;
        o.BONUS_SLOT_ITEM_SIZE = b;
        o.BONUS_SLOT_ROW = 0x1;
        o.BONUS_SLOT_COLUMN = 0x1;
        o.BONUS_SYMBOL_SCALE = n;
        o.MAX_NO_OF_BONUS_SLOT_ITEMS = 0x2;
        o.SLOT_ITEM_IMAGE_SIZE = u;
        o.SLOT_INDEX = cc.Enum(k);
        o.getFilteredWinPositions = function (D) {
          var r = [];
          D.winPositions.map(function (x) {
            return D.getWinLinesByPosition(x);
          }).forEach(function (x) {
            r.push.apply(r, __spread(x));
          });
          return r.filter(function (x, e, G) {
            return G.indexOf(x) === e;
          });
        };
        o.getColumnFromIndex = function (D, r) {
          if (undefined === r) {
            r = o.NORMAL_SLOT_ROW;
          }
          return Math.floor(D / r);
        };
        o.getRowFromIndex = function (D, r) {
          if (undefined === r) {
            r = o.NORMAL_SLOT_ROW;
          }
          return D % r;
        };
        o.sortReelIndex = function (D) {
          D.sort(function (x, e) {
            return x - e;
          });
          return D;
        };
        o.getIndicesFromReel = function (D, r) {
          var x = r * o.NORMAL_SLOT_COLUMN;
          return [D[0x0 + x], D[0x1 + x], D[0x2 + x]];
        };
        o.getRandomSlotSymbol = function (D, r) {
          if (undefined === r) {
            r = 0x0;
          }
          var x = Math.floor(0x7 + Math.random() * (r - 0x7));
          if (D && x === D) {
            x = x + 0x1 > r ? D === r ? 0x7 : r : x + 0x1;
          }
          return x;
        };
        o.slotContainsWild = function (D) {
          return D.includes(o.SLOT_INDEX.WILD);
        };
        o.getSlotWilds = function (D) {
          var r = [];
          D.forEach(function (x, G) {
            if (x === o.SLOT_INDEX.WILD) {
              r.push(G);
            }
          });
          return r;
        };
        o.getSlotWildsAtReel = function (D, r) {
          var x = [];
          [0x0 + r * o.NORMAL_SLOT_ROW, 0x1 + r * o.NORMAL_SLOT_ROW, 0x2 + r * o.NORMAL_SLOT_ROW].forEach(function (G) {
            if (D[G] === o.SLOT_INDEX.WILD) {
              x.push(G);
            }
          });
          return x;
        };
        o.parseRespinReelData = function (D) {
          var r = new (Array.bind.apply(Array, __spread([undefined], D)))();
          r[0x3] = r[0x4] = r[0x5] = o.SLOT_INDEX.EMPTY;
          return r;
        };
        o.createSymbolShake = function () {
          var D = 0.001 * (Math.floor(Math.random()) + 0x1e);
          return cc.repeatForever(cc.sequence(cc.moveBy(D, cc.v2(-8.5, 0x0)), cc.moveBy(D, cc.v2(0xb, 1.5)), cc.moveBy(D, cc.v2(-0x7, -0x4)), cc.moveBy(D, cc.v2(-0x9, 4.5)), cc.moveBy(D, cc.v2(0xa, -0x2)), cc.moveBy(D, cc.v2(-0xa, -1.5)), cc.moveBy(D, cc.v2(-0x1, 2.5)), cc.moveBy(D, cc.v2(8.5, -0x1))));
        };
        o.tenShake = function () {
          var D = 0.001 * (Math.floor(Math.random()) + 0x1e);
          return cc.sequence(cc.moveBy(D, cc.v2(-8.5, 0x0)), cc.moveBy(D, cc.v2(0xb, 1.5)), cc.moveBy(D, cc.v2(-0x7, -0x4)), cc.moveBy(D, cc.v2(-0x9, 4.5)), cc.moveBy(D, cc.v2(0xa, -0x2)), cc.moveBy(D, cc.v2(-0xa, -1.5)), cc.moveBy(D, cc.v2(-0x1, 2.5)), cc.moveBy(D, cc.v2(8.5, -0x1)));
        };
        cc._RF.pop();
      }
    }, {}],
    'SlotScrollerController.spec': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "e08af4I5BlAUaisYXf6Oz5Q", "SlotScrollerController.spec")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.onStateChange = undefined;
        Q.onStateChange = function (K) {
          var S = System.get("automation") && System.get("automation").GameData;
          if (K > 0x0 && S) {
            S.emit("ScrollEvent", 0x1 === K ? "start" : "stop");
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'SlotScrollerController': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "3383aiogiFCOKC9u2Q0E3sA", "SlotScrollerController")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("SlotScrollerController.spec");
        var S = M("AutomationDecorator");
        var q = cc._decorator.ccclass;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.slotViews = undefined;
            A.isEnded = true;
            A.slotState = undefined;
            A.pendingSlotState = undefined;
            A.scrollers = [];
            A.abortRunScroller = undefined;
            A.bindedRunScrollerAtIndex = undefined;
            return A;
          }
          __extends(J, f);
          J.prototype.onEnable = function () {
            if (undefined !== this.pendingSlotState) {
              var A = this.pendingSlotState;
              this.pendingSlotState = undefined;
              var y = this.slotState;
              if (y !== A) {
                this.onStateChange(A, y);
              }
            }
          };
          J.prototype.onDisable = function () {
            var A;
            var y;
            try {
              var b = __values(this.scrollers);
              for (var u = b.next(); !u.done; u = b.next()) {
                var k = u.value;
                if (!k.isEnded) {
                  k.end();
                }
              }
            } catch (r) {
              var D = {
                error: r
              };
              A = D;
            } finally {
              try {
                if (u && !u.done && (y = b["return"])) {
                  y.call(b);
                }
              } finally {
                if (A) {
                  throw A.error;
                }
              }
            }
          };
          J.prototype.update = function (A) {
            var y;
            var b;
            var k;
            var D;
            if (this.isEnded) {
              try {
                var x = __values(this.scrollers);
                for (var G = x.next(); !G.done; G = x.next()) {
                  if ((E = G.value) && E.update) {
                    E.update(A);
                  }
                }
              } catch (w) {
                var Y = {
                  error: w
                };
                y = Y;
              } finally {
                try {
                  if (G && !G.done && (b = x["return"])) {
                    b.call(x);
                  }
                } finally {
                  if (y) {
                    throw y.error;
                  }
                }
              }
            } else {
              var m = true;
              try {
                var W = __values(this.scrollers);
                for (var F = W.next(); !F.done; F = W.next()) {
                  var E;
                  if (E = F.value) {
                    if (E.update) {
                      E.update(A);
                    }
                    if (!E.isEnded) {
                      m = false;
                    }
                  }
                }
              } catch (j) {
                var v = {
                  error: j
                };
                k = v;
              } finally {
                try {
                  if (F && !F.done && (D = W["return"])) {
                    D.call(W);
                  }
                } finally {
                  if (k) {
                    throw k.error;
                  }
                }
              }
              if (m) {
                this.isEnded = true;
                this.abortRunScroller = undefined;
                var I = this.callbacks.onSlotStateEnd;
                if (I) {
                  I(this.slotState);
                }
              }
            }
          };
          J.prototype.init = function (A, y) {
            this.slotViews = A;
            this.callbacks = y;
            this.bindedRunScrollerAtIndex = this.runScrollerAtIndex.bind(this);
          };
          J.prototype.scrollerAtIndex = function (A) {
            return this.scrollers[A];
          };
          J.prototype.indexOfScroller = function (A) {
            return this.scrollers.indexOf(A);
          };
          J.prototype.getSlotState = function () {
            return this.slotState;
          };
          J.prototype.setSlotState = function (A) {
            if (this.enabledInHierarchy) {
              this.pendingSlotState = undefined;
              var y = this.slotState;
              if (y !== A) {
                this.onStateChange(A, y);
              }
            } else {
              this.pendingSlotState = A;
            }
          };
          J.prototype.endCurrentState = function () {
            var A;
            var y;
            var b = this.abortRunScroller;
            if (b) {
              this.abortRunScroller = undefined;
              b();
            }
            try {
              var u = __values(this.scrollers);
              for (var k = u.next(); !k.done; k = u.next()) {
                var D = k.value;
                if (D) {
                  D.end();
                }
              }
            } catch (x) {
              var r = {
                error: x
              };
              A = r;
            } finally {
              try {
                if (k && !k.done && (y = u["return"])) {
                  y.call(u);
                }
              } finally {
                if (A) {
                  throw A.error;
                }
              }
            }
          };
          J.prototype.onStateChange = function (A, y) {
            var b = this.slotViews;
            var u = this.scrollers;
            var k = this.callbacks;
            if (k.willChangeSlotState) {
              k.willChangeSlotState(A, y);
            }
            var D = this.abortRunScroller;
            if (D) {
              this.abortRunScroller = undefined;
              D();
            }
            var x = 0x0;
            for (var G = b.length; x < G; x++) {
              var Y = u[x];
              var m = k.getScroller(x, b[x], A, y, Y);
              u[x] = m;
              if (Y) {
                if (!Y.isEnded) {
                  Y.end();
                }
                if (k.releaseScroller) {
                  k.releaseScroller(x, Y);
                }
              }
              if (m) {
                m.reset();
                this.isEnded = false;
              }
            }
            this.slotState = A;
            if (k.didChangeSlotState) {
              k.didChangeSlotState(A, y);
            }
            this.abortRunScroller = k.runScroller(A, this.bindedRunScrollerAtIndex);
          };
          J.prototype.runScrollerAtIndex = function (A) {
            var y = this.scrollers[A];
            if (y) {
              y.run();
            }
          };
          __decorate([S.automationDec({
            'func': K.onStateChange
          })], J.prototype, "onStateChange", null);
          return __decorate([q], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, l8],
    'SlotStateMachine': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "f1d53JqS5hGVbtNCz0JAnwN", "SlotStateMachine")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.StopStyle = Q.SlotStates = undefined;
        var K;
        var S;
        var q = M("Utils");
        (function (f) {
          f[f.SPINNING = 0x0] = "SPINNING";
          f[f.STOPPING = 0x1] = "STOPPING";
          f[f.STOPPED = 0x2] = "STOPPED";
        })(K = Q.SlotStates || (Q.SlotStates = {}));
        (function (f) {
          f[f.NORMAL = 0x0] = "NORMAL";
          f[f.FAST = 0x1] = "FAST";
        })(S = Q.StopStyle || (Q.StopStyle = {}));
        var N = function () {
          function f() {
            this.L = K.STOPPED;
            this.rm = S.NORMAL;
            this.am = false;
            this.um = false;
            this.lm = undefined;
            this.fm = undefined;
          }
          f.prototype.getState = function () {
            return this.L;
          };
          f.prototype.getStopStyle = function () {
            return this.rm;
          };
          f.prototype.spin = function (J, A) {
            if (this.L === K.STOPPED) {
              this.L = K.SPINNING;
              q.delayCallback(J)(this.dm.bind(this));
              this.lm = q.delayCallback(A)(this.vm.bind(this));
            }
          };
          f.prototype.markFastStop = function () {
            if (this.L === K.SPINNING) {
              this.rm = S.FAST;
            }
          };
          f.prototype.unmarkFastStop = function () {
            if (this.rm === S.FAST && this.L === K.SPINNING) {
              this.rm = S.NORMAL;
            }
          };
          f.prototype.fastStop = function (J) {
            if (!(this.L !== K.SPINNING && this.L !== K.STOPPING)) {
              this.rm = S.FAST;
              this.L = K.STOPPING;
              this.fm = J;
              if (this.am) {
                this._m();
              }
            }
          };
          f.prototype.stop = function (J) {
            if (this.L === K.SPINNING) {
              if (this.rm === S.FAST) {
                return;
              }
              this.L = K.STOPPING;
              this.fm = J;
              if (this.um) {
                this.mm();
              }
            }
          };
          f.prototype.stopped = function () {
            this.L = K.STOPPED;
            this.yc();
          };
          f.prototype.dm = function () {
            this.am = true;
            if (this.L === K.STOPPING && this.rm === S.FAST) {
              this._m();
            }
          };
          f.prototype.vm = function () {
            this.um = true;
            if (this.L === K.STOPPING && this.rm === S.NORMAL) {
              this.mm();
            }
          };
          f.prototype._m = function () {
            var J = this.lm;
            this.lm = undefined;
            if (J) {
              J();
            }
            this.mm();
          };
          f.prototype.mm = function () {
            var J = this.fm;
            this.fm = undefined;
            if (J) {
              J();
            }
          };
          f.prototype.yc = function () {
            this.rm = S.NORMAL;
            this.am = false;
            this.um = false;
            this.fm = undefined;
            this.lm = undefined;
          };
          return f;
        }();
        Q["default"] = N;
        cc._RF.pop();
      }
    }, l9],
    'SlotSymbol': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "95c9eiMihhJPZX0QzA3D4uZ", "SlotSymbol")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("BVFramework");
        var S = cc._decorator.ccclass;
        var q = function (N) {
          function f() {
            var J = null !== N && N.apply(this, arguments) || this;
            J.symbolRow = 0x1;
            J.symbolColumn = 0x1;
            J.pm = true;
            J.bm = false;
            return J;
          }
          __extends(f, N);
          Object.defineProperty(f.prototype, "visible", {
            'get': function () {
              return this.node.active;
            },
            'set': function (J) {
              this.node.active = J;
            },
            'enumerable': false,
            'configurable': true
          });
          f.prototype.onLoad = function () {
            if (this.pm) {
              K.getGameContext().emit("Game.SymbolCreated", this);
              this.bm = true;
            }
          };
          f.prototype.unuse = function () {
            this.symbolRow = 0x1;
            this.symbolColumn = 0x1;
            if (this.pm && this.bm) {
              K.getGameContext().emit("Game.SymbolRemoved", this);
            }
          };
          f.prototype.reuse = function () {
            if (this.pm && this.bm) {
              K.getGameContext().emit("Game.SymbolCreated", this);
            }
          };
          f.prototype.onDestroy = function () {
            if (this.pm && this.bm) {
              K.getGameContext().emit("Game.SymbolRemoved", this);
            }
          };
          f.prototype.enableEvent = function (J) {
            this.pm = J;
          };
          return __decorate([S], f);
        }(cc.Component);
        Q["default"] = q;
        cc._RF.pop();
      }
    }, lh],
    'SlotSystemModel': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "b8e48q3OlREgpqZ/fqigt7Z", "SlotSystemModel")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("SystemModel");
        var S = M("WinThresholdsModel");
        var q = function (N) {
          function f() {
            return null !== N && N.apply(this, arguments) || this;
          }
          __extends(f, N);
          f.prototype.updateGameInfo = function (J) {
            var A = J.cs;
            var y = J.ml;
            var b = J.mxl;
            var u = J.fbbm;
            var k = J.wt;
            this.rd = A || [];
            this.ad = y || [];
            this.Sm = b;
            this.gm = u;
            this.Cm = k ? new S.WinThresholdsModel(k) : undefined;
          };
          Object.defineProperty(f.prototype, "betLevelList", {
            'get': function () {
              return this.ad;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(f.prototype, "betSizeList", {
            'get': function () {
              return this.rd;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(f.prototype, "maxLineNumber", {
            'get': function () {
              return this.Sm;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(f.prototype, "featureBuyBetMultiplier", {
            'get': function () {
              return this.gm;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(f.prototype, "winThresholds", {
            'get': function () {
              return this.Cm;
            },
            'enumerable': false,
            'configurable': true
          });
          return f;
        }(K["default"]);
        Q["default"] = q;
        cc._RF.pop();
      }
    }, lM],
    'SlotTintController': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "a2d09YiJcRAgoIHw+TUmuSO", "SlotTintController")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.slotTintHolder = undefined;
            return A;
          }
          __extends(J, f);
          J.prototype.init = function () {
            this.slotTintHolder.width = 0x7d0;
            this.slotTintHolder.height = 0x7d0;
            this.slotTintHolder.opacity = 0x0;
          };
          J.prototype.fadeIn = function (A, y) {
            if (undefined === A) {
              A = 0x0;
            }
            this.slotTintHolder.stopAllActions();
            this.slotTintHolder.runAction(cc.sequence(cc.fadeTo(A, 0x8f), cc.callFunc(function () {
              if (y) {
                y();
              }
            })));
          };
          J.prototype.fadeOut = function (A, y) {
            if (undefined === A) {
              A = 0x0;
            }
            this.slotTintHolder.stopAllActions();
            this.slotTintHolder.runAction(cc.sequence(cc.fadeOut(A), cc.callFunc(function () {
              if (y) {
                y();
              }
            })));
          };
          __decorate([q(cc.Node)], J.prototype, "slotTintHolder", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'SlotTransactionModel': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "d5629sKgMRK16ZrOMxnkzm9", "SlotTransactionModel")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = M("WinValuesModel");
        var S = M("WinLinesModel");
        var q = M("BetRepository");
        var N = function (f) {
          function A() {
            return null !== f && f.apply(this, arguments) || this;
          }
          var J = {
            get: function () {
              return this.ym;
            },
            enumerable: false,
            configurable: true
          };
          __extends(A, f);
          Object.defineProperty(A.prototype, "winLines", J);
          Object.defineProperty(A.prototype, "winValues", {
            'get': function () {
              return this.Mm;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(A.prototype, "betLevelValue", {
            'get': function () {
              return this.Am.selectedBetLevelValue;
            },
            'set': function (y) {
              this.Am.selectedBetLevelValue = y;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(A.prototype, "betSizeValue", {
            'get': function () {
              return this.Am.selectedBetSizeValue;
            },
            'set': function (y) {
              this.Am.selectedBetSizeValue = y;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(A.prototype, "reels", {
            'get': function () {
              return this.Im;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(A.prototype, "originalReels", {
            'get': function () {
              return this.wm;
            },
            'enumerable': false,
            'configurable': true
          });
          A.prototype.updateTransactionInfo = function (y) {
            var b = y.wp;
            var u = y.lw;
            var k = y.ml;
            var D = y.cs;
            var x = y.orl;
            var G = y.rl;
            this.ym = b ? new S.WinLinesModel(b) : undefined;
            this.Mm = u ? new K.WinValuesModel(u) : undefined;
            if (!this.Am) {
              this.Am = new q.BetRepository(k, D);
            }
            this.Am.updateRemoteBets(k, D);
            this.Im = G;
            this.wm = x;
            this.updateSlotGameTransactionInfo(y);
          };
          return A;
        }(M("TransactionModel")["default"]);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, lB],
    'SlotView': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "dd04eu7yQpIx4UwS/QtQOjh", "SlotView")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.SlotAnchor = undefined;
        var K;
        var S = cc._decorator.ccclass;
        (function (N) {
          N[N.BOTTOM = -0x1] = "BOTTOM";
          N[N.MIDDLE = 0x0] = "MIDDLE";
          N[N.TOP = 0x1] = "TOP";
        })(K = Q.SlotAnchor || (Q.SlotAnchor = {}));
        var q = function () {
          function N(f, J) {
            if (undefined === J) {
              J = 0x0;
            }
            this.functionalRow = 0x0;
            this.symbolSize = undefined;
            this.viewHeight = 0x0;
            this.holder = undefined;
            this.offsetX = 0x0;
            this.sortBottomItemToFront = undefined;
            this.slotAnchor = K.MIDDLE;
            this.topIndex = 0x0;
            this.bottomIndex = 0x0;
            this.accumulatedPositionY = 0x0;
            this.slotItems = [];
            this.isDirty = true;
            this.bottomSlotIndex = undefined;
            this.holder = f;
            this.offsetX = J;
            this.viewHeight = f.height;
            f.on(cc.Node.EventType.SIZE_CHANGED, this.onSizeChanged, this);
          }
          N.prototype.init = function (f) {
            this.functionalRow = f.functionalRow;
            this.symbolSize = f.symbolSize;
            this.getItem = f.getItem;
            this.releaseItem = f.releaseItem;
            this.sortBottomItemToFront = f.sortBottomItemToFront;
            this.reloadItemsToIndex(0x0);
          };
          N.prototype.getFunctionalItems = function () {
            var f;
            var J;
            var A = this.slotItems;
            var y = A.length;
            var b = 0.5 * this.symbolSize.height;
            var u = this.functionalRow * b;
            for (var k = 0x0; k < y; k++) {
              var D = (x = A[k]).node.y - x.symbolRow * b;
              if (D < u) {
                f = u - D >= b ? k : k + 0x1;
                break;
              }
            }
            for (k = y - 0x1; k >= 0x0; k--) {
              var x;
              var G = (x = A[k]).node.y + x.symbolRow * b;
              if (G > -u) {
                J = G + u > b ? k : k - 0x1;
                break;
              }
            }
            return A.slice(f, J + 0x1);
          };
          N.prototype.getVisibleItems = function () {
            return this.slotItems;
          };
          N.prototype.getAccumulatedPositionY = function () {
            return this.accumulatedPositionY;
          };
          N.prototype.getItemAtIndex = function (f) {
            var J;
            var A;
            if (this.isIndexVisible(f)) {
              try {
                var y = __values(this.slotItems);
                for (var b = y.next(); !b.done; b = y.next()) {
                  var u = b.value;
                  if (u.positionIndex <= f) {
                    return u;
                  }
                }
              } catch (D) {
                var k = {
                  error: D
                };
                J = k;
              } finally {
                try {
                  if (b && !b.done && (A = y["return"])) {
                    A.call(y);
                  }
                } finally {
                  if (J) {
                    throw J.error;
                  }
                }
              }
            }
          };
          N.prototype.getNextTopIndex = function (f) {
            return Math.max(this.topIndex + 0x1, this.getBottomSlotIndex() + this.functionalRow + f);
          };
          N.prototype.getNextBottomIndex = function (f) {
            return Math.min(this.bottomIndex - 0x1, this.getBottomSlotIndex() - f - 0x1);
          };
          N.prototype.getDistanceToIndex = function (f) {
            var J = this.symbolSize.height;
            var A = this.getBottomSlotIndex();
            var y = this.getItemAtIndex(A);
            var c = (A - y.positionIndex - (y.symbolRow - 0x1) / 0x2) * J;
            var b = y.node.y + c;
            return (A - f) * J + (0.5 * (0x1 - this.functionalRow) * J - b);
          };
          N.prototype.getAccumulatedPositionAtIndex = function (f) {
            return this.symbolSize.height * -f;
          };
          N.prototype.getOffsetX = function () {
            return this.offsetX;
          };
          N.prototype.isIndexVisible = function (f) {
            return f >= this.bottomIndex && f <= this.topIndex;
          };
          N.prototype.setFunctionalRow = function (f) {
            this.functionalRow = f;
            this.isDirty = true;
          };
          N.prototype.setSlotAnchor = function (f) {
            this.slotAnchor = f;
          };
          N.prototype.changePositionY = function (f) {
            this.accumulatedPositionY += f;
            var J = this.slotItems;
            var A = 0x0;
            for (var y = J.length; A < y; A++) {
              J[A].node.y += f;
            }
            this.reviseVisibleItem();
          };
          N.prototype.resetPositionIndex = function () {
            var f = this.slotItems;
            var J = this.getBottomSlotIndex();
            f.forEach(function (A) {
              return A.positionIndex -= J;
            });
            this.topIndex -= J;
            this.bottomIndex -= J;
            this.accumulatedPositionY += J * this.symbolSize.height;
            this.isDirty = true;
          };
          N.prototype.scrollTo = function (f) {
            var J = this.getItemAtIndex(f);
            if (J) {
              var A = this.symbolSize.height;
              var y = 0.5 * (J.symbolRow - this.functionalRow) * A;
              var c = (f - J.positionIndex) * A;
              this.changePositionY(y - J.node.y - c);
            } else {
              this.reloadItemsToIndex(f);
            }
          };
          N.prototype.reloadItems = function (f) {
            if (undefined === f) {
              f = true;
            }
            if (f) {
              this.reloadItemsToIndex(0x0);
            } else {
              this.reloadItemsToIndex(this.getBottomSlotIndex());
            }
          };
          N.prototype.onSizeChanged = function () {
            var f = this.holder.height;
            if (this.viewHeight !== f) {
              var J = this.viewHeight;
              this.viewHeight = f;
              var A = this.slotAnchor;
              if (A) {
                var y = f - J;
                this.changePositionY(A * y / 0x2);
              } else {
                this.reviseVisibleItem();
              }
            }
          };
          N.prototype.reloadItemsToIndex = function (f) {
            var J = this;
            var A = this.slotItems;
            var y = this.symbolSize;
            if (A.length) {
              A.forEach(function (D) {
                return J.releaseItem(J, D);
              });
              A.length = 0x0;
            }
            var b = A[0x0] = this.getItem(this, f);
            var u = b.positionIndex;
            var k = b.node;
            k.parent = this.holder;
            k.y = ((b.symbolRow - this.functionalRow) / 0x2 + u) * y.height;
            k.x = (b.symbolColumn - 0x1) / 0x2 * y.width + this.offsetX;
            this.bottomIndex = u;
            this.topIndex = u + b.symbolRow - 0x1;
            this.accumulatedPositionY = -f * y.height;
            this.reviseVisibleItem();
          };
          N.prototype.reviseVisibleItem = function () {
            var f = this.slotItems;
            var J = this.symbolSize.height / 0x2;
            var A = this.viewHeight / 0x2 - 0.000005;
            var y = f[0x0];
            var c = f[f.length - 0x1];
            var b = false;
            if (y.node.y + y.symbolRow * J < A) {
              do {
                this.addItemAtTop();
                y = f[0x0];
              } while (y.node.y + y.symbolRow * J < A);
            } else if (y.node.y - y.symbolRow * J > A) {
              b = true;
            }
            if (c.node.y - c.symbolRow * J > -A) {
              do {
                this.addItemAtBottom();
                c = f[f.length - 0x1];
              } while (c.node.y - c.symbolRow * J > -A);
            } else if (c.node.y + c.symbolRow * J < -A) {
              do {
                this.removeItemAtBottom();
                c = f[f.length - 0x1];
              } while (c.node.y + c.symbolRow * J < -A);
            }
            if (b) {
              do {
                this.removeItemAtTop();
                y = f[0x0];
              } while (y.node.y - y.symbolRow * J > A);
            }
            this.isDirty = true;
          };
          N.prototype.addItemAtTop = function () {
            var f = this.symbolSize;
            var J = this.slotItems;
            var A = J[0x0];
            var y = this.topIndex + 0x1;
            var c = this.getItem(this, y);
            var b = c.node;
            b.parent = this.holder;
            b.y = A.node.y + (A.symbolRow + c.symbolRow) / 0x2 * f.height;
            b.x = (c.symbolColumn - 0x1) / 0x2 * f.width + this.offsetX;
            J.unshift(c);
            c.positionIndex = y;
            this.topIndex += c.symbolRow;
            if (this.sortBottomItemToFront) {
              c.setZIndex(this.getBottomSlotIndex() - c.positionIndex);
            }
          };
          N.prototype.addItemAtBottom = function () {
            var f = this.symbolSize;
            var J = this.slotItems;
            var A = J[J.length - 0x1];
            var y = this.bottomIndex - 0x1;
            var b = this.getItem(this, y);
            var u = b.node;
            u.parent = this.holder;
            u.y = A.node.y - (A.symbolRow + b.symbolRow) / 0x2 * f.height;
            u.x = (b.symbolColumn - 0x1) / 0x2 * f.width + this.offsetX;
            J.push(b);
            b.positionIndex = this.bottomIndex -= b.symbolRow;
            if (this.sortBottomItemToFront) {
              var k = this.getBottomSlotIndex();
              var D = 0x0;
              for (var x = J.length; D < x; D++) {
                J[D].setZIndex(k - J[D].positionIndex);
              }
            }
          };
          N.prototype.removeItemAtTop = function () {
            var f = this.slotItems.shift();
            f.node.parent = undefined;
            this.topIndex -= f.symbolRow;
            this.releaseItem(this, f);
          };
          N.prototype.removeItemAtBottom = function () {
            var f = this.slotItems;
            var J = f.pop();
            J.node.parent = undefined;
            this.bottomIndex += J.symbolRow;
            this.releaseItem(this, J);
            if (this.sortBottomItemToFront) {
              var A = this.getBottomSlotIndex();
              var y = 0x0;
              for (var c = f.length; y < c; y++) {
                f[y].setZIndex(A - f[y].positionIndex);
              }
            }
          };
          N.prototype.getBottomSlotIndex = function () {
            if (!this.isDirty) {
              return this.bottomSlotIndex;
            }
            this.isDirty = false;
            var f = this.slotItems;
            var J = 0.5 * this.symbolSize.height;
            var A = (0x1 - this.functionalRow) * J;
            for (var y = f.length - 0x1; y >= 0x0; y--) {
              var b = f[y];
              var u = b.node.y + b.symbolRow * J;
              if (u > A) {
                var k = Math.ceil((u - A) / this.symbolSize.height);
                return this.bottomSlotIndex = b.positionIndex + b.symbolRow - k;
              }
            }
            return -0x1;
          };
          return __decorate([S], N);
        }();
        Q["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'SoundButton': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "47f2aqFJBBCiYjiG/SqB5jv", "SoundButton")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("GenericSettingButton");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.sprite = undefined;
            b.soundOn = undefined;
            b.soundOff = undefined;
            b.title = undefined;
            return b;
          }
          __extends(y, A);
          y.prototype.setTitle = function (b) {
            this.title.string = b;
          };
          __decorate([f(cc.Sprite)], y.prototype, "sprite", undefined);
          __decorate([f(cc.SpriteFrame)], y.prototype, "soundOn", undefined);
          __decorate([f(cc.SpriteFrame)], y.prototype, "soundOff", undefined);
          __decorate([f(cc.Label)], y.prototype, "title", undefined);
          return __decorate([N], y);
        }(S["default"]);
        C["default"] = J;
        cc._RF.pop();
      }
    }, lR],
    'SpaceBarInterrupter': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "676cajSckdANomyB/3kyE3c", "SpaceBarInterrupter")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.spaceBarInterrupter = undefined;
        var K = M("BVFramework");
        var S = cc._decorator.ccclass;
        var q = new (function (N) {
          function f() {
            var J = N.call(this) || this;
            J.Om = [];
            J.Hm = false;
            J.Bm = false;
            K.getGameContext().on("Game.TransactionInfoUpdated", J.Gm, J);
            return J;
          }
          __extends(f, N);
          f.prototype.init = function (J) {
            this.Nm = this.Tm.bind(this, J);
            this.Pm = this.Lm.bind(this);
            this.subscribeEventInterrupter("default", undefined, J.reelClickCallback);
            var A = K.getGameContext();
            A.on("Game.TransactionStateTransition", this.Nm);
            cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.Pm);
            A.on("Game.SkipEvent", this.Rm, this);
          };
          f.prototype.subscribeEventInterrupter = function (J, A, y) {
            var c = this.Om;
            var b = 0x0;
            for (var u = c.length; b < u; b++) {
              if (c[b].event === J) {
                return;
              }
            }
            var k = {
              event: J,
              node: A,
              callback: y
            };
            c.push(k);
          };
          f.prototype.unsubscribeEventInterrupter = function (J) {
            var A = this.Om;
            var y = 0x0;
            for (var c = A.length; y < c; y++) {
              if (A[y].event === J) {
                A.splice(y, 0x1);
                break;
              }
            }
          };
          f.prototype.pause = function () {
            if (this.Nm) {
              if (!this.Hm) {
                cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.Pm);
                this.Hm = true;
              }
            }
          };
          f.prototype.resume = function () {
            if (this.Nm && this.Hm) {
              cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.Pm);
              this.Hm = false;
            }
          };
          f.prototype.stop = function () {
            var J = K.getGameContext();
            J.off("Game.TransactionStateTransition", this.Nm);
            cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.Pm);
            J.off("Game.SkipEvent", this.Rm, this);
            this.Nm = undefined;
            this.Pm = undefined;
            this.Om.length = 0x0;
          };
          f.prototype.Tm = function (J, A) {
            var y = A.payload.to;
            var c = this.Om[0x0];
            var b = J.spinButtonClickCallback;
            var u = J.reelClickCallback;
            if ("action" === y && this.Bm) {
              c.callback = b;
            } else if ("result" === y && c.callback !== u) {
              c.callback = u;
            }
          };
          f.prototype.Lm = function (J) {
            if (J.keyCode === cc.macro.KEY.space) {
              this.Rm();
            }
          };
          f.prototype.Rm = function () {
            var J = this.Om;
            for (var A = J.length - 0x1; A >= 0x0; A--) {
              var y = J[A];
              var c = y.node;
              if (!c) {
                if (b = y.callback) {
                  b();
                }
                break;
              }
              if (cc.isValid(c)) {
                if (c.active) {
                  var b;
                  if (b = y.callback) {
                    b();
                  }
                  break;
                }
              } else {
                J.splice(A, 0x1);
              }
            }
          };
          f.prototype.Gm = function (J) {
            var A = J.payload;
            this.Bm = 0x1 === A.nst;
          };
          return __decorate([S("SpaceBarInterrupter")], f);
        }(cc.Object))();
        Q.spaceBarInterrupter = q;
        cc._RF.pop();
      }
    }, ll],
    'SpinButtonController.spec': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "19f67zHH4dJhr5p+qxj4Jky", "SpinButtonController.spec")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.setButtonInteractivity = Q.initSpinButtonControllerNodes = undefined;
        Q.initSpinButtonControllerNodes = function (K) {
          var S = System.get("automation") && System.get("automation").GameConfigs;
          if (S) {
            S.initNodeConfig(K.spinButtonNode, "spin_button");
          }
        };
        Q.setButtonInteractivity = function (K) {
          var S = System.get("automation") && System.get("automation").GameData;
          if (S) {
            S.emit("SpinButtonInteractivity", K);
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'SpinButtonController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "43d12n8a1BInJvBu7QtjALE", "SpinButtonController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.SpinButtonMode = C.SpinButtonAnimationState = undefined;
        var S;
        var q;
        var N = B("SettingMenuHelper");
        var f = B("ButtonHitTest");
        var J = cc._decorator.ccclass;
        (function (y) {
          y[y.IDLE = 0x1] = "IDLE";
          y[y.SPINNING = 0x2] = "SPINNING";
          y[y.STOPPED = 0x3] = "STOPPED";
        })(S = C.SpinButtonAnimationState || (C.SpinButtonAnimationState = {}));
        (function (y) {
          y[y.ENABLED = 0x0] = "ENABLED";
          y[y.DISABLED = 0x1] = "DISABLED";
          y[y.AUTOSPIN = 0x2] = "AUTOSPIN";
        })(q = C.SpinButtonMode || (C.SpinButtonMode = {}));
        var A = function (y) {
          function b() {
            var u = null !== y && y.apply(this, arguments) || this;
            u.Em = q.DISABLED;
            u.km = S.STOPPED;
            u.Um = false;
            u.jm = undefined;
            u.Dm = undefined;
            return u;
          }
          __extends(b, y);
          b.prototype.showAutoSpinLook = function () {
            if (this.Dm) {
              this.Dm();
            }
          };
          Object.defineProperty(b.prototype, "mode", {
            'get': function () {
              return this.Em;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "animationState", {
            'get': function () {
              return this.km;
            },
            'enumerable': false,
            'configurable': true
          });
          b.prototype.setOnClickCallback = function (u) {
            this.jm = u;
          };
          b.prototype.clearOnClickCallback = function () {
            this.jm = undefined;
          };
          b.prototype.destroy = function () {
            this.jm = undefined;
            this.Dm = undefined;
            this.Wm();
            this.node.destroy();
            return y.prototype.destroy.call(this);
          };
          b.prototype.Wm = function () {
            this.xm();
            if (this.onHideMouseOverEffect) {
              this.onHideMouseOverEffect();
            }
            if (this.onStopAllAnimations) {
              this.onStopAllAnimations();
            }
          };
          b.prototype.init = function () {
            this.Fm();
            this.onDisableButton();
            if (this.onInit) {
              this.onInit();
            }
          };
          b.prototype.idle = function () {
            this.km = S.IDLE;
            if (this.Em !== q.AUTOSPIN) {
              if (this.onShowIdleAnimation) {
                this.onShowIdleAnimation();
              }
              if (this.Um) {
                this.Vm();
              }
            }
          };
          b.prototype.spin = function () {
            this.km = S.SPINNING;
            if (this.Em !== q.AUTOSPIN) {
              if (this.Em !== q.DISABLED && this.onReplaceSpinBlurredSpriteFrame) {
                this.onReplaceSpinBlurredSpriteFrame();
              }
              if (this.onHideMouseOverEffect) {
                this.onHideMouseOverEffect();
              }
              if (this.onShowSpinAnimation) {
                this.onShowSpinAnimation();
              }
            }
          };
          b.prototype.stopSpin = function () {
            this.km = S.STOPPED;
            if (this.Em !== q.AUTOSPIN && this.onShowStopSpinningAnimation) {
              this.onShowStopSpinningAnimation();
            }
          };
          b.prototype.enableButton = function () {
            if (this.Em === q.DISABLED) {
              this.Em = q.ENABLED;
              if (this.onEnableButton) {
                this.onEnableButton();
              }
            }
          };
          b.prototype.disableButton = function () {
            if (this.Em === q.ENABLED) {
              this.Em = q.DISABLED;
              if (this.onDisableButton) {
                this.onDisableButton();
              }
            }
          };
          b.prototype.show = function () {
            this.node.active = true;
          };
          b.prototype.hide = function () {
            this.node.active = false;
          };
          b.prototype.isAutoSpin = function () {
            return this.Em === q.AUTOSPIN;
          };
          b.prototype.enterAutoSpinMode = function (u, k) {
            if (this.km === S.IDLE && u > 0x0) {
              this.Em = q.AUTOSPIN;
              this.Dm = k;
              this.showAutoSpinLook(u);
            }
          };
          b.prototype.updateAutoSpinCount = function (u) {
            if (this.Em === q.AUTOSPIN && this.onUpdateAutoSpinCount) {
              this.onUpdateAutoSpinCount(u);
            }
          };
          b.prototype.exitAutoSpinMode = function () {
            if (this.Em === q.AUTOSPIN) {
              this.Em = q.ENABLED;
              if (this.onHideMouseOverEffect) {
                this.onHideMouseOverEffect();
              }
              if (this.onExitAutoSpinMode) {
                this.onExitAutoSpinMode();
              }
              switch (this.km) {
                case S.IDLE:
                  if (this.onResumeIdle) {
                    this.onResumeIdle();
                  }
                  break;
                case S.SPINNING:
                  if (this.onResumeSpin) {
                    this.onResumeSpin();
                  }
                  break;
                case S.STOPPED:
                  if (this.onResumeStop) {
                    this.onResumeStop();
                  }
              }
              if (N.settingMenuHelper.stopSpinOptionButtonAnim) {
                N.settingMenuHelper.stopSpinOptionButtonAnim();
              }
            }
          };
          b.prototype.clickSpinButton = function () {
            if (true === this.node.active && this.Em !== q.DISABLED && f.buttonHitTest(this.node)) {
              var u = this.jm;
              if (u) {
                u();
              }
            }
          };
          b.prototype.Fm = function () {
            this.node.on("mouseenter", this.zm, this);
            this.node.on("mouseleave", this.Jm, this);
          };
          b.prototype.xm = function () {
            this.node.off("mouseenter", this.zm, this);
            this.node.off("mouseleave", this.Jm, this);
          };
          b.prototype.zm = function () {
            this.Um = true;
            this.Vm();
          };
          b.prototype.Jm = function () {
            this.Um = false;
            if (this.onHideMouseOverEffect) {
              this.onHideMouseOverEffect();
            }
          };
          b.prototype.Vm = function () {
            var u = this.Em;
            var k = this.km;
            if ((u === q.AUTOSPIN || u !== q.DISABLED && k !== S.STOPPED) && this.onPlayMouseOverEffect) {
              this.onPlayMouseOverEffect();
            }
          };
          return __decorate([J], b);
        }(cc.Component);
        C["default"] = A;
        cc._RF.pop();
      }
    }, lQ],
    'SpinConfigHandler': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "932b5xCb0FH57DavWl/zOYi", "SpinConfigHandler")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.initSpinConfig = C.featureConfig = undefined;
        var S = {
          minimumSpinningTime: 0x0,
          regularSpinningTime: 0x1,
          fastStopFeature: false,
          turboSpinFeature: false
        };
        C.featureConfig = S;
        C.initSpinConfig = function (N) {
          var J = N.jurisdictionModel.singlePlayMinDuration;
          var A = J > 0x0 ? N.minimumSpinningTimeOffset || 0x0 : N.minimumSpinningTime;
          var y = J > 0x0 ? N.regularSpinningTimeOffset || 0x0 : N.regularSpinningTime;
          S.minimumSpinningTime = J + A;
          S.regularSpinningTime = J + y;
          S.turboSpinFeature = N.jurisdictionModel.turboSpinEnable;
          S.fastStopFeature = N.jurisdictionModel.turboSpinEnable;
          C.featureConfig = Object.freeze(S);
        };
        cc._RF.pop();
      }
    }, {}],
    'SpinOptionsButton': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "3ee68qGxY9G3q+WVKsHebfZ", "SpinOptionsButton")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("GenericSettingButton");
        var q = B("UIAppearanceHelper");
        var N = B("Utils");
        var f = cc._decorator;
        var J = f.ccclass;
        var A = f.property;
        var y = function (b) {
          function u() {
            var k = null !== b && b.apply(this, arguments) || this;
            k.holder = undefined;
            k.autoSpinTurn = undefined;
            k.autoSpinIcon = undefined;
            k.autoSpinIconShadow = undefined;
            k.qm = undefined;
            return k;
          }
          __extends(u, b);
          u.prototype.onLoad = function () {
            b.prototype.onLoad.call(this);
            if (this.buttonTheme) {
              var k = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              N.setNodeColorWithOpacity(this.autoSpinTurn, k);
              N.setNodeColorWithOpacity(this.autoSpinIcon, k);
              N.setNodeColorWithOpacity(this.autoSpinIconShadow, k);
            }
          };
          u.prototype.setAutoSpinSprite = function (k) {
            this.iconSprite.getComponent(cc.Sprite).spriteFrame = k;
          };
          u.prototype.playAutoSpinAnim = function () {
            this.stopAutoSpinAnim();
            var k = cc.repeatForever(cc.rotateBy(0x6, 0x168));
            this.autoSpinTurn.runAction(k);
            this.autoSpinIconShadow.parent.opacity = 0x0;
            this.Km();
          };
          u.prototype.stopAutoSpinAnim = function () {
            var k = this.qm;
            this.qm = undefined;
            if (k) {
              k();
            }
            this.autoSpinTurn.stopAllActions();
            this.autoSpinIconShadow.parent.stopAllActions();
            this.autoSpinIconShadow.parent.opacity = 0x0;
            this.autoSpinIconShadow.parent.scale = 0x1;
          };
          u.prototype.changeButtonPressedColor = function (k) {
            if (k) {
              this.node.runAction(cc.scaleTo(0.05, 0.9));
            } else {
              this.node.runAction(cc.sequence(cc.scaleTo(0.05, 1.1), cc.scaleTo(0.05, 1.05), cc.scaleTo(0.05, 0x1)));
            }
          };
          u.prototype.Km = function () {
            var k = this;
            this.qm = N.delayCallback(0x3)(function () {
              k.autoSpinIconShadow.parent.opacity = 0xb4;
              k.autoSpinIconShadow.parent.scale = 0x1;
              k.autoSpinIconShadow.parent.runAction(cc.sequence(cc.spawn(cc.scaleTo(1.2, 2.2), cc.fadeOut(1.2)), cc.callFunc(function () {
                k.Km();
              })));
            });
          };
          u.prototype.interactableButtonColor = function (k) {
            if (this.buttonTheme) {
              var D = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var x = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              var G = k ? D : x;
              this.holder.opacity = G.a;
              N.setNodeColorWithOpacity(this.iconSprite, G);
              N.setNodeColorWithOpacity(this.autoSpinTurn, G);
              N.setNodeColorWithOpacity(this.autoSpinIcon, G);
              N.setNodeColorWithOpacity(this.autoSpinIconShadow, G);
            }
          };
          u.prototype.destroy = function () {
            var k = this.qm;
            this.qm = undefined;
            if (k) {
              k();
            }
            this.autoSpinTurn.stopAllActions();
            return b.prototype.destroy.call(this);
          };
          __decorate([A(cc.Node)], u.prototype, "holder", undefined);
          __decorate([A(cc.Node)], u.prototype, "autoSpinTurn", undefined);
          __decorate([A(cc.Node)], u.prototype, "autoSpinIcon", undefined);
          __decorate([A(cc.Node)], u.prototype, "autoSpinIconShadow", undefined);
          return __decorate([J], u);
        }(S["default"]);
        C["default"] = y;
        cc._RF.pop();
      }
    }, lC],
    'SpinState': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "f1de36UCZVLKpe2qk9vzSaC", "SpinState")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SlotAnalyticsEnum");
        var q = B("SlotAnalyticsHelper");
        var N = B("Utils");
        var f = B("SpinConfigHandler");
        var J = function () {
          function A(y, b, u, k) {
            this.name = "Spin State";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.finalCallback = undefined;
            this.stateDecorator = undefined;
            this.dataSource = y;
            this.generalControllers = b.generalControllers;
            this.finalCallback = u;
            if (k) {
              this.stateDecorator = k;
              k.triggerFastStop = this.triggerFastStop.bind(this);
            }
          }
          A.prototype.setAvailableActions = function () {};
          A.prototype.clearAvailableActions = function () {};
          A.prototype.preExitStateCleanup = function () {};
          A.prototype.additionalDestroyCleanups = function () {};
          A.prototype.triggerFastStop = function (y) {
            var b = this.generalControllers;
            var u = b.slotController;
            q.sendFastStopGA(y, b.spinButtonController.isAutoSpin());
            u.setOnClickCallback(undefined);
            u.markFastStop();
            if (this.stateDecorator && this.stateDecorator.slotFastStopTriggered) {
              this.stateDecorator.slotFastStopTriggered();
            }
            this.slotFastStopTriggered();
          };
          A.prototype.slotFastStopTriggered = function () {};
          A.prototype.run = function () {
            if (this.stateDecorator) {
              if (this.stateDecorator.stateWillStartSpin) {
                this.stateDecorator.stateWillStartSpin();
              }
              if (this.stateDecorator.setAvailableActions) {
                this.stateDecorator.setAvailableActions();
              }
            }
            this.stateWillStartSpin();
            this.setAvailableActions();
            this.Qm();
            this.Ym();
          };
          A.prototype.Ym = function () {
            this.callApi(this.Xm.bind(this));
          };
          A.prototype.Qm = function () {
            var y = this.generalControllers.slotController;
            if (f.featureConfig.fastStopFeature) {
              y.setOnClickCallback(this.triggerFastStop.bind(this, S.SpinTrigger.CLICK));
            }
            if (this.stateDecorator && this.stateDecorator.startSlotController) {
              this.stateDecorator.startSlotController();
            } else {
              this.Zm();
            }
          };
          A.prototype.Xm = function () {
            this.Is();
          };
          A.prototype.Is = function () {
            if (this.stateDecorator) {
              if (this.stateDecorator.clearAvailableActions) {
                this.stateDecorator.clearAvailableActions();
              }
              if (this.stateDecorator.preExitStateCleanup) {
                this.stateDecorator.preExitStateCleanup();
              }
            }
            this.clearAvailableActions();
            this.preExitStateCleanup();
            var y = this.finalCallback;
            this.finalCallback = undefined;
            this.destroy();
            N.deferCallback(true)(function () {
              N.deferCallback(true)(y);
            });
          };
          A.prototype.destroy = function () {
            this.generalControllers.slotController.setOnClickCallback(undefined);
            this.dataSource = undefined;
            this.finalCallback = undefined;
            this.generalControllers = undefined;
            if (this.stateDecorator) {
              this.stateDecorator.destroy();
              this.stateDecorator = undefined;
            }
            this.additionalDestroyCleanups();
          };
          A.prototype.Zm = function () {
            this.generalControllers.slotController.spin();
          };
          return A;
        }();
        C["default"] = J;
        cc._RF.pop();
      }
    }, lK],
    'SpineConfigHandler': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "41ed4d0xT1Izbrt84+ace0R", "SpineConfigHandler")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.spineConfigHandler = undefined;
        var K = function () {
          function S() {
            this.$m = [];
          }
          S.prototype.setSymbolSpine = function (q) {
            this.$m = q;
          };
          S.prototype.getNormalSymbolSpine = function (q) {
            return this.$m[q];
          };
          return S;
        }();
        Q.spineConfigHandler = new K();
        cc._RF.pop();
      }
    }, {}],
    'StickyController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "ad358E+oKdDwIThq37L8ZXx", "StickyController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = B("GeneralAudioConstant");
        var N = B("SlotProperties");
        var J = B("AudioManager");
        var A = cc._decorator;
        var y = A.ccclass;
        var b = A.property;
        var k = [-0x140, 0x0, 0x140];
        var D = [0x131, 0x0, -0x131];
        var x = ["featureWinLine1", "featureWinLine2", "featureWinLine3", "featureWinLine4", "featureWinLine5"];
        var G = function (Y) {
          function m() {
            var W = null !== Y && Y.apply(this, arguments) || this;
            W.stickyPrefab = undefined;
            W.stickyHolder = undefined;
            W.bigSymbolNode = undefined;
            W.tint = undefined;
            W.tp = undefined;
            W.ip = [];
            W.sp = [];
            W.ep = 0x0;
            return W;
          }
          __extends(m, Y);
          m.prototype.init = function () {
            this.tp = new cc.NodePool("StickyItemController");
            this.np(0x9);
          };
          m.prototype.resetAudioCount = function () {
            this.ep = 0x0;
          };
          m.prototype.playSticky = function (W, F, E, I) {
            var w = this;
            var j = F.rawData;
            var Z = Object.keys(F.rawData);
            var X = new Set();
            Z.forEach(function (H) {
              j[H].forEach(function (z) {
                X.add(z);
              });
            });
            if (this.sp.length !== Z.length) {
              var V = q.GENERAL_AUDIO[x[this.ep]].key;
              J.stopAudioIfPlaying(V);
              J.playAudioIfNotPlaying(V);
              this.ep++;
              if (this.ep >= 0x5) {
                this.ep = 0x0;
              }
            }
            this.sp = Z;
            W.forEach(function (H, z) {
              if (H === E || H === N.SLOT_INDEX.WILD) {
                if (w.ip[z]) {
                  if (X.has(z) && (O = w.ip[z])) {
                    (T = O.getComponent("StickyItemController")).play(H);
                  }
                } else {
                  var P = N.getRowFromIndex(z);
                  var p = N.getColumnFromIndex(z);
                  var O = w.op();
                  var L = k[p];
                  var U = D[P];
                  O.parent = w.stickyHolder;
                  O.position = cc.v3(L, U);
                  var T = O.getComponent("StickyItemController");
                  if (X.has(z)) {
                    T.play(H);
                  } else {
                    T.show(H);
                  }
                  w.ip[z] = O;
                }
              }
            });
            S.delayCallback(0.3)(function () {
              if (I) {
                I();
              }
            });
          };
          m.prototype.stopSticky = function (W) {
            var F = this;
            var E = 0x1;
            var v = function () {
              if (! --E) {
                if (W) {
                  W();
                }
              }
            };
            this.ip.forEach(function (I, w) {
              if (I) {
                E++;
                I.getComponent("StickyItemController").hide(function () {
                  F.ip[w] = undefined;
                  F.cp(I);
                  v();
                });
              }
            });
            v();
          };
          m.prototype.clearSticky = function () {
            var W = this;
            this.ip.forEach(function (F, E) {
              if (F) {
                W.ip[E] = undefined;
                W.cp(F);
              }
            });
          };
          m.prototype.playLargeSymbol = function (W, F, E, v) {
            var I = function () {
              if (v) {
                v();
              }
            };
            if (F && F.rawData) {
              if (F.winPositions.length >= 0x5) {
                var w = __spread(new Set(W));
                if (0x2 === w.length && w.indexOf(N.SLOT_INDEX.WILD) || 0x1 === w.length) {
                  var j = w[0x0];
                  if (0x2 === w.length) {
                    j = w.filter(function (V) {
                      return V !== N.SLOT_INDEX.WILD;
                    })[0x0];
                  }
                  var Z = this.bigSymbolNode.getComponent("BigSymbolItemController");
                  this.tint.stopAllActions();
                  this.tint.runAction(cc.fadeTo(0.4, 0xff));
                  Z.playBigSymbol(j, I);
                  if (E) {
                    E();
                  }
                  this.ip.forEach(function (V) {
                    if (V) {
                      V.opacity = 0x0;
                    }
                  });
                } else {
                  I();
                }
                var X = q.GENERAL_AUDIO.prizeWinFullscreen.key;
                J.stopAudioIfPlaying(X);
                J.playAudioIfNotPlaying(X);
              } else {
                I();
              }
            } else {
              I();
            }
          };
          m.prototype.playWin = function (W) {
            var F = W.rawData;
            var E = Object.keys(W.rawData);
            var v = new Set();
            E.forEach(function (I) {
              F[I].forEach(function (w) {
                v.add(w);
              });
            });
            this.stickyMap.forEach(function (I, w) {
              if (I) {
                var j = I.getComponent("StickyItemController");
                if (v.has(w)) {
                  j.playWin();
                } else {
                  j.hide();
                }
              }
            });
          };
          Object.defineProperty(m.prototype, "stickyMap", {
            'get': function () {
              return this.ip;
            },
            'enumerable': false,
            'configurable': true
          });
          m.prototype.clearLargeSymbol = function (W) {
            this.tint.stopAllActions();
            this.tint.runAction(cc.fadeTo(0.4, 0x0));
            this.ip.forEach(function (F) {
              if (F) {
                F.opacity = 0xff;
              }
            });
            this.bigSymbolNode.getComponent("BigSymbolItemController").stopBigSymbol(W);
          };
          m.prototype.np = function (W) {
            for (var F = 0x0; F < W; F++) {
              this.tp.put(cc.instantiate(this.stickyPrefab));
            }
          };
          m.prototype.op = function () {
            return this.tp.size() > 0x0 ? this.tp.get() : cc.instantiate(this.stickyPrefab);
          };
          m.prototype.cp = function (W) {
            this.tp.put(W);
          };
          __decorate([b(cc.Prefab)], m.prototype, "stickyPrefab", undefined);
          __decorate([b(cc.Node)], m.prototype, "stickyHolder", undefined);
          __decorate([b(cc.Node)], m.prototype, "bigSymbolNode", undefined);
          __decorate([b(cc.Node)], m.prototype, "tint", undefined);
          return __decorate([y], m);
        }(cc.Component);
        C["default"] = G;
        cc._RF.pop();
      }
    }, lS],
    'StickyItemController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "09093gTG49IL6y7P7Ay2KSq", "StickyItemController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("GConstants");
        var q = B("SymbolImageHandler");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var u = null !== y && y.apply(this, arguments) || this;
            u.symbolSprite = undefined;
            u.shine = undefined;
            u.shineParticle = undefined;
            u.shineCircle = undefined;
            return u;
          }
          __extends(b, y);
          b.prototype.play = function (u) {
            this.symbolSprite.spriteFrame = q.symbolImageHandler.symbolImages[u];
            this.symbolSprite.node.runAction(cc.scaleTo(0.3, 1.1).easing(cc.easeCircleActionOut()));
            this.shine.runAction(cc.fadeIn(0.5));
            this.shineParticle.play();
          };
          b.prototype.show = function (u) {
            this.symbolSprite.spriteFrame = q.symbolImageHandler.symbolImages[u];
            this.symbolSprite.node.runAction(cc.scaleTo(0.3, 1.1).easing(cc.easeCircleActionOut()));
          };
          b.prototype.playWin = function () {
            this.shineCircle.node.runAction(cc.tintTo(0.25, S.WHITE));
            this.shineCircle.play();
          };
          b.prototype.stopWin = function () {
            this.shineCircle.node.stopAllActions();
            this.shineCircle.stop();
            this.shineCircle.setCurrentTime(0x0);
            this.shineCircle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.shineCircle.node.color = S.BLACK;
          };
          b.prototype.hide = function (u) {
            var k = this;
            this.symbolSprite.node.runAction(cc.spawn(cc.fadeOut(0.3), cc.scaleTo(0.3, 0x1).easing(cc.easeCircleActionOut())));
            this.shine.runAction(cc.sequence(cc.fadeOut(0.3), cc.callFunc(function () {
              k.symbolSprite.spriteFrame = undefined;
              k.symbolSprite.node.opacity = 0xff;
              if (u) {
                u();
              }
            })));
            this.shineParticle.stop();
            this.shineParticle.setCurrentTime(0x0);
            this.shineParticle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.stopWin();
          };
          b.prototype._t = function () {
            this.symbolSprite.node.stopAllActions();
            this.symbolSprite.node.opacity = 0xff;
            this.symbolSprite.spriteFrame = undefined;
            this.shine.stopAllActions();
            this.shine.opacity = 0x0;
            this.shineParticle.stop();
            this.shineParticle.setCurrentTime(0x0);
            this.shineParticle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.stopWin();
          };
          b.prototype.reuse = function () {
            this._t();
          };
          b.prototype.unuse = function () {
            this._t();
          };
          __decorate([J(cc.Sprite)], b.prototype, "symbolSprite", undefined);
          __decorate([J(cc.Node)], b.prototype, "shine", undefined);
          __decorate([J(cc.Animation)], b.prototype, "shineParticle", undefined);
          __decorate([J(cc.Animation)], b.prototype, "shineCircle", undefined);
          return __decorate([f], b);
        }(cc.Component);
        C["default"] = A;
        cc._RF.pop();
      }
    }, lq],
    'SubControllerConfig': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "24ea0V+c1hBKJve2dHxdOZ/", "SubControllerConfig")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.SubControllers = undefined;
        (function (K) {
          K[K.AUTOSPIN = 0x0] = "AUTOSPIN";
          K[K.BET = 0x1] = "BET";
          K[K.USER_SETTING = 0x2] = "USER_SETTING";
          K[K.HISTORY = 0x3] = "HISTORY";
          K[K.PAYTABLE = 0x4] = "PAYTABLE";
          K[K.RULE = 0x5] = "RULE";
          K[K.WALLET = 0x6] = "WALLET";
        })(Q.SubControllers || (Q.SubControllers = {}));
        cc._RF.pop();
      }
    }, {}],
    'SymbolImageHandler': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "e5abbnVc/1Ov4XANddRxDja", "SymbolImageHandler")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.symbolImageHandler = Q.SymbolImageHandler = undefined;
        var K = M("SlotProperties");
        var S = function () {
          function q() {
            this.hp = [];
            this.rp = [];
          }
          q.prototype.setSymbolImage = function (N) {
            this.hp[K.SLOT_INDEX.FIRECRACKER] = N.getSpriteFrame("h_firecracker");
            this.hp[K.SLOT_INDEX.INGOTS] = N.getSpriteFrame("h_ingot");
            this.hp[K.SLOT_INDEX.MONEYBAG] = N.getSpriteFrame("h_pouch");
            this.hp[K.SLOT_INDEX.ORANGE] = N.getSpriteFrame("h_orange");
            this.hp[K.SLOT_INDEX.REDPACKETS] = N.getSpriteFrame("h_angbao");
            this.hp[K.SLOT_INDEX.RUYI] = N.getSpriteFrame("h_ruyi");
            this.rp[K.SLOT_INDEX.FIRECRACKER] = N.getSpriteFrame("h_firecracker_blur");
            this.rp[K.SLOT_INDEX.INGOTS] = N.getSpriteFrame("h_ingot_blur");
            this.rp[K.SLOT_INDEX.MONEYBAG] = N.getSpriteFrame("h_pouch_blur");
            this.rp[K.SLOT_INDEX.ORANGE] = N.getSpriteFrame("h_orange_blur");
            this.rp[K.SLOT_INDEX.REDPACKETS] = N.getSpriteFrame("h_angbao_blur");
            this.rp[K.SLOT_INDEX.RUYI] = N.getSpriteFrame("h_ruyi_blur");
          };
          q.prototype.setLocalizedWildImage = function (N) {
            this.hp[K.SLOT_INDEX.WILD] = N.getSpriteFrame("s_wild");
            this.rp[K.SLOT_INDEX.WILD] = N.getSpriteFrame("s_wild_blur");
          };
          Object.defineProperty(q.prototype, "symbolImages", {
            'get': function () {
              return this.hp;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(q.prototype, "blurredSymbolImages", {
            'get': function () {
              return this.rp;
            },
            'enumerable': false,
            'configurable': true
          });
          q.prototype.getLocalizedWildImage = function () {
            return this.hp[K.SLOT_INDEX.WILD];
          };
          return q;
        }();
        Q.SymbolImageHandler = S;
        Q.symbolImageHandler = new S();
        cc._RF.pop();
      }
    }, lN],
    'SymbolPayoutController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "7c05ali6OlCEJ+GOnxbYWHT", "SymbolPayoutController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SymbolPayoutPanelGenerator");
        var q = B("SinglePayoutModel");
        var N = B("Utils");
        var f = B("PopOutItemHandler");
        var J = cc._decorator;
        var A = J.ccclass;
        var y = J.property;
        var b = function (k) {
          function D() {
            var x = null !== k && k.apply(this, arguments) || this;
            x.popOutItem = undefined;
            x.popOutTint = undefined;
            x.ap = [];
            x.lp = undefined;
            x.fp = undefined;
            x.dp = new f["default"]();
            x.vp = undefined;
            x._p = new q["default"]();
            x.mp = S.symbolPayoutPanelGenerator;
            return x;
          }
          __extends(D, k);
          D.prototype.init = function (x) {
            x.containerNode = x.containerNode ? x.containerNode : this.node;
            this.pp = x;
            var G = x.numberOfTint ? x.numberOfTint : 0x1;
            this.mp.generatePanel(x);
            if (G > 0x1) {
              this.ap = [];
              for (var Y = 0x0; Y < G; Y++) {
                var m = cc.instantiate(this.popOutTint);
                if (Array.isArray(this.bp)) {
                  this.bp[Y].addChild(m);
                } else {
                  this.bp.addChild(m);
                }
                var W;
                var F = m.getComponent("PopOutTintController");
                W = Array.isArray(this.Sp) ? this.Sp[Y] : this.Sp;
                this.ap.push(F);
                F.setup(W);
              }
            } else {
              m = cc.instantiate(this.popOutTint);
              this.bp.addChild(m);
              this.ap = m.getComponent("PopOutTintController");
              this.ap.setup(this.Sp);
            }
            this.dp.init(this.popOutItem, this.gp);
            this._p.payoutData = x.payoutData;
            if (this.vp) {
              this.vp(x);
            }
          };
          D.prototype.resetPanel = function (x) {
            x.containerNode = x.containerNode ? x.containerNode : this.node;
            this.pp = x;
            this.mp.regeneratePanel(x);
            this._p.payoutData = x.payoutData ? x.payoutData : this._p.payoutData;
          };
          D.prototype.setExtraInitialzation = function (x) {
            this.vp = x;
          };
          D.prototype.setPopOutDisplayHolder = function (x) {
            this.gp = x;
          };
          D.prototype.setPopOutTintHolder = function (x) {
            this.bp = x;
          };
          D.prototype.setReelData = function (x, G, Y) {
            this._p.reelData = x;
            this._p.extendSymbolData = G;
            this._p.extendBlockData = Y;
          };
          D.prototype.setAdditionalData = function (x) {
            this._p.additionalData = x;
          };
          D.prototype.setTintConfig = function (x) {
            this.Sp = x;
          };
          D.prototype.setupButtonEvent = function (x) {
            var G = this;
            if (undefined === x) {
              x = [];
            }
            var Y = this.mp.getButtonControllerList();
            var m = this.mp.getButtonComponentList();
            Y.forEach(function (W, F) {
              if (x.includes(F)) {
                W.setClickCallback(undefined);
                m[F].clickEvents = [];
              } else {
                var E = G.Cp.bind(G, F, G._p.reelData[F], G._p.payoutData);
                W.setClickCallback(E);
                var v = W.getControllerAndHandlerName();
                var I = v.ControllerName;
                var w = v.HandlerName;
                var j = new cc.Component.EventHandler();
                j.target = W.node;
                j.component = I;
                j.handler = w;
                m[F].clickEvents = [];
                m[F].clickEvents.push(j);
              }
            });
          };
          D.prototype.setAdditionalOnClickCallback = function (x) {
            this.lp = x;
          };
          D.prototype.setAdditionalOnCancelCallback = function (x) {
            this.fp = x;
          };
          D.prototype.clearOnClickCallback = function () {
            this.mp.getButtonControllerList().forEach(function (x) {
              x.clearClickCallback();
            });
          };
          D.prototype.enablePanel = function () {
            this.node.active = true;
            this.mp.getButtonComponentList().forEach(function (x) {
              x.interactable = true;
            });
          };
          D.prototype.disablePanel = function () {
            this.mp.getButtonComponentList().forEach(function (x) {
              x.interactable = false;
            });
            this.node.active = false;
          };
          D.prototype.hidePopOutItem = function (x) {
            this.yp(x);
          };
          Object.defineProperty(D.prototype, "buttonList", {
            'get': function () {
              return this.mp.getButtonList();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(D.prototype, "buttonControllerList", {
            'get': function () {
              return this.mp.getButtonControllerList();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(D.prototype, "buttonComponentList", {
            'get': function () {
              return this.mp.getButtonComponentList();
            },
            'enumerable': false,
            'configurable': true
          });
          D.prototype.Cp = function (x, G, Y) {
            var m = this;
            this.Mp(this.yp.bind(this));
            N.spawnCallback(this.Ap.bind(this, x, G), this.Ip.bind(this, x, G, Y))(function () {
              m.Op();
            });
          };
          D.prototype.setPopOutItemLayout = function (x, G) {
            var Y;
            Y = G < Math.round(this.pp.numberOfColumn / 0x2) * this.pp.numberOfRow;
            var m = x.parent.convertToWorldSpaceAR(x.position);
            return {
              'isLeftToRight': Y,
              'position': this.gp.convertToNodeSpaceAR(m)
            };
          };
          D.prototype.Ip = function (x, G, Y, m) {
            var W = this._p;
            var F = W.extendSymbolData;
            var E = W.extendBlockData;
            var v = W.additionalData;
            if (F) {
              Object.keys(F).forEach(function (X) {
                if (F[X].includes(x)) {
                  var V = F[X].length;
                  x = F[X][V - 0x1];
                }
              });
            }
            var I = this.mp.getButtonList()[x];
            var w = this.setPopOutItemLayout(I, x);
            var j = w.isLeftToRight;
            var Z = w.position;
            this.dp.runPopoutItemShowCallback(m, Y, x, G, cc.v2(Z), j, F, E, v);
          };
          D.prototype.Mp = function (x) {
            this.dp.setCancelCallback(x);
          };
          D.prototype.Ap = function (x, G, Y) {
            var m = function () {
              if (Y) {
                Y();
              }
            };
            if (Array.isArray(this.ap)) {
              var W = [];
              this.ap.forEach(function (F) {
                W.push(F.show.bind(F));
              });
              N.spawnCallback(W)(m);
            } else {
              this.ap.show(function () {
                m();
              });
            }
          };
          D.prototype.yp = function (x) {
            this.dp.runPopoutItemHideCallback();
            var G = function () {
              if (x) {
                x();
              }
            };
            if (Array.isArray(this.ap)) {
              var Y = [];
              this.ap.forEach(function (m) {
                Y.push(m.hide.bind(m));
              });
              N.spawnCallback(Y)(G);
            } else {
              this.ap.hide(G);
            }
            this.Hp();
          };
          D.prototype.Op = function () {
            if (this.lp) {
              this.lp();
            }
          };
          D.prototype.Hp = function () {
            if (this.fp) {
              this.fp();
            }
          };
          Object.defineProperty(D.prototype, "singlePayoutModel", {
            'get': function () {
              return this._p;
            },
            'enumerable': false,
            'configurable': true
          });
          __decorate([y(cc.Prefab)], D.prototype, "popOutItem", undefined);
          __decorate([y(cc.Prefab)], D.prototype, "popOutTint", undefined);
          return __decorate([A], D);
        }(cc.Component);
        C["default"] = b;
        cc._RF.pop();
      }
    }, lf],
    'SymbolPayoutPanelGenerator': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "b4807S7wZxNyKaQIPwkQNfI", "SymbolPayoutPanelGenerator")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.regeneratePanel = Q.getButtonList = Q.getButtonComponentList = Q.getButtonControllerList = Q.generatePanel = Q.symbolPayoutPanelGenerator = undefined;
        var K = M("ButtonController");
        var S = function () {
          function q() {
            this.Zi = [];
            this.Bp = [];
            this.Gp = [];
            this.Np = new cc.NodePool();
          }
          q.prototype.Tp = function (N, J, A, y, b, k, D) {
            var x = Math.floor(A % D);
            var G = Math.floor(A / D);
            var Y = b * (0x1 - N.anchorY);
            var m = y * N.anchorX;
            var W = Y - J.height / 0x2;
            var F = -(m - J.width / 0x2);
            var E = W - J.height * x;
            var I = F + J.width * G;
            J.setPosition(I, E);
          };
          q.prototype.generatePanel = function (N) {
            var J = N.containerNode;
            var A = N.containerSize ? N.containerSize : J.getContentSize();
            var y = A.width;
            var b = A.height;
            J.width = y;
            J.height = b;
            var k = N.numberOfColumn;
            var D = N.numberOfRow;
            var x = N.numberOfButton ? N.numberOfButton : k * D;
            var G = y / k;
            var Y = b / D;
            for (var W = 0x0; W < x; W++) {
              var F = this.Np.get();
              var E = undefined;
              var I = undefined;
              if (F) {
                E = F.getComponent(K["default"]);
                I = F.getComponent(cc.Button);
              } else {
                F = new cc.Node("payout_button");
                var w = new cc.Node("background");
                F.addChild(w);
                I = F.addComponent(cc.Button);
                E = F.addComponent(K["default"]);
                I.target = w;
                F.height = N.buttonHeight ? N.buttonHeight : Y;
                F.width = N.buttonWidth ? N.buttonWidth : G;
                I.transition = cc.Button.Transition.COLOR;
                I.pressedColor = cc.Color.GRAY;
                var j = w.addComponent(cc.Sprite);
                j.sizeMode = cc.Sprite.SizeMode.CUSTOM;
                if (N.buttonBase) {
                  j.spriteFrame = N.buttonBase.spriteFrame;
                }
                w.height = Y;
                w.width = G;
              }
              F.parent = J;
              var Z = N.buttonPosition;
              if (Z) {
                F.setPosition(Z[W]);
              } else {
                this.Tp(J, F, W, y, b, k, D);
              }
              this.Zi.push(F);
              this.Bp.push(E);
              this.Gp.push(I);
            }
          };
          q.prototype.getButtonList = function () {
            return this.Zi;
          };
          q.prototype.getButtonControllerList = function () {
            return this.Bp;
          };
          q.prototype.getButtonComponentList = function () {
            return this.Gp;
          };
          q.prototype.regeneratePanel = function (N) {
            var f = this;
            this.Zi.forEach(function (o) {
              f.Np.put(o);
            });
            this.Zi = [];
            this.Gp = [];
            this.Bp = [];
            this.generatePanel(N);
          };
          return q;
        }();
        Q["default"] = S;
        Q.symbolPayoutPanelGenerator = new S();
        Q.generatePanel = Q.symbolPayoutPanelGenerator.generatePanel.bind(Q.symbolPayoutPanelGenerator);
        Q.getButtonControllerList = Q.symbolPayoutPanelGenerator.getButtonControllerList.bind(Q.symbolPayoutPanelGenerator);
        Q.getButtonComponentList = Q.symbolPayoutPanelGenerator.getButtonComponentList.bind(Q.symbolPayoutPanelGenerator);
        Q.getButtonList = Q.symbolPayoutPanelGenerator.getButtonList.bind(Q.symbolPayoutPanelGenerator);
        Q.regeneratePanel = Q.symbolPayoutPanelGenerator.regeneratePanel.bind(Q.symbolPayoutPanelGenerator);
        cc._RF.pop();
      }
    }, lo],
    'SystemFeatureHandler': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "c93d5OmEfVKSLl/iM1N4BVc", "SystemFeatureHandler")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.checkSpinValidity = Q.getReevaluateBet = Q.handleSystemEvent = undefined;
        var K = M("SlotAnalyticsEnum");
        M("LaunchConfig");
        M("ErrorHandler");
        var S = M("Utils");
        Q.handleSystemEvent = function (f) {
          var J = f.autoSpinCount;
          var A = f.exitAutoSpinHandler;
          var y = f.walletHelper;
          var b = f.settingMenuHelper;
          var u = f.betChangedHandler;
          S.sequenceCallback(N(y, J, A), q(b, u))(f.callback);
        };
        Q.getReevaluateBet = q;
        Q.checkSpinValidity = function (f) {
          var J;
          var y = f.callback;
          J = f.walletHelper;
          (function (b) {
            if (J.isFreeGameMode() && J.hasFreeGame()) {
              y(K.SpinCredits.FREE_GAME);
            } else if (b) {
              b();
            }
          })(function () {
            y(K.SpinCredits.CASH);
          });
        };
        cc._RF.pop();
      }
      function q(f, J) {
        return function (A) {
          if (f.reevaluateBet()) {
            if (J) {
              J(A);
            } else {
              f.updateBetValues();
              if (A) {
                A();
              }
            }
          } else if (A) {
            A();
          }
        };
      }
      function N(f, J, A) {
        return function (y) {
          if (f.isWalletCompleted() && J > 0x0 && A) {
            A();
          }
          if (y) {
            y();
          }
        };
      }
    }, ls],
    'SystemModel': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "daa8eblXeJHyaG5qwoh+Te0", "SystemModel")) {
        var B = System.get("bvframework").SystemModel;
        M.exports["default"] = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'TabBarController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "b2f70mOAvdOxZtKjfDu/lHM", "TabBarController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("TabBar");
        var q = B("TabBarItem");
        var N = B("TransitionContext");
        var f = B("ViewController");
        var J = cc._decorator;
        var A = J.ccclass;
        var y = J.property;
        var b = function (k) {
          function D() {
            var x = null !== k && k.apply(this, arguments) || this;
            x.content = undefined;
            x.tabBar = undefined;
            x.bottomNode = undefined;
            x.tabBarItemPrefab = undefined;
            x.Pp = [];
            x.Na = [];
            x.Lp = undefined;
            x.Rp = 0x0;
            x.Ta = false;
            return x;
          }
          __extends(D, k);
          D.prototype.onLoad = function () {
            this.Ep();
            this.kp();
            this.Up();
            this.node.on("size-changed", this.La, this);
          };
          D.prototype.onEnable = function () {
            var x = this.Lp;
            if (x) {
              x.enabled = true;
            }
          };
          D.prototype.onDisable = function () {
            var x = this.Lp;
            if (x) {
              x.enabled = false;
            }
          };
          D.prototype.viewWillAppear = function (x) {
            var G = this.Lp;
            if (G) {
              G.viewWillAppear(x);
            }
          };
          D.prototype.viewDidAppear = function (x) {
            var G = this.Lp;
            if (G) {
              G.viewDidAppear(x);
            }
          };
          D.prototype.viewWillDisappear = function (x) {
            var G = this.Lp;
            if (G) {
              G.viewWillDisappear(x);
            }
          };
          D.prototype.viewDidDisappear = function (x) {
            var G = this.Lp;
            if (G) {
              G.viewDidDisappear(x);
            }
          };
          D.prototype.viewDidLayoutSubviews = function () {};
          D.prototype.setControllers = function (x, G, Y) {
            if (undefined === G) {
              G = 0x0;
            }
            if (undefined === Y) {
              Y = false;
            }
            if (Array.isArray(x)) {
              this.Rp = G;
              this.Na = x;
              this.jp();
              this.Pp = [];
              var m = this.Pp;
              for (var W = 0x0; W < x.length; W++) {
                var F = x[W];
                F.node.parent = this.content;
                this.Dp(W);
                var E = F.tabBarItem;
                if (!(E && E instanceof q["default"])) {
                  var v = F.title;
                  (E = cc.instantiate(this.tabBarItemPrefab).getComponent(q["default"])).init(v, undefined, undefined, W);
                  F.tabBarItem = E;
                }
                E.selectAction = this.Wp.bind(this, W, Y);
                m.push(E);
                F.enabled = W === G;
              }
              this.tabBar.setItems(m, G);
              var I = x[G];
              this.Lp = I;
              I.viewWillAppear(false);
              I.viewDidAppear(false);
              if (I.tabBarItem && I.tabBarItem.animFinish) {
                I.tabBarItem.animFinish();
              }
              this.xp(G);
            }
          };
          D.prototype.getSelectedController = function () {
            return this.Lp;
          };
          D.prototype.getSelectedTabBarItem = function () {
            return this.tabBar.getSelectedItem();
          };
          D.prototype.hideTabBar = function () {
            if (this.tabBar.node.active || this.bottomNode.active) {
              this.tabBar.node.active = false;
              this.bottomNode.active = false;
              this.La();
            }
          };
          D.prototype.showTabBar = function () {
            if (!(this.tabBar.node.active && this.bottomNode.active)) {
              this.tabBar.node.active = true;
              this.bottomNode.active = true;
              this.La();
            }
          };
          D.prototype.Dp = function (x) {
            var G = this.Na[x];
            var Y = this.content;
            if (G && G.node.getContentSize() !== Y.getContentSize()) {
              var m = G.node;
              var W = Y.width;
              var F = Y.height;
              var E = Y.anchorX;
              var v = Y.anchorY;
              var I = (m.anchorX - E + x) * W;
              var w = (m.anchorY - v) * F;
              m.setContentSize(W, F);
              m.setPosition(I, w);
            }
          };
          D.prototype.Fp = function () {
            return true === this.tabBar.node.active ? this.safeAreaInsets.bottom : 0x0;
          };
          D.prototype.Ep = function () {
            var x = this.Fp();
            var G = this.node;
            var Y = G.width;
            var m = G.height;
            this.content.setContentSize(Y, m - x);
          };
          D.prototype.kp = function () {
            var x = this.Fp();
            var G = this.node.height;
            this.tabBar.node.y = x + this.tabBar.node.height - G;
          };
          D.prototype.Up = function () {
            if (this.tabBar.node.active) {
              var x = this.Fp();
              var G = this.node;
              var Y = G.width;
              var m = G.height;
              var W = this.bottomNode;
              W.setContentSize(Y, x);
              W.y = x - m;
            }
          };
          D.prototype.La = function () {
            var x = this.Rp;
            this.Ep();
            this.kp();
            this.Up();
            this.Dp(x);
          };
          D.prototype.xp = function (x) {
            this.content.x = -x * this.content.width;
          };
          D.prototype.Wp = function (x, G) {
            if (!this.Ta && x !== this.Rp) {
              var Y = this.Na;
              if (!(x >= Y.length)) {
                var m = this.Lp;
                var W = Y[x];
                if (undefined !== m && undefined !== W) {
                  this.Vp(x);
                  this.Ta = true;
                  this.tabBar.selectItemAtIndex(x);
                  this.Rp = x;
                  this.Lp = W;
                  if (W.setSelect) {
                    W.setSelect();
                  }
                  W.enabled = true;
                  if (m.viewWillDisappear) {
                    m.viewWillDisappear(G);
                  }
                  if (W.viewWillAppear) {
                    W.viewWillAppear(G);
                  }
                  if (G) {
                    if (this.tabBarControllerDelegate && (this.tabBarControllerDelegate.transitionAnimationForTabBarToRight || this.tabBarControllerDelegate.transitionAnimationForTabBarToLeft)) {
                      var F;
                      if (F = x > this.Rp ? this.tabBarControllerDelegate.transitionAnimationForTabBarToRight() : this.tabBarControllerDelegate.transitionAnimationForTabBarToLeft()) {
                        this.zp(F, m, W, x);
                      } else {
                        this.xp(x);
                        this.Jp(m, W, x);
                      }
                    } else {
                      this.xp(x);
                      this.Jp(m, W, x);
                    }
                  } else {
                    this.xp(x);
                    this.qp(m, W, x, false);
                  }
                }
              }
            }
          };
          D.prototype.zp = function (x, G, Y, m) {
            var W = this;
            var F = new N.TransitionContext(G, Y, G.view, Y.view, this.content);
            x.animateTransition(F, function () {
              W.qp(G, Y, m, true);
            });
          };
          D.prototype.Jp = function (x, G, Y) {
            var m = this;
            var W = G.navigator ? G.navigator : G;
            W.node.opacity = 0x0;
            var F = cc.sequence(cc.fadeTo(0x1, 0xff).easing(cc.easeSineIn()), cc.callFunc(function () {
              W.node.opacity = 0xff;
              m.qp(x, G, Y, true);
            }));
            W.node.runAction(F);
          };
          D.prototype.qp = function (x, G, Y, m) {
            if (G.tabBarItem && G.tabBarItem.animFinish) {
              G.tabBarItem.animFinish();
            }
            if (G) {
              G.viewDidAppear(m);
            }
            if (x) {
              x.viewDidDisappear(m);
            }
            if (x) {
              x.enabled = false;
            }
            this.Ta = false;
            this.jp();
          };
          D.prototype.Vp = function (x) {
            var G;
            var Y;
            var m = this.Rp;
            var W = this.Na;
            if (m > x) {
              G = x;
              Y = m;
            } else {
              G = m;
              Y = x;
            }
            for (var F = G; F <= Y; F++) {
              W[F].node.opacity = 0xff;
            }
          };
          D.prototype.jp = function () {
            var x = this.Rp;
            var G = this.Na;
            for (var Y = 0x0; Y < G.length; Y++) {
              if (Y !== x) {
                G[Y].node.opacity = 0x0;
              }
            }
          };
          __decorate([y(cc.Node)], D.prototype, "content", undefined);
          __decorate([y(S["default"])], D.prototype, "tabBar", undefined);
          __decorate([y(cc.Node)], D.prototype, "bottomNode", undefined);
          __decorate([y(cc.Prefab)], D.prototype, "tabBarItemPrefab", undefined);
          return __decorate([A], D);
        }(f["default"]);
        C["default"] = b;
        cc._RF.pop();
      }
    }, lJ],
    'TabBarItem': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "cd0fbm4LQBEVL5LzWleSsGj", "TabBarItem")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.icon = undefined;
            A.titleLabel = undefined;
            A.tintColor = undefined;
            A.selectedTintColor = undefined;
            A.Kp = undefined;
            A.Qp = undefined;
            A.Yp = undefined;
            A.Xp = undefined;
            A.Zp = undefined;
            return A;
          }
          __extends(J, f);
          Object.defineProperty(J.prototype, "tag", {
            'get': function () {
              return this.Xp;
            },
            'set': function (A) {
              this.Xp = A;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(J.prototype, "selectAction", {
            'set': function (A) {
              this.Zp = A;
            },
            'enumerable': false,
            'configurable': true
          });
          J.prototype.init = function (A, y, b, u) {
            if (A) {
              this.titleLabel.string = A;
            }
            if (y) {
              this.icon.spriteFrame = y;
              this.Kp = y;
            }
            this.Yp = b;
            this.Xp = u;
            this.Qp = false;
          };
          J.prototype.setupTouchAction = function () {
            this.node.on(cc.Node.EventType.TOUCH_START, this.$, this);
            this.node.on(cc.Node.EventType.TOUCH_END, this.it, this);
          };
          J.prototype.setTintColor = function (A) {
            if (!this.Qp) {
              this.icon.node.color = A;
              this.titleLabel.node.color = A;
            }
            this.tintColor = A;
          };
          J.prototype.setSelectedTintColor = function (A) {
            if (this.Qp) {
              this.icon.node.color = A;
              this.titleLabel.node.color = A;
            }
            this.selectedTintColor = A;
          };
          J.prototype.setTitleAttributes = function (A) {
            var y = A.getFontSize();
            var b = A.getNormalFontColor();
            var u = A.getFontName();
            var k = A.getLineHeight();
            this.titleLabel.fontSize = y;
            this.titleLabel.font = u;
            this.titleLabel.node.color = b;
            this.titleLabel.lineHeight = k;
          };
          J.prototype.setSelect = function () {
            var A = this.selectedTintColor;
            this.icon.node.color = A;
            this.titleLabel.node.color = A;
            this.icon.spriteFrame = this.Yp;
            this.Qp = true;
          };
          J.prototype.setUnselected = function () {
            var A = this.tintColor;
            this.icon.node.color = A;
            this.titleLabel.node.color = A;
            this.icon.spriteFrame = this.Kp;
            this.Qp = false;
          };
          J.prototype.animFinish = function () {};
          J.prototype.$ = function () {};
          J.prototype.it = function (A) {
            A.stopPropagation();
            if (this.Zp) {
              this.Zp();
            }
          };
          __decorate([q(cc.Sprite)], J.prototype, "icon", undefined);
          __decorate([q(cc.Label)], J.prototype, "titleLabel", undefined);
          __decorate([q(cc.Color)], J.prototype, "tintColor", undefined);
          __decorate([q(cc.Color)], J.prototype, "selectedTintColor", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'TabBar': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "b8f7436fYdNnryqvtnVtqIL", "TabBar")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator;
        var S = K.ccclass;
        var q = K.property;
        var N = function (f) {
          function J() {
            var A = null !== f && f.apply(this, arguments) || this;
            A.background = undefined;
            A.itemsContainer = undefined;
            A.shadow = undefined;
            A.Pp = [];
            A.$p = undefined;
            return A;
          }
          __extends(J, f);
          J.prototype.onLoad = function () {
            var A = this.node.width;
            var y = this.node.height;
            this.background.node.setContentSize(A, y);
            this.shadow.node.width = A;
            this.itemsContainer.setContentSize(A, y);
          };
          J.prototype.setItems = function (A, y) {
            var b = A.length;
            if (b && !(b < 0x1)) {
              for (var u = 0x0; u < b; u++) {
                var k = A[u];
                k.setupTouchAction();
                k.node.parent = this.itemsContainer;
              }
              var D = A[y];
              D.setSelect();
              this.$p = D;
              this.Pp = A;
            }
          };
          J.prototype.getItems = function () {
            return this.Pp;
          };
          J.prototype.selectItemAtIndex = function (A) {
            if (!(A >= this.Pp.length)) {
              var y = this.$p;
              if (y) {
                y.setUnselected();
              }
              var b = this.Pp[A];
              b.setSelect();
              this.$p = b;
            }
          };
          J.prototype.getSelectedItem = function () {
            return this.$p;
          };
          J.prototype.setTintColor = function (A) {
            var y = this.Pp;
            for (var b = 0x0; b < y.length; b++) {
              y[b].setTintColor(A);
            }
          };
          J.prototype.setSelectedTintColor = function (A) {
            var y = this.Pp;
            for (var b = 0x0; b < y.length; b++) {
              y[b].setSelectedTintColor(A);
            }
          };
          J.prototype.setTitleAttributes = function (A) {
            var y = this.Pp;
            for (var b = 0x0; b < y.length; b++) {
              y[b].setTitleAttributes(A);
            }
          };
          J.prototype.setBackgroundImage = function (A, y) {
            if (A) {
              this.background.spriteFrame = A;
            } else if (y) {
              this.background.node.color = y;
            }
          };
          __decorate([q(cc.Sprite)], J.prototype, "background", undefined);
          __decorate([q(cc.Node)], J.prototype, "itemsContainer", undefined);
          __decorate([q(cc.Sprite)], J.prototype, "shadow", undefined);
          return __decorate([S], J);
        }(cc.Component);
        Q["default"] = N;
        cc._RF.pop();
      }
    }, {}],
    'TigerController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "ac8aaXi1jdK56Xm1MRmZZeQ", "TigerController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = B("GeneralAudioConstant");
        var N = B("AudioManager");
        var f = cc._decorator;
        var J = f.ccclass;
        var A = f.property;
        var y = ["voxSmallwin1a", "voxSmallwin1b", "voxSmallwin1c"];
        var b = ["voxSmallwin2a", "voxSmallwin2b"];
        var k = function (D) {
          function x() {
            var G = null !== D && D.apply(this, arguments) || this;
            G.tiger = undefined;
            G.ingotHolder = undefined;
            G.shine = undefined;
            G.shine2 = undefined;
            G.rain = undefined;
            G.tb = undefined;
            G.ib = 0x0;
            G.sb = 0x0;
            return G;
          }
          __extends(x, D);
          x.prototype.init = function () {};
          x.prototype.getIngotWorldPos = function () {
            return this.node.convertToWorldSpaceAR(this.ingotHolder.position);
          };
          x.prototype.getTigerPosition = function () {
            return this.node.parent.convertToWorldSpaceAR(this.node.position);
          };
          x.prototype.setRespin = function () {
            var G = this.tb;
            this.tb = undefined;
            if (G) {
              G();
            }
            this.node.position = cc.v3(0x0, -0x46);
            this.rain.node.active = true;
            this.rain.play();
            this.tiger.setAnimation(0x0, "rs_idle", true);
          };
          x.prototype.setNormal = function (G) {
            this.node.position = cc.v3(0x0, 0x0);
            this.rain.stop();
            this.rain.setCurrentTime(0x0);
            this.rain.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.rain.node.active = false;
            this.eb(G);
          };
          x.prototype.playRespin = function (G) {
            this.rain.node.active = true;
            this.rain.play();
            this.rain.node.runAction(cc.fadeIn(0x1));
            if (G) {
              G();
            }
          };
          x.prototype.playNormal = function (G) {
            if (G) {
              G();
            }
            this.rain.stop();
            this.rain.setCurrentTime(0x0);
            this.rain.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.rain.node.active = false;
          };
          x.prototype.playIngot = function (G) {
            var Y = this.tb;
            this.tb = undefined;
            if (Y) {
              Y();
            }
            var m = "fx_wild_collect";
            if (G >= 0x14) {
              m = "fx_wild_collect3";
            } else if (G >= 0xc) {
              m = "fx_wild_collect2";
            }
            this.tiger.setAnimation(0x0, "wild_collect", false);
            this.tiger.setAnimation(0x1, m, false);
            this.eb(G);
          };
          x.prototype.playWin = function (G) {
            var Y = this.tb;
            this.tb = undefined;
            if (Y) {
              Y();
            }
            var m = q.GENERAL_AUDIO[y[this.ib]].key;
            N.stopAudioIfPlaying(m);
            N.playAudioIfNotPlaying(m);
            this.ib++;
            if (this.ib >= 0x3) {
              this.ib = 0x0;
            }
            this.tiger.setAnimation(0x0, "win", false);
            this.eb(G);
          };
          x.prototype.playBigWin = function (G) {
            var Y = this.tb;
            this.tb = undefined;
            if (Y) {
              Y();
            }
            var m = q.GENERAL_AUDIO[b[this.sb]].key;
            N.stopAudioIfPlaying(m);
            N.playAudioIfNotPlaying(m);
            this.sb++;
            if (this.sb >= 0x2) {
              this.sb = 0x0;
            }
            this.tiger.setAnimation(0x0, "win2", false);
            this.eb(G);
          };
          x.prototype.playRespinWin = function () {
            var G = this.tb;
            this.tb = undefined;
            if (G) {
              G();
            }
            this.tiger.clearTracks();
            this.tiger.setToSetupPose();
            var Y = q.GENERAL_AUDIO.voxRsWin.key;
            N.stopAudioIfPlaying(Y);
            N.playAudioIfNotPlaying(Y);
            this.tiger.setAnimation(0x0, "rs_win", false);
            this.tiger.addAnimation(0x0, "rs_win_idle", true);
          };
          x.prototype.zoomOut = function () {
            var G = this.tb;
            this.tb = undefined;
            if (G) {
              G();
            }
            this.tiger.clearTracks();
            this.tiger.setToSetupPose();
            this.tiger.setAnimation(0x0, "zo_start", false);
            this.tiger.addAnimation(0x0, "zo_idle", false);
            this.tiger.addAnimation(0x0, "rs_start", false);
            this.tiger.addAnimation(0x0, "rs_idle", true);
            this.node.stopAllActions();
            this.node.position = cc.v3(0x0, 0x0);
            this.node.runAction(cc.sequence(cc.delayTime(0.35), cc.moveTo(1.75, cc.v2(0x0, -0x46)).easing(cc.easeCubicActionInOut())));
          };
          x.prototype.zoomIn = function () {
            var G = this.tb;
            this.tb = undefined;
            if (G) {
              G();
            }
            this.node.stopAllActions();
            this.node.position = cc.v3(0x0, -0x46);
            this.node.runAction(cc.moveTo(1.75, cc.v2(0x0, 0x0)).easing(cc.easeCubicActionInOut()));
            var Y = this.tiger.addAnimation(0x0, "rs_win_exit", false);
            this.eb(0x0, Y.animation.duration);
          };
          x.prototype.teaseZoomOut = function () {
            var G = this.tb;
            this.tb = undefined;
            if (G) {
              G();
            }
            this.tiger.setAnimation(0x0, "zo_start", false);
            this.tiger.addAnimation(0x0, "zo_idle", true);
            this.node.stopAllActions();
            this.node.position = cc.v3(0x0, 0x0);
            this.node.runAction(cc.sequence(cc.delayTime(0.35), cc.moveTo(0.85, cc.v2(0x0, -0x23)).easing(cc.easeCubicActionInOut())));
          };
          x.prototype.teaseZoomIn = function (G) {
            var Y = this.tb;
            this.tb = undefined;
            if (Y) {
              Y();
            }
            this.node.stopAllActions();
            this.node.position = cc.v3(0x0, -0x23);
            this.node.runAction(cc.moveTo(0.85, cc.v2(0x0, 0x0)).easing(cc.easeCubicActionInOut()));
            var m = q.GENERAL_AUDIO.voxZoExit.key;
            N.stopAudioIfPlaying(m);
            N.playAudioIfNotPlaying(m);
            this.tiger.setAnimation(0x0, "zo_exit", false);
            this.eb(G);
          };
          x.prototype.noSpin = function (G) {
            var Y = this.tb;
            this.tb = undefined;
            if (Y) {
              Y();
            }
            var m = q.GENERAL_AUDIO.voxIdle4.key;
            N.stopAudioIfPlaying(m);
            N.playAudioIfNotPlaying(m);
            this.tiger.setAnimation(0x0, "idle4", false);
            this.eb(G);
          };
          x.prototype.noWin = function (G) {
            var Y = this.tb;
            this.tb = undefined;
            if (Y) {
              Y();
            }
            this.tiger.addAnimation(0x0, "idle5", false);
            this.eb(G);
          };
          x.prototype.eb = function (G, Y) {
            var m = this;
            if (undefined === Y) {
              Y = 0x0;
            }
            var W = this.tb;
            this.tb = undefined;
            if (W) {
              W();
            }
            var F = "fx_idle";
            if (G >= 0x14) {
              F = "fx_idle3";
            } else if (G >= 0xc) {
              F = "fx_idle2";
            }
            this.tiger.addAnimation(0x0, "idle", true);
            this.tiger.addAnimation(0x1, F, true, Y);
            var E = "idle3";
            var v = function () {
              var I = Math.floor(0x14 * Math.random() + 0xc);
              m.tb = S.delayCallback(I)(function () {
                m.tiger.addAnimation(0x0, "idle2", false);
                m.tiger.addAnimation(0x0, E, true);
                E = "idle";
                v();
              });
            };
            v();
          };
          x.prototype.resetTiger = function (G) {
            var Y = this;
            var m = this.tb;
            this.tb = undefined;
            if (m) {
              m();
            }
            var W = "fx_idle";
            if (G >= 0x14) {
              W = "fx_idle3";
            } else if (G >= 0xc) {
              W = "fx_idle2";
            }
            this.tiger.setAnimation(0x0, "idle", true);
            this.tiger.setAnimation(0x1, W, true);
            var F = "idle3";
            var E = function () {
              var v = Math.floor(0x14 * Math.random() + 0xc);
              Y.tb = S.delayCallback(v)(function () {
                Y.tiger.addAnimation(0x0, "idle2", false);
                Y.tiger.addAnimation(0x0, F, true);
                F = "idle";
                E();
              });
            };
            E();
          };
          __decorate([A(sp.Skeleton)], x.prototype, "tiger", undefined);
          __decorate([A(cc.Node)], x.prototype, "ingotHolder", undefined);
          __decorate([A(cc.Node)], x.prototype, "shine", undefined);
          __decorate([A(cc.Node)], x.prototype, "shine2", undefined);
          __decorate([A(cc.Animation)], x.prototype, "rain", undefined);
          return __decorate([J], x);
        }(cc.Component);
        C["default"] = k;
        cc._RF.pop();
      }
    }, lA],
    'TimedWinRollBaseController': [function (Q, C, K) {
      'use strict';

      if (!cc._RF.push(C, "12aa3hO3pdL6oUvYmprts/7", "TimedWinRollBaseController")) {
        var S = {
          value: true
        };
        Object.defineProperty(K, "__esModule", S);
        var N = Q("NumberDisplayInterface");
        var J = cc._decorator;
        var A = J.ccclass;
        var y = J.property;
        var b = function (k) {
          function D() {
            var x = null !== k && k.apply(this, arguments) || this;
            x.displayController = undefined;
            x.nb = 0x0;
            x.ob = 0x0;
            x.Pu = -0x1;
            x.cb = 0x0;
            x.hb = [];
            x.rb = undefined;
            x.ab = undefined;
            x.ub = undefined;
            x.lb = [];
            x.fb = false;
            x.vb = -0x1;
            x._b = -0x1;
            x.mb = [];
            x.pb = [];
            x.zo = [];
            x.bb = [];
            x.Sb = [];
            return x;
          }
          __extends(D, k);
          D.prototype.update = function () {};
          D.prototype.setNumbersCallback = function (x) {
            this.hb = x;
          };
          D.prototype.setTimeCallback = function (x, G) {
            this.lb = x;
            this.ab = G;
          };
          D.prototype.init = function (x) {
            this.zo = [x.bigWinThreshold, x.megaWinThreshold, x.superMegaWinThreshold];
            this.bb = [x.bigWinDuration, x.megaWinDuration, x.superMegaWinDuration];
            this.Pu = x.totalWin;
            this.Sb = [];
            for (var G = 0x0; G < 0x3; G++) {
              this.Sb[G] = this.bb[G].reduce(function (Y, m) {
                return Y + m;
              });
            }
            this.gb();
          };
          D.prototype.getWinType = function () {
            var x = {
              winStyle: this.vb,
              winStep: this._b
            };
            return x;
          };
          D.prototype.play = function (x) {
            if (this.Cb()) {
              this.nb = 0x0;
              this.cb = 0x0;
              this.ob = 0x0;
              this.rb = x;
              this.displayController.clear();
              this.update = this.yb;
              this.fb = true;
            }
          };
          D.prototype.skip = function () {
            var x = this;
            if (this.fb) {
              this.stop(false);
              this.displayController.displayNumber(this.Pu, true, function () {
                if (x.rb) {
                  x.rb(x.Pu);
                }
              });
            }
          };
          D.prototype.stop = function (x) {
            if (undefined === x) {
              x = true;
            }
            if (x) {
              this.displayController.clear();
              this.rb = undefined;
              this.ab = undefined;
            }
            this.nb = 0x0;
            this.fb = false;
            this.update = function () {};
          };
          D.prototype.Cb = function () {
            if (!!this.hb) {
              this.hb.length;
            }
            return !(!this.bb || !this.zo || this.Pu < 0x0);
          };
          D.prototype.gb = function () {
            var x = this.Pu;
            var G = this.zo;
            var Y = this.Sb;
            var W = G[0x2] + (G[0x2] - G[0x1]) * Y[0x2] / Y[0x1];
            var F = [];
            var E = [];
            if (x < G[0x1]) {
              this.vb = 0x0;
              E[0x0] = x;
              F[0x0] = this.Mb(x, 0x0, G[0x1], 0x0, 0x0);
            } else if (x < G[0x2]) {
              this.vb = 0x1;
              E[0x0] = G[0x1];
              F[0x0] = Y[0x0];
              E[0x1] = x;
              F[0x1] = this.Mb(x, G[0x1], G[0x2], 0x1, G[0x1] / Y[0x0]);
            } else if (x < W) {
              this.vb = 0x2;
              E[0x0] = G[0x1];
              F[0x0] = Y[0x0];
              E[0x1] = G[0x2];
              F[0x1] = Y[0x1];
              E[0x2] = x;
              F[0x2] = this.Mb(x, G[0x2], W, 0x2, (G[0x2] - G[0x1]) / Y[0x1]);
            } else {
              this.vb = 0x3;
              this._b = 0x0;
              E[0x0] = G[0x1];
              E[0x1] = G[0x2];
              E[0x2] = x;
              F = Y;
            }
            this.mb = F;
            this.pb = E;
            this.ub = u(0x0, this.pb[0x0]);
          };
          D.prototype.Mb = function (x, G, Y, m, W) {
            var F = this.Sb[m];
            var E = this.bb[m];
            var v = (x - G) / (Y - G);
            var I = 0x0;
            for (var w = 0x0; w < E.length; w++) {
              var j = I + E[w];
              if (v < j / F) {
                return W ? (x - G) / j >= W ? (this._b = w + 0x1, j) : (this._b = w, I) : I && v < (j + I) / 0x2 / F ? (this._b = w, I) : (this._b = w + 0x1, j);
              }
              I = j;
            }
            return I;
          };
          D.prototype.yb = function (x) {
            var G;
            var Y;
            var m;
            var W;
            var F;
            var E = (this.nb += x) - this.ob;
            var v = this.mb[0x0];
            if (E < v) {
              E += x * (0.2 * Math.random() - 0.1);
              G = this.ub.evaluate(E / v);
            } else {
              var I = undefined;
              var w = undefined;
              do {
                I = this.mb.shift();
                v = this.mb[0x0];
                w = this.pb.shift();
                this.ob += I;
                E -= I;
              } while (undefined !== v && E >= v);
              if (undefined === v) {
                this.ub = undefined;
                this.fb = false;
                this.update = function () {};
                G = this.Pu;
              } else {
                if (this.vb === 0x3 && 0x1 === this.mb.length) {
                  var j = this.ub.getDistance() / I;
                  Y = w;
                  m = this.pb[0x0];
                  F = m - Y - (W = j * v);
                  this.ub = {
                    'evaluate': function (Z) {
                      return Y + W * Z + F * Math.pow(0x2, 0x14 * (Z - 0x1));
                    }
                  };
                } else {
                  this.ub = u(w, this.pb[0x0]);
                }
                E += x * (0.2 * Math.random() - 0.1);
                G = this.ub.evaluate(E / v);
              }
            }
            this.Ab(G);
            if (this.ab) {
              this.Ib(this.nb);
            }
          };
          D.prototype.Ab = function (x) {
            var G = this.hb;
            var Y = this.Pu;
            var m = x;
            var W = false;
            var F = [];
            var E = this.rb;
            if (undefined !== G) {
              for (; G.length && G[0x0] <= x;) {
                var v = G.shift();
                F.push(v);
              }
            }
            if (Y <= x) {
              this.stop(false);
              m = Y;
              W = true;
              F.push(Y);
              this.rb = undefined;
            }
            this.displayController.displayNumber(m, W, function () {
              F.forEach(function (I) {
                if (E) {
                  E(I);
                }
              });
            });
          };
          D.prototype.Ib = function (x) {
            var G = this.lb;
            if (undefined !== G && G.length && G[0x0] <= x) {
              var Y = G.shift();
              this.ab(Y);
            }
          };
          __decorate([y({
            'type': N["default"],
            'override': true
          })], D.prototype, "displayController", undefined);
          return __decorate([A], D);
        }(cc.Component);
        K["default"] = b;
        cc._RF.pop();
      }
      function u(k, D) {
        var x = D - k;
        var G = {
          evaluate: function (Y) {
            return k + x * Y;
          },
          getDistance: function () {
            return x;
          }
        };
        return G;
      }
    }, ly],
    'TimedWinRollController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "bbc6c4tBJdFQ76rTU5OtO2a", "TimedWinRollController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("NumberDisplayController");
        var q = B("TimedWinRollBaseController");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var k = null !== y && y.apply(this, arguments) || this;
            k.displayController = undefined;
            return k;
          }
          var u = {
            type: S["default"],
            override: true
          };
          __extends(b, y);
          __decorate([J(u)], b.prototype, "displayController", undefined);
          return __decorate([f], b);
        }(q["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, lc],
    'TimedWinRollCurveController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "ac3b0Ey1QlMtZGe7RPoOsSH", "TimedWinRollCurveController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("NumberCurvedController");
        var q = B("TimedWinRollBaseController");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function u() {
            var k = null !== y && y.apply(this, arguments) || this;
            k.displayController = undefined;
            return k;
          }
          var b = {
            type: S["default"],
            override: true
          };
          __extends(u, y);
          __decorate([J(b)], u.prototype, "displayController", undefined);
          return __decorate([f], u);
        }(q["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, lb],
    'TimedWinRollLabelController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "aa2360L0o1DHbvfzQuldvyg", "TimedWinRollLabelController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("NumberLabelController");
        var q = B("TimedWinRollBaseController");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var k = null !== y && y.apply(this, arguments) || this;
            k.displayController = undefined;
            return k;
          }
          var u = {
            type: S["default"],
            override: true
          };
          __extends(b, y);
          __decorate([J(u)], b.prototype, "displayController", undefined);
          return __decorate([f], b);
        }(q["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, ln],
    'TrailParticleEffectController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "e655bq0JEFHRJPA8Vxz7abO", "TrailParticleEffectController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("SlotProperties");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.trailParticleItemHolderNode = undefined;
            b.trailParticleItemPrefab = undefined;
            b.wildParticleItemPrefab = undefined;
            b.wb = new cc.NodePool("TrailParticleItemController");
            b.Ob = new cc.NodePool("WildParticleItemController");
            return b;
          }
          __extends(y, A);
          y.prototype.init = function () {
            this.Hb(S.NO_OF_SLOT_ITEMS + 0x1);
          };
          y.prototype.playWildCollectEffect = function (b, u, k, D, r) {
            var x = this;
            if (b.length <= 0x0) {
              if (r) {
                r();
              }
            } else {
              var G = 0x0;
              var Y = function () {
                if (D) {
                  D();
                }
                if (G === b.length - 0x1) {
                  if (r) {
                    r();
                  }
                } else {
                  G++;
                }
              };
              b.forEach(function (m, W) {
                var F = 0.15 * W;
                var E = m.worldPosition;
                var v = cc.v2(E.x - 0x64, E.y);
                var I = x.Bb();
                var w = x.Gb();
                var j = I.getComponent("TrailParticleItemController");
                var Z = w.getComponent("WildParticleItemController");
                m.showWildShine(F, function () {
                  var X = {
                    'x': -0x12c,
                    'y': 0x0
                  };
                  w.setParent(x.trailParticleItemHolderNode);
                  Z.play(v, 0x0, x.Ob);
                  I.setParent(x.trailParticleItemHolderNode);
                  I.position = x.trailParticleItemHolderNode.convertToNodeSpaceAR(v);
                  j.wildCollectEffectSetup();
                  j.fly(v, u, 0.25, 0x0, X, x.wb, Y);
                });
              });
            }
          };
          y.prototype.Hb = function (b) {
            for (var u = 0x0; u < b; u++) {
              this.wb.put(cc.instantiate(this.trailParticleItemPrefab));
              this.Ob.put(cc.instantiate(this.wildParticleItemPrefab));
            }
          };
          y.prototype.Bb = function () {
            return this.wb.size() > 0x0 ? this.wb.get() : cc.instantiate(this.trailParticleItemPrefab);
          };
          y.prototype.Gb = function () {
            return this.Ob.size() > 0x0 ? this.Ob.get() : cc.instantiate(this.wildParticleItemPrefab);
          };
          __decorate([f(cc.Node)], y.prototype, "trailParticleItemHolderNode", undefined);
          __decorate([f(cc.Prefab)], y.prototype, "trailParticleItemPrefab", undefined);
          __decorate([f(cc.Prefab)], y.prototype, "wildParticleItemPrefab", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, lu],
    'TrailParticleItemController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "5f8f55wzsNMjqYq3mN49W0b", "TrailParticleItemController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = B("GConstants");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var u = null !== y && y.apply(this, arguments) || this;
            u.emitterA = undefined;
            u.emitterHolder = undefined;
            u.ballAnim = undefined;
            return u;
          }
          __extends(b, y);
          b.prototype.mouseShiftEffectSetup = function () {
            this.emitterA.node.position.x = 0x28;
          };
          b.prototype.wildCollectEffectSetup = function () {
            this.emitterA.node.position.x = 0x14;
          };
          b.prototype.fly = function (k, D, x, G, Y, m, W) {
            var F = this;
            var E = {
              'x': 0x0,
              'y': 0x0
            };
            if (undefined === x) {
              x = 0x1;
            }
            if (undefined === Y) {
              Y = E;
            }
            var I = this.node.convertToNodeSpaceAR(k);
            var w = this.node.convertToNodeSpaceAR(D);
            var j = this.emitterA.life + this.emitterA.lifeVar;
            var Z = this.Nb(I, w, x, Y.x, Y.y);
            var X = this.Tb(I, w);
            this.emitterHolder.stopAllActions();
            this.emitterA.resetSystem();
            this.ballAnim.play();
            this.ballAnim.node.stopAllActions();
            this.emitterHolder.angle = -X;
            this.emitterHolder.position = I;
            this.emitterHolder.runAction(cc.sequence(Z, cc.callFunc(function () {
              F.emitterA.stopSystem();
              F.ballAnim.node.runAction(cc.tintTo(0.3, q.BLACK));
            }), cc.callFunc(function () {
              S.delayCallback(j)(function () {
                m.put(F.node);
              });
              if (W) {
                W();
              }
            })));
          };
          b.prototype.unuse = function () {
            this.emitterA.resetSystem();
            this.emitterA.stopSystem();
            this.emitterHolder.stopAllActions();
            this.ballAnim.node.stopAllActions();
            this.ballAnim.node.color = q.WHITE;
            this.ballAnim.stop();
            this.ballAnim.setCurrentTime(0x0);
            this.ballAnim.getComponent(cc.Sprite).spriteFrame = undefined;
          };
          b.prototype.reuse = function () {
            this.emitterA.resetSystem();
            this.emitterA.stopSystem();
            this.emitterHolder.stopAllActions();
            this.ballAnim.node.stopAllActions();
            this.ballAnim.node.color = q.WHITE;
            this.ballAnim.stop();
            this.ballAnim.setCurrentTime(0x0);
            this.ballAnim.getComponent(cc.Sprite).spriteFrame = undefined;
          };
          b.prototype.destroy = function () {
            this.unuse();
            return y.prototype.destroy.call(this);
          };
          b.prototype.Nb = function (u, k, D, x, G) {
            if (undefined === D) {
              D = 0.5;
            }
            var Y = (k.x + u.x) * Math.sin(this.Pb(0x3c)) + x;
            var m = (k.y + u.y) * Math.cos(this.Pb(0x46)) + G;
            var W = [u, cc.v2(Y, m), k];
            return cc.bezierTo(D, W);
          };
          b.prototype.Tb = function (u, k) {
            var G = {
              'x': k.x - u.x,
              'y': k.y - u.y
            };
            var Y = Math.atan2(G.y, G.x);
            var m = this.Lb(Y);
            if (m < 0x0) {
              m += 0x168;
            }
            return 0x168 - m;
          };
          b.prototype.Lb = function (u) {
            return 0xb4 * u / Math.PI;
          };
          b.prototype.Pb = function (u) {
            return u * Math.PI / 0xb4;
          };
          __decorate([J(cc.ParticleSystem)], b.prototype, "emitterA", undefined);
          __decorate([J(cc.Node)], b.prototype, "emitterHolder", undefined);
          __decorate([J(cc.Animation)], b.prototype, "ballAnim", undefined);
          return __decorate([f], b);
        }(cc.Component);
        C["default"] = A;
        cc._RF.pop();
      }
    }, lk],
    'TransactionModel': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "54c92i9GeNK1JtqIIU4fhIX", "TransactionModel")) {
        var B = System.get("bvframework").TransactionModel;
        M.exports["default"] = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'TransactionStateMachineHandler': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "c42f8INb4ZMyJTA7LnNSlci", "TransactionStateMachineHandler")) {
        var B = System.get("bvframework").TransactionStateMachineHandler;
        for (var Q in B) if (B.hasOwnProperty(Q)) {
          M.exports[Q] = B[Q];
        }
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'TransitionContext': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "9fd10r5SF9AY7ViKPJFg+fR", "TransitionContext")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.TransitionContext = undefined;
        var K = function () {
          function S(q, N, f, o, J) {
            this.Rb = q;
            this.Eb = N;
            this.kb = f;
            this.Ub = o;
            this.jb = J;
          }
          S.prototype.getFromController = function () {
            return this.Rb;
          };
          S.prototype.getToController = function () {
            return this.Eb;
          };
          S.prototype.getFromView = function () {
            return this.kb;
          };
          S.prototype.getToView = function () {
            return this.Ub;
          };
          S.prototype.getContainer = function () {
            return this.jb;
          };
          return S;
        }();
        Q.TransitionContext = K;
        cc._RF.pop();
      }
    }, {}],
    'TransitionEnum': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "ba325vamDZMr5FAGrgPtoRH", "TransitionEnum")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.NavigationControllerOperation = undefined;
        (function (K) {
          K[K.None = 0x0] = "None";
          K[K.Push = 0x1] = "Push";
          K[K.Pop = 0x2] = "Pop";
        })(Q.NavigationControllerOperation || (Q.NavigationControllerOperation = {}));
        cc._RF.pop();
      }
    }, {}],
    'Transitions': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "33e4esYSRxEnZ3KD136K54g", "Transitions")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.ToRespinTransition = C.ToNormalSpinTransition = undefined;
        var S = B("Utils");
        var q = B("SettingMenuHelper");
        var N = B("GDataSource");
        var f = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.ps = undefined;
            return b;
          }
          __extends(y, A);
          y.prototype.instanceRun = function (b, u) {
            this.ps = b.generalControllers;
            this.Db(u);
          };
          y.prototype.run = function (b, u) {
            this.ps = b.generalControllers;
            this.Wb(u);
          };
          y.prototype.xb = function () {
            var b = this.ps.spinButtonController;
            if (q.settingMenuHelper.isIdle()) {
              b.show();
            }
            b.enableButton();
          };
          y.prototype.Vr = function () {
            var b = this.ps.slotController;
            b.stopRespin();
            b.setupNormalSpinSlotConfig();
          };
          y.prototype.Wb = function (b) {
            var u = this.ps.stickyController;
            this.xb();
            this.Vr();
            u.stopSticky();
            if (b) {
              b();
            }
          };
          y.prototype.Db = function (k) {
            var D = this.ps;
            var x = D.stickyController;
            var G = D.slotController;
            var Y = D.backgroundController;
            var W = D.backgroundController2;
            var F = D.uiShiftController;
            var E = D.tigerController;
            var I = D.angpaoController;
            var w = D.infoboardController;
            var j = N.gDataSource.transactionModel;
            var Z = j.accumulatedWinAmount;
            var X = j.betLevelValue;
            var V = j.betSizeValue;
            var H = j.wildCount;
            var z = N.gDataSource.systemModel.maxLineNumber;
            var P = N.gDataSource.systemModel.winThresholds.getAllThresholds(V, X, z);
            this.xb();
            this.Vr();
            x.clearSticky();
            if (Z > 0x0) {
              w.setThreshold(P);
              w.playDynamicWin(Z);
              q.settingMenuHelper.setWinAmount(Z);
            } else {
              w.resetInfoboard(false);
              w.resumeInfoboard();
            }
            I.setupToNormalState();
            Y.setupToNormalState();
            W.setupToNormalState();
            F.setupToNormalState();
            G.setupToNormalState();
            E.setNormal(H);
            if (k) {
              k();
            }
          };
          y.prototype.destroy = function () {
            this.ps = undefined;
            return A.prototype.destroy.call(this);
          };
          return y;
        }(cc.Object);
        C.ToNormalSpinTransition = f;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.ps = undefined;
            return b;
          }
          __extends(y, A);
          y.prototype.run = function (b, u) {
            this.ps = b.generalControllers;
            S.sequenceCallback(this.Fb.bind(this), this.Vb.bind(this))(u);
          };
          y.prototype.instanceRun = function (b, u) {
            this.ps = b.generalControllers;
            S.sequenceCallback(this.zb.bind(this), this.Fb.bind(this))(u);
          };
          y.prototype.Vb = function (b) {
            this.ps.spinButtonController.disableButton();
            if (b) {
              b();
            }
          };
          y.prototype.zb = function (k) {
            var D = this.ps;
            var x = D.backgroundController;
            var G = D.backgroundController2;
            var Y = D.infoboardController;
            var W = D.uiShiftController;
            var F = D.tigerController;
            var E = D.stickyController;
            var I = D.slotController;
            var w = D.spinButtonController;
            var j = D.payLineNumberController;
            var Z = D.payLineController;
            var X = D.angpaoController;
            var V = N.gDataSource.transactionModel;
            var H = V.featureWinSymbol;
            var z = V.reels;
            var P = V.winLines;
            I.setSlotItemsVisible(false, [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8]);
            X.setupToRespinState();
            x.setupToRespinState();
            G.setupToRespinState();
            I.setupToRespinState();
            I.playRespin();
            W.setupToRespinState();
            w.disableButton();
            Y.playRespin(H);
            Y.resumeInfoboard();
            E.playSticky(z, P, H, k);
            var O = P.winPositions;
            O.forEach(function (L, U) {
              O[U] = parseInt(L, 0xa);
            });
            j.show(O);
            Z.showLine(O);
            F.setRespin(H);
          };
          y.prototype.Fb = function (b) {
            var u = this.ps.slotController;
            var k = N.gDataSource.transactionModel.featureWinSymbol;
            u.setupRespinSlotConfig();
            u.setRespinSymbol(k);
            if (b) {
              b();
            }
          };
          y.prototype.destroy = function () {
            this.ps = undefined;
            return A.prototype.destroy.call(this);
          };
          return y;
        }(cc.Object);
        C.ToRespinTransition = J;
        cc._RF.pop();
      }
    }, lD],
    'TurboButtonEffect': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "5e837vEECVAj4O05haO7Gt+", "TurboButtonEffect")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = cc._decorator.ccclass;
        var S = function (q) {
          function N() {
            var f = null !== q && q.apply(this, arguments) || this;
            f.Jb = undefined;
            return f;
          }
          __extends(N, q);
          N.prototype.setUpdateTurboMiddleIconCallback = function (f) {
            this.Jb = f;
          };
          N.prototype.changeTurboSprite = function () {
            if (this.Jb) {
              this.Jb();
            }
          };
          return __decorate([K], N);
        }(cc.Component);
        Q["default"] = S;
        cc._RF.pop();
      }
    }, {}],
    'TweaksConfig': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "0602bmSQ0NBZrhW+yhcJtSb", "TweaksConfig")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        M("RtConfig");
        M("GamePreference");
        M("CreatorTweaks");
        M("Utils");
        M("QuitGame");
        M("Printer");
        M("TweaksData");
        Q["default"] = undefined;
        cc._RF.pop();
      }
    }, lr],
    'TweaksData': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "b0089xUdQRLiZXeZmKk7dCG", "TweaksData")) {
        M.exports = {};
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'UIAppearanceHelper': [function (A, y, b) {
      'use strict';

      if (!cc._RF.push(y, "f4549VlHlxOL4w7V7h4rhZg", "UIAppearanceHelper")) {
        var k = {
          value: true
        };
        Object.defineProperty(b, "__esModule", k);
        b.uiAppearanceHelper = b.getOffsetY = undefined;
        var D = {
          native: 0x4,
          non_native: 0x3
        };
        var x = {
          native: 0x4,
          non_native: 0x5
        };
        var G = {
          native: 0x2,
          non_native: 0x2
        };
        var Y = {
          native: 0x5,
          non_native: 0x4
        };
        var m = {
          native: 0x0,
          non_native: 0x5
        };
        var W = {
          native: 0x2,
          non_native: 0x3
        };
        var F = {
          native: 0x0,
          non_native: 0x3
        };
        var E = {
          native: 0x4,
          non_native: 0x4
        };
        var I = A("BACKUP_DATA");
        var w = function () {
          function U() {}
          U.prototype.interpret = function (T) {
            return T[0x0];
          };
          return U;
        }();
        var j = function () {
          function U() {}
          U.prototype.interpret = function (T) {
            return new cc.Color(T[0x0], T[0x1], T[0x2], T[0x3]);
          };
          return U;
        }();
        var Z = cc._decorator.ccclass;
        var X = function (U) {
          function T() {
            var g = U.call(this) || this;
            g.qb = undefined;
            var h0 = g.qb = shell.uiAppearance;
            if (h0) {
              h0.registerInterpreter("font", new w());
              h0.registerInterpreter("value", new w());
              h0.registerInterpreter("path", new w());
              h0.registerInterpreter("color", new j());
              h0.registerInterpreter("classname", new w());
            }
            return g;
          }
          __extends(T, U);
          T.prototype.v = function (g) {
            var h0 = this.qb && this.qb.v(g);
            if (null === h0) {
              h0 = L(g);
            }
            return h0;
          };
          T.prototype.unregisterInterpreter = function (g) {
            return this.qb && this.qb.unregisterInterpreter(g);
          };
          return __decorate([Z("UIAppearanceHelper")], T);
        }(cc.Object);
        var V = Object.freeze({
          'windows': D,
          'macos': x,
          'ios': G,
          'android': Y
        });
        var H = Object.freeze({
          'windows': m,
          'macos': W,
          'ios': F,
          'android': E
        });
        var z = shell.I18n.currentLocale;
        var P = shell.getBrowserBaseType().toLowerCase();
        var p = 'zh' === z || 'ko' === z || 'ja' === z ? H : V;
        b.getOffsetY = function () {
          switch (cc.sys.os) {
            case cc.sys.OS_WINDOWS:
              return 'ie' === P || "edge" === P ? p.windows.native : p.windows.non_native;
            case cc.sys.OS_ANDROID:
              return "chrome" === P ? p.android.native : p.android.non_native;
            case cc.sys.OS_OSX:
              return "safari" === P ? p.macos.native : p.macos.non_native;
            case cc.sys.OS_IOS:
              return "mobile safari" === P ? p.ios.native : p.ios.non_native;
            default:
              return p.macos.non_native;
          }
        };
        var O = new X();
        b.uiAppearanceHelper = O;
        cc._RF.pop();
      }
      function L(U) {
        var T;
        var g = U.split('.');
        var h0 = 0x0;
        for (var h1 = g.length; h0 < h1; h0++) {
          var h2 = g[h0];
          if (undefined === (T = T && T[h2] || I["default"][h2])) {
            return null;
          }
        }
        return T;
      }
    }, lx],
    'UIKitUtils': [function (M, B, Q) {
      'use strict';

      function C() {
        return cc.sys.os === cc.sys.OS_IOS;
      }
      var K = {
        value: true
      };
      if (!cc._RF.push(B, "b3045XdzRhDNrJLCqWLZ6eT", "UIKitUtils")) {
        Object.defineProperty(Q, "__esModule", K);
        Q.isNotBrowserMode = Q.deviceHasNotch = Q.isIphoneX = Q.isIphone = undefined;
        Q.isIphone = C;
        Q.isIphoneX = function () {
          var S = cc.view.getFrameSize();
          return cc.sys.os === cc.sys.OS_IOS && (0x32c === S.width && 0x177 === S.height || 0x177 === S.width && 0x32c === S.height);
        };
        Q.deviceHasNotch = function () {
          return shell.environment.hasNotch();
        };
        Q.isNotBrowserMode = function () {
          return window.navigator.standalone || "app" === shell.getEnvironment();
        };
        cc._RF.pop();
      }
    }, {}],
    'UIKit': [function (y, c, b) {
      'use strict';

      var n = {
        value: true
      };
      var u = {
        height: 139.5,
        item_space_x: 0x30
      };
      var k = {
        height: 0xba,
        item_space_x: 0x30
      };
      var D = {
        landscape: u,
        portrait: k
      };
      var r = {
        bar: D
      };
      var x = {
        height: 0xb4
      };
      var e = {
        height: 0xb4
      };
      var G = {
        landscape: x,
        portrait: e
      };
      var Y = {
        bar: G
      };
      var m = {
        top: 0x50,
        left: 0x0,
        bottom: 0x66,
        right: 0x0
      };
      var W = {
        top: 0x32,
        left: 0x0,
        bottom: 0x0,
        right: 0x0
      };
      var F = {
        top: 0x0,
        left: 0x0,
        bottom: 0x0,
        right: 0x0
      };
      var a = {
        iphone_x: m,
        iphone: W,
        normal: F
      };
      if (!cc._RF.push(c, "cfcacQ0hpxOzKvh1YNNRBbk", "UIKit")) {
        Object.defineProperty(b, "__esModule", n);
        b.safeArea = b.TabBarConfigs = b.NavigationConfigs = undefined;
        b.NavigationConfigs = r;
        b.TabBarConfigs = Y;
        b.safeArea = Object.freeze(a);
        cc._RF.pop();
      }
    }, {}],
    'UIShiftController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "feb71KMpjlDuYJBTJhGMq3H", "UIShiftController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("GeneralAudioConstant");
        var q = B("AudioManager");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var u = null !== y && y.apply(this, arguments) || this;
            u.shiftNode = undefined;
            u.Kb = undefined;
            u.Qb = 0.92;
            u.Yb = 0.95;
            u.Z = undefined;
            u.X = undefined;
            u.Xb = undefined;
            return u;
          }
          __extends(b, y);
          b.prototype.init = function () {
            this.Kb = 0x1;
          };
          b.prototype.setupToNormalState = function () {
            this.shiftNode.scale = this.Kb;
          };
          b.prototype.setupToRespinState = function () {
            this.shiftNode.scale = this.Qb;
          };
          b.prototype.shiftDown = function (u, k) {
            this.shiftNode.stopAllActions();
            this.shiftNode.getComponent(cc.Animation).play("ui_shift");
            this.shiftNode.getComponent(cc.Animation).once(cc.Animation.EventType.FINISHED, function () {
              if (k) {
                k();
              }
            });
            var D = S.GENERAL_AUDIO.featureTease.key;
            q.stopAudioIfPlaying(D);
            q.playAudioIfNotPlaying(D);
          };
          b.prototype.shiftUp = function (u, k) {
            this.shiftNode.getComponent(cc.Animation).play("ui_shift_in");
            this.shiftNode.getComponent(cc.Animation).once(cc.Animation.EventType.FINISHED, function () {
              if (k) {
                k();
              }
            });
          };
          b.prototype.teaseDown = function (u, k) {
            var D = this;
            this.X = k;
            var x = S.GENERAL_AUDIO.featureTease.key;
            q.stopAudioIfPlaying(x);
            q.playAudioIfNotPlaying(x);
            this.shiftNode.getComponent(cc.Animation).play("ui_shift_tease");
            this.shiftNode.getComponent(cc.Animation).once(cc.Animation.EventType.FINISHED, function () {
              var G = D.X;
              D.X = undefined;
              if (G) {
                G();
              }
            });
          };
          b.prototype.teaseUp = function (u, k) {
            var D = this;
            this.Z = k;
            this.shiftNode.getComponent(cc.Animation).play("ui_shift_in_tease");
            this.shiftNode.getComponent(cc.Animation).once(cc.Animation.EventType.FINISHED, function () {
              var x = D.Z;
              D.Z = undefined;
              if (x) {
                x();
              }
            });
          };
          __decorate([J(cc.Node)], b.prototype, "shiftNode", undefined);
          return __decorate([f], b);
        }(cc.Component);
        C["default"] = A;
        cc._RF.pop();
      }
    }, le],
    'Utils': [function (M, B) {
      'use strict';

      if (!cc._RF.push(B, "03755Dj0/VFQbz7rFuRrlJG", "Utils")) {
        var Q = {
          convertNodeSpace: "convertToNodeSpace",
          convertNodeSpaceAR: "convertToNodeSpaceAR",
          getAbsolutePos: "getAbsolutePosition",
          getAbsoluteXPos: "getAbsoluteX",
          getAbsoluteYPos: "getAbsoluteY",
          setAbsolutePos: "setAbsolutePosition",
          setAbsoluteXPos: "setAbsoluteX",
          setAbsoluteYPos: "setAbsoluteY",
          transferToNewParent: "transferToParent",
          getSharedSimpleScheduler: "getSharedScheduler",
          delay: "delayCallback",
          timeout: "timeoutCallback",
          selector: "selectorCallback",
          sequence: "sequenceCallback",
          spawn: "spawnCallback",
          waterfall: "waterfCallback",
          condition: "condCallback",
          defer: "deferCallback",
          tick: "tickCallback",
          observe: "observeCallback",
          formatLeadingZero: "formatTwoDigit",
          formatDateTime: "formatDate",
          isRightToLeft: "isRTL",
          getLocationProtocol: "getProtocol",
          getLocationOrigin: "getOrigin"
        };
        var C = System.get("common").Utils;
        var K = function (q, N) {
          var f = {};
          for (var o in N) if (q.hasOwnProperty(o)) {
            f[q[o]] = N[o];
          } else {
            f[o] = N[o];
          }
          return f;
        }(Q, C);
        for (var S in K) if (K.hasOwnProperty(S)) {
          B.exports[S] = K[S];
        }
        B.exports.__esModule = true;
        if (null == C.sharedScheduler) {
          B.exports.sharedScheduler = K.getSharedScheduler();
        }
        cc._RF.pop();
      }
    }, {}],
    'ViewControllerTransition': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "8e202781KBBRIxVxe3NWQ9e", "ViewControllerTransition")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        var K = function () {
          function S() {}
          S.prototype.transitionDuration = function () {
            return 0.3;
          };
          S.prototype.animateTransition = function () {};
          S.prototype.animationEnd = function () {};
          return S;
        }();
        Q["default"] = K;
        cc._RF.pop();
      }
    }, {}],
    'ViewController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "ef8ab8zk59N1LEX0M2uhmRU", "ViewController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("UIKitUtils");
        var q = B("UIKit");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            var u = null !== y && y.apply(this, arguments) || this;
            u.title = '';
            u.leftItem = undefined;
            u.middleItem = undefined;
            u.rightItem = undefined;
            u.fa = undefined;
            u.Zb = undefined;
            return u;
          }
          __extends(b, y);
          Object.defineProperty(b.prototype, "navigator", {
            'get': function () {
              return this.fa;
            },
            'set': function (u) {
              this.fa = u;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "view", {
            'get': function () {
              return this.node;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(b.prototype, "safeAreaInsets", {
            'get': function () {
              var u;
              var k;
              var D;
              var x;
              if (!this.Zb) {
                u = S.deviceHasNotch();
                k = S.isIphone();
                D = S.isNotBrowserMode();
                x = shell.is1959Supported;
                this.Zb = u && D && x ? q.safeArea.iphone_x : u && x ? {
                  'top': q.safeArea.normal.top,
                  'left': q.safeArea.iphone_x.left,
                  'bottom': q.safeArea.iphone_x.bottom,
                  'right': q.safeArea.iphone_x.right
                } : k && D ? q.safeArea.iphone : q.safeArea.normal;
              }
              return this.Zb;
            },
            'enumerable': false,
            'configurable': true
          });
          b.prototype.onEnable = function () {};
          b.prototype.onDisable = function () {};
          b.prototype.viewWillAppear = function () {};
          b.prototype.viewDidAppear = function () {};
          b.prototype.viewWillDisappear = function () {};
          b.prototype.viewDidDisappear = function () {};
          b.prototype.viewWillLayoutSubviews = function () {};
          b.prototype.viewDidLayoutSubviews = function () {};
          __decorate([J(cc.String)], b.prototype, "title", undefined);
          return __decorate([f], b);
        }(cc.Component);
        C["default"] = A;
        cc._RF.pop();
      }
    }, lG],
    'WalletHandlers': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "16fa48YcbZClp+85Xk1WOH4", "WalletHandlers")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.setupWallets = undefined;
        Q.setupWallets = function (K) {
          var S = K.dataSource;
          var q = K.settingMenuHelper;
          var N = K.walletHelper;
          var f = K.callback;
          var J = S.playerModel.currencySymbol;
          N.setup({
            'openWalletMenuFunc': q.openWalletMenu.bind(q),
            'setFreeGameModeFunc': q.setFreeGameMode.bind(q),
            'currencySymbol': J,
            'footerController': K.settingWalletPanelController
          });
          N.setupWallet(S.lastTransactionRawData);
          if (f) {
            f();
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'WalletHelper': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "1ca2eEH71NDaahNBchOvZgw", "WalletHelper")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        C.walletHelper = undefined;
        var S;
        var q = B("SettingInfoFooterController");
        var N = B("Utils");
        var f = B("BVFramework");
        (function (y) {
          y[y.INACTIVE = 0x0] = "INACTIVE";
          y[y.ACTIVE = 0x1] = "ACTIVE";
          y[y.EXPIRED = 0x2] = "EXPIRED";
          y[y.CONVERTED = 0x3] = "CONVERTED";
          y[y.COMPLETED = 0x4] = "COMPLETED";
          y[y.NEW = 0x5] = "NEW";
          y[y.DISCARDED = 0x6] = "DISCARDED";
          y[y.LOCKED = 0x7] = "LOCKED";
        })(S || (S = {}));
        var J = cc._decorator.ccclass;
        var A = new (function (y) {
          function b() {
            var u = null !== y && y.apply(this, arguments) || this;
            u.$b = false;
            u.tS = false;
            return u;
          }
          __extends(b, y);
          b.prototype.init = function (u) {
            var k = this;
            this.ta = u.getGameInfo;
            var D = f.getGameContext();
            D.on("Game.TransactionInfoUpdated", function (x) {
              k.iS = x.payload;
              if (k.tS) {
                var G = k.iS;
                if (k.isFreeGameMode()) {
                  k.sS(G.wfg.gc);
                } else if (k.isBonusGameMode()) {
                  k.eS(G.wbn.bra);
                }
                k.tS = false;
              }
            });
            D.on("Game.HasNewWallet", function () {
              k.nS.activateWalletNotify(true);
            });
          };
          b.prototype.processInitGameInfo = function (u, k) {
            var D = this;
            var x = u.dt.ls.si;
            this.$b = u.dt.inwe;
            var G = function (Y) {
              if (Y) {
                switch (Y.s) {
                  case S.EXPIRED:
                  case S.DISCARDED:
                  case S.INACTIVE:
                    if (!D.ta) {
                      throw Error("Wallethelper :: processInitGameInfo : getGameInfo callback not found!");
                    }
                    return void D.ta("0_C", function () {
                      if (k) {
                        k();
                      }
                    });
                }
              }
              if (k) {
                k();
              }
            };
            switch (x.wt) {
              case 'B':
                G(x.wbn);
                break;
              case 'G':
                G(x.wfg);
                break;
              default:
                if (k) {
                  k();
                }
            }
          };
          b.prototype.setup = function (u) {
            this.oS = u.setFreeGameModeFunc;
            this.nS = u.footerController;
            this.nS.activateWalletNotify(this.$b);
          };
          b.prototype.setupWallet = function (u) {
            var k = this.nS;
            var D = this.oS;
            var x = u.wfg;
            var G = u.wbn;
            if (G) {
              var Y = G.bra !== G.ibra;
              if (D) {
                D(false);
              }
              k.showCustomInfoFooter();
              this.eS(G.bra, Y);
              k.setWalletNavigateIcon(q.WALLET_FOOTER_TYPE.BONUS);
            } else if (x) {
              Y = x.gc !== x.tg;
              if (D) {
                D(true);
              }
              k.showCustomInfoFooter();
              this.sS(x.gc, Y);
              k.setWalletNavigateIcon(q.WALLET_FOOTER_TYPE.FREE_GAME);
            } else {
              if (D) {
                D(false);
              }
              k.hideCustomInfoFooter();
              k.setWalletNavigateIcon(q.WALLET_FOOTER_TYPE.CASH);
            }
            this.iS = u;
          };
          b.prototype.hasFreeGame = function () {
            return this.isFreeGameMode() && this.iS.wfg.gc > 0x0;
          };
          b.prototype.spin = function (u) {
            if (this.isFreeGameMode()) {
              var k = this.iS.wfg.gc;
              this.sS(k - 0x1);
              this.tS = true;
            } else if (this.isBonusGameMode()) {
              var D = this.iS.wbn.bra;
              var x = u > D ? 0x0 : D - u;
              this.eS(x);
              this.tS = true;
            }
          };
          b.prototype.isFreeGameMode = function () {
            return this.iS && this.iS.wfg;
          };
          b.prototype.isBonusGameMode = function () {
            return this.iS && this.iS.wbn;
          };
          b.prototype.isWalletCompleted = function () {
            var u = this.iS;
            var k = u.wfg;
            var D = u.wbn;
            if (k || D) {
              switch (k ? k.s : D.s) {
                case S.CONVERTED:
                case S.COMPLETED:
                  return true;
              }
            }
            return false;
          };
          b.prototype.cleanUp = function () {
            this.nS = undefined;
          };
          b.prototype.sS = function (u, k) {
            if (undefined === k) {
              k = true;
            }
            this.nS.setCustomMiddleInfoFooter(u, k);
          };
          b.prototype.eS = function (u, k) {
            if (undefined === k) {
              k = true;
            }
            this.nS.setCustomMiddleInfoFooter(N.formatCurrency(u), k);
          };
          return __decorate([J("WalletHelper")], b);
        }(cc.Object))();
        C.walletHelper = A;
        cc._RF.pop();
      }
    }, lY],
    'WebSocketHandler': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "d571cdfj6pHMqHdyAI82QnG", "WebSocketHandler")) {
        var B = System.get("bvframework").WebSocketHandler;
        for (var Q in B) if (B.hasOwnProperty(Q)) {
          M.exports[Q] = B[Q];
        }
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'WildItemController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "9d45e1LqR9AHbq4NAqXoeWW", "WildItemController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.wildSpine = undefined;
            return b;
          }
          __extends(y, A);
          y.prototype.init = function (b) {
            this.wildSpine.skeletonData = b;
          };
          y.prototype.setup = function () {
            this.wildSpine.clearTracks();
            this.wildSpine.setToSetupPose();
          };
          y.prototype.playIdle = function () {
            var b = this;
            this.wildSpine.timeScale = 0x1;
            this.wildSpine.clearTracks();
            this.wildSpine.setToSetupPose();
            S.deferCallback()(function () {
              b.wildSpine.setAnimation(0x0, "idle", true);
            });
          };
          y.prototype.unuse = function () {
            this.cS();
          };
          y.prototype.cS = function () {
            this.node.stopAllActions();
            this.wildSpine.clearTracks();
            this.wildSpine.setToSetupPose();
          };
          y.prototype.destroy = function () {
            this.unuse();
            return A.prototype.destroy.call(this);
          };
          __decorate([f(sp.Skeleton)], y.prototype, "wildSpine", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, lm],
    'WildParticleItemController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "ce19axFpJNLbbqVTwfZz+hx", "WildParticleItemController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("Utils");
        var q = cc._decorator;
        var N = q.ccclass;
        var f = q.property;
        var J = function (A) {
          function y() {
            var b = null !== A && A.apply(this, arguments) || this;
            b.anim = undefined;
            return b;
          }
          __extends(y, A);
          y.prototype.play = function (b, u, k, D) {
            var r = this;
            var x = this.node.parent.convertToNodeSpaceAR(b);
            this.node.position = x;
            S.delayCallback(u)(function () {
              r.anim.play();
            });
            this.anim.on(cc.Animation.EventType.FINISHED, function () {
              k.put(r.node);
              if (D) {
                D();
              }
            });
          };
          y.prototype.unuse = function () {
            this.anim.stop();
            this.anim.setCurrentTime(0x0);
            this.anim.node.getComponent(cc.Sprite).spriteFrame = undefined;
          };
          y.prototype.reuse = function () {
            this.anim.stop();
            this.anim.setCurrentTime(0x0);
            this.anim.node.getComponent(cc.Sprite).spriteFrame = undefined;
          };
          __decorate([f(cc.Animation)], y.prototype, "anim", undefined);
          return __decorate([N], y);
        }(cc.Component);
        C["default"] = J;
        cc._RF.pop();
      }
    }, li],
    'WinLine.spec': [function (M, B, Q) {
      'use strict';

      var C = {
        value: true
      };
      if (!cc._RF.push(B, "1ad51xvdcdBSrnjptTWh1P+", "WinLine.spec")) {
        Object.defineProperty(Q, "__esModule", C);
        Q.winHighlightShown = undefined;
        Q.winHighlightShown = function () {
          var K = System.get("automation") && System.get("automation").GameData;
          if (K) {
            K.emit("WinHighlightShown");
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'WinLinesModel': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "24a5eWztK9Pkb2VKy4b0JAV", "WinLinesModel")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.WinLinesModel = undefined;
        var K = function () {
          function S(q) {
            if (q) {
              this.hS = JSON.parse(JSON.stringify(q));
              this.rS = Object.keys(this.hS);
            }
          }
          S.prototype.getWinLinesByPosition = function (q) {
            return this.hS[q];
          };
          Object.defineProperty(S.prototype, "winPositions", {
            'get': function () {
              return this.rS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(S.prototype, "rawData", {
            'get': function () {
              return JSON.parse(JSON.stringify(this.hS));
            },
            'enumerable': false,
            'configurable': true
          });
          return S;
        }();
        Q.WinLinesModel = K;
        cc._RF.pop();
      }
    }, {}],
    'WinRollBaseController': [function (Q, C, K) {
      'use strict';

      if (!cc._RF.push(C, "adab7txcZBOsJ6NClaGwrmO", "WinRollBaseController")) {
        var S = {
          value: true
        };
        Object.defineProperty(K, "__esModule", S);
        var q = {
          playing: -0x1,
          stop: -0x1
        };
        var N = Q("NumberDisplayInterface");
        var f = cc.Enum(q);
        var J = cc._decorator;
        var A = J.ccclass;
        var y = J.property;
        var b = function (u) {
          function k() {
            var D = null !== u && u.apply(this, arguments) || this;
            D.aS = 0x2;
            D.uS = 0x2;
            D.lS = 0x2;
            D.fS = false;
            D.dS = false;
            D.nb = 0x0;
            D.vS = 0x0;
            D.Pu = 0x0;
            D._S = 0x0;
            D.Vo = f.stop;
            D.hb = [];
            D.rb = undefined;
            D.mS = undefined;
            D.defaultVelocityStallDuration = 0x8;
            D.displayController = undefined;
            return D;
          }
          __extends(k, u);
          k.prototype.setNumbersCallback = function (D) {
            this.hb = D;
          };
          k.prototype.setWinThresholds = function (D, x, G) {
            this.pS = D;
            this.bS = x;
            this.SS = G;
            this.fS = true;
          };
          k.prototype.gS = function (D, x, G) {
            return G < this.defaultVelocityStallDuration ? x : D + Math.pow(0x2, G - this.defaultVelocityStallDuration);
          };
          k.prototype.setWinDurations = function (D, x) {
            this.aS = D;
            this.uS = x;
            this.dS = true;
          };
          k.prototype.setVelocityCalculation = function (D) {
            this.mS = D;
          };
          k.prototype.play = function (D, x) {
            if (this.Cb()) {
              this.Vo = f.playing;
              this.rb = x;
              this.displayController.clear();
              this.nb = 0x0;
              this.CS = 0x0;
              this.vS = 0x0;
              this.Pu = D;
              var G = this.bS;
              this.yS = this._S = G / this.aS;
            }
          };
          k.prototype.skip = function () {
            var D = this;
            if (this.Vo === f.playing) {
              this.stop(false);
              this.displayController.displayNumber(this.Pu, true, function () {
                D.MS(D.Pu);
                D.rb = null;
              });
            }
          };
          k.prototype.Cb = function () {
            this.dS;
            if (!!this.hb) {
              this.hb.length;
            }
            if (!this.mS) {
              this.mS = this.gS;
            }
            return !!this.fS;
          };
          k.prototype.stop = function (D) {
            if (undefined === D) {
              D = true;
            }
            if (D) {
              this.displayController.clear();
              this.rb = null;
            }
            this.nb = 0x0;
            this.Vo = f.stop;
          };
          k.prototype.update = function (D) {
            if (this.Vo === f.playing) {
              if (this.CS >= this.SS) {
                this.nb += D;
                this._S = this.mS(this.yS, this._S, this.nb, D);
                this.CS = this.CS + this._S * D * (0.9 + 0.2 * Math.random());
              } else {
                this.CS = this.CS + this._S * D * (0.9 + 0.2 * Math.random());
              }
              this.Ab();
            }
          };
          k.prototype.MS = function (D) {
            var x = this.uS;
            var G = this.SS;
            var Y = this.bS;
            if (D === Y) {
              var m = G - Y;
              this.yS = this._S = m / x;
            }
            if (D === G) {
              this.yS = this._S = (G - Y) / x;
            }
            if (this.rb) {
              this.rb(D);
            }
          };
          k.prototype.Ab = function () {
            var D = this;
            var x = this.CS;
            var G = this.hb;
            var Y = this.Pu;
            if (Y <= x) {
              this.stop(false);
              return void this.displayController.displayNumber(Y, true, function () {
                D.MS(Y);
                D.rb = null;
              });
            }
            if (undefined !== G && G.length && G[0x0] <= x) {
              var m = G.shift();
              this.displayController.displayNumber(x, false, function () {
                D.MS(m);
              });
            } else {
              this.displayController.displayNumber(x, false);
            }
          };
          __decorate([y(cc.Float)], k.prototype, "defaultVelocityStallDuration", undefined);
          __decorate([y({
            'type': N["default"],
            'override': true
          })], k.prototype, "displayController", undefined);
          return __decorate([A], k);
        }(cc.Component);
        K["default"] = b;
        cc._RF.pop();
      }
    }, lW],
    'WinRollController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "00616+xbv9I/qAMwXqWbdkY", "WinRollController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("NumberDisplayController");
        var q = B("WinRollBaseController");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function b() {
            return null !== y && y.apply(this, arguments) || this;
          }
          var u = {
            type: S["default"],
            override: true
          };
          __extends(b, y);
          __decorate([J(u)], b.prototype, "displayController", undefined);
          return __decorate([f], b);
        }(q["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, lF],
    'WinRollCurveController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "a210c4WXCdAmKbdwKdx5P30", "WinRollCurveController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("NumberCurvedController");
        var q = B("WinRollBaseController");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function u() {
            return null !== y && y.apply(this, arguments) || this;
          }
          var b = {
            type: S["default"],
            override: true
          };
          __extends(u, y);
          __decorate([J(b)], u.prototype, "displayController", undefined);
          return __decorate([f], u);
        }(q["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, la],
    'WinRollLabelController': [function (B, Q, C) {
      'use strict';

      if (!cc._RF.push(Q, "f7e1diBGQ5A8KF1oMrYEMNU", "WinRollLabelController")) {
        var K = {
          value: true
        };
        Object.defineProperty(C, "__esModule", K);
        var S = B("NumberLabelController");
        var q = B("WinRollBaseController");
        var N = cc._decorator;
        var f = N.ccclass;
        var J = N.property;
        var A = function (y) {
          function u() {
            return null !== y && y.apply(this, arguments) || this;
          }
          var b = {
            type: S["default"],
            override: true
          };
          __extends(u, y);
          __decorate([J(b)], u.prototype, "displayController", undefined);
          return __decorate([f], u);
        }(q["default"]);
        C["default"] = A;
        cc._RF.pop();
      }
    }, lE],
    'WinThresholdsModel': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "43fa7kpruFLXK4fYDhrIgSc", "WinThresholdsModel")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.WinThresholdsModel = undefined;
        var K = M("Utils");
        var S = function () {
          function q(N) {
            if (N) {
              this.hS = JSON.parse(JSON.stringify(N));
              this.AS = N.mw;
              this.IS = N.bw;
              this.wS = N.mgw;
              this.OS = N.smgw;
            }
          }
          q.prototype.getAllThresholds = function (N, f, o) {
            var J = N * f * o;
            return {
              'mediumWinThreshold': K.toDecimalWithExp(J * this.AS, 0x2),
              'bigWinThreshold': K.toDecimalWithExp(J * this.IS, 0x2),
              'megaWinThreshold': K.toDecimalWithExp(J * this.wS, 0x2),
              'superMegaWinThreshold': K.toDecimalWithExp(J * this.OS, 0x2)
            };
          };
          Object.defineProperty(q.prototype, "rawData", {
            'get': function () {
              return this.hS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(q.prototype, "mediumWin", {
            'get': function () {
              return this.AS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(q.prototype, "bigWin", {
            'get': function () {
              return this.IS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(q.prototype, "megaWin", {
            'get': function () {
              return this.wS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(q.prototype, "superMegaWin", {
            'get': function () {
              return this.OS;
            },
            'enumerable': false,
            'configurable': true
          });
          return q;
        }();
        Q.WinThresholdsModel = S;
        cc._RF.pop();
      }
    }, lv],
    'WinValuesModel': [function (M, B, Q) {
      'use strict';

      if (!cc._RF.push(B, "501f6RTfh9LVInQJ/Y+n54G", "WinValuesModel")) {
        var C = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", C);
        Q.WinValuesModel = undefined;
        var K = function () {
          function S(q) {
            if (q) {
              this.hS = JSON.parse(JSON.stringify(q));
              this.HS = Object.keys(this.hS);
            }
          }
          S.prototype.getWinValueByPosition = function (q) {
            return this.hS[q];
          };
          Object.defineProperty(S.prototype, "winValuePositions", {
            'get': function () {
              return this.HS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(S.prototype, "rawData", {
            'get': function () {
              return JSON.parse(JSON.stringify(this.hS));
            },
            'enumerable': false,
            'configurable': true
          });
          return S;
        }();
        Q.WinValuesModel = K;
        cc._RF.pop();
      }
    }, {}],
    'XHRFactory': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "f3dd4hmiBJHSqrMVzx2qXWg", "XHRFactory")) {
        var B = System.get("common").XHR;
        M.exports.XHRFactory = B;
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'XHRHandler': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "77926JsF5hDL5NbzKF89qZh", "XHRHandler")) {
        var B = System.get("bvframework").XHRHandler;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'XHRHelper': [function (h, M) {
      'use strict';

      if (!cc._RF.push(M, "d29eaTApqFCCLK6u/sH0xO/", "XHRHelper")) {
        var B = System.get("bvframework").XHRHelper;
        for (var Q in B) M.exports[Q] = B[Q];
        M.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}]
  }, {}, ["GameLayout", "AnimParticleSystem", "AnimParticleSystemPoolHandler", "AnimParticleSystemUtils", "Appearance", "ButtonTheme", "LabelTheme", "AdapterEventEmitter", "AudioAdapter", "AudioAdapterConstant", "AudioFactory", "NoSoundAdapter", "AutomationDecorator", "ButtonHitTest", "APIClient", "AnalyticsHelper", "BVFramework", "BVFrameworkEnum", "DataSource", "ErrorHandler", "GameEventHandler", "GameHeaderHelper", "GameInitializationHandler", "GameMaintenanceHandler", "GameMaintenanceModel", "GamePluginModel", "GameTitle", "GameUtils", "LaunchConfig", "NotifyHelper", "OperatorJurisdictionModel", "PlayerModel", "Printer", "QuitGame", "QuitGameWithEvent", "RegionUtils", "RequestHandler", "ResourceQualifierHelper", "RetryHandler", "SystemModel", "TransactionModel", "TransactionStateMachineHandler", "WebSocketHandler", "XHRHandler", "XHRHelper", "ClickEffectController", "CanvasResizeBroadcaster", "CommonDummy", "Deserializer", "JSONSerializer", "MultiResHandler", "Preference", "ResRC", "Serializer", "Utils", "XHRFactory", "CreatorTweaks", "TweaksData", "HitPassThrough", "InfoboardMessageController", "InfoboardMessageController.spec", "JakeSlotGameTemplate", "SpinButtonController", "TweaksConfig", "SlotAnalyticsEnum", "SlotGameConstants", "NormalPrizeDecorator", "NormalResultDecorator", "NormalSpinDecorator", "AutoSpinHandler", "SettingMenuHandlers", "SpinConfigHandler", "SystemFeatureHandler", "WalletHandlers", "SlotAnalyticsHelper", "BetRepository", "SlotSystemModel", "SlotTransactionModel", "WinLinesModel", "WinThresholdsModel", "WinValuesModel", "SlotStateMachine", "IdleState", "PrizeState", "ResultState", "SpinState", "NumberCurvedController", "NumberDisplayController", "NumberDisplayInterface", "NumberLabelController", "NumberRollBaseController", "NumberRollController", "NumberRollCurveController", "NumberRollLabelController", "TimedWinRollBaseController", "TimedWinRollController", "TimedWinRollCurveController", "TimedWinRollLabelController", "WinRollBaseController", "WinRollController", "WinRollCurveController", "WinRollLabelController", "RefreshWorldHandler", "ResourceLoader", "BetModifierButton", "GenericSettingButton", "SettingMenuController", "SettingSlider", "SettingSliderNum", "SettingSliderSingle", "SettingSliderSingleNum", "SettingTurboSpinButton", "SoundButton", "SpinOptionsButton", "SubControllerConfig", "TurboButtonEffect", "NumberLabelControllerLite", "SettingInfoFooterController", "LandscapeSettingInfoFooterController", "ButtonBackground", "LandscapeSettingMenuController", "LandscapeSoundButton", "MaxBetButton", "SettingMenuButtonHelper", "SettingMenuHelper", "SlotScrollerController.spec", "SlotDataHandler", "SlotHelper", "SlotItemHandler", "SlotSymbol", "BaseScroller", "DefaultStartScroller", "DefaultStopScroller", "SlotScrollerController", "SlotGenerator", "SlotItem", "SlotItemPool", "SlotView", "SpaceBarInterrupter", "ButtonController", "PopOutItem", "PopOutItemHandler", "PopOutTintController", "SinglePayoutModel", "SymbolPayoutController", "SymbolPayoutPanelGenerator", "BACKUP_DATA", "UIAppearanceHelper", "BaseListViewCell", "BookView", "Button", "DrawLine", "GridView", "LabelLocalized", "ListView", "ListViewCellUpdateAnim", "ListViewEnum", "NavigationBar", "NavigationController", "NavigationDefaultTransition", "PageControl", "PageControlButton", "ScrollViewEx", "SliderEx", "TabBar", "TabBarController", "TabBarItem", "TransitionContext", "TransitionEnum", "UIKit", "UIKitUtils", "ViewController", "ViewControllerTransition", "WalletHelper", "Line", "LineController", "LinePrefabController", "AngpaoController", "BackgroundController", "BackgroundControllerTwo", "BigSymbolItemController", "BigWinController", "BigWinFireworkController", "BigWinFireworkItem", "ColumnTintController", "CustomAnimParticleSystem", "FeatureWinController", "FireworkItem", "ForegroundController", "GApiClient", "GConstants", "GPopOutItem", "GSpinButtonController", "GeneralAudioConstant", "InfoboardController", "Main", "PayLineController", "PayLineItemController", "PayLineNumberController", "PayLineNumberItem", "PayOutEffectController", "PayOutItem", "PaySelectEffectController", "PaySelectItem", "SlotTintController", "StickyController", "StickyItemController", "TigerController", "TrailParticleEffectController", "TrailParticleItemController", "Transitions", "UIShiftController", "WildItemController", "WildParticleItemController", "APIClient.spec", "BigWinController.spec", "SlotController.spec", "SpinButtonController.spec", "WinLine.spec", "BGMHandler", "GRefreshWorldHandler", "NodePoolHandler", "ReplayModeHandler", "RespinReelStatusHandler", "SkipHandler", "SpineConfigHandler", "BaseUIHelper", "NormalUIHelper", "RespinUIHelper", "AudioAssetConfig", "CustomAssetConfig", "GeneralAssetConfig", "LoadingController", "GameTweaksConfig", "GameTweaksData", "GDataSource", "GSlotTransactionModel", "GNormalStopScroller", "GSlotHelper", "GSlotItem", "GSlotItemPool", "NormalSlotHandler", "SlotController", "SlotHandler", "SlotProperties", "SymbolImageHandler", "GRespinDecorator", "GResultDecorator", "GNormalGameState", "GRespinGameState", "GIdleState", "GNormalResultState", "GPrizeState", "GRespinResultState", "GRespinState", "GSpinState", "AudioManager", "GameAudioAdapter", "GamePreference", "RtConfig"]);
}();
//# sourceMappingURL=index.js.map