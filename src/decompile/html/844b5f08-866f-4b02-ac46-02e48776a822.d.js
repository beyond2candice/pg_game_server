!function () {
  'use strict';

  var CZ = {
    AudioAdapterConstant: "AudioAdapterConstant",
    Utils: "Utils"
  };
  var Ci = {
    AudioManager: "AudioManager",
    BGMHandler: "BGMHandler",
    GConstants: "GConstants",
    GeneralAudioConstant: "GeneralAudioConstant",
    SlotProperties: "SlotProperties",
    SymbolImageHandler: "SymbolImageHandler",
    Utils: "Utils"
  };
  var Cb = {
    AnimParticleSystemUtils: "AnimParticleSystemUtils"
  };
  var CH = {
    AdapterEventEmitter: "AdapterEventEmitter",
    AudioAdapterConstant: "AudioAdapterConstant",
    AudioFactory: "AudioFactory",
    ResRC: "ResRC"
  };
  var CI = {
    AudioAdapterConstant: "AudioAdapterConstant"
  };
  var CK = {
    GameAudioAdapter: "GameAudioAdapter",
    GeneralAudioConstant: "GeneralAudioConstant",
    NoSoundAdapter: "NoSoundAdapter",
    RtConfig: "RtConfig",
    SettingMenuHelper: "SettingMenuHelper"
  };
  var CE = {
    GameEventHandler: "GameEventHandler"
  };
  var CQ = {
    AudioManager: "AudioManager",
    GConstants: "GConstants",
    Utils: "Utils"
  };
  var CX = {
    Utils: "Utils"
  };
  var Co = {
    AudioManager: "AudioManager",
    AutomationDecorator: "AutomationDecorator",
    BGMHandler: "BGMHandler",
    GConstants: "GConstants",
    GSlotTransactionModel: "GSlotTransactionModel",
    GameUtils: "GameUtils",
    GeneralAudioConstant: "GeneralAudioConstant",
    InfoboardController: "InfoboardController",
    SettingMenuHelper: "SettingMenuHelper",
    SkipHandler: "SkipHandler",
    SpaceBarInterrupter: "SpaceBarInterrupter",
    TweaksData: "TweaksData",
    Utils: "Utils",
    "WinLine.spec": "WinLine.spec"
  };
  var CA = {
    GenericSettingButton: "GenericSettingButton",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var CV = {
    SymbolImageHandler: "SymbolImageHandler",
    Utils: "Utils"
  };
  var CW = {
    AnalyticsHelper: "AnalyticsHelper",
    AutomationDecorator: "AutomationDecorator",
    BGMHandler: "BGMHandler",
    "BigWinController.spec": "BigWinController.spec",
    BigWinFireworkController: "BigWinFireworkController",
    GConstants: "GConstants",
    GDataSource: "GDataSource",
    GameEventHandler: "GameEventHandler",
    SkipHandler: "SkipHandler",
    SpaceBarInterrupter: "SpaceBarInterrupter",
    Utils: "Utils"
  };
  var CJ = {
    ScrollViewEx: "ScrollViewEx"
  };
  var Cw = {
    UIAppearanceHelper: "UIAppearanceHelper"
  };
  var CO = {
    UIAppearanceHelper: "UIAppearanceHelper"
  };
  var Ca = {
    AnimParticleSystem: "AnimParticleSystem"
  };
  var CF = {
    ResourceLoader: "ResourceLoader",
    SettingMenuHelper: "SettingMenuHelper"
  };
  var Ch = {
    BaseScroller: "BaseScroller"
  };
  var CD = {
    BaseScroller: "BaseScroller"
  };
  var CU = {
    SymbolImageHandler: "SymbolImageHandler"
  };
  var Cu = {
    Utils: "Utils"
  };
  var Cn = {
    GConstants: "GConstants"
  };
  var CS = {
    APIClient: "APIClient",
    "APIClient.spec": "APIClient.spec",
    AutomationDecorator: "AutomationDecorator",
    GDataSource: "GDataSource",
    TweaksData: "TweaksData",
    Utils: "Utils"
  };
  var CR = {
    DataSource: "DataSource",
    GSlotTransactionModel: "GSlotTransactionModel",
    PlayerModel: "PlayerModel",
    RtConfig: "RtConfig",
    SlotSystemModel: "SlotSystemModel"
  };
  var Cd = {
    IdleState: "IdleState",
    ReplayModeHandler: "ReplayModeHandler",
    SlotGameConstants: "SlotGameConstants",
    TransactionStateMachineHandler: "TransactionStateMachineHandler"
  };
  var Cx = {
    GIdleState: "GIdleState",
    GNormalResultState: "GNormalResultState",
    GPrizeState: "GPrizeState",
    GResultDecorator: "GResultDecorator",
    GSlotTransactionModel: "GSlotTransactionModel",
    GSpinState: "GSpinState",
    NormalPrizeDecorator: "NormalPrizeDecorator",
    NormalSpinDecorator: "NormalSpinDecorator",
    NormalUIHelper: "NormalUIHelper",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Utils: "Utils"
  };
  var Cj = {
    GSlotTransactionModel: "GSlotTransactionModel",
    RespinReelStatusHandler: "RespinReelStatusHandler",
    ResultState: "ResultState",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotAnalyticsHelper: "SlotAnalyticsHelper",
    SlotProperties: "SlotProperties",
    SlotStateMachine: "SlotStateMachine",
    SpinConfigHandler: "SpinConfigHandler",
    TransactionStateMachineHandler: "TransactionStateMachineHandler"
  };
  var CP = {
    AudioManager: "AudioManager",
    BaseScroller: "BaseScroller",
    DefaultStopScroller: "DefaultStopScroller",
    GeneralAudioConstant: "GeneralAudioConstant",
    SlotProperties: "SlotProperties"
  };
  var Cm = {
    AudioManager: "AudioManager",
    GConstants: "GConstants",
    GeneralAudioConstant: "GeneralAudioConstant",
    PopOutItem: "PopOutItem",
    SlotProperties: "SlotProperties",
    SpineConfigHandler: "SpineConfigHandler"
  };
  var Cp = {
    GSlotTransactionModel: "GSlotTransactionModel",
    PrizeState: "PrizeState",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Utils: "Utils"
  };
  var CM = {
    AudioManager: "AudioManager",
    AutoSpinHandler: "AutoSpinHandler",
    BGMHandler: "BGMHandler",
    GApiClient: "GApiClient",
    GDataSource: "GDataSource",
    GSlotTransactionModel: "GSlotTransactionModel",
    RefreshWorldHandler: "RefreshWorldHandler",
    Utils: "Utils"
  };
  var CB = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant",
    NormalSpinDecorator: "NormalSpinDecorator"
  };
  var Cy = {
    GPrizeState: "GPrizeState",
    GRespinDecorator: "GRespinDecorator",
    GRespinResultState: "GRespinResultState",
    GRespinState: "GRespinState",
    GSlotTransactionModel: "GSlotTransactionModel",
    NormalPrizeDecorator: "NormalPrizeDecorator",
    NormalResultDecorator: "NormalResultDecorator",
    ReplayModeHandler: "ReplayModeHandler",
    RespinUIHelper: "RespinUIHelper",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Utils: "Utils"
  };
  var Ck = {
    RespinReelStatusHandler: "RespinReelStatusHandler",
    ResultState: "ResultState",
    TransactionStateMachineHandler: "TransactionStateMachineHandler"
  };
  var T0 = {
    AutoSpinHandler: "AutoSpinHandler",
    GApiClient: "GApiClient",
    RequestHandler: "RequestHandler",
    SpinState: "SpinState",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Utils: "Utils"
  };
  var T1 = {
    NormalResultDecorator: "NormalResultDecorator"
  };
  var T2 = {
    SlotHelper: "SlotHelper",
    SlotProperties: "SlotProperties"
  };
  var T3 = {
    NodePoolHandler: "NodePoolHandler",
    SlotItemPool: "SlotItemPool"
  };
  var T4 = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant",
    NodePoolHandler: "NodePoolHandler",
    SlotItem: "SlotItem",
    SlotProperties: "SlotProperties",
    SpineConfigHandler: "SpineConfigHandler"
  };
  var T5 = {
    SlotTransactionModel: "SlotTransactionModel"
  };
  var T6 = {
    AudioManager: "AudioManager",
    AutomationDecorator: "AutomationDecorator",
    GConstants: "GConstants",
    GeneralAudioConstant: "GeneralAudioConstant",
    SpinButtonController: "SpinButtonController",
    "SpinButtonController.spec": "SpinButtonController.spec"
  };
  var T7 = {
    AutoSpinHandler: "AutoSpinHandler",
    GApiClient: "GApiClient",
    RequestHandler: "RequestHandler",
    SpinState: "SpinState",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Utils: "Utils"
  };
  var T8 = {
    AudioAdapter: "AudioAdapter",
    AudioAdapterConstant: "AudioAdapterConstant",
    AudioManager: "AudioManager"
  };
  var T9 = {
    Preference: "Preference",
    RtConfig: "RtConfig"
  };
  var TN = {
    CreatorTweaks: "CreatorTweaks",
    TweaksConfig: "TweaksConfig",
    TweaksData: "TweaksData"
  };
  var Tz = {
    ButtonTheme: "ButtonTheme",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var TC = {
    ScrollViewEx: "ScrollViewEx"
  };
  var TT = {
    AnalyticsHelper: "AnalyticsHelper",
    AutoSpinHandler: "AutoSpinHandler",
    ButtonHitTest: "ButtonHitTest",
    GameEventHandler: "GameEventHandler",
    JakeSlotGameTemplate: "JakeSlotGameTemplate",
    SettingMenuHelper: "SettingMenuHelper",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotGameConstants: "SlotGameConstants",
    SpinButtonController: "SpinButtonController",
    SystemFeatureHandler: "SystemFeatureHandler",
    Utils: "Utils",
    WalletHelper: "WalletHelper"
  };
  var TL = {
    AnalyticsHelper: "AnalyticsHelper",
    AudioManager: "AudioManager",
    GConstants: "GConstants",
    GeneralAudioConstant: "GeneralAudioConstant",
    InfoboardMessageController: "InfoboardMessageController",
    SkipHandler: "SkipHandler",
    SymbolImageHandler: "SymbolImageHandler",
    Utils: "Utils"
  };
  var TY = {
    AutomationDecorator: "AutomationDecorator",
    "InfoboardMessageController.spec": "InfoboardMessageController.spec",
    NumberDisplayController: "NumberDisplayController",
    NumberRollController: "NumberRollController",
    Utils: "Utils"
  };
  var Tl = {
    ResRC: "ResRC",
    ResourceQualifierHelper: "ResourceQualifierHelper",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var Tr = {
    SettingInfoFooterController: "SettingInfoFooterController",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var Tt = {
    CanvasResizeBroadcaster: "CanvasResizeBroadcaster",
    SettingMenuController: "SettingMenuController",
    UIAppearanceHelper: "UIAppearanceHelper"
  };
  var Tv = {
    SoundButton: "SoundButton",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var TG = {
    LineController: "LineController"
  };
  var Tq = {
    ListViewEnum: "ListViewEnum"
  };
  var Tc = {
    AnalyticsHelper: "AnalyticsHelper",
    AudioAssetConfig: "AudioAssetConfig",
    AudioManager: "AudioManager",
    BVFrameworkEnum: "BVFrameworkEnum",
    CustomAssetConfig: "CustomAssetConfig",
    ErrorHandler: "ErrorHandler",
    GameAudioAdapter: "GameAudioAdapter",
    GeneralAssetConfig: "GeneralAssetConfig",
    LaunchConfig: "LaunchConfig",
    NoSoundAdapter: "NoSoundAdapter",
    QuitGameWithEvent: "QuitGameWithEvent",
    ResourceLoader: "ResourceLoader",
    SettingMenuHelper: "SettingMenuHelper",
    SpineConfigHandler: "SpineConfigHandler",
    SymbolImageHandler: "SymbolImageHandler"
  };
  var Tf = {
    AnalyticsHelper: "AnalyticsHelper",
    AudioManager: "AudioManager",
    BGMHandler: "BGMHandler",
    GApiClient: "GApiClient",
    GConstants: "GConstants",
    GDataSource: "GDataSource",
    GNormalGameState: "GNormalGameState",
    GRefreshWorldHandler: "GRefreshWorldHandler",
    GRespinGameState: "GRespinGameState",
    GSlotTransactionModel: "GSlotTransactionModel",
    GameEventHandler: "GameEventHandler",
    GameInitializationHandler: "GameInitializationHandler",
    GameLayout: "GameLayout",
    GeneralAudioConstant: "GeneralAudioConstant",
    JakeSlotGameTemplate: "JakeSlotGameTemplate",
    MultiResHandler: "MultiResHandler",
    NotifyHelper: "NotifyHelper",
    ReplayModeHandler: "ReplayModeHandler",
    RequestHandler: "RequestHandler",
    SettingMenuHandlers: "SettingMenuHandlers",
    SettingMenuHelper: "SettingMenuHelper",
    SlotProperties: "SlotProperties",
    SpaceBarInterrupter: "SpaceBarInterrupter",
    SpinConfigHandler: "SpinConfigHandler",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Transitions: "Transitions",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils",
    WalletHandlers: "WalletHandlers",
    WalletHelper: "WalletHelper"
  };
  var Te = {
    BetModifierButton: "BetModifierButton",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var Tg = {
    NavigationBar: "NavigationBar",
    NavigationDefaultTransition: "NavigationDefaultTransition",
    TabBarItem: "TabBarItem",
    TransitionContext: "TransitionContext",
    TransitionEnum: "TransitionEnum",
    UIKit: "UIKit",
    ViewController: "ViewController"
  };
  var Ts = {
    ViewControllerTransition: "ViewControllerTransition"
  };
  var TZ = {
    AudioAdapter: "AudioAdapter",
    Utils: "Utils"
  };
  var Ti = {
    AutoSpinHandler: "AutoSpinHandler",
    ButtonHitTest: "ButtonHitTest",
    JakeSlotGameTemplate: "JakeSlotGameTemplate",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotGameConstants: "SlotGameConstants"
  };
  var Tb = {
    AutoSpinHandler: "AutoSpinHandler",
    ButtonHitTest: "ButtonHitTest",
    JakeSlotGameTemplate: "JakeSlotGameTemplate",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotGameConstants: "SlotGameConstants",
    SlotStateMachine: "SlotStateMachine",
    SpinConfigHandler: "SpinConfigHandler"
  };
  var TH = {
    AudioManager: "AudioManager",
    GNormalStopScroller: "GNormalStopScroller",
    GeneralAudioConstant: "GeneralAudioConstant",
    SlotHandler: "SlotHandler",
    SlotProperties: "SlotProperties",
    Utils: "Utils"
  };
  var TI = {
    AutoSpinHandler: "AutoSpinHandler",
    ButtonHitTest: "ButtonHitTest",
    JakeSlotGameTemplate: "JakeSlotGameTemplate",
    SettingMenuHelper: "SettingMenuHelper",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotGameConstants: "SlotGameConstants",
    SlotStateMachine: "SlotStateMachine",
    SpinConfigHandler: "SpinConfigHandler"
  };
  var TK = {
    AudioManager: "AudioManager",
    BaseUIHelper: "BaseUIHelper",
    GConstants: "GConstants",
    GSlotTransactionModel: "GSlotTransactionModel",
    GeneralAudioConstant: "GeneralAudioConstant",
    SettingMenuHelper: "SettingMenuHelper",
    SlotProperties: "SlotProperties",
    SlotStateMachine: "SlotStateMachine",
    Utils: "Utils"
  };
  var TE = {
    NumberDisplayController: "NumberDisplayController"
  };
  var TQ = {
    NumberDisplayInterface: "NumberDisplayInterface",
    Utils: "Utils"
  };
  var TX = {
    Utils: "Utils"
  };
  var To = {
    Utils: "Utils"
  };
  var TA = {
    NumberDisplayInterface: "NumberDisplayInterface",
    Utils: "Utils"
  };
  var TV = {
    NumberDisplayInterface: "NumberDisplayInterface"
  };
  var TW = {
    NumberDisplayController: "NumberDisplayController",
    NumberRollBaseController: "NumberRollBaseController"
  };
  var TJ = {
    NumberCurvedController: "NumberCurvedController",
    NumberRollBaseController: "NumberRollBaseController"
  };
  var Tw = {
    NumberLabelController: "NumberLabelController",
    NumberRollBaseController: "NumberRollBaseController"
  };
  var TO = {
    Button: "Button"
  };
  var Ta = {
    PageControlButton: "PageControlButton"
  };
  var TF = {
    Line: "Line",
    SlotProperties: "SlotProperties"
  };
  var Th = {
    GConstants: "GConstants"
  };
  var TD = {
    PayLineNumberItem: "PayLineNumberItem"
  };
  var TU = {
    AudioManager: "AudioManager",
    GConstants: "GConstants",
    GeneralAudioConstant: "GeneralAudioConstant",
    SlotProperties: "SlotProperties",
    SpineConfigHandler: "SpineConfigHandler",
    Utils: "Utils"
  };
  var Tu = {
    GConstants: "GConstants",
    Utils: "Utils"
  };
  var Tn = {
    GameEventHandler: "GameEventHandler",
    SettingMenuHelper: "SettingMenuHelper",
    TweaksData: "TweaksData",
    Utils: "Utils"
  };
  var TS = {
    RequestHandler: "RequestHandler",
    SettingMenuHelper: "SettingMenuHelper",
    Utils: "Utils",
    WalletHelper: "WalletHelper"
  };
  var TR = {
    SpaceBarInterrupter: "SpaceBarInterrupter",
    TransactionStateMachineHandler: "TransactionStateMachineHandler",
    Utils: "Utils"
  };
  var Td = {
    ResRC: "ResRC",
    ResourceQualifierHelper: "ResourceQualifierHelper",
    RetryHandler: "RetryHandler"
  };
  var Tx = {
    SlotProperties: "SlotProperties"
  };
  var Tj = {
    AudioManager: "AudioManager",
    AutomationDecorator: "AutomationDecorator",
    BGMHandler: "BGMHandler",
    BaseUIHelper: "BaseUIHelper",
    GSlotTransactionModel: "GSlotTransactionModel",
    GeneralAudioConstant: "GeneralAudioConstant",
    Utils: "Utils",
    "WinLine.spec": "WinLine.spec"
  };
  var TP = {
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotAnalyticsHelper: "SlotAnalyticsHelper",
    SlotStateMachine: "SlotStateMachine",
    SpinConfigHandler: "SpinConfigHandler",
    Utils: "Utils"
  };
  var Tm = {
    LaunchConfig: "LaunchConfig"
  };
  var Tp = {
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var TM = {
    BVFramework: "BVFramework",
    CanvasResizeBroadcaster: "CanvasResizeBroadcaster",
    HitPassThrough: "HitPassThrough",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var TB = {
    AnalyticsHelper: "AnalyticsHelper",
    LaunchConfig: "LaunchConfig",
    QuitGameWithEvent: "QuitGameWithEvent"
  };
  var Ty = {
    BVFramework: "BVFramework",
    GameEventHandler: "GameEventHandler",
    NotifyHelper: "NotifyHelper",
    Preference: "Preference",
    SettingMenuButtonHelper: "SettingMenuButtonHelper",
    Utils: "Utils"
  };
  var Tk = {
    Utils: "Utils"
  };
  var L0 = {
    Utils: "Utils"
  };
  var L1 = {
    GenericSettingButton: "GenericSettingButton",
    TurboButtonEffect: "TurboButtonEffect",
    UIAppearanceHelper: "UIAppearanceHelper",
    Utils: "Utils"
  };
  var L2 = {
    AnalyticsHelper: "AnalyticsHelper"
  };
  var L3 = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant",
    NodePoolHandler: "NodePoolHandler",
    NormalSlotHandler: "NormalSlotHandler",
    SlotProperties: "SlotProperties",
    SlotStateMachine: "SlotStateMachine"
  };
  var L4 = {
    SlotScrollerController: "SlotScrollerController",
    SlotView: "SlotView"
  };
  var L5 = {
    GSlotHelper: "GSlotHelper",
    GSlotItem: "GSlotItem",
    GSlotItemPool: "GSlotItemPool",
    SlotDataHandler: "SlotDataHandler",
    SlotGenerator: "SlotGenerator",
    SlotHelper: "SlotHelper",
    SlotProperties: "SlotProperties",
    SlotScrollerController: "SlotScrollerController",
    SlotView: "SlotView",
    Utils: "Utils"
  };
  var L6 = {
    BaseScroller: "BaseScroller",
    DefaultStartScroller: "DefaultStartScroller",
    DefaultStopScroller: "DefaultStopScroller",
    SlotDataHandler: "SlotDataHandler",
    SlotItem: "SlotItem",
    SlotItemHandler: "SlotItemHandler",
    SlotItemPool: "SlotItemPool"
  };
  var L7 = {
    SlotSymbol: "SlotSymbol"
  };
  var L8 = {
    AutomationDecorator: "AutomationDecorator",
    "SlotScrollerController.spec": "SlotScrollerController.spec"
  };
  var L9 = {
    Utils: "Utils"
  };
  var LN = {
    BVFramework: "BVFramework"
  };
  var Lz = {
    SystemModel: "SystemModel",
    WinThresholdsModel: "WinThresholdsModel"
  };
  var LC = {
    BetRepository: "BetRepository",
    TransactionModel: "TransactionModel",
    WinLinesModel: "WinLinesModel",
    WinValuesModel: "WinValuesModel"
  };
  var LT = {
    GenericSettingButton: "GenericSettingButton"
  };
  var LL = {
    BVFramework: "BVFramework"
  };
  var LY = {
    ButtonHitTest: "ButtonHitTest",
    SettingMenuHelper: "SettingMenuHelper"
  };
  var Ll = {
    GenericSettingButton: "GenericSettingButton",
    UIAppearanceHelper: "UIAppearanceHelper"
  };
  Ll.Utils = "Utils";
  var Lr = {
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    SlotAnalyticsHelper: "SlotAnalyticsHelper",
    SpinConfigHandler: "SpinConfigHandler",
    Utils: "Utils"
  };
  var Lt = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant",
    SlotProperties: "SlotProperties",
    Utils: "Utils"
  };
  var Lv = {
    GConstants: "GConstants",
    SymbolImageHandler: "SymbolImageHandler"
  };
  var LG = {
    SlotProperties: "SlotProperties"
  };
  var Lq = {
    PopOutItemHandler: "PopOutItemHandler",
    SinglePayoutModel: "SinglePayoutModel",
    SymbolPayoutPanelGenerator: "SymbolPayoutPanelGenerator",
    Utils: "Utils"
  };
  var Lc = {
    ButtonController: "ButtonController"
  };
  var Lf = {
    ErrorHandler: "ErrorHandler",
    LaunchConfig: "LaunchConfig",
    SlotAnalyticsEnum: "SlotAnalyticsEnum",
    Utils: "Utils"
  };
  var Le = {
    TabBar: "TabBar",
    TabBarItem: "TabBarItem",
    TransitionContext: "TransitionContext",
    ViewController: "ViewController"
  };
  var Lg = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant",
    Utils: "Utils"
  };
  var Ls = {
    NumberDisplayInterface: "NumberDisplayInterface"
  };
  var LZ = {
    NumberDisplayController: "NumberDisplayController",
    TimedWinRollBaseController: "TimedWinRollBaseController"
  };
  var Li = {
    NumberCurvedController: "NumberCurvedController",
    TimedWinRollBaseController: "TimedWinRollBaseController"
  };
  var Lb = {
    NumberLabelController: "NumberLabelController",
    TimedWinRollBaseController: "TimedWinRollBaseController"
  };
  var LH = {
    SlotProperties: "SlotProperties"
  };
  var LI = {
    GConstants: "GConstants",
    Utils: "Utils"
  };
  var LK = {
    GDataSource: "GDataSource",
    SettingMenuHelper: "SettingMenuHelper",
    Utils: "Utils"
  };
  var LE = {
    CreatorTweaks: "CreatorTweaks",
    GamePreference: "GamePreference",
    Printer: "Printer",
    QuitGame: "QuitGame",
    RtConfig: "RtConfig",
    TweaksData: "TweaksData",
    Utils: "Utils"
  };
  var LQ = {
    BACKUP_DATA: "BACKUP_DATA"
  };
  var LX = {
    AudioManager: "AudioManager",
    GeneralAudioConstant: "GeneralAudioConstant"
  };
  var Lo = {
    UIKit: "UIKit",
    UIKitUtils: "UIKitUtils"
  };
  var LA = {
    BVFramework: "BVFramework",
    SettingInfoFooterController: "SettingInfoFooterController",
    Utils: "Utils"
  };
  var LV = {
    Utils: "Utils"
  };
  var LW = {
    Utils: "Utils"
  };
  var LJ = {
    NumberDisplayInterface: "NumberDisplayInterface"
  };
  var Lw = {
    NumberDisplayController: "NumberDisplayController",
    WinRollBaseController: "WinRollBaseController"
  };
  var LO = {
    NumberCurvedController: "NumberCurvedController",
    WinRollBaseController: "WinRollBaseController"
  };
  var La = {
    NumberLabelController: "NumberLabelController",
    WinRollBaseController: "WinRollBaseController"
  };
  var LF = {
    Utils: "Utils"
  };
  window.__require = function t(N, L, Y) {
    var l = function () {
      var q = true;
      return function (f, g) {
        var Z = q ? function () {
          if (g) {
            var b = g.apply(f, arguments);
            g = null;
            return b;
          }
        } : function () {};
        q = false;
        return Z;
      };
    }();
    function r(q, f) {
      var g = l(this, function () {
        return g.toString().search("(((.+)+)+)+$").toString().constructor(g).search("(((.+)+)+)+$");
      });
      g();
      if (!L[q]) {
        if (!N[q]) {
          var Z = q.split('/');
          Z = Z[Z.length - 0x1];
          if (!N[Z]) {
            var b = "function" == typeof __require && __require;
            if (!f && b) {
              return b(Z, true);
            }
            if (v) {
              return v(Z, true);
            }
            throw Error("Cannot find module '" + q + "'");
          }
          q = Z;
        }
        var H = {
          exports: {}
        };
        var I = L[q] = H;
        N[q][0x0].call(I.exports, function (K) {
          return r(N[q][0x1][K] || K);
        }, I, I.exports, t, N, L, Y);
      }
      return L[q].exports;
    }
    var v = "function" == typeof __require && __require;
    for (var G = 0x0; G < Y.length; G++) {
      r(Y[G]);
    }
    return r;
  }({
    'APIClient.spec': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "8c9a3eRJFFM1bXVQ+/Kcvdf", "APIClient.spec")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.onRequestSent = Y.onRequestReceived = undefined;
        Y.onRequestReceived = function (r, v) {
          var G = System.get("automation") && System.get("automation").GameData;
          var q = {
            error: r,
            result: v
          };
          if (G) {
            G.emit("RequestReceived", q);
          }
        };
        Y.onRequestSent = function () {
          var r = System.get("automation") && System.get("automation").GameData;
          if (r) {
            r.emit("RequestSent");
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'APIClient': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "d34ca2GoqVBUbdLTDYW//l7", "APIClient")) {
        var L = System.get("bvframework").APIClient;
        z.exports["default"] = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'AdapterEventEmitter': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "4a843d9tZpBC5Aag4RGjJxr", "AdapterEventEmitter")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("Utils");
        z("AudioAdapterConstant");
        var v = function () {
          function q() {
            this.t = Object.create(null);
            this.i = r.deferCallback(this);
          }
          q.prototype.once = function (c, f, g) {
            this.on(c, f, g, true);
          };
          q.prototype.emit = function (f, g, Z, b) {
            if (undefined === b) {
              b = false;
            }
            var H = this.t;
            var I = H[f];
            if (!I) {
              I = H[f] = [];
            }
            var K = 0x0;
            var E = function (V) {
              var W = I[V];
              if (!(W.id && W.id !== g)) {
                K = V;
                Q.i(function () {
                  var J = W.fn;
                  if (J !== r.emptyFunc) {
                    if (W.once) {
                      this.off(f, J, W.id);
                    }
                    J(g, Z);
                  }
                  if (V === K && undefined !== g && b) {
                    this.off(g);
                  }
                });
              }
            };
            var Q = this;
            var X = 0x0;
            for (var A = I.length; X < A; X++) {
              E(X);
            }
          };
          q.prototype.on = function (f, g, Z, b) {
            var H = this.t;
            var I = H[f];
            if (!I) {
              I = H[f] = [];
            }
            var K = 0x0;
            for (var E = I.length; K < E; K++) {
              var Q = I[K];
              if (Q.fn === g) {
                if (Q.id === Z) {
                  return;
                }
                if (!Z || !Q.id) {
                  return;
                }
              }
            }
            var X = {
              'id': Z,
              'fn': g,
              once: !!b
            };
            I.push(X);
          };
          q.prototype.off = function (c, f, g) {
            if (undefined !== c) {
              switch (typeof c) {
                case "number":
                  return this.o(undefined, c);
                case "function":
                  return this.o(c, f);
                default:
                  if ("number" == typeof f) {
                    g = f;
                    f = undefined;
                  }
                  return this.h(c, f, g);
              }
            } else {
              for (var Z in this.t) this.t[Z].length = 0x0;
            }
          };
          q.prototype.h = function (c, f, g) {
            var Z = this.t[c];
            if (Z) {
              if (undefined !== f || undefined !== g) {
                this.t[c] = Z.filter(function (b) {
                  return G(b, f, g);
                });
              } else {
                Z.length = 0x0;
              }
            }
          };
          q.prototype.o = function (c, f) {
            for (var g in this.t) this.t[g] = this.t[g].filter(function (Z) {
              return G(Z, c, f);
            });
          };
          return q;
        }();
        Y["default"] = v;
        cc._RF.pop();
      }
      function G(q, c, f) {
        return !!(f && f !== q.id || c && c !== q.fn) || (q.fn = r.emptyFunc, false);
      }
    }, CZ],
    'AnalyticsHelper': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "d1d41tYvBBPX6KJU88DFlLq", "AnalyticsHelper")) {
        var L = System.get("bvframework").AnalyticsHelper;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'AngpaoController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "ece0aQbOgFN+bkuMghw2lwd", "AngpaoController")) {
        var G = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", G);
        var q = z("Utils");
        var g = z("GConstants");
        var Z = z("GeneralAudioConstant");
        var H = z("BGMHandler");
        var I = z("SlotProperties");
        var K = z("SymbolImageHandler");
        var E = z("AudioManager");
        var Q = cc._decorator;
        var X = Q.ccclass;
        var A = Q.property;
        var V = cc.v2(0x0, 0x23a);
        var W = cc.v2(-0x25, 0x2a8);
        var J = cc.v2(-0xfa, 0x316);
        var w = [cc.v2(-0x140, 0x1f4), cc.v2(0x0, 0x1f4), cc.v2(0x140, 0x1f4)];
        var O = [cc.v2(-0x140, 0x3e8), cc.v2(0x0, 0x3e8), cc.v2(0x140, 0x3e8)];
        var F = function (D) {
          function U() {
            var S = null !== D && D.apply(this, arguments) || this;
            S.angpaoNode = undefined;
            S.openAngpaoNode = undefined;
            S.multHolder = undefined;
            S.shakeNode = undefined;
            S.shine = undefined;
            S.symbolNode = undefined;
            S.sparkle = undefined;
            S.circleSparkle = undefined;
            S.multiplierNode = undefined;
            S.multiplierShine = undefined;
            S.particle = undefined;
            S.spinShine = undefined;
            S.u = [];
            S.l = undefined;
            S._ = undefined;
            S.flyParticle = undefined;
            return S;
          }
          __extends(U, D);
          U.prototype.init = function (S) {
            this._ = new cc.NodePool();
            for (var R = 0x0; R < 0x3; R++) {
              var x = cc.instantiate(this.flyParticle);
              this._.put(x);
            }
            this.l = S;
          };
          U.prototype.playRespin = function (S, R, x) {
            var j = this;
            var P = Z.GENERAL_AUDIO.featureAngpauFly.key;
            E.stopAudioIfPlaying(P);
            E.playAudioIfNotPlaying(P);
            this.symbolNode.getComponent(cc.Sprite).spriteFrame = K.symbolImageHandler.symbolImages[S];
            this.node.stopAllActions();
            this.node.runAction(cc.sequence(cc.targetedAction(this.angpaoNode, cc.sequence(cc.spawn(cc.delayTime(0.4), cc.fadeIn(0.2)), cc.spawn(cc.bezierTo(0.5, [J, W, V]), cc.sequence(cc.delayTime(0.25), cc.scaleTo(0.25, 1.87), cc.callFunc(this.m.bind(this))), cc.rotateTo(0.3, 0x0)), cc.scaleTo(0.25, 1.7), cc.delayTime(0.25), cc.callFunc(this.p.bind(this)), cc.scaleTo(0.1, 1.7, 2.15), cc.callFunc(function () {
              var M = Z.GENERAL_AUDIO.featureAngpauReveal.key;
              E.stopAudioIfPlaying(M);
              E.playAudioIfNotPlaying(M);
              H.crossFadePlayNormalBGMtoRespin();
              j.angpaoNode.rotation = 0x0;
              j.openAngpaoNode.active = true;
              j.shine.node.runAction(cc.fadeIn(0.3));
              j.symbolNode.opacity = 0x28;
              j.sparkle.play();
              j.shine.play();
            }))), cc.targetedAction(this.symbolNode, cc.spawn(cc.fadeTo(0.1, 0xff), cc.sequence(cc.scaleTo(0.125, 1.03), cc.scaleTo(0.375, 0.7)), cc.targetedAction(this.angpaoNode, cc.sequence(cc.scaleTo(0.25, 0x1), cc.fadeOut(0.3))), cc.callFunc(function () {
              j.spinShine.runAction(cc.rotateBy(0x14, 0x168).repeatForever());
            }), cc.sequence(cc.moveTo(0.125, cc.v2(0x0, 0x398)), cc.moveTo(0.375, cc.v2(0x0, 0x23a)).easing(cc.easeCircleActionIn()), cc.moveTo(0.125, cc.v2(0x0, 0x244)), cc.moveTo(0.2, cc.v2(0x0, 0x23a))), cc.sequence(cc.delayTime(0.5), cc.callFunc(function () {
              j.circleSparkle.play();
            })))), cc.delayTime(0.6), cc.spawn(cc.sequence(cc.delayTime(0.15), cc.callFunc(function () {
              var M = Z.GENERAL_AUDIO.featureMultiAppear.key;
              E.stopAudioIfPlaying(M);
              E.playAudioIfNotPlaying(M);
            }), cc.callFunc(this.S.bind(this, R))), cc.targetedAction(this.symbolNode, cc.spawn(cc.scaleTo(0.3, 0.7).easing(cc.easeCubicActionInOut()), cc.fadeOut(0.3))), cc.targetedAction(this.multiplierNode, cc.spawn(cc.callFunc(function () {
              j.multiplierShine.play();
              j.particle.play();
              j.multiplierNode.parent = j.l;
            }), cc.sequence(cc.spawn(cc.scaleTo(0.5, 2.6).easing(cc.easeCubicActionInOut()), cc.fadeIn(0.2)), cc.scaleTo(0.5, 2.5), cc.moveTo(0.5, cc.v2(0x0, 0x20d)).easing(cc.easeCubicActionIn()))))), cc.callFunc(function () {
              if (x) {
                x();
              }
            })));
          };
          U.prototype.stopRespin = function (S) {
            var R = this;
            this.multiplierNode.stopAllActions();
            this.spinShine.stopAllActions();
            this.multiplierNode.runAction(cc.fadeOut(0.3));
            this.spinShine.runAction(cc.tintTo(0.3, g.BLACK));
            this.multiplierShine.stop();
            this.multiplierShine.setCurrentTime(0x0);
            this.particle.stop();
            this.particle.setCurrentTime(0x0);
            this.particle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            q.delayCallback(0.3)(function () {
              if (S) {
                S();
              }
              R.multiplierNode.parent = R.multHolder;
              R.reset();
            });
          };
          U.prototype.reset = function () {
            var S = this;
            this.u.forEach(function (R) {
              R.stopAllActions();
              R.children[0x0].opacity = 0xff;
              S._.put(R);
            });
            this.u = [];
            this.node.stopAllActions();
            this.angpaoNode.position = J;
            this.angpaoNode.opacity = 0x0;
            this.angpaoNode.scale = 0.5;
            this.angpaoNode.rotation = -0x1e;
            this.openAngpaoNode.active = false;
            this.shine.node.opacity = 0x0;
            this.shine.node.stopAllActions();
            this.sparkle.stop();
            this.sparkle.setCurrentTime(0x0);
            this.sparkle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.shine.stop();
            this.shine.setCurrentTime(0x0);
            this.shine.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.symbolNode.position = cc.v3(0x0, 0x384);
            this.symbolNode.scale = 0.7;
            this.symbolNode.opacity = 0x0;
            this.spinShine.color = g.BLACK;
            this.spinShine.stopAllActions();
            this.circleSparkle.stop();
            this.circleSparkle.setCurrentTime(0x0);
            this.circleSparkle.node.getComponent(cc.Sprite).spriteFrame = 0x0;
            this.circleSparkle.stop();
            this.circleSparkle.setCurrentTime(0x0);
            this.circleSparkle.node.getComponent(cc.Sprite).spriteFrame = 0x0;
            this.multiplierShine.stop();
            this.multiplierShine.setCurrentTime(0x0);
            this.particle.stop();
            this.particle.setCurrentTime(0x0);
            this.particle.node.getComponent(cc.Sprite).spriteFrame = 0x0;
            this.multiplierNode.scale = 1.5;
            this.multiplierNode.opacity = 0x0;
            this.multiplierNode.parent = this.multHolder;
            this.multiplierNode.position = cc.v3(0x0, 0x23a);
          };
          U.prototype.S = function (S) {
            var R = this;
            for (var x = 0x0; x < 0x3; x++) {
              this.u.push(this.C());
            }
            var j = 0x0;
            var P = function () {
              if (++j >= 0x3) {
                R.u.forEach(function (M) {
                  M.stopAllActions();
                  M.getComponent(cc.ParticleSystem).stopSystem();
                  M.children[0x0].runAction(cc.fadeOut(0.5));
                });
              }
              if (S) {
                S();
              }
            };
            this.u.forEach(function (M, B) {
              M.parent = R.node;
              M.getComponent(cc.ParticleSystem).resetSystem();
              M.position = cc.v3(0x0, 0x23a);
              M.runAction(cc.sequence(cc.bezierTo(0.4, [M.position, O[B], w[B]]), cc.callFunc(P)));
            });
          };
          U.prototype.C = function () {
            return this._.size() > 0x0 ? this._.get() : cc.instantiate(this.flyParticle);
          };
          U.prototype.m = function () {
            this.shakeNode.stopAllActions();
            this.shakeNode.runAction(cc.repeatForever(I.createSymbolShake()));
          };
          U.prototype.p = function () {
            this.shakeNode.stopAllActions();
            this.shakeNode.position = cc.v3();
          };
          U.prototype.shake10 = function () {
            var S = this;
            var R = 0.001 * (0x64 * Math.floor(Math.random()) + 0x1e);
            this.multiplierNode.stopAllActions();
            this.multiplierNode.runAction(cc.sequence(cc.moveBy(R, cc.v2(-1.5, 0x0)), cc.moveBy(R, cc.v2(0x4, 1.5)), cc.moveBy(R, cc.v2(-0x1, -0x4)), cc.moveBy(R, cc.v2(-0x2, 4.5)), cc.moveBy(R, cc.v2(4.5, -0x2)), cc.moveBy(R, cc.v2(-4.5, -1.5)), cc.moveBy(R, cc.v2(-0x1, 2.5)), cc.moveBy(R, cc.v2(0x3, -0x1)), cc.moveBy(R, cc.v2(-1.5, 0x0)), cc.moveBy(R, cc.v2(0x4, 1.5)), cc.moveBy(R, cc.v2(-0x1, -0x4)), cc.moveBy(R, cc.v2(-0x2, 4.5)), cc.moveBy(R, cc.v2(4.5, -0x2)), cc.moveBy(R, cc.v2(-4.5, -1.5)), cc.moveBy(R, cc.v2(-0x1, 2.5)), cc.moveBy(R, cc.v2(0x3, -0x1)), cc.callFunc(function () {
              S.multiplierNode.position = cc.v3(0x0, 0x20d);
            })));
          };
          U.prototype.win10 = function () {
            var S = 0.001 * (0x64 * Math.floor(Math.random()) + 0x1e);
            this.multiplierNode.runAction(cc.sequence(cc.moveBy(S, cc.v2(-8.5, 0x0)), cc.moveBy(S, cc.v2(0xb, 1.5)), cc.moveBy(S, cc.v2(-0x7, -0x4)), cc.moveBy(S, cc.v2(-0x9, 4.5)), cc.moveBy(S, cc.v2(0xa, -0x2)), cc.moveBy(S, cc.v2(-0xa, -1.5)), cc.moveBy(S, cc.v2(-0x1, 2.5)), cc.moveBy(S, cc.v2(8.5, -0x1)), cc.moveBy(S, cc.v2(0xa, -0x2)), cc.moveBy(S, cc.v2(-0xa, -1.5)), cc.moveBy(S, cc.v2(-0x1, 2.5)), cc.moveBy(S, cc.v2(8.5, -0x1)), cc.spawn(cc.sequence(cc.moveTo(0.15, cc.v2(0x0, 0x280)).easing(cc.easeCubicActionInOut()), cc.moveTo(0.15, cc.v2(0x0, 0x258))), cc.sequence(cc.scaleTo(0.15, 0x4), cc.scaleTo(0.15, 3.5)))));
          };
          U.prototype.hide10 = function () {
            this.multiplierNode.opacity = 0x0;
          };
          U.prototype.setupToRespinState = function () {
            this.multiplierNode.scale = 2.5;
            this.multiplierNode.opacity = 0xff;
            this.multiplierNode.parent = this.l;
            this.multiplierNode.position = cc.v3(0x0, 0x20d);
            this.multiplierShine.play();
            this.spinShine.color = g.WHITE;
            this.spinShine.runAction(cc.rotateBy(0x14, 0x168).repeatForever());
            this.particle.play();
          };
          U.prototype.setupToNormalState = function () {
            this.reset();
          };
          __decorate([A(cc.Node)], U.prototype, "angpaoNode", undefined);
          __decorate([A(cc.Node)], U.prototype, "openAngpaoNode", undefined);
          __decorate([A(cc.Node)], U.prototype, "multHolder", undefined);
          __decorate([A(cc.Node)], U.prototype, "shakeNode", undefined);
          __decorate([A(cc.Animation)], U.prototype, "shine", undefined);
          __decorate([A(cc.Node)], U.prototype, "symbolNode", undefined);
          __decorate([A(cc.Animation)], U.prototype, "sparkle", undefined);
          __decorate([A(cc.Animation)], U.prototype, "circleSparkle", undefined);
          __decorate([A(cc.Node)], U.prototype, "multiplierNode", undefined);
          __decorate([A(cc.Animation)], U.prototype, "multiplierShine", undefined);
          __decorate([A(cc.Animation)], U.prototype, "particle", undefined);
          __decorate([A(cc.Node)], U.prototype, "spinShine", undefined);
          __decorate([A(cc.Prefab)], U.prototype, "flyParticle", undefined);
          return __decorate([X], U);
        }(cc.Component);
        Y["default"] = F;
        cc._RF.pop();
      }
    }, Ci],
    'AnimParticleSystemPoolHandler': [function (N, z, L) {
      'use strict';

      if (!cc._RF.push(z, "90167wb5w5JpKAkqWQq6cj8", "AnimParticleSystemPoolHandler")) {
        L.__esModule = true;
        L["default"] = undefined;
        var Y = cc.Class({
          'extends': cc.Component,
          'unuse': function () {
            var l = this.node.getComponent(cc.Animation);
            if (l) {
              l.stop();
            }
          }
        });
        L["default"] = Y;
        z.exports = L["default"];
        cc._RF.pop();
      }
    }, {}],
    'AnimParticleSystemUtils': [function (N, z, L) {
      'use strict';

      if (!cc._RF.push(z, "cbd06HrkTNFtbM/q+8lJvnc", "AnimParticleSystemUtils")) {
        L.__esModule = true;
        L.getAccelerationDistance = function (Y, l) {
          return 0.5 * Y * l * l;
        };
        L.getRandomFromRange = function (Y, l) {
          return Y + l * (Math.random() - 0.5) * 0x2;
        };
        cc._RF.pop();
      }
    }, {}],
    'AnimParticleSystem': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "3142aQR/shASo2uVaU35yUL", "AnimParticleSystem")) {
        l.__esModule = true;
        l["default"] = undefined;
        var v = {
          LINEAR: 0x0,
          GRAVITY: 0x1
        };
        var G = {
          None: 0x0,
          EaseIn: 0x1,
          EaseOut: 0x2,
          EaseInOut: 0x3,
          EaseSineIn: 0x4,
          EaseSineOut: 0x5,
          EaseSineInOut: 0x6,
          EaseCubicActionIn: 0x7,
          EaseCubicActionOut: 0x8,
          EaseCubicActionInOut: 0x9,
          EaseQuinticActionIn: 0xa,
          EaseQuinticActionOut: 0xb,
          EaseQuinticActionInOut: 0xc,
          EaseCircleActionIn: 0xd,
          EaseCircleActionOut: 0xe,
          EaseCircleActionInOut: 0xf,
          EaseElasticIn: 0x10,
          EaseElasticOut: 0x11,
          EaseElasticInOut: 0x12,
          EaseQuadraticActionIn: 0x13,
          EaseQuadraticActionOut: 0x14,
          EaseQuadraticActionInOut: 0x15,
          EaseQuarticActionIn: 0x16,
          EaseQuarticActionOut: 0x17,
          EaseQuarticActionInOut: 0x18,
          EaseExponentialIn: 0x19,
          EaseExponentialOut: 0x1a,
          EaseExponentialInOut: 0x1b,
          EaseBackIn: 0x1c,
          EaseBackOut: 0x1d,
          EaseBackInOut: 0x1e,
          EaseBounceIn: 0x1f,
          EaseBounceOut: 0x20,
          EaseBounceInOut: 0x21
        };
        var q = L("AnimParticleSystemUtils");
        var f = cc.Enum(v);
        var g = [undefined, {
          'proto': cc.easeIn,
          'needParam': true
        }, {
          'proto': cc.easeOut,
          'needParam': true
        }, {
          'proto': cc.easeInOut,
          'needParam': true
        }, {
          'proto': cc.easeSineIn
        }, {
          'proto': cc.easeSineOut
        }, {
          'proto': cc.easeSineInOut
        }, {
          'proto': cc.easeCubicActionIn
        }, {
          'proto': cc.easeCubicActionOut
        }, {
          'proto': cc.easeCubicActionInOut
        }, {
          'proto': cc.easeQuinticActionIn
        }, {
          'proto': cc.easeQuinticActionOut
        }, {
          'proto': cc.easeQuinticActionInOut
        }, {
          'proto': cc.easeCircleActionIn
        }, {
          'proto': cc.easeCircleActionOut
        }, {
          'proto': cc.easeCircleActionInOut
        }, {
          'proto': cc.easeElasticIn,
          'needParam': true
        }, {
          'proto': cc.easeElasticOut,
          'needParam': true
        }, {
          'proto': cc.easeElasticInOut,
          'needParam': true
        }, {
          'proto': cc.easeQuadraticActionIn
        }, {
          'proto': cc.easeQuadraticActionOut
        }, {
          'proto': cc.easeQuadraticActionInOut
        }, {
          'proto': cc.easeQuarticActionIn
        }, {
          'proto': cc.easeQuarticActionOut
        }, {
          'proto': cc.easeQuarticActionInOut
        }, {
          'proto': cc.easeExponentialIn
        }, {
          'proto': cc.easeExponentialOut
        }, {
          'proto': cc.easeExponentialInOut
        }, {
          'proto': cc.easeBackIn
        }, {
          'proto': cc.easeBackOut
        }, {
          'proto': cc.easeBackInOut
        }, {
          'proto': cc.easeBounceIn
        }, {
          'proto': cc.easeBounceOut
        }, {
          'proto': cc.easeBounceInOut
        }];
        var Z = cc.Enum(G);
        var b = false;
        var H = cc.Class({
          'extends': cc.Component,
          'properties': {
            'particlePrefab': {
              'type': cc.Prefab,
              'tooltip': false,
              'default': undefined
            },
            'duration': {
              'type': cc.Float,
              'tooltip': false,
              'default': -0x1
            },
            'emissionRate': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x14,
              'min': 0.1
            },
            'life': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x1,
              'min': 0.1
            },
            'lifeVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'particleCount': {
              'type': cc.Integer,
              'tooltip': false,
              'default': 0xa,
              'min': 0x1
            },
            'particleMovementEasing': {
              'type': Z,
              'tooltip': false,
              'default': Z.None
            },
            'particleMovementParam': {
              'visible': function () {
                var I;
                return true === (null == (I = g[this.particleMovementEasing]) ? undefined : I.needParam);
              },
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0,
              'min': 0x0
            },
            'startColor': {
              'tooltip': false,
              'default': cc.Color.WHITE
            },
            'startColorVar': {
              'tooltip': false,
              'default': cc.Color.BLACK
            },
            'endColor': {
              'tooltip': false,
              'default': cc.Color.WHITE
            },
            'endColorVar': {
              'tooltip': false,
              'default': cc.Color.BLACK
            },
            'colorDelayRatio': {
              'visible': function () {
                return !this.startColor.equals(this.endColor) || !this.startColorVar.equals(this.endColorVar);
              },
              'type': cc.Float,
              'tooltip': false,
              'range': [0x0, 0x1, 0.01],
              'default': 0x0
            },
            'colorEasing': {
              'visible': function () {
                return !this.startColor.equals(this.endColor) || !this.startColorVar.equals(this.endColorVar);
              },
              'type': Z,
              'tooltip': false,
              'default': Z.None
            },
            'colorEasingParam': {
              'visible': function () {
                var I;
                return true === (null == (I = g[this.colorEasing]) ? undefined : I.needParam);
              },
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0,
              'min': 0x0
            },
            'startAlpha': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0xff,
              'min': 0x0
            },
            'startAlphaVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'endAlpha': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0xff,
              'min': 0x0
            },
            'endAlphaVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'alphaDelayRatio': {
              'visible': function () {
                return this.startAlpha !== this.endAlpha || this.startAlphaVar !== this.endAlphaVar;
              },
              'type': cc.Float,
              'tooltip': false,
              'range': [0x0, 0x1, 0.01],
              'default': 0x0
            },
            'alphaEasing': {
              'visible': function () {
                return this.startAlpha !== this.endAlpha || this.startAlphaVar !== this.endAlphaVar;
              },
              'type': Z,
              'tooltip': false,
              'default': Z.None
            },
            'alphaEasingParam': {
              'visible': function () {
                var I;
                return true === (null == (I = g[this.alphaEasing]) ? undefined : I.needParam);
              },
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0,
              'min': 0x0
            },
            'speed': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'speedVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'angle': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x5a
            },
            'angleVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x14
            },
            'startScale': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x1
            },
            'startScaleVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'endScale': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x1
            },
            'endScaleVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'endScaleIsFactor': {
              'visible': function () {
                return this.startScale !== this.endScale || this.startScaleVar !== this.endScaleVar;
              },
              'default': false
            },
            'scaleDelayRatio': {
              'visible': function () {
                return this.startScale !== this.endScale || this.startScaleVar !== this.endScaleVar;
              },
              'type': cc.Float,
              'tooltip': false,
              'range': [0x0, 0x1, 0.01],
              'default': 0x0
            },
            'scaleEasing': {
              'visible': function () {
                return this.startScale !== this.endScale || this.startScaleVar !== this.endScaleVar;
              },
              'type': Z,
              'tooltip': false,
              'default': Z.None
            },
            'scaleEasingParam': {
              'visible': function () {
                var I;
                return true === (null == (I = g[this.scaleEasing]) ? undefined : I.needParam);
              },
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0,
              'min': 0x0
            },
            'startSpin': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'startSpinVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'endSpin': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'endSpinVar': {
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0
            },
            'spinDelayRatio': {
              'visible': function () {
                return this.startSpin !== this.endSpin || this.startSpinVar !== this.endSpinVar;
              },
              'type': cc.Float,
              'tooltip': false,
              'range': [0x0, 0x1, 0.01],
              'default': 0x0
            },
            'spinEasing': {
              'visible': function () {
                return this.startSpin !== this.endSpin || this.startSpinVar !== this.endSpinVar;
              },
              'type': Z,
              'tooltip': false,
              'default': Z.None
            },
            'spinEasingParam': {
              'visible': function () {
                var I;
                return true === (null == (I = g[this.spinEasing]) ? undefined : I.needParam);
              },
              'type': cc.Float,
              'tooltip': false,
              'default': 0x0,
              'min': 0x0
            },
            'sourcePos': {
              'tooltip': false,
              'default': cc.v2(0x0, 0x0)
            },
            'sourcePosVar': {
              'tooltip': false,
              'default': cc.v2(0x0, 0x0)
            },
            'emitterMode': {
              'tooltip': false,
              'default': f.LINEAR,
              'type': f
            },
            'gravityVec': {
              'visible': function () {
                return this.emitterMode === f.GRAVITY;
              },
              'tooltip': false,
              'default': cc.v2(0x0, 0x0)
            },
            'gravityVecVar': {
              'visible': function () {
                return this.emitterMode === f.GRAVITY;
              },
              'tooltip': false,
              'default': cc.v2(0x0, 0x0)
            },
            'nodePool': {
              'visible': false,
              'get': function () {
                if (!this.M) {
                  this.M = new cc.NodePool("AnimParticleSystemPoolHandler");
                }
                return this.M;
              }
            },
            'A': []
          },
          'resetSystem': function (I) {
            if (undefined === I) {
              I = true;
            }
            if (I) {
              this.stopSystem(true);
            }
            var K = 0x1 / this.emissionRate;
            this.unschedule(this.I);
            var E = this.duration;
            if (0x0 !== E) {
              this.schedule(this.I, K);
              if (E > 0x0) {
                this.unschedule(this.stopSystem);
                this.scheduleOnce(this.stopSystem, E);
              }
            }
          },
          'stopSystem': function (I) {
            var K = this;
            if (undefined === I) {
              I = false;
            }
            this.unschedule(this.I);
            this.unschedule(this.stopSystem);
            if (true === I) {
              this.A.forEach(function (E) {
                E.stopAllActions();
                K.nodePool.put(E);
              });
              this.A = [];
            }
          },
          'I': function () {
            if (!(this.A.length >= this.particleCount)) {
              var I = this.nodePool.get();
              if (!I) {
                I = cc.instantiate(this.particlePrefab);
              }
              this.O(I);
              I.getComponent(cc.Animation).play();
            }
          },
          'getLife': function (I, K) {
            0x0;
            return q.getRandomFromRange(I, K);
          },
          'getSpeed': function (I, K) {
            0x0;
            return q.getRandomFromRange(I, K);
          },
          'getEmissionAngle': function (I, K) {
            0x0;
            return q.getRandomFromRange(I, K);
          },
          'getSourceStartScale': function (I, K) {
            0x0;
            return q.getRandomFromRange(I, K);
          },
          'getSourceStartSpinAngle': function (I, K) {
            0x0;
            return q.getRandomFromRange(I, K);
          },
          'getSourceStartAlpha': function (I, K) {
            0x0;
            return q.getRandomFromRange(I, K);
          },
          'getSourceStartColor': function (I, K) {
            return K.equals(cc.Color.BLACK) ? I : new cc.Color((0x0, q.getRandomFromRange)(I.getR(), K.getR()), (0x0, q.getRandomFromRange)(I.getG(), K.getG()), (0x0, q.getRandomFromRange)(I.getB(), K.getB()));
          },
          'getSourceStartPosition': function (I, K) {
            0x0;
            0x0;
            return cc.v2(q.getRandomFromRange(I.x, K.x), q.getRandomFromRange(I.y, K.y));
          },
          'getSourceEndScale': function (I, K, E, Q) {
            0x0;
            return (Q ? I : 0x1) * q.getRandomFromRange(K, E);
          },
          'getSourceEndSpinAngle': function (I, K, E) {
            0x0;
            return q.getRandomFromRange(K, E);
          },
          'getSourceEndAlpha': function (I, K, E) {
            0x0;
            return q.getRandomFromRange(K, E);
          },
          'getSourceEndColor': function (I, K, E) {
            return E.equals(cc.Color.BLACK) ? K : new cc.Color((0x0, q.getRandomFromRange)(K.getR(), E.getR()), (0x0, q.getRandomFromRange)(K.getG(), E.getG()), (0x0, q.getRandomFromRange)(K.getB(), E.getB()));
          },
          'getSourceEndPositionLinear': function (I, K, E, Q) {
            var X = Math.cos(E / 0xb4 * Math.PI) * K * Q;
            var A = Math.sin(E / 0xb4 * Math.PI) * K * Q;
            return cc.v2(I.x + X, I.y + A);
          },
          'getSourceEndPositionGravity': function (K, E, Q, X, V, W) {
            var J = Math.cos(Q / 0xb4 * Math.PI) * E * X;
            var O = Math.sin(Q / 0xb4 * Math.PI) * E * X;
            0x0;
            var F = q.getRandomFromRange(V.x, W.x);
            0x0;
            var D = q.getRandomFromRange(V.y, W.y);
            var U = K.x + J / 0x3;
            var R = K.y + O / 0x3;
            var x = K.x + J / 0x3 * 0x2;
            var j = K.y + O / 0x3 * 0x2;
            var P = K.x + J;
            var B = K.y + O;
            var k = 0x3c * X / 0x3;
            0x0;
            var N0 = q.getAccelerationDistance(F, k);
            0x0;
            var N1 = q.getAccelerationDistance(D, k);
            var N2 = 0x2 * k;
            0x0;
            var N3 = q.getAccelerationDistance(F, N2);
            0x0;
            var N4 = q.getAccelerationDistance(D, N2);
            var N5 = 0x3 * k;
            0x0;
            var N6 = q.getAccelerationDistance(F, N5);
            0x0;
            var N7 = q.getAccelerationDistance(D, N5);
            var N8 = P > 0x0 ? 0x1 : -0x1;
            return [cc.v2(U - N0 * N8, R - N1), cc.v2(x - N3 * N8, j - N4), cc.v2(P - N6 * N8, B - N7)];
          },
          'getMoveAction': function (I, K, E, Q, X) {
            var A = cc.moveTo(E, K);
            return Q ? A.easing(Q(X)) : A;
          },
          'getBezierAction': function (I, K, E, Q, X) {
            var A = cc.bezierTo(E, K);
            return Q ? A.easing(Q(X)) : A;
          },
          'getScaleAction': function (I, K, E, Q, X, A) {
            if (!X) {
              return 0x0 === Q ? cc.scaleTo(E, K) : cc.sequence(cc.delayTime(Q * E), cc.scaleTo(E - Q * E, K));
            }
            var V = X(A);
            return 0x0 === Q ? cc.scaleTo(E, K).easing(V) : cc.sequence(cc.delayTime(Q * E), cc.scaleTo(E - Q * E, K).easing(V));
          },
          'getRotateAction': function (I, K, E, Q, X, A) {
            if (!X) {
              return 0x0 === Q ? cc.rotateTo(E, -K) : cc.sequence(cc.delayTime(Q * E), cc.rotateTo(E - Q * E, -K));
            }
            var V = X(A);
            return 0x0 === Q ? cc.rotateTo(E, -K).easing(V) : cc.sequence(cc.delayTime(Q * E), cc.rotateTo(E - Q * E, -K).easing(V));
          },
          'getFadeAction': function (I, K, E, Q, X, A) {
            if (!X) {
              return 0x0 === Q ? cc.fadeTo(E, K) : cc.sequence(cc.delayTime(Q * E), cc.fadeTo(E - Q * E, K));
            }
            var V = X(A);
            return 0x0 === Q ? cc.fadeTo(E, K).easing(V) : cc.sequence(cc.delayTime(Q * E), cc.fadeTo(E - Q * E, K).easing(V));
          },
          'getTintAction': function (I, K, E, Q, X, A) {
            if (!X) {
              return 0x0 === Q ? cc.tintTo(E, K) : cc.sequence(cc.delayTime(Q * E), cc.tintTo(E - Q * E, K));
            }
            var V = X(A);
            return 0x0 === Q ? cc.tintTo(E, K).easing(V) : cc.sequence(cc.delayTime(Q * E), cc.tintTo(E - Q * E, K).easing(V));
          },
          'O': function (K) {
            var E = this;
            var Q = this.getLife(this.life, this.lifeVar);
            var X = this.getSourceStartPosition(this.sourcePos, this.sourcePosVar);
            K.setPosition(X);
            var V = this.getSpeed(this.speed, this.speedVar);
            var W = this.getEmissionAngle(this.angle, this.angleVar);
            var J = [];
            if (this.emitterMode === f.LINEAR) {
              var O;
              var F = this.getSourceEndPositionLinear(X, V, W, Q);
              J.push(this.getMoveAction(K.position, F, Q, null == (O = g[this.particleMovementEasing]) ? undefined : O.proto, this.particleMovementEasingParam));
            } else if (this.emitterMode === f.GRAVITY) {
              var D;
              var U = this.getSourceEndPositionGravity(X, V, W, Q, this.gravityVec, this.gravityVecVar);
              J.push(this.getBezierAction(K.position, U, Q, null == (D = g[this.particleMovementEasing]) ? undefined : D.proto, this.particleMovementEasingParam));
            }
            var R;
            var x = K.scale = this.getSourceStartScale(this.startScale, this.startScaleVar);
            var j = this.getSourceEndScale(x, this.endScale, this.endScaleVar, this.endScaleIsFactor);
            if (x !== j && this.scaleDelayRatio < 0x1) {
              J.push(this.getScaleAction(x, j, Q, this.scaleDelayRatio, null == (R = g[this.scaleEasing]) ? undefined : R.proto, this.scaleEasingParam));
            }
            var P;
            var B = K.angle = this.getSourceStartSpinAngle(-this.startSpin, -this.startSpinVar);
            var k = this.getSourceEndSpinAngle(B, -this.endSpin, -this.endSpinVar);
            if (B !== k && this.spinDelayRatio < 0x1) {
              J.push(this.getRotateAction(B, k, Q, this.spinDelayRatio, null == (P = g[this.spinEasing]) ? undefined : P.proto, this.spinEasingParam));
            }
            var N0;
            var N1 = K.opacity = this.getSourceStartAlpha(this.startAlpha, this.startAlphaVar);
            var N2 = this.getSourceEndAlpha(N1, this.endAlpha, this.endAlphaVar);
            if (N1 !== N2 && this.alphaDelayRatio < 0x1) {
              J.push(this.getFadeAction(N1, N2, Q, this.alphaDelayRatio, null == (N0 = g[this.alphaEasing]) ? undefined : N0.proto, this.alphaEasingParam));
            }
            if (!(this.startColor.equals(cc.Color.WHITE) && this.startColorVar.equals(cc.Color.BLACK) && this.endColor.equals(cc.Color.WHITE) && this.endColorVar.equals(cc.Color.BLACK))) {
              var N3;
              var N4 = K.color = this.getSourceStartColor(this.startColor, this.startColorVar);
              var N5 = this.getSourceEndColor(N4, this.endColor, this.endColorVar);
              if (!N4.equals(N5) && this.colorDelayRatio < 0x1) {
                J.push(this.getTintAction(N4, N5, Q, this.colorDelayRatio, null == (N3 = g[this.colorEasing]) ? undefined : N3.proto, this.colorEasingParam));
              }
            }
            var N6;
            var N7 = J.length;
            if (N7 > 0x1) {
              N6 = cc.sequence(cc.spawn(J), cc.callFunc(function () {
                E.H(K);
              }, this));
            } else if (0x1 === N7) {
              N6 = cc.sequence(J[0x0], cc.callFunc(function () {
                E.H(K);
              }, this));
            }
            this.A.push(K);
            this.node.addChild(K);
            K.runAction(N6);
          },
          'B': function (I, K) {
            if (!b) {
              b = true;
            }
            return 0.5 * I * K * K;
          },
          'H': function (I) {
            var K = this.A;
            var E = K.indexOf(I);
            if (E > -0x1) {
              K.splice(E, 0x1);
            }
            this.nodePool.put(I);
          }
        });
        l["default"] = H;
        Y.exports = l["default"];
        cc._RF.pop();
      }
    }, Cb],
    'Appearance': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "dec3c3clmFKpaYEDuWXqsW2", "Appearance")) {
        cc._RF.pop();
      }
    }, {}],
    'AudioAdapterConstant': [function (Y, l, r) {
      'use strict';

      var v = {
        value: true
      };
      var G = {
        LOADED: "load",
        LOAD_ERROR: "loaderror",
        PLAY: "play",
        STOP: "stop",
        END: "end",
        PAUSE: "pause",
        RESUME: "resume",
        FADED: "fade",
        SEEK: "seek",
        PLAY_ERROR: "playerror",
        RATE: "rate",
        VOLUME: "volume",
        MUTE: "mute"
      };
      var q = {
        UNLOADED: "unloaded",
        LODING: "loading",
        LOADED: "loaded"
      };
      if (!cc._RF.push(l, "a20c0AJc1VFmKnv1lBJKugX", "AudioAdapterConstant")) {
        Object.defineProperty(r, "__esModule", v);
        r.MAX_INSTANCE_NUMBER = r.MAX_STACK_SOUND = r.DEFAULT_SPRITE = r.AUDIO_ADAPTER_STATE = r.AUDIO_ADAPTER_EVENT = undefined;
        r.AUDIO_ADAPTER_EVENT = G;
        r.AUDIO_ADAPTER_STATE = q;
        r.DEFAULT_SPRITE = "__default";
        r.MAX_STACK_SOUND = 0x32;
        r.MAX_INSTANCE_NUMBER = 0x18;
        cc._RF.pop();
      }
    }, {}],
    'AudioAdapter': [function (L, Y, v) {
      'use strict';

      if (!cc._RF.push(Y, "5c3d2SrYLxJYqXl2p30apID", "AudioAdapter")) {
        var G = {
          value: true
        };
        Object.defineProperty(v, "__esModule", G);
        var q;
        var f;
        var g = L("ResRC");
        var Z = L("AudioAdapterConstant");
        var b = L("AdapterEventEmitter");
        var H = L("AudioFactory");
        q = 0x0;
        var I = function () {
          return ++q;
        };
        (function (X) {
          X.G = "_audio";
        })(f || (f = {}));
        var K = {
          load: g.load,
          unload: g.release
        };
        var Q = function () {
          function X(A) {
            var V = this;
            this.N = false;
            this.T = Object.create(null);
            this.P = 0x0;
            this.L = Z.AUDIO_ADAPTER_STATE.UNLOADED;
            this.R = false;
            this.maxInstance = Z.MAX_INSTANCE_NUMBER;
            this.k = A.src;
            this.U = "number" == typeof A.volume ? A.volume : 0x1;
            this.j = "number" == typeof A.rate ? A.rate : 0x1;
            this.D = !!A.mute;
            this.W = !!A.loop;
            this.F = A.sprite;
            this.V = A.loader || K;
            this.factory = A.soundFactory || new H["default"]();
            var W = A.eventEmitter || new b["default"]();
            this.on = function (J, w, O, F) {
              if (!(null != O && O in V.T == 0x0)) {
                W.on(J, w, O, F);
              }
            };
            this.off = W.off.bind(W);
            this.once = function (J, w, O) {
              if (!(null != O && O in V.T == 0x0)) {
                W.once(J, w, O);
              }
            };
            this.J = W.emit.bind(W);
            if (A.preload) {
              setTimeout(this.load.bind(this), 0x0);
            }
          }
          X.prototype.load = function () {
            if (this.L !== Z.AUDIO_ADAPTER_STATE.LOADED && this.L !== Z.AUDIO_ADAPTER_STATE.LODING) {
              this.V.load(this.k, this.q.bind(this));
              this.L = Z.AUDIO_ADAPTER_STATE.LODING;
            }
          };
          X.prototype.q = function (A, V) {
            if (A) {
              this.J(Z.AUDIO_ADAPTER_EVENT.LOAD_ERROR, undefined, A.message || A);
              this.R = false;
              this.L = Z.AUDIO_ADAPTER_STATE.UNLOADED;
            } else {
              this.L = Z.AUDIO_ADAPTER_STATE.LOADED;
              if (V) {
                this.K = V[f.G];
              }
              this.J(Z.AUDIO_ADAPTER_EVENT.LOADED);
              if (this.R) {
                this.unload();
              }
            }
          };
          X.prototype.unload = function () {
            if (this.L !== Z.AUDIO_ADAPTER_STATE.UNLOADED) {
              if (this.L !== Z.AUDIO_ADAPTER_STATE.LODING) {
                if (0x0 !== this.P) {
                  this.stop();
                }
                this.K = undefined;
                this.V.unload(this.k);
                this.R = false;
                this.L = Z.AUDIO_ADAPTER_STATE.UNLOADED;
              } else {
                this.R = true;
              }
            }
          };
          X.prototype.play = function (A) {
            var V = this;
            if (this.L !== Z.AUDIO_ADAPTER_STATE.LOADED) {
              throw Error("Audio Adapter:: play : audio not yet loaded!");
            }
            var W = "number" == typeof A;
            var J = !W && "string" == typeof A;
            if (this.N || W) {
              this.resume(A);
              return W ? A : -0x1;
            }
            var w = this.T;
            if (this.P >= this.maxInstance) {
              var O = undefined;
              for (var F in w) {
                O = F;
                break;
              }
              var D = this.T[O];
              D.stop();
              delete this.T[O];
              this.P--;
              this.off(O);
              this.addAudioToPool(D);
            }
            var U = this.getAudioFromPool();
            var S = {
              loop: this.W,
              muted: this.D,
              volume: this.U,
              rate: this.j
            };
            U.reset(S);
            var R = J && this.F ? this.F[A] : undefined;
            var x = 0x0;
            var j = 0x0;
            if (R) {
              x = R.from;
              j = R.to - x;
            }
            var P = ++q;
            U.play(x, j);
            U.once(shell.WebAudioEvent.ENDED, function () {
              if (!V.T[P]) {
                throw Error("AudioAdapter :: play : audio doesn't exist on this adapter anymore");
              }
              delete V.T[P];
              V.P--;
              V.J(Z.AUDIO_ADAPTER_EVENT.END, P, undefined, true);
              V.addAudioToPool(U);
            });
            w[P] = U;
            this.P++;
            this.J(Z.AUDIO_ADAPTER_EVENT.PLAY, P);
            return P;
          };
          X.prototype.stop = function (A) {
            if (this.L !== Z.AUDIO_ADAPTER_STATE.LOADED) {
              throw Error("Audio Adapter :: stop : Attemp to stop not loaded audio!");
            }
            if (0x0 !== this.P) {
              if ("number" == typeof A) {
                if (W = this.T[A]) {
                  delete this.T[A];
                  this.P--;
                  W.stop();
                  this.J(Z.AUDIO_ADAPTER_EVENT.STOP, A, undefined, true);
                  this.addAudioToPool(W);
                }
              } else {
                for (var V in this.T) {
                  var W;
                  (W = this.T[V]).stop();
                  this.J(Z.AUDIO_ADAPTER_EVENT.STOP, +V, undefined, true);
                  this.addAudioToPool(W);
                }
                this.T = Object.create(null);
                this.P = 0x0;
              }
            }
          };
          X.prototype.pause = function (A) {
            if ("number" == typeof A) {
              if ((W = this.T[A]) && W.playing) {
                W.pause();
                this.J(Z.AUDIO_ADAPTER_EVENT.PAUSE, A);
              }
            } else {
              this.N = true;
              if (0x0 === this.P) {
                return;
              }
              for (var V in this.T) {
                var W;
                if ((W = this.T[V]).playing) {
                  W.pause();
                  this.J(Z.AUDIO_ADAPTER_EVENT.PAUSE, +V);
                }
              }
            }
          };
          X.prototype.resume = function (A) {
            if ("number" == typeof A) {
              if ((W = this.T[A]) && W.paused) {
                W.resume();
                this.J(Z.AUDIO_ADAPTER_EVENT.RESUME, A);
              }
            } else {
              this.N = false;
              if (0x0 === this.P) {
                return;
              }
              for (var V in this.T) {
                var W;
                if ((W = this.T[V]).paused) {
                  W.resume();
                  this.J(Z.AUDIO_ADAPTER_EVENT.RESUME, +V);
                }
              }
            }
          };
          X.prototype.setMute = function (A, V) {
            if ("number" == typeof V) {
              if ((J = this.T[V]) && J.muted !== A) {
                J.muted = A;
                this.J(Z.AUDIO_ADAPTER_EVENT.MUTE, V);
              }
            } else {
              this.D = A;
              if (0x0 === this.P) {
                return;
              }
              for (var W in this.T) {
                var J;
                if ((J = this.T[W]).muted !== A) {
                  J.muted = A;
                  this.J(Z.AUDIO_ADAPTER_EVENT.MUTE, +W);
                }
              }
            }
          };
          X.prototype.isMute = function (A) {
            if ("number" == typeof A) {
              var V = this.T[A];
              return !!V && V.muted;
            }
            return this.D;
          };
          X.prototype.setVolume = function (A, V) {
            if ("number" == typeof V) {
              if ((J = this.T[V]) && J.volume !== A) {
                J.volume = A;
                this.J(Z.AUDIO_ADAPTER_EVENT.VOLUME, V);
              }
            } else {
              this.U = A;
              if (0x0 === this.P) {
                return;
              }
              for (var W in this.T) {
                var J;
                if ((J = this.T[W]).volume !== A) {
                  J.volume = A;
                  this.J(Z.AUDIO_ADAPTER_EVENT.VOLUME, +W);
                }
              }
            }
          };
          X.prototype.getVolume = function (A) {
            if ("number" == typeof A) {
              var V = this.T[A];
              return V ? V.volume : 0x0;
            }
            return this.U;
          };
          X.prototype.getInstantVolume = function (A) {
            var V = this.T[A];
            return V ? V.instantVolume : 0x0;
          };
          X.prototype.fade = function (A, V, W, J) {
            var w = this;
            if (this.L !== Z.AUDIO_ADAPTER_STATE.LOADED) {
              throw Error("Audio Adpater :: fade : Audio not loaded!");
            }
            if (0x0 !== this.P) {
              if ("number" == typeof J) {
                var O = this.T[J];
                if (O) {
                  O.off(shell.WebAudioEvent.FADED);
                  O.once(shell.WebAudioEvent.FADED, function () {
                    w.J(Z.AUDIO_ADAPTER_EVENT.FADED, J);
                  });
                  O.fade(A, V, W);
                }
              } else {
                this.U = V;
                var F = function (S) {
                  var R = D.T[S];
                  R.off(shell.WebAudioEvent.FADED);
                  R.once(shell.WebAudioEvent.FADED, function () {
                    w.J(Z.AUDIO_ADAPTER_EVENT.FADED, +S);
                  });
                  R.fade(A, V, W);
                };
                var D = this;
                for (var U in this.T) F(U);
              }
            }
          };
          X.prototype.setLoop = function (A, V) {
            if ("number" == typeof V) {
              if (J = this.T[V]) {
                J.loop = A;
              }
            } else {
              this.W = A;
              if (0x0 === this.P) {
                return;
              }
              for (var W in this.T) {
                var J;
                (J = this.T[W]).loop = A;
              }
            }
          };
          X.prototype.isLoop = function (A) {
            if ("number" == typeof A) {
              var V = this.T[A];
              return !!V && V.loop;
            }
            return this.W;
          };
          X.prototype.setRate = function (A, V) {
            if ("number" == typeof V) {
              if (J = this.T[V]) {
                J.rate = A;
              }
            } else {
              this.j = A;
              if (0x0 === this.P) {
                return;
              }
              for (var W in this.T) {
                var J;
                (J = this.T[W]).rate = A;
              }
            }
          };
          X.prototype.getRate = function (A) {
            if ("number" == typeof A) {
              var V = this.T[A];
              if (V) {
                return V.rate;
              }
            }
            return this.j;
          };
          X.prototype.isPlaying = function (A) {
            if ("number" == typeof A) {
              var V = this.T[A];
              return undefined !== V && V.playing;
            }
            return this.P > 0x0 && false === this.N;
          };
          X.prototype.getDuration = function (A) {
            if ("number" == typeof A) {
              var V = this.T[A];
              if (V) {
                return V.duration;
              }
            } else if (this.K) {
              return this.K.duration;
            }
            return 0x0;
          };
          X.prototype.getState = function () {
            return this.L;
          };
          X.prototype.getCurrentTime = function (A) {
            var V = this.T[A];
            return V ? V.currentTime : 0x0;
          };
          X.prototype.seek = function (A, V) {
            var W = this;
            if (this.L !== Z.AUDIO_ADAPTER_STATE.LOADED) {
              throw Error("Audio Adapter:: seek : audio not yet loaded!");
            }
            if (0x0 !== this.P) {
              if ("number" == typeof V) {
                var J = this.T[V];
                if (J) {
                  J.once(shell.WebAudioEvent.SEEK, function () {
                    W.J(Z.AUDIO_ADAPTER_EVENT.SEEK, V);
                  });
                  J.seek(A);
                  J.off(shell.WebAudioEvent.SEEK);
                }
              } else {
                if (0x0 === this.P) {
                  return;
                }
                this.N = false;
                var w = __assign({}, this.T);
                var O = function (D) {
                  var U = w[D];
                  U.once(shell.WebAudioEvent.SEEK, function () {
                    W.J(Z.AUDIO_ADAPTER_EVENT.SEEK, +D);
                  });
                  U.seek(A);
                  U.off(shell.WebAudioEvent.SEEK);
                };
                for (var F in w) O(F);
              }
            }
          };
          X.prototype.getAudioFromPool = function () {
            return this.factory.get() || new shell.WebAudio(this.K);
          };
          X.prototype.addAudioToPool = function (A) {
            A.reset();
            A.removeAll();
            if (!this.factory.put(A)) {
              A.destroy();
            }
          };
          X.prototype.stereo = function () {};
          X.getNewId = I;
          return X;
        }();
        v["default"] = Q;
        cc._RF.pop();
      }
    }, CH],
    'AudioAssetConfig': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "459f6wrPeZPgrrnRpcbVwxL", "AudioAssetConfig")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.audioAssetConfig = undefined;
        Y.audioAssetConfig = [];
        cc._RF.pop();
      }
    }, {}],
    'AudioFactory': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "bf4b5cdVNdI7rQp2MPM3CWN", "AudioFactory")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("AudioAdapterConstant");
        var v = function () {
          function G() {
            this.maxStackSound = r.MAX_STACK_SOUND;
            this.Y = [];
          }
          G.prototype.put = function (q) {
            return this.Y.length < this.maxStackSound && (this.Y.push(q), true);
          };
          G.prototype.get = function () {
            return this.Y.pop();
          };
          G.prototype.size = function () {
            return this.Y.length;
          };
          G.prototype.destroy = function () {
            this.Y.forEach(function (q) {
              q.destroy();
            });
            this.Y = [];
          };
          return G;
        }();
        Y["default"] = v;
        cc._RF.pop();
      }
    }, CI],
    'AudioManager': [function (L, Y, G) {
      'use strict';

      if (!cc._RF.push(Y, "75629TEJFxDq6gs0ecfGPkG", "AudioManager")) {
        var q = {
          value: true
        };
        Object.defineProperty(G, "__esModule", q);
        G.updatePlayRate = G.generalGameAudio = G.stopSfx = G.fadeOutAudioIfPlaying = G.stopAudioIfPlaying = G.playAudioIfNotPlaying = G.audioId = G.crossFadeAudio = G.toggleEffectMuted = G.toggleMusicMuted = G.GeneralAudioPool = G.releaseAudio = G.loadAudio = G.toggleAudioGameStarted = G.unregisterAudio = G.registerAudio = G.init = G.AUDIO_TYPE = undefined;
        var Z = L("GameAudioAdapter");
        var H = L("SettingMenuHelper");
        var K = L("RtConfig");
        var E = L("NoSoundAdapter");
        var Q = L("GeneralAudioConstant");
        var X = Object.create(null);
        G.GeneralAudioPool = X;
        var V = Object.create(null);
        G.audioId = V;
        var W = {
          SOUND: 0x0,
          MUSIC: 0x1
        };
        var J = Object.create(null);
        G.AUDIO_TYPE = W;
        var F = false;
        var D = false;
        var U = 0x1;
        var R = [];
        X.bgm_mg = undefined;
        X.bgm_mg_b = undefined;
        X.bgm_bigwin_coins = undefined;
        X.bgm_bigwin_end = undefined;
        X.bgm_bigwin_firework = undefined;
        X.bgm_bigwin_main = undefined;
        var j;
        var P = ["bgm_mg", "bgm_mg_b"];
        G.generalGameAudio = j;
        G.init = function () {
          cc.game.on(cc.game.EVENT_HIDE, N1);
          cc.game.on(cc.game.EVENT_SHOW, N2);
          Object.keys(X).forEach(function (N7) {
            var N8 = -0x1 !== P.indexOf(N7) ? 0x1 : 0x0;
            X[N7] = N0(N7, N8);
          });
          X.bgm_mg.setLoop(true);
          X.bgm_mg_b.setLoop(true);
          G.generalGameAudio = j = k("GeneralAudio", false, Q.GENERAL_AUDIO);
          N4(true);
          N5(true);
        };
        G.playAudioIfNotPlaying = function (N6, N7, N8, N9) {
          if (undefined === N7) {
            N7 = false;
          }
          if (undefined === N8) {
            N8 = 0x0;
          }
          if (undefined === N9) {
            N9 = false;
          }
          if (Q.GENERAL_AUDIO.hasOwnProperty(N6)) {
            if (!(j.isPlaying(V[N6]) && undefined !== V[N6])) {
              V[N6] = j.play(N6);
              if (N7) {
                j.fade(0x0, 0x1, N8, V[N6]);
              }
              if (N9) {
                j.setLoop(true, V[N6]);
              }
            }
          }
        };
        G.stopAudioIfPlaying = B;
        G.fadeOutAudioIfPlaying = function (N6, N7) {
          if (undefined === N7) {
            N7 = 0x0;
          }
          if (Q.GENERAL_AUDIO.hasOwnProperty(N6) && V[N6] && j.isPlaying(V[N6])) {
            var N8 = j.getInstantVolume(V[N6]);
            j.fade(N8, 0x0, N7, V[N6]);
            j.once("fade", function () {
              j.stop(V[N6]);
            }, V[N6]);
          }
        };
        G.registerAudio = function (N6, N7) {
          var N8 = N7 ? 0x1 : 0x0;
          if (F) {
            var N9 = H.settingMenuHelper.soundEnable;
            N6.setMute(N9);
          }
          if (!J[N8]) {
            J[N8] = [];
          }
          J[N8].push(N6);
          N6.setRate(U);
          return N8;
        };
        G.unregisterAudio = function (N6, N7) {
          var N8 = J[N7];
          var N9 = N8.indexOf(N6);
          if (-0x1 === N9) {
            throw Error("Audio Manager :: unRegisterAudio : audio not found");
          }
          N8.splice(N9, 0x1);
        };
        G.updatePlayRate = function (N6) {
          U = N6;
          for (var N7 in J) if (J[N7]) {
            var N8 = J[N7];
            var N9 = 0x0;
            for (var NN = N8.length; N9 < NN; N9++) {
              N8[N9].setRate(N6);
            }
          }
        };
        G.toggleAudioGameStarted = function () {
          F = true;
          N4(!H.settingMenuHelper.soundEnable);
          N5(!H.settingMenuHelper.soundEnable);
        };
        G.toggleMusicMuted = N4;
        G.toggleEffectMuted = N5;
        G.crossFadeAudio = function (N6, N7, N8) {
          if (undefined === N8) {
            N8 = 0x1;
          }
          N7.setVolume(0x0);
          N7.play();
          N7.fade(0x0, N8, 0x3e8);
          if (0x0 === N6.getVolume()) {
            N6.stop();
          } else {
            N6.fade(N6.getVolume(), 0x0, 0x3e8);
            N6.once("fade", function () {
              N6.stop();
            });
          }
        };
        G.loadAudio = function (N6, N7) {
          var N8 = function () {
            N6.off("loaderror", N9);
            if (N7) {
              N7();
            }
          };
          var N9 = function (NN, Nz) {
            N6.off("load", N8);
            if (N7) {
              N7(Nz, NN);
            }
          };
          N6.once("load", N8);
          N6.once("loaderror", N9);
          return N6.load();
        };
        G.releaseAudio = function (N6) {
          return N6.unload();
        };
        G.stopSfx = function (N6, N7, N8) {
          if (undefined === N7) {
            N7 = false;
          }
          if (undefined === N8) {
            N8 = 0x0;
          }
          B(N6.key, N7, N8);
        };
        cc._RF.pop();
      }
      function B(N6, N7, N8) {
        if (undefined === N7) {
          N7 = false;
        }
        if (undefined === N8) {
          N8 = 0x0;
        }
        if (Q.GENERAL_AUDIO.hasOwnProperty(N6) && V[N6] && j.isPlaying(V[N6])) {
          if (N7) {
            j.fade(0x1, 0x0, N8, V[N6]);
            j.once("fade", function () {
              j.stop(V[N6]);
            }, V[N6]);
          } else {
            j.stop(V[N6]);
          }
        }
      }
      function k(N6, N7, N8) {
        if (undefined === N7) {
          N7 = 0x0;
        }
        var N9 = {
          'preload': false,
          'src': "audio/" + N6,
          'mute': true,
          'sprite': N8
        };
        return '1' === K.cs_Launch.noAudio ? new E["default"](N9) : new Z["default"](N9, N7);
      }
      function N0(N6, N7) {
        if (undefined === N7) {
          N7 = 0x0;
        }
        var N8 = {
          'preload': false,
          'src': "audio/" + N6,
          'mute': true
        };
        return '1' === K.cs_Launch.noAudio ? new E["default"](N8) : new Z["default"](N8, N7);
      }
      function N1() {
        if (!D) {
          D = true;
          for (var N6 in J) if (J[N6]) {
            var N7 = J[N6];
            var N8 = 0x0;
            for (var N9 = N7.length; N8 < N9; N8++) {
              if (N7[N8].isPlaying()) {
                N7[N8].pause();
                R.push(N7[N8]);
              }
            }
          }
        }
      }
      function N2() {
        var N6;
        var N7;
        if (D) {
          D = false;
          try {
            var N8 = __values(R);
            for (var N9 = N8.next(); !N9.done; N9 = N8.next()) {
              N9.value.play();
            }
          } catch (Nz) {
            var NN = {
              error: Nz
            };
            N6 = NN;
          } finally {
            try {
              if (N9 && !N9.done && (N7 = N8["return"])) {
                N7.call(N8);
              }
            } finally {
              if (N6) {
                throw N6.error;
              }
            }
          }
          R.length = 0x0;
        }
      }
      function N4(N6) {
        if (undefined === N6) {
          N6 = false;
        }
        if (J[0x1]) {
          J[0x1].map(function (N7) {
            N7.setMute(N6);
          });
        }
      }
      function N5(N6) {
        if (undefined === N6) {
          N6 = false;
        }
        if (J[0x0]) {
          J[0x0].map(function (N7) {
            N7.setMute(N6);
          });
        }
      }
    }, CK],
    'AutoSpinHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "6a62eVFmd1Ng5ghvfVXBlUq", "AutoSpinHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.exitAutoSpin = Y.decrementAutoSpinCount = Y.resetAutoSpinCount = Y.startAutoSpin = Y.getAutoSpinCount = Y.shouldAutoSpin = undefined;
        var r = z("GameEventHandler");
        var v = -0x1;
        Y.shouldAutoSpin = function () {
          return v > 0x0;
        };
        Y.getAutoSpinCount = function () {
          return v;
        };
        Y.startAutoSpin = function (q, c, f) {
          v = q;
          c.enterAutoSpinMode(q, f);
          r.emitAutoplayStarted(function () {
            G(c);
          });
        };
        Y.resetAutoSpinCount = function () {
          v = -0x1;
        };
        Y.decrementAutoSpinCount = function (q) {
          v -= 0x1;
          q.updateAutoSpinCount(v);
        };
        Y.exitAutoSpin = function (q) {
          G(q);
          r.emitAutoplayStopped();
        };
        cc._RF.pop();
      }
      function G(q) {
        v = -0x1;
        q.exitAutoSpinMode();
      }
    }, CE],
    'AutomationDecorator': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "607a1pUyWBLsphZz1avN+BH", "AutomationDecorator")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.automationDec = undefined;
        Y.automationDec = function (r) {
          return function (v, G, q) {
            if (!q) {
              return q;
            }
            var c = q.value;
            q.value = function () {
              var f = [];
              for (var g = 0x0; g < arguments.length; g++) {
                f[g] = arguments[g];
              }
              var Z = System.get("automation");
              if (Z) {
                r.func.apply(r, __spread(f));
              }
              var b = c.apply(this, f);
              return b;
            };
            return q;
          };
        };
        cc._RF.pop();
      }
    }, {}],
    'BACKUP_DATA': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "4dc392lxVJArKflo+rU3j23", "BACKUP_DATA")) {
        var r = {
          value: true
        };
        Object.defineProperty(l, "__esModule", r);
        var v = {
          default_font: "Arial"
        };
        var G = new cc.Color(0xff, 0xc8, 0x24, 0xff);
        var q = new cc.Color(0xff, 0xff, 0xff, 0xff);
        var c = Object.freeze({
          'game': {
            'theme_color': G,
            'theme_font_family': "Arial",
            'white_color': q
          },
          'game_title': v,
          'setting': {
            'theme_color': G,
            'theme_font': "Arial",
            'slider_switch_color': {
              'false': new cc.Color(0x90, 0x90, 0x96, 0xff),
              'true': G
            },
            'slider_line_color': {
              'false': new cc.Color(0x90, 0x90, 0x96, 0x14),
              'true': G
            },
            'label_switch_color_a': {
              'false': q,
              'true': G
            },
            'label_switch_color_b': {
              'false': new cc.Color(0x90, 0x90, 0x96, 0x52),
              'true': G
            },
            'label_switch_color_c': {
              'false': new cc.Color(0xff, 0xff, 0xff, 0x1e),
              'true': G
            },
            'button_switch_color_a': {
              'false': new cc.Color(q.r, q.g, q.b, 0x4f),
              'true': G
            },
            'color_button_transition_a': {
              'normal': G,
              'pressed': new cc.Color(G.r, G.g, G.b, 0x80),
              'hover': G,
              'disabled': new cc.Color(G.r, G.g, G.b, 0x42)
            },
            'white_button_transition_a': {
              'normal': q,
              'pressed': new cc.Color(q.r, q.g, q.b, 0x80),
              'hover': q,
              'disabled': new cc.Color(q.r, q.g, q.b, 0x42)
            },
            'grey_button_transition_a': {
              'normal': new cc.Color(q.r, q.g, q.b, 0x99),
              'pressed': new cc.Color(0x85, 0x85, 0x85, 0x99),
              'hover': new cc.Color(q.r, q.g, q.b, 0x99),
              'disabled': new cc.Color(0x85, 0x85, 0x85, 0x99)
            },
            'spin_start_label': new cc.Color(0xff, 0xff, 0xff, 0xc9)
          },
          'login': {
            'theme_color': G,
            'default_font': "Arial"
          },
          'history': {
            'grey_button_transition_b': {
              'normal': q,
              'pressed': new cc.Color(0x85, 0x85, 0x85),
              'hover': q,
              'disabled': new cc.Color(0x85, 0x85, 0x85)
            },
            'white_button_transition_a': {
              'normal': q,
              'pressed': new cc.Color(0xff, 0xff, 0xff, 0x80),
              'hover': q,
              'disabled': new cc.Color(0xff, 0xff, 0xff, 0x42)
            },
            'calendar_title_select': {
              'true': G,
              'false': new cc.Color(0xff, 0xff, 0xff, 0x4d)
            },
            'calendar_selection_line': new cc.Color(0x28, 0x28, 0x34, 0xeb),
            'calendar_title_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff),
            'calendar_content_bg': new cc.Color(0x28, 0x28, 0x34, 0xeb),
            'calendar_custom_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff),
            'calendar_custom_line_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff),
            'calendar_custom_title': new cc.Color(0xff, 0xff, 0xff, 0x99),
            'calendar_custom_dot': new cc.Color(0xff, 0xff, 0xff, 0xff),
            'calendar_custom_btn': {
              'normal': G,
              'pressed': new cc.Color(0x77, 0x77, 0x77, 0xff),
              'hover': G,
              'disabled': new cc.Color(0x57, 0x57, 0x57, 0xff)
            },
            'calendar_datepicker_default_font': new cc.Color(0xff, 0xff, 0xff, 0x4d),
            'calendar_datepicker_highlight_font': G,
            'calendar_datepicker_highlight_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff),
            'calendar_datepicker_line': new cc.Color(0x28, 0x28, 0x34, 0xff),
            'theme_color': G,
            'theme_font': "Arial",
            'color_theme_opacity_a': new cc.Color(G.r, G.g, G.b, 0x99),
            'navigator_bg': new cc.Color(0x30, 0x30, 0x3c),
            'navigator_bar_bg': new cc.Color(0x28, 0x28, 0x34),
            'history_bar_item_bg': {
              'normal': new cc.Color(0x30, 0x30, 0x3c),
              'pressed': new cc.Color(0x39, 0x39, 0x4b, 0x3c),
              'hover': new cc.Color(0x30, 0x30, 0x3c),
              'disabled': new cc.Color(0x28, 0x28, 0x34)
            },
            'history_bar_item_font_bg': {
              'false': q,
              'true': G
            },
            'history_main_title': new cc.Color(0xf1, 0xba, 0x5b, 0xff),
            'history_list_item_arrow': new cc.Color(0xff, 0xff, 0xff, 0x40),
            'history_list_item_bg_odd': new cc.Color(0x28, 0x28, 0x34),
            'history_list_item_bg_even': new cc.Color(0x2d, 0x2d, 0x39),
            'history_list_item_bg_pressed': new cc.Color(0x3c, 0x3c, 0x46),
            'history_list_item_special_font': G,
            'history_list_item_value_font': new cc.Color(0xff, 0xff, 0xff, 0x99),
            'history_list_item_date_time_font': new cc.Color(0xff, 0xff, 0xff, 0x99),
            'history_list_item_line': new cc.Color(0xff, 0xff, 0xff, 0x0),
            'history_list_item_free_games_icon': G,
            'history_list_header_bg': new cc.Color(0x28, 0x28, 0x34, 0xff),
            'history_list_header_title_font': new cc.Color(0xff, 0xff, 0xff, 0x4d),
            'history_list_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff),
            'history_list_bottom_circle_loading': q,
            'history_list_middle_circle_loading': new cc.Color(0xff, 0xff, 0xff, 0x4d),
            'history_list_bottom_label_color': q,
            'history_list_middle_label_color': new cc.Color(0xff, 0xff, 0xff, 0x4d),
            'history_list_retry': G,
            'history_list_message_title': new cc.Color(0xdc, 0xdc, 0xdc, 0x99),
            'history_list_message_message': new cc.Color(0xdc, 0xdc, 0xdc, 0x4d),
            'history_list_title_date': new cc.Color(0xff, 0xff, 0xff, 0x99),
            'history_list_middle_loading_front': G,
            'history_list_middle_loading_back': new cc.Color(0.5 * G.r, 0.5 * G.g, 0.5 * G.b),
            'history_list_middle_loading_font_color': G,
            'history_list_bottom_loading_front': G,
            'history_list_bottom_loading_back': new cc.Color(0.5 * G.r, 0.5 * G.g, 0.5 * G.b),
            'history_summary_bg': new cc.Color(0x28, 0x28, 0x34, 0xff),
            'history_summary_title_font': G,
            'history_summary_record_font': new cc.Color(0xff, 0xff, 0xff, 0x99),
            'history_summary_amount_font': q,
            'history_detail_header_title_font': G,
            'history_detail_header_value_font': new cc.Color(0x78, 0x78, 0x78, 0xff),
            'history_detail_header_bg': new cc.Color(0x28, 0x28, 0x34, 0xff),
            'history_detail_down_arrow': G,
            'history_detail_line': new cc.Color(0x28, 0x28, 0x34, 0xff),
            'history_detail_payout_font': new cc.Color(0xff, 0xff, 0xff, 0x42),
            'history_detail_win_line_value_font': q,
            'history_detail_content_bg': new cc.Color(0x30, 0x30, 0x3c),
            'history_detail_no_win_combination_font': new cc.Color(0xff, 0xff, 0xff, 0xcc),
            'history_detail_title_font': q,
            'history_detail_page_arrow': G,
            'history_detail_page_arrow_bg': new cc.Color(0x0, 0x0, 0x0, 0x64),
            'history_bar_close_font': new cc.Color(0xff, 0xff, 0xff, 0xcc),
            'history_bar_bg': new cc.Color(0x30, 0x30, 0x3c, 0xff)
          },
          'alert': {
            'default_title_color': q,
            'default_message_color': q,
            'default_button_title_color': q,
            'default_button_color': G,
            'default_font': "Arial"
          },
          'free_game': {
            'theme_color': G,
            'theme_font': "Arial"
          },
          'bonus_wallet': {
            'theme_color': G,
            'theme_font': "Arial"
          },
          'setting_rules': {
            'title_color': new cc.Color(0xff, 0xff, 0xff),
            'desc_color': new cc.Color(0xcc, 0xcc, 0xcc),
            'font_style': "Arial"
          },
          'setting_payout': {
            'title_color': new cc.Color(0xff, 0xff, 0xff),
            'value_color': new cc.Color(0xff, 0xff, 0xff),
            'value_color_red': new cc.Color(0xc0, 0x26, 0x30),
            'desc_color': new cc.Color(0xcc, 0xcc, 0xcc),
            'font_style': "Arial"
          },
          'loading': {
            'front_icon_color': G,
            'back_icon_color': new cc.Color(0.5 * G.r, 0.5 * G.g, 0.5 * G.b),
            'background_color': new cc.Color(0x0, 0x0, 0x0, 0x0),
            'font_color': G,
            'font_style': "Arial"
          }
        });
        l["default"] = c;
        cc._RF.pop();
      }
    }, {}],
    'BGMHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "bdbf5PQ29hIk57h6/UXPSV2", "BGMHandler")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        Y.stopBigWinEndFirework = Y.stopBigWinEndCoin = Y.playBigWinEndFirework = Y.playBigWinEndCoin = Y.skipBigWinEnd = Y.playNormalBGMFromBigWinEnd = Y.playBigWinBGM = Y.fadeInNormalBGM = Y.fadeOutNormalBGM = Y.crossFadePlayRespinBGMtoNormal = Y.crossFadePlayNormalBGMtoRespin = Y.muteAllBGM = Y.muteNormalBGM = Y.instantPlayRespinBGM = Y.instantPlayNormalBGM = Y.BGM_STATE = undefined;
        var G;
        var q = z("AudioManager");
        var f = z("Utils");
        var g = z("GConstants");
        (function (E) {
          E[E.NONE = 0x0] = "NONE";
          E[E.MAIN_LOOP = 0x1] = "MAIN_LOOP";
          E[E.RESPIN = 0x2] = "RESPIN";
          E[E.BIG_WIN = 0x3] = "BIG_WIN";
          E[E.BIG_WIN_END = 0x4] = "BIG_WIN_END";
        })(G = Y.BGM_STATE || (Y.BGM_STATE = {}));
        var Z = 0x0;
        var b = -0x1;
        var H = void G.NONE;
        Y.instantPlayNormalBGM = function () {
          var E = I(G.MAIN_LOOP);
          E.stop();
          E.setVolume(0x1);
          Z = E.play();
          var Q = I(G.RESPIN);
          Q.stop();
          Q.setVolume(0x0);
          b = Q.play();
          G.MAIN_LOOP;
        };
        Y.instantPlayRespinBGM = function () {
          var E = I(G.MAIN_LOOP);
          E.stop();
          E.setVolume(0x0);
          Z = E.play();
          var Q = I(G.RESPIN);
          Q.stop();
          Q.setVolume(0x1);
          b = Q.play();
          G.MAIN_LOOP;
        };
        Y.muteNormalBGM = K;
        Y.muteAllBGM = function () {
          K();
        };
        Y.crossFadePlayNormalBGMtoRespin = function () {
          var E = I(G.MAIN_LOOP);
          var Q = I(G.RESPIN);
          E.fade(0x1, 0x0, g.AUDIO_RELATED_TIMING.BGM_NORMAL_TO_RESPIN);
          Q.fade(0x0, 0x1, g.AUDIO_RELATED_TIMING.BGM_NORMAL_TO_RESPIN);
          G.MAIN_LOOP;
        };
        Y.crossFadePlayRespinBGMtoNormal = function () {
          var E = I(G.MAIN_LOOP);
          var Q = I(G.RESPIN);
          var X = Q.getInstantVolume(b);
          var A = E.getInstantVolume(Z);
          E.fade(A, 0x1, g.AUDIO_RELATED_TIMING.BGM_RESPIN_TO_NORMAL);
          Q.fade(X, 0x0, g.AUDIO_RELATED_TIMING.BGM_RESPIN_TO_NORMAL);
          G.RESPIN;
        };
        Y.fadeOutNormalBGM = function (E) {
          var Q = I(G.MAIN_LOOP);
          var X = Q.getInstantVolume(Z);
          Q.fade(X, 0.5, E);
        };
        Y.fadeInNormalBGM = function (E) {
          var Q = I(G.MAIN_LOOP);
          var X = Q.getInstantVolume(Z);
          Q.fade(X, 0x1, E);
        };
        Y.playBigWinBGM = function () {
          var E = I(G.MAIN_LOOP);
          var Q = I(G.RESPIN);
          if (H) {
            H();
          }
          var X = E.getInstantVolume(Z);
          var A = Q.getInstantVolume(b);
          if (X > 0x0) {
            E.fade(0x1, 0x0, 0.2);
          }
          if (A > 0x0) {
            Q.fade(0x1, 0x0, 0.2);
          }
          var V = I(G.BIG_WIN);
          if (V.isPlaying()) {
            V.stop();
          }
          V.play();
          V.setVolume(0x1);
          G.BIG_WIN;
        };
        Y.playNormalBGMFromBigWinEnd = function () {
          var E = I(G.MAIN_LOOP);
          if (H) {
            H();
          }
          var Q = I(G.BIG_WIN);
          var X = I(G.BIG_WIN_END);
          if (Q.isPlaying()) {
            Q.stop();
          }
          if (X.isPlaying()) {
            X.stop();
          }
          X.play();
          X.setVolume(0x1);
          G.BIG_WIN_END;
          H = f.delayCallback(0x2)(function () {
            var A = E.getInstantVolume(Z);
            E.fade(A, 0x1, 0x2);
            G.MAIN_LOOP;
          });
        };
        Y.skipBigWinEnd = function () {
          var E = H;
          H = undefined;
          if (E) {
            E();
          }
          var Q = I(G.MAIN_LOOP);
          var X = I(G.BIG_WIN_END);
          H = f.delayCallback(0.5)(function () {
            var A = Q.getInstantVolume(Z);
            Q.fade(A, 0x1, 0.5);
            G.MAIN_LOOP;
          });
          X.fade(0x1, 0x0, 0x2);
          f.delayCallback(0x2)(function () {
            if (X.isPlaying()) {
              X.stop();
            }
          });
        };
        Y.playBigWinEndCoin = function () {
          var E = q.GeneralAudioPool.bgm_bigwin_coins;
          if (E.isPlaying()) {
            E.stop();
          }
          E.play();
          E.setVolume(0x1);
        };
        Y.playBigWinEndFirework = function () {
          var E = q.GeneralAudioPool.bgm_bigwin_firework;
          if (E.isPlaying()) {
            E.stop();
          }
          E.play();
          E.setVolume(0x1);
        };
        Y.stopBigWinEndCoin = function () {
          var E = q.GeneralAudioPool.bgm_bigwin_coins;
          E.fade(0x1, 0x0, 0x2);
          f.delayCallback(0x2)(function () {
            if (E.isPlaying()) {
              E.stop();
            }
          });
        };
        Y.stopBigWinEndFirework = function () {
          var E = q.GeneralAudioPool.bgm_bigwin_firework;
          E.fade(0x1, 0x0, 0x2);
          f.delayCallback(0x2)(function () {
            if (E.isPlaying()) {
              E.stop();
            }
          });
        };
        cc._RF.pop();
      }
      function I(E) {
        switch (E) {
          case G.MAIN_LOOP:
            return q.GeneralAudioPool.bgm_mg;
          case G.RESPIN:
            return q.GeneralAudioPool.bgm_mg_b;
          case G.BIG_WIN:
            return q.GeneralAudioPool.bgm_bigwin_main;
          case G.BIG_WIN_END:
            return q.GeneralAudioPool.bgm_bigwin_end;
          default:
            return;
        }
      }
      function K() {
        I(G.MAIN_LOOP).setVolume(0x0);
        I(G.RESPIN).setVolume(0x0);
      }
    }, CQ],
    'BVFrameworkEnum': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "ec7f7EEHK9MYKQtN9oOrPGU", "BVFrameworkEnum")) {
        var L = System.get("bvframework").BVFrameworkEnum;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'BVFramework': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "a9a1dZAV2tCnpP1jdguoThD", "BVFramework")) {
        var L = System.get("bvframework").getGameContext;
        z.exports.getGameContext = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'BackgroundControllerTwo': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "31ca9PU5j1LtaQhk68hUyoK", "BackgroundControllerTwo")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("Utils");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.bgLeft = undefined;
            b.bgRight = undefined;
            b.shine = undefined;
            b.particles = [];
            return b;
          }
          __extends(Z, g);
          Z.prototype.init = function () {};
          Z.prototype.setupToNormalState = function () {
            this.bgLeft.active = false;
            this.bgRight.active = false;
            this.bgLeft.stopAllActions();
            this.bgRight.stopAllActions();
            this.shine.stopAllActions();
            this.shine.opacity = 0x0;
            this.bgLeft.position = cc.v3(this.bgLeft.position.x, 0x154);
            this.bgRight.position = cc.v3(this.bgRight.position.x, 0x154);
            this.particles.forEach(function (b) {
              b.node.opacity = 0x0;
              b.play();
            });
          };
          Z.prototype.setupToRespinState = function () {
            this.bgLeft.active = true;
            this.bgRight.active = true;
            this.bgLeft.stopAllActions();
            this.bgRight.stopAllActions();
            this.bgLeft.position = cc.v3(this.bgLeft.position.x, 0x19a);
            this.bgRight.position = cc.v3(this.bgRight.position.x, 0x19a);
            this.shine.stopAllActions();
            this.shine.opacity = 0xff;
            this.shine.runAction(cc.repeatForever(cc.rotateBy(0x14, 0x168)));
            this.particles.forEach(function (b) {
              b.node.opacity = 0xff;
              b.play();
            });
          };
          Z.prototype.zoomOut = function () {
            this.bgLeft.active = true;
            this.bgRight.active = true;
            this.bgLeft.runAction(cc.moveTo(2.1, cc.v2(this.bgLeft.position.x, 0x19a)).easing(cc.easeCubicActionInOut()));
            this.bgRight.runAction(cc.moveTo(2.1, cc.v2(this.bgRight.position.x, 0x19a)).easing(cc.easeCubicActionInOut()));
            this.shine.stopAllActions();
            this.shine.runAction(cc.sequence(cc.delayTime(0.75), cc.fadeTo(1.75, 0x9b)));
            this.shine.runAction(cc.repeatForever(cc.rotateBy(0xf, 0x168)));
            this.particles.forEach(function (b) {
              b.node.stopAllActions();
              b.node.opacity = 0x0;
              b.node.runAction(cc.fadeIn(0x1));
              b.play();
            });
          };
          Z.prototype.zoomIn = function () {
            var b = this;
            this.bgLeft.runAction(cc.moveTo(2.1, cc.v2(this.bgLeft.position.x, 0x154)).easing(cc.easeCubicActionInOut()));
            this.bgRight.runAction(cc.moveTo(2.1, cc.v2(this.bgRight.position.x, 0x154)).easing(cc.easeCubicActionInOut()));
            this.shine.stopAllActions();
            this.shine.runAction(cc.fadeOut(0x1));
            this.particles.forEach(function (H) {
              H.node.stopAllActions();
              H.node.opacity = 0x0;
              H.stop();
              H.setCurrentTime(0x0);
              H.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
            r.delayCallback(2.1)(function () {
              b.bgLeft.active = false;
              b.bgRight.active = false;
            });
          };
          Z.prototype.teaseZoomOut = function () {
            this.bgLeft.active = true;
            this.bgRight.active = true;
            this.bgLeft.position = cc.v3(this.bgLeft.position.x, 0x154);
            this.bgRight.position = cc.v3(this.bgRight.position.x, 0x154);
            this.bgLeft.runAction(cc.moveTo(0x1, cc.v2(this.bgLeft.position.x, 0x177)).easing(cc.easeCubicActionInOut()));
            this.bgRight.runAction(cc.moveTo(0x1, cc.v2(this.bgRight.position.x, 0x177)).easing(cc.easeCubicActionInOut()));
          };
          Z.prototype.teaseZoomIn = function () {
            var b = this;
            this.bgLeft.position = cc.v3(this.bgLeft.position.x, 0x177);
            this.bgRight.position = cc.v3(this.bgRight.position.x, 0x177);
            this.bgLeft.runAction(cc.moveTo(0x1, cc.v2(this.bgLeft.position.x, 0x154)).easing(cc.easeCubicActionInOut()));
            this.bgRight.runAction(cc.moveTo(0x1, cc.v2(this.bgRight.position.x, 0x154)).easing(cc.easeCubicActionInOut()));
            r.delayCallback(0x1)(function () {
              b.bgLeft.active = false;
              b.bgRight.active = false;
            });
          };
          Z.prototype.destroy = function () {
            return g.prototype.destroy.call(this);
          };
          __decorate([q(cc.Node)], Z.prototype, "bgLeft", undefined);
          __decorate([q(cc.Node)], Z.prototype, "bgRight", undefined);
          __decorate([q(cc.Node)], Z.prototype, "shine", undefined);
          __decorate([q([cc.Animation])], Z.prototype, "particles", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, CX],
    'BackgroundController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "f5ddfUyhRhBBK/0KJeh/j0H", "BackgroundController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.bg1 = undefined;
            Z.bg2 = undefined;
            Z.shine2 = undefined;
            Z.leaf = undefined;
            Z.leafBlur = undefined;
            Z.bgAnim = undefined;
            Z.petalAnimHolder = [];
            return Z;
          }
          __extends(g, f);
          g.prototype.init = function () {
            this.petalAnimHolder.forEach(function (Z) {
              Z.getComponent("AnimParticleSystem").resetSystem();
            });
          };
          g.prototype.setupToNormalState = function () {
            this.bg1.stopAllActions();
            this.bg2.stopAllActions();
            this.bg1.scale = 0x1;
            this.bg2.position = cc.v3(0x0, 0xe6);
            this.bg2.scale = 0x1;
            this.shine2.stopAllActions();
            this.shine2.scale = 0x1;
            this.shine2.opacity = 0x0;
            this.leaf.scale = 1.43;
            this.leaf.position = cc.v3(0x0, 0x230);
            this.leafBlur.scale = 2.4;
            this.leafBlur.position = cc.v3(0x0, -0x158);
          };
          g.prototype.setupToRespinState = function () {
            this.bg1.stopAllActions();
            this.bg2.stopAllActions();
            this.shine2.stopAllActions();
            this.shine2.opacity = 0xff;
            this.shine2.scale = 0x2;
            this.bg1.scale = 0.95;
            this.bg2.position = cc.v3(0x0, 0xaa);
            this.bg2.scale = 0.9;
            this.leaf.scale = 1.33;
            this.leaf.position = cc.v3(0x0, 0x1f4);
            this.leafBlur.scale = 2.3;
            this.leafBlur.position = cc.v3(0x0, -0x194);
          };
          g.prototype.zoomOut = function (Z) {
            this.bgAnim.play("background_out");
            this.bgAnim.once(cc.Animation.EventType.FINISHED, function () {
              if (Z) {
                Z();
              }
            });
            this.shine2.stopAllActions();
            this.shine2.runAction(cc.sequence(cc.delayTime(2.2), cc.spawn(cc.scaleTo(0.75, 0x2), cc.fadeIn(0.95))));
          };
          g.prototype.zoomIn = function (Z) {
            this.bgAnim.play("background_in");
            this.bgAnim.once(cc.Animation.EventType.FINISHED, function () {
              if (Z) {
                Z();
              }
            });
            this.shine2.stopAllActions();
            this.shine2.runAction(cc.sequence(cc.delayTime(0.2), cc.fadeOut(0.9)));
          };
          g.prototype.teaseZoomOut = function (Z) {
            this.X = Z;
            this.bgAnim.play("background_tease_out");
            this.bgAnim.once(cc.Animation.EventType.FINISHED, function () {
              if (Z) {
                Z();
              }
            });
          };
          g.prototype.teaseZoomIn = function (Z) {
            this.Z = Z;
            this.bgAnim.play("background_tease_in");
            this.bgAnim.once(cc.Animation.EventType.FINISHED, function () {
              if (Z) {
                Z();
              }
            });
          };
          g.prototype.destroy = function () {
            return f.prototype.destroy.call(this);
          };
          __decorate([G(cc.Node)], g.prototype, "bg1", undefined);
          __decorate([G(cc.Node)], g.prototype, "bg2", undefined);
          __decorate([G(cc.Node)], g.prototype, "shine2", undefined);
          __decorate([G(cc.Node)], g.prototype, "leaf", undefined);
          __decorate([G(cc.Node)], g.prototype, "leafBlur", undefined);
          __decorate([G(cc.Animation)], g.prototype, "bgAnim", undefined);
          __decorate([G([cc.Node])], g.prototype, "petalAnimHolder", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'BaseListViewCell': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "24d8a0AiVJMa4yCegaay2ry", "BaseListViewCell")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.label = undefined;
            Z.sprite = undefined;
            Z.selectedBackgroundColor = undefined;
            Z.normalBackgroundColor = undefined;
            Z.endPos = undefined;
            return Z;
          }
          __extends(g, f);
          g.prototype.onLoad = function () {
            this.setupTouchAction();
          };
          g.prototype.setupTouchAction = function () {
            this.node.on(cc.Node.EventType.TOUCH_START, this.$, this);
            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
            this.node.on(cc.Node.EventType.TOUCH_END, this.it, this);
            this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.st, this);
            this.node.on(cc.Node.EventType.MOUSE_ENTER, this.et, this);
            this.node.on(cc.Node.EventType.MOUSE_LEAVE, this.nt, this);
          };
          g.prototype.removeTouchAction = function () {
            this.node.off(cc.Node.EventType.TOUCH_START, this.$, this);
            this.node.off(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
            this.node.off(cc.Node.EventType.TOUCH_END, this.it, this);
            this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.st, this);
            this.node.off(cc.Node.EventType.MOUSE_ENTER, this.et, this);
            this.node.off(cc.Node.EventType.MOUSE_LEAVE, this.nt, this);
          };
          g.prototype.et = function (Z) {
            if (this.mouseEnterAction) {
              this.mouseEnterAction(Z);
            }
          };
          g.prototype.nt = function (Z) {
            if (this.mouseLeaveAction) {
              this.mouseLeaveAction(Z);
            }
          };
          g.prototype.$ = function (Z) {
            var b = Z.touch;
            var H = cc.v2(b.getLocation().x, b.getLocation().y);
            this.startPos = H;
            this.node.color = this.selectedBackgroundColor;
            if (this.touchStartAction) {
              this.touchStartAction(Z);
            }
          };
          g.prototype.tt = function (Z) {
            this.node.color = this.normalBackgroundColor;
            if (this.touchMoveAction) {
              this.touchMoveAction(Z);
            }
          };
          g.prototype.it = function (Z) {
            var b = Z.touch;
            var H = cc.v2(b.getLocation().x, b.getLocation().y);
            this.endPos = H;
            this.node.color = this.normalBackgroundColor;
            Z.stopPropagationImmediate();
            if (this.touchEndAction) {
              this.touchEndAction(Z);
            }
          };
          g.prototype.st = function (Z) {
            var b = Z.touch;
            var H = cc.v2(b.getLocation().x, b.getLocation().y);
            this.endPos = H;
            this.node.color = this.normalBackgroundColor;
            Z.stopPropagationImmediate();
            if (this.touchCancelAction) {
              this.touchCancelAction(Z);
            }
          };
          g.prototype.destroy = function () {
            this.removeTouchAction();
            f.prototype.destroy.call(this);
          };
          __decorate([G(cc.Label)], g.prototype, "label", undefined);
          __decorate([G(cc.Sprite)], g.prototype, "sprite", undefined);
          __decorate([G(cc.Color)], g.prototype, "selectedBackgroundColor", undefined);
          __decorate([G(cc.Color)], g.prototype, "normalBackgroundColor", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'BaseScroller': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "7a55d+EM2dKr590KKrgiTXR", "BaseScroller")) {
        var r;
        var v = {
          value: true
        };
        var G = {
          RUN: "run",
          END: "end",
          ACCELERATE: "accelerate",
          DECELERATE: "decelerate"
        };
        Object.defineProperty(l, "__esModule", v);
        l.SCROLLER_EVENT = l.ScrollerState = undefined;
        (function (c) {
          c[c.IDLE = 0x0] = "IDLE";
          c[c.RUNNING = 0x1] = "RUNNING";
          c[c.ENDED = 0x2] = "ENDED";
        })(r = l.ScrollerState || (l.ScrollerState = {}));
        l.SCROLLER_EVENT = Object.freeze(G);
        var q = function (c) {
          function f(b) {
            var H = c.call(this) || this;
            H.state = r.IDLE;
            H.config = undefined;
            H.runtimeConfig = undefined;
            H.config = b;
            H.runtimeConfig = __assign({}, b);
            return H;
          }
          var g = {
            get: function () {
              return this.state === r.RUNNING;
            },
            enumerable: false,
            configurable: true
          };
          var Z = {
            get: function () {
              return this.state === r.ENDED;
            },
            enumerable: false,
            configurable: true
          };
          __extends(f, c);
          Object.defineProperty(f.prototype, "isPlaying", g);
          Object.defineProperty(f.prototype, "isEnded", Z);
          f.prototype.setConfig = function (b) {
            Object.assign(this.config, b);
          };
          f.prototype.updateRunTimeConfig = function (b) {
            Object.assign(this.runtimeConfig, b);
          };
          f.prototype.getRunTimeConfig = function () {
            return __assign({}, this.runtimeConfig);
          };
          f.prototype.reset = function () {
            this.state = r.IDLE;
            this.runtimeConfig = __assign({}, this.config);
            this.onReset();
          };
          f.prototype.run = function () {
            if (this.state === r.IDLE) {
              this.state = r.RUNNING;
              this.onRun();
            }
          };
          f.prototype.end = function () {
            if (this.state !== r.ENDED) {
              this.state = r.ENDED;
              this.onEnd();
            }
          };
          f.prototype.onReset = function () {};
          f.prototype.onRun = function () {};
          f.prototype.onEnd = function () {};
          f.prototype.emitEvent = function (b, H) {
            var I = {
              scroller: this,
              speedFactor: H
            };
            this.emit(b, I);
          };
          return f;
        }(cc.EventTarget);
        l["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'BaseUIHelper': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "6c985/s6btKVqrcmkuEBQ1t", "BaseUIHelper")) {
        var G = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", G);
        z("TweaksData");
        var q = z("Utils");
        var g = z("SettingMenuHelper");
        var Z = z("SkipHandler");
        var b = z("BGMHandler");
        var H = z("InfoboardController");
        var I = z("GConstants");
        var K = z("SpaceBarInterrupter");
        var E = z("WinLine.spec");
        var Q = z("AutomationDecorator");
        var X = z("GSlotTransactionModel");
        var A = z("GameUtils");
        var V = z("GeneralAudioConstant");
        var W = z("AudioManager");
        var J = function () {
          function w(O, F) {
            this.name = "Base UI Helper";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.ot = undefined;
            this.ct = 0x0;
            this.ht = undefined;
            this.generalControllers = F;
            this.dataSource = O;
          }
          w.prototype.destroy = function () {
            this.generalControllers = undefined;
            this.dataSource = undefined;
          };
          w.prototype.onStateFullyIdle = function () {
            var O = this.dataSource.transactionModel;
            var F = O.winLines;
            var D = O.winValues;
            var U = O.reels;
            var S = O.wildCount;
            var R = this.generalControllers;
            var x = R.paySelectEffectController;
            var j = R.slotTintController;
            var P = R.symbolPopoutController;
            var p = R.tigerController;
            var M = [];
            U.forEach(function (B, y) {
              if (-0x1 === B) {
                M.push(y);
              }
            });
            P.enablePanel();
            P.setupButtonEvent(M);
            if (F) {
              j.fadeIn(0.2);
              x.playAlternateLines(F, D);
            } else {
              this.ct++;
              if (this.ct > 0x5) {
                p.noWin(S);
                this.ct = 0x0;
              }
              this.ht = q.delayCallback(0x14)(function () {
                p.noSpin(S);
              });
            }
          };
          w.prototype.preSpinningCleanup = function (O) {
            var F = this;
            var D = this.generalControllers;
            var U = D.infoboardController;
            var S = D.slotTintController;
            var R = D.symbolPopoutController;
            var x = D.slotController;
            var j = this.dataSource.transactionModel;
            var P = j.winLines;
            var p = j.accumulatedWinAmount;
            var M = j.featureWinSymbol;
            if (P || p > 0x0) {
              U.hideMediumWinEffect();
              this.ot = q.delayCallback(I.INFOBOARD_TIMING.DELAY_RESET)(function () {
                var y = F.dataSource.transactionModel;
                var k = y.stateTransitionFrom;
                var N0 = y.stateTransitionTo;
                if (k === X.SpinType.RESPIN) {
                  U.playRespin(M);
                } else if (k === X.SpinType.NORMAL && N0 === X.SpinType.RESPIN) {
                  U.playZoom();
                } else {
                  U.resetInfoboard(false);
                }
                U.resumeInfoboard();
              });
              S.fadeOut(0.1);
              x.setSlotItemsVisible(true, [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8]);
              this.extraPreSpinningCleanup(O);
            } else {
              this.extraPreSpinningCleanup(O);
            }
            R.hidePopOutItem();
            var B = this.ht;
            this.ht = undefined;
            if (B) {
              B();
            }
          };
          w.prototype.extraPreSpinningCleanup = function (O) {
            if (O) {
              O();
            }
          };
          w.prototype.playSlotSpinEffect = function () {};
          w.prototype.setAvailablePrizeAction = function () {
            var O = this.generalControllers.infoboardController;
            var F = this.dataSource.transactionModel.accumulatedWinAmount;
            if (O.infoboardState === H.InfoBoardState.SHOWING_WIN && 0x0 === F) {
              var D = this.ot;
              this.ot = undefined;
              if (D) {
                D();
              }
              O.resetInfoboard(false);
              O.resumeInfoboard();
            }
          };
          w.prototype.renderFeatureBeforePrize = function (O) {
            var F = this.dataSource.transactionModel;
            var D = F.winLines;
            var U = F.stateTransitionTo;
            var S = F.stateTransitionFrom;
            var R = F.reels;
            var x = this.generalControllers;
            var j = x.stickyController;
            var P = x.slotController;
            var p = x.slotTintController;
            var M = x.paySelectEffectController;
            var B = x.angpaoController;
            var y = x.tigerController;
            if (S === X.SpinType.RESPIN && U === X.SpinType.NORMAL) {
              j.playWin(D);
              p.fadeIn(0.2);
              P.reloadData(R);
              q.delayCallback(0.4)(function () {
                y.playRespinWin();
              });
            }
            q.delayCallback(0.2)(function () {
              j.playLargeSymbol(R, D, function () {
                B.win10();
                P.setSlotItemsVisible(false, [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8]);
                M.stopPaySelect(false);
              }, O);
            });
          };
          w.prototype.clearLargeSymbol = function (O) {
            var F = this.generalControllers;
            var D = F.stickyController;
            F.slotController.setSlotItemsVisible(true, [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8]);
            D.clearLargeSymbol(O);
          };
          w.prototype.playAllLines = function (O) {
            var F = this.dataSource.transactionModel;
            var D = F.winLines;
            var U = F.stateTransitionTo;
            var S = F.reels;
            var R = F.featureWinSymbol;
            var x = this.generalControllers;
            var j = x.paySelectEffectController;
            var P = x.slotTintController;
            var M = x.stickyController;
            var B = x.payLineNumberController;
            var y = x.payLineController;
            var k = g.settingMenuHelper.turboSpinOn;
            var N0 = k ? 0.2 * (0x1 - I.TURBO_SPIN_SPEEDUP_FACTOR) : 0.2;
            var N1 = function () {
              if (O) {
                O();
              }
            };
            if (D) {
              if (U === X.SpinType.NORMAL) {
                this.extraPlayAllLinesAction();
                P.fadeIn(N0);
                j.playAllLines(D, true, k, N1);
              } else {
                var N2 = D.winPositions;
                N2.forEach(function (N3, N4) {
                  N2[N4] = parseInt(N3, 0xa);
                });
                B.show(N2);
                y.showLine(N2);
                M.playSticky(S, D, R, N1);
              }
            } else {
              N1();
            }
          };
          w.prototype.playSmallWin = function (O, F) {
            var D = this.generalControllers;
            var U = D.infoboardController;
            var S = D.tigerController;
            var R = this.dataSource.transactionModel;
            var x = R.wildCount;
            var j = R.stateTransitionTo;
            var P = R.stateTransitionFrom;
            this.updateBalance();
            var p = function () {
              if (F) {
                F();
              }
            };
            if (A.checkOperatorProfit(O, this.dataSource)) {
              if (j === X.SpinType.NORMAL && P === X.SpinType.NORMAL) {
                S.playWin(x);
              }
              U.playSmallWin(O, p);
              var M = V.GENERAL_AUDIO.prizeSmalwin.key;
              W.stopAudioIfPlaying(M);
              W.playAudioIfNotPlaying(M);
            } else {
              U.resetInfoboard();
              if (p) {
                p();
              }
            }
            var B = this.ot;
            this.ot = undefined;
            if (B) {
              B();
            }
            this.extraSmallWinAction();
          };
          w.prototype.playMediumWin = function (O, F) {
            var D = this;
            var U = this.generalControllers;
            var S = U.infoboardController;
            var R = U.slotController;
            var x = U.clickEffectController;
            var j = U.tigerController;
            var P = this.dataSource.transactionModel;
            var p = P.wildCount;
            var M = P.stateTransitionFrom;
            var B = P.stateTransitionTo;
            if (M === X.SpinType.NORMAL && B === X.SpinType.NORMAL) {
              j.playBigWin(p);
            }
            Z["default"].init(R.node, x);
            S.playMediumWin(0x0, O, function () {
              D.updateBalance();
              K.spaceBarInterrupter.unsubscribeEventInterrupter("medium_win");
              q.delayCallback(0.7)(F);
            });
            K.spaceBarInterrupter.subscribeEventInterrupter("medium_win", undefined, S.quickStopMediumWin.bind(S));
            var y = this.ot;
            this.ot = undefined;
            if (y) {
              y();
            }
            this.extraMediumWinAction();
          };
          w.prototype.playBigWin = function (O, F, D) {
            var U = this;
            var R = this.generalControllers;
            var x = R.infoboardController;
            var j = R.bigWinController;
            var P = R.clickEffectController;
            var B = R.tigerController;
            var k = R.slotController;
            var N0 = R.angpaoController;
            var N1 = this.dataSource.transactionModel;
            var N2 = N1.wildCount;
            var N3 = N1.winLines;
            var N4 = N1.stateTransitionFrom;
            var N5 = N1.stateTransitionTo;
            var N6 = function () {
              Z["default"].init(k.node, P);
              var N9 = V.GENERAL_AUDIO.infobarAfterBigwin.key;
              W.stopAudioIfPlaying(N9);
              W.playAudioIfNotPlaying(N9);
              x.playBigWin(O);
              U.updateBalance();
              q.delayCallback(0x1)(D);
            };
            var N7 = 0x0;
            if (N3 && N3.winPositions) {
              for (var N8 = 0x0; N8 < N3.winPositions.length; N8++) {
                if (N3.winPositions[N8] >= 0x1 && N3.winPositions[N8] <= 0x3) {
                  N7++;
                }
              }
            }
            if (N3 && N3.winPositions && N7 >= 0x3) {
              q.sequenceCallback(function (N9) {
                U.extraBigWinAction();
                x.playSmallWin(O / 0xa, N9);
                if (N4 === X.SpinType.NORMAL && N5 === X.SpinType.NORMAL) {
                  B.playBigWin(N2);
                }
                var NN = V.GENERAL_AUDIO.prizeSmalwin.key;
                W.stopAudioIfPlaying(NN);
                W.playAudioIfNotPlaying(NN);
              }, function (N9) {
                if (N4 === X.SpinType.NORMAL && N5 === X.SpinType.NORMAL) {
                  x.playNormalMultiplier(N9);
                } else {
                  N0.hide10();
                  x.playMultiplier(B.getTigerPosition(), N9);
                }
              }, function (N9) {
                Z["default"].init(j.node, P);
                b.playBigWinBGM();
                j.play(O, F, N9);
                j.initBigWinOutSoundEffect(b.playNormalBGMFromBigWinEnd);
                var NN = U.ot;
                U.ot = undefined;
                if (NN) {
                  NN();
                }
              })(N6);
            } else {
              Z["default"].init(j.node, P);
              q.delayCallback(I.BIG_WIN_TIMING.BIG_WIN_DELAY)(function () {
                b.playBigWinBGM();
                U.extraBigWinAction();
                j.play(O, F, N6);
                j.initBigWinOutSoundEffect(b.playNormalBGMFromBigWinEnd);
                var N9 = U.ot;
                U.ot = undefined;
                if (N9) {
                  N9();
                }
              });
            }
          };
          w.prototype.updateBalance = function (O) {
            var F = this.dataSource.playerModel.balance;
            var D = this.dataSource.transactionModel.accumulatedWinAmount;
            if (D > 0x0) {
              g.settingMenuHelper.setWinAmount(D);
            }
            g.settingMenuHelper.setBalance(F);
            if (O) {
              O();
            }
          };
          w.prototype.setWinThreshold = function (O) {
            this.generalControllers.infoboardController.setThreshold(O);
          };
          w.prototype.extraSmallWinAction = function () {};
          w.prototype.extraMediumWinAction = function () {};
          w.prototype.extraBigWinAction = function () {};
          w.prototype.extraPlayAllLinesAction = function () {};
          __decorate([Q.automationDec({
            'func': E.winHighlightShown
          })], w.prototype, "playAllLines", null);
          return w;
        }();
        Y["default"] = J;
        cc._RF.pop();
      }
    }, Co],
    'BetModifierButton': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "076aehdcx9HQI7+9hg7FlGu", "BetModifierButton")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("GenericSettingButton");
        var G = z("UIAppearanceHelper");
        var q = z("Utils");
        var f = cc._decorator;
        var g = f.ccclass;
        var Z = f.property;
        var b = function (H) {
          function I() {
            var K = null !== H && H.apply(this, arguments) || this;
            K.isIncreaseBet = false;
            return K;
          }
          __extends(I, H);
          I.prototype.setShowSettingToastCallback = function (K) {
            this.rt = K;
          };
          Object.defineProperty(I.prototype, "showSettingToast", {
            'get': function () {
              if (!this.rt) {
                throw Error("BetModifierButton :: showSettingToast is undefined. Please set it using setShowSettingToastCallback");
              }
              return this.rt;
            },
            'enumerable': false,
            'configurable': true
          });
          I.prototype.setHideSettingToastCallback = function (K) {
            this.at = K;
          };
          Object.defineProperty(I.prototype, "hideSettingToast", {
            'get': function () {
              if (!this.at) {
                throw Error("BetModifierButton :: hideSettingToast is undefined. Please set it using setHideSettingToastCallback");
              }
              return this.at;
            },
            'enumerable': false,
            'configurable': true
          });
          I.prototype.increaseBet = function (K, E, Q) {
            if (undefined === E) {
              for (var A = 0x0; A < K.length; A++) {
                if (parseFloat(K[A]) > parseFloat(Q)) {
                  E = A - 0x1;
                  Q = K[A - 0x1];
                  break;
                }
              }
            } else if (E >= K.length - 0x1) {
              this.showSettingToast(shell.I18n.t("SettingMenu.BiggestBet"), 0x2);
              return {
                'selectedBet': E,
                'selectedBetAmount': Q
              };
            }
            if (undefined === E) {
              throw Error("BetModifierButton :: increaseBet : selectedBet is undefined and cannot be located from selectedBetAmount ");
            }
            Q = K[++E];
            if (E >= K.length - 0x1) {
              this.showSettingToast(shell.I18n.t("SettingMenu.BiggestBet"), 0x2);
            } else {
              this.hideSettingToast();
            }
            return {
              'selectedBet': E,
              'selectedBetAmount': Q
            };
          };
          I.prototype.decreaseBet = function (K, E, Q) {
            if (undefined === E) {
              for (var X = K.length - 0x1; X >= 0x0; X--) {
                if (parseFloat(K[X]) < parseFloat(Q)) {
                  E = X + 0x1;
                  Q = K[X + 0x1];
                  break;
                }
              }
            } else if (E <= 0x0) {
              this.showSettingToast(shell.I18n.t("SettingMenu.SmallestBet"), 0x2);
              return {
                'selectedBet': E,
                'selectedBetAmount': Q
              };
            }
            if (undefined === E) {
              throw Error("BetModifierButton :: decreaseBet : selectedBet is undefined and cannot be located from selectedBetAmount ");
            }
            Q = K[--E];
            if (E <= 0x0) {
              this.showSettingToast(shell.I18n.t("SettingMenu.SmallestBet"), 0x2);
            } else {
              this.hideSettingToast();
            }
            return {
              'selectedBet': E,
              'selectedBetAmount': Q
            };
          };
          I.prototype.updateBetModifierColor = function (K, E) {
            if (this.isIncreaseBet) {
              this.isReachLimit = !!(E && K >= E);
            } else {
              this.isReachLimit = K <= 0x0;
            }
            this.interactableButtonColor(this.isInteractable);
          };
          I.prototype.changeButtonPressedColor = function (K) {
            if (this.buttonTheme) {
              var E = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var Q = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".pressed");
              if (this.isReachLimit) {
                var X = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
                q.setNodeColorWithOpacity(this.iconSprite, X);
              } else {
                q.setNodeColorWithOpacity(this.iconSprite, K ? Q : E);
              }
            }
          };
          I.prototype.interactableButtonColor = function (K) {
            if (this.buttonTheme) {
              var E = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var Q = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              if (this.isReachLimit) {
                q.setNodeColorWithOpacity(this.iconSprite, Q);
              } else {
                q.setNodeColorWithOpacity(this.iconSprite, K ? E : Q);
              }
            }
          };
          I.prototype.maxBet = function (K) {
            var E = K.length - 0x1;
            var Q = K[E];
            var X = {
              selectedBet: E,
              selectedBetAmount: Q
            };
            this.showSettingToast(shell.I18n.t("SettingMenu.BiggestBet"), 0x2);
            return X;
          };
          I.prototype.buttonActivate = function (K) {
            if (K) {
              this.node.active = true;
              if (this.node.parent) {
                this.node.parent.active = true;
              }
              q.deferCallback(this)(this.enableTouchInteraction);
            } else {
              this.disableTouchInteraction();
              this.node.active = false;
              if (this.node.parent) {
                this.node.parent.active = false;
              }
            }
          };
          __decorate([Z(cc.Boolean)], I.prototype, "isIncreaseBet", undefined);
          return __decorate([g], I);
        }(v["default"]);
        Y["default"] = b;
        cc._RF.pop();
      }
    }, CA],
    'BetRepository': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "14dfa+lfKlIS5vAzSig9n4q", "BetRepository")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.BetRepository = undefined;
        var r = function () {
          function v(G, q) {
            this.ut = G;
            this.lt = q;
            this.ft = G;
            this.vt = q;
          }
          Object.defineProperty(v.prototype, "selectedBetLevelValue", {
            'get': function () {
              return this.ft;
            },
            'set': function (G) {
              this.ft = G;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(v.prototype, "selectedBetSizeValue", {
            'get': function () {
              return this.vt;
            },
            'set': function (G) {
              this.vt = G;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(v.prototype, "betLevelValue", {
            'get': function () {
              return this.ut;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(v.prototype, "betSizeValue", {
            'get': function () {
              return this.lt;
            },
            'enumerable': false,
            'configurable': true
          });
          v.prototype.updateRemoteBets = function (G, q) {
            this.ut = this.ft = G;
            this.lt = this.vt = q;
          };
          return v;
        }();
        Y.BetRepository = r;
        cc._RF.pop();
      }
    }, {}],
    'BigSymbolItemController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "2c00cjJGZxN3qABrM8SRtbm", "BigSymbolItemController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("Utils");
        var G = z("SymbolImageHandler");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.mainAnim = undefined;
            I.symbolSprite = undefined;
            I.mask = undefined;
            I.animSprites = [];
            I.loopAnims = [];
            return I;
          }
          __extends(H, b);
          H.prototype.playBigSymbol = function (I, K) {
            this._t();
            this.symbolSprite.spriteFrame = G.symbolImageHandler.symbolImages[I];
            this.mask.spriteFrame = G.symbolImageHandler.symbolImages[I];
            this.symbolSprite.node.runAction(cc.spawn(cc.fadeIn(0.5), cc.scaleTo(0.5, 0x3).easing(cc.easeBackOut())));
            this.loopAnims.forEach(function (E) {
              E.play();
            });
            this.mainAnim.play();
            v.delayCallback(0.5)(function () {
              if (K) {
                K();
              }
            });
          };
          H.prototype.stopBigSymbol = function (I) {
            this.loopAnims.forEach(function (K) {
              K.stop();
              K.setCurrentTime(0x0);
            });
            this.animSprites.forEach(function (K) {
              K.spriteFrame = undefined;
            });
            this.symbolSprite.node.runAction(cc.sequence(cc.fadeOut(0.2), cc.callFunc(this._t.bind(this), cc.callFunc(function () {
              if (I) {
                I();
              }
            }))));
          };
          H.prototype._t = function () {
            this.symbolSprite.node.stopAllActions();
            this.symbolSprite.node.scale = 2.8;
            this.symbolSprite.node.opacity = 0x0;
            this.mainAnim.stop();
            this.mainAnim.setCurrentTime(0x0);
            this.loopAnims.forEach(function (I) {
              I.stop();
              I.setCurrentTime(0x0);
            });
          };
          __decorate([g(cc.Animation)], H.prototype, "mainAnim", undefined);
          __decorate([g(cc.Sprite)], H.prototype, "symbolSprite", undefined);
          __decorate([g(cc.Mask)], H.prototype, "mask", undefined);
          __decorate([g([cc.Sprite])], H.prototype, "animSprites", undefined);
          __decorate([g([cc.Animation])], H.prototype, "loopAnims", undefined);
          return __decorate([f], H);
        }(cc.Component);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, CV],
    'BigWinController.spec': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "349b6Y3nmhLKrir5iiZi+ry", "BigWinController.spec")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.skipBigWinAnimationEvent = Y.skipBigWinNumberRollEvent = Y.initBigWinControllerNodes = undefined;
        Y.initBigWinControllerNodes = function (r) {
          var v = System.get("automation") && System.get("automation").GameConfigs;
          if (v) {
            v.initNodeConfig(r.skipButtonNode, "big_win_skip_button");
          }
        };
        Y.skipBigWinNumberRollEvent = function () {
          var r = System.get("automation") && System.get("automation").GameData;
          var v = {
            displayState: "SkipNumberRollEnabled"
          };
          if (r) {
            r.emit("BigWin", v);
          }
        };
        Y.skipBigWinAnimationEvent = function () {
          var r = System.get("automation") && System.get("automation").GameData;
          var v = {
            displayState: "SkipAnimationEnabled"
          };
          if (r) {
            r.emit("BigWin", v);
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'BigWinController': [function (G, q, Z) {
      'use strict';

      if (!cc._RF.push(q, "0c8afnrBkpKm56g7KUrARGr", "BigWinController")) {
        var H = {
          value: true
        };
        Object.defineProperty(Z, "__esModule", H);
        var I = {
          top: 0xfa,
          bottom: -0x161
        };
        var K = {
          top: 0x154,
          bottom: -0x161
        };
        var E = {
          top: 0x1b8,
          bottom: -0x161
        };
        var Q;
        var X = G("AnalyticsHelper");
        var A = G("Utils");
        var V = G("SkipHandler");
        var W = G("GConstants");
        var J = G("BGMHandler");
        var w = G("GameEventHandler");
        var O = G("SpaceBarInterrupter");
        var F = G("GDataSource");
        var D = G("BigWinController.spec");
        var U = G("AutomationDecorator");
        var R = G("BigWinFireworkController");
        var x = cc._decorator;
        var j = x.ccclass;
        var P = x.property;
        var B = [I, K, E];
        var k = ['bw', 'mw', "smw"];
        var N0 = new cc.color(0xff, 0xff, 0xff);
        (function (N4) {
          N4[N4.BIG_WIN = 0x0] = "BIG_WIN";
          N4[N4.MEGA_WIN = 0x1] = "MEGA_WIN";
          N4[N4.SUPER_MEGA_WIN = 0x2] = "SUPER_MEGA_WIN";
        })(Q || (Q = {}));
        var N1 = W.BIG_WIN_TIMING.DISMISS_BIG_WIN_DELAY;
        var N2 = W.BIG_WIN_TIMING.AUTO_DISMISS_BIG_WIN_DELAY;
        var N3 = function (N4) {
          function N5() {
            var N6 = null !== N4 && N4.apply(this, arguments) || this;
            N6.screenTintNode = undefined;
            N6.titleNode = undefined;
            N6.titleSpriteNode = undefined;
            N6.timedNumberRollNode = undefined;
            N6.numberDisplayNode = undefined;
            N6.coinAnimParticleNode = undefined;
            N6.frame1 = undefined;
            N6.frame2 = undefined;
            N6.particle1 = undefined;
            N6.particle2 = undefined;
            N6.flares = [];
            N6.shine1 = undefined;
            N6.ribbons = [];
            N6.shine2 = undefined;
            N6.petals = undefined;
            N6.coins = undefined;
            N6.coinType = [];
            N6.shine3 = undefined;
            N6.shine4 = undefined;
            N6.shine5 = undefined;
            N6.shine6 = undefined;
            N6.topBar = undefined;
            N6.topBarSpine = undefined;
            N6.bottomBar = undefined;
            N6.frontShine7 = undefined;
            N6.frontNode = undefined;
            N6.lastNode = undefined;
            N6.particles = [];
            N6.frame1Sprites = [];
            N6.shine1Sprites = [];
            N6.shine2Sprites = [];
            N6.shine3Sprites = [];
            N6.shine4Sprites = [];
            N6.shine5Sprites = [];
            N6.shine6Sprites = [];
            N6.frontShine7Sprites = [];
            N6.topBarSprites = [];
            N6.bottomBarSprites = [];
            N6.fireworkController = undefined;
            N6.pt = undefined;
            N6.bt = undefined;
            N6.St = false;
            N6.gt = false;
            N6.Ct = undefined;
            N6.yt = [];
            N6.Mt = undefined;
            N6.At = undefined;
            N6.It = 0x0;
            N6.Ot = undefined;
            N6.Ht = undefined;
            N6.Bt = undefined;
            N6.Gt = false;
            N6.Nt = undefined;
            N6.Tt = undefined;
            N6.Pt = undefined;
            N6.Lt = undefined;
            N6.Rt = undefined;
            return N6;
          }
          __extends(N5, N4);
          N5.prototype.init = function () {
            this.node.active = false;
            this.pt = this.timedNumberRollNode.getComponent("NumberDisplayController");
            this.bt = this.timedNumberRollNode.getComponent("TimedWinRollController");
            this.Nt = this.coinAnimParticleNode.getComponent("AnimParticleSystem");
            this.At = this.titleSpriteNode.getComponent("cc.Sprite");
            this.Mt = this.titleSpriteNode.scale;
            this._t();
            this.Et({
              'skipButtonNode': this.node
            });
          };
          N5.prototype.Et = function () {};
          N5.prototype.setBigWinLocalizedTitleSpriteFrame = function (N6) {
            this.yt[0x0] = N6.getSpriteFrame('bw');
            this.yt[0x1] = N6.getSpriteFrame('mw');
            this.yt[0x2] = N6.getSpriteFrame("smw");
          };
          N5.prototype.initBigWinOutSoundEffect = function (N6) {
            this.Rt = N6;
          };
          N5.prototype.destroy = function () {
            this._t();
            this.node.destroy();
            return N4.prototype.destroy.call(this);
          };
          N5.prototype.play = function (N6, N7, N8) {
            if (true !== this.gt) {
              this.node.active = true;
              this.gt = true;
              this.Ot = N6;
              this.Bt = N7;
              this.Lt = N8;
              this.Pt = undefined;
              this.kt = false;
              var N9 = this.bt;
              N9.setNumbersCallback([N7.bigWinThreshold, N7.megaWinThreshold, N7.superMegaWinThreshold]);
              N9.init({
                'bigWinThreshold': N7.bigWinThreshold,
                'megaWinThreshold': N7.megaWinThreshold,
                'superMegaWinThreshold': N7.superMegaWinThreshold,
                'bigWinDuration': W.BIG_WIN_TIMING.BIG_WIN_ROLL_DURATION,
                'megaWinDuration': W.BIG_WIN_TIMING.MEGA_WIN_ROLL_DURATION,
                'superMegaWinDuration': W.BIG_WIN_TIMING.SUPER_MEGA_WIN_ROLL_DURATION,
                'totalWin': N6
              });
              this.scheduleOnce(this.Ut, W.BIG_WIN_TIMING.SKIP_ROLL_DELAY);
              this.jt();
            }
          };
          N5.prototype.jt = function () {
            this.St = true;
            this.bt.play(this.Dt.bind(this));
            this.Ht = Q.BIG_WIN;
            this.Ct = undefined;
            this.node.opacity = 0xff;
            this.Wt(true);
          };
          N5.prototype.Dt = function (N6) {
            var N7 = this;
            var N8 = this.Bt;
            if (N6 !== this.It && (this.It = N6, N6 === N8.megaWinThreshold ? (this.Ht = Q.MEGA_WIN, this.Wt()) : N6 === N8.superMegaWinThreshold && (this.Ht = Q.SUPER_MEGA_WIN, this.kt = true, this.Wt()), N6 === this.Ot)) {
              var N9 = {
                displayState: "DidUpdate",
                effectType: "BigWin"
              };
              this.St = false;
              w.emitGameEffectStateChangedEvent(N9);
              this.frontShine7.parent = this.lastNode;
              this.frontShine7.scale = 0x3;
              this.frontShine7.getComponent(cc.Sprite).spriteFrame = this.frontShine7Sprites[0x2];
              this.frontShine7.stopAllActions();
              this.frontShine7.runAction(cc.spawn(cc.scaleTo(1.55, 4.55), cc.sequence(cc.fadeIn(0.3), cc.fadeOut(1.25))));
              this.particles.forEach(function (NC) {
                NC.node.parent = N7.lastNode;
                NC.play();
                NC.setCurrentTime(0x0);
              });
              this.xt();
              var NN = this.Rt;
              this.Rt = undefined;
              if (NN) {
                NN();
              }
              if (this.Ht >= Q.MEGA_WIN) {
                J.playBigWinEndCoin();
              }
              if (this.Ht === Q.SUPER_MEGA_WIN) {
                J.playBigWinEndFirework();
              }
              this.scheduleOnce(this.Ut, N1);
              var Nz = F.gDataSource.isGameReplaying ? 0x1 : N2;
              this.scheduleOnce(this.Ft, Nz);
            }
          };
          N5.prototype.Ft = function () {
            var N6 = this;
            var N7 = {
              displayState: "WillEnd",
              effectType: "BigWin"
            };
            w.emitGameEffectStateChangedEvent(N7);
            this.Vt(function () {
              N6._t();
              V["default"].removeEvent(N6.node);
              var N8 = N6.Lt;
              N6.Lt = undefined;
              if (N8) {
                N8();
              }
            });
          };
          N5.prototype._t = function () {
            this.gt = false;
            this.St = false;
            this.At.spriteFrame = undefined;
            this.It = undefined;
            this.pt.clear();
            this.unschedule(this.Ut);
            this.unschedule(this.Ft);
            this.zt();
            this.Jt();
            this.node.active = false;
          };
          N5.prototype.Wt = function (N6) {
            if (undefined === N6) {
              N6 = false;
            }
            if (N6) {
              this.titleNode.runAction(cc.spawn(cc.sequence(cc.scaleTo(0.2, 1.1), cc.scaleTo(0.85, 0x1)), cc.fadeIn(0.2)));
              this.numberDisplayNode.runAction(cc.spawn(cc.sequence(cc.scaleTo(0.2, 1.1), cc.scaleTo(0.8, 0x1)), cc.fadeIn(0.2)));
              this.screenTintNode.runAction(cc.sequence(cc.delayTime(0.15), cc.fadeTo(0.25, 0xb4)));
            }
            this.qt();
          };
          N5.prototype.qt = function () {
            var N6 = this;
            if (!this.Ct || this.Ht !== this.Ct) {
              this.Ct = this.Ht;
              var N7 = this.Ct;
              var N8 = this.titleSpriteNode;
              var N9 = this.yt[N7];
              var NN = function () {
                N6.At.spriteFrame = N9;
              };
              A.spawnCallback(function (Nz) {
                var NC = function () {
                  if (Nz) {
                    Nz();
                  }
                };
                if (undefined === N6.At.spriteFrame) {
                  NN();
                  NC();
                } else if (N6.At.spriteFrame !== N9) {
                  N6.titleNode.stopAllActions();
                  N6.titleNode.runAction(cc.sequence(cc.scaleTo(0.2, 0x0), cc.callFunc(NN), cc.spawn(cc.sequence(cc.scaleTo(0.2, 1.1), cc.callFunc(NC), cc.scaleTo(0.85, 0x1)), cc.fadeIn(0.2))));
                } else {
                  N8.runAction(cc.sequence(cc.scaleTo(0.2, N6.Mt + 0.1).easing(cc.easeSineOut()), cc.scaleTo(0.4, N6.Mt).easing(cc.easeSineIn()), cc.callFunc(NC)));
                }
              }, function (Nz) {
                if (!N6.Gt && N7 >= Q.MEGA_WIN) {
                  N6.Nt.resetSystem();
                  N6.Gt = true;
                }
                if (Nz) {
                  Nz();
                }
              }, function (Nz) {
                N6.frame1.getComponent(cc.Sprite).spriteFrame = N6.frame1Sprites[N7];
                N6.frame1.opacity = 0x0;
                N6.frame1.scale = 0x2;
                N6.frame1.stopAllActions();
                N6.frame1.runAction(cc.spawn(cc.fadeIn(0.45), cc.sequence(cc.scaleTo(0.3, 2.2), cc.scaleTo(0x1, 0x2))));
                N6.frame2.opacity = 0x0;
                N6.frame2.scale = [0x2, 2.2, 2.4][N7];
                N6.frame2.stopAllActions();
                N6.frame2.runAction(cc.fadeIn(0.25));
                N6.frame2.runAction(cc.repeatForever(cc.rotateBy(3.35, 0x32)));
                if (Nz) {
                  Nz();
                }
              }, function (Nz) {
                N6.particle1.resetSystem();
                N6.particle2.resetSystem();
                N6.flares.forEach(function (NY) {
                  NY.play();
                });
                N6.ribbons.forEach(function (NY) {
                  NY.play();
                  NY.node.stopAllActions();
                  NY.node.runAction(cc.fadeIn(0.2));
                });
                N6.shine1.getComponent(cc.Sprite).spriteFrame = N6.shine1Sprites[N7];
                N6.shine1.stopAllActions();
                N6.shine1.runAction(cc.tintTo(0.2, N0));
                N6.shine1.runAction(cc.repeatForever(cc.rotateBy(0x14, 0x168)));
                N6.shine2.getComponent(cc.Sprite).spriteFrame = N6.shine2Sprites[N7];
                N6.shine2.stopAllActions();
                N6.shine2.color = W.BLACK;
                N6.shine2.scale = 1.2;
                N6.shine2.runAction(cc.sequence(cc.delayTime(0.15), cc.tintTo(0.2, 0xff, 0xff, 0xff)));
                N6.shine2.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.5, 0x2), cc.scaleTo(0.5, 1.2))));
                N6.petals.scale = 0x1;
                N6.petals.stopAllActions();
                N6.petals.runAction(cc.fadeIn(0.2));
                N6.petals.runAction(cc.scaleTo(0x1b, 2.8));
                N6.coins.getComponent(cc.Sprite).spriteFrame = N6.coinType[N7];
                N6.coins.scale = 0x1;
                N6.coins.stopAllActions();
                N6.coins.runAction(cc.fadeIn(0.2));
                N6.coins.runAction(cc.scaleTo(0x3c, 1.7));
                N6.shine3.getComponent(cc.Sprite).spriteFrame = N6.shine3Sprites[N7];
                N6.shine3.stopAllActions();
                N6.shine3.runAction(cc.tintTo(0.5, N0));
                N6.shine4.getComponent(cc.Sprite).spriteFrame = N6.shine4Sprites[N7];
                N6.shine4.stopAllActions();
                N6.shine4.runAction(cc.tintTo(0.5, N0));
                N6.shine5.getComponent(cc.Sprite).spriteFrame = N6.shine5Sprites[N7];
                N6.shine5.stopAllActions();
                N6.shine5.runAction(cc.fadeIn(0.55));
                N6.shine6.getComponent(cc.Sprite).spriteFrame = N6.shine6Sprites[N7];
                N6.shine6.stopAllActions();
                N6.shine6.runAction(cc.fadeIn(0.55));
                N6.frontShine7.getComponent(cc.Sprite).spriteFrame = N6.frontShine7Sprites[N7];
                N6.frontShine7.stopAllActions();
                N6.frontShine7.runAction(cc.spawn(cc.scaleTo(1.55, 4.55), cc.sequence(cc.fadeIn(0.3), cc.fadeOut(1.25))));
                N6.particles.forEach(function (NY) {
                  NY.play();
                });
                var NC = N6.topBarSpine;
                N6.topBar.getComponent(cc.Sprite).spriteFrame = N6.topBarSprites[N7];
                NC.setAnimation(0x0, k[N7] + "_spawn", false);
                NC.addAnimation(0x0, k[N7] + "_idle", true);
                N6.topBar.stopAllActions();
                N6.topBar.position = cc.v3(0x0, 0x12);
                var NT = B[N7].top;
                N6.topBar.runAction(cc.spawn(cc.fadeIn(0.6), cc.sequence(cc.moveTo(0.25, cc.v2(0x0, 1.08 * NT)), cc.moveTo(0.85, cc.v2(0x0, NT)))));
                N6.bottomBar.getComponent(cc.Sprite).spriteFrame = N6.bottomBarSprites[N7];
                N6.bottomBar.stopAllActions();
                N6.bottomBar.position = cc.v3(0x0, -0xae);
                var NL = B[N7].bottom;
                N6.bottomBar.runAction(cc.spawn(cc.fadeIn(0.6), cc.sequence(cc.moveTo(0.25, cc.v2(0x0, 1.08 * NL)), cc.moveTo(0.85, cc.v2(0x0, NL)))));
                if (Nz) {
                  Nz();
                }
              }, function (Nz) {
                if (N7 === Q.SUPER_MEGA_WIN) {
                  N6.fireworkController.play(0x0, 0.2);
                }
                if (Nz) {
                  Nz();
                }
              })(function () {
                N6.Ct = undefined;
                var Nz = N6.Pt;
                N6.Pt = undefined;
                if (Nz) {
                  Nz();
                }
              });
            }
          };
          N5.prototype.xt = function () {
            this.zt();
            if (this.Ct) {
              this.Pt = this.Ut.bind(this);
            } else {
              var N6 = this.titleNode;
              var N7 = this.titleNode.scale;
              N6.runAction(cc.sequence(cc.scaleTo(0.25, 1.2 * N7).easing(cc.easeSineOut()), cc.scaleTo(0.2, N7).easing(cc.easeSineIn())));
            }
          };
          N5.prototype.Vt = function (N6) {
            var N7 = this;
            this.fireworkController.cleanup();
            this.screenTintNode.runAction(cc.fadeOut(0.4));
            this.titleNode.runAction(cc.sequence(cc.fadeOut(0.41), cc.callFunc(function () {
              N7.titleNode.stopAllActions();
              if (N6) {
                N6();
              }
            })));
            this.numberDisplayNode.stopAllActions();
            this.numberDisplayNode.runAction(cc.fadeOut(0.41));
            this.screenTintNode.stopAllActions();
            this.screenTintNode.runAction(cc.fadeOut(0.4));
            this.Nt.stopSystem();
            this.frame1.stopAllActions();
            this.frame2.stopAllActions();
            this.frame1.runAction(cc.fadeOut(0.2));
            this.frame2.runAction(cc.fadeOut(0.2));
            this.ribbons.forEach(function (N8) {
              N8.node.runAction(cc.fadeOut(0.2));
            });
            this.shine1.stopAllActions();
            this.shine1.runAction(cc.tintTo(0.2, W.BLACK));
            this.shine2.stopAllActions();
            this.shine2.runAction(cc.tintTo(0.2, W.BLACK));
            this.petals.stopAllActions();
            this.petals.runAction(cc.fadeOut(0.2));
            this.coins.stopAllActions();
            this.coins.runAction(cc.fadeOut(0.2));
            this.shine3.stopAllActions();
            this.shine3.runAction(cc.tintTo(0.2, W.BLACK));
            this.shine4.stopAllActions();
            this.shine4.runAction(cc.tintTo(0.2, W.BLACK));
            this.shine5.stopAllActions();
            this.shine5.runAction(cc.fadeOut(0.2));
            this.shine6.stopAllActions();
            this.shine6.runAction(cc.fadeOut(0.2));
            this.frontShine7.stopAllActions();
            this.frontShine7.runAction(cc.fadeOut(0.2));
            this.topBar.stopAllActions();
            this.topBar.runAction(cc.fadeOut(0.2));
            this.bottomBar.stopAllActions();
            this.bottomBar.runAction(cc.fadeOut(0.2));
            this.Nt.stopSystem();
            this.particle1.stopSystem();
            this.particle2.stopSystem();
          };
          N5.prototype.Jt = function () {
            var N6 = this;
            this.fireworkController.cleanup();
            this.topBar.stopAllActions();
            this.topBar.position = cc.v3(0x0, 0x12);
            this.topBar.opacity = 0x0;
            this.bottomBar.stopAllActions();
            this.bottomBar.position = cc.v3(0x0, -0xae);
            this.bottomBar.opacity = 0x0;
            this.particles.forEach(function (N7) {
              N7.node.parent = N6.frontNode;
              N7.stop();
              N7.setCurrentTime(0x0);
              N7.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
            this.frontShine7.parent = this.frontNode;
            this.frontShine7.stopAllActions();
            this.frontShine7.scale = 0x3;
            this.shine3.stopAllActions();
            this.shine3.color = W.BLACK;
            this.shine4.stopAllActions();
            this.shine4.color = W.BLACK;
            this.shine5.stopAllActions();
            this.shine5.opacity = 0x0;
            this.shine6.stopAllActions();
            this.shine6.opacity = 0x0;
            this.shine2.stopAllActions();
            this.shine2.color = W.BLACK;
            this.shine2.scale = 1.2;
            this.shine4.stopAllActions();
            this.shine4.color = W.BLACK;
            this.shine5.stopAllActions();
            this.shine5.opacity = 0x0;
            this.shine6.stopAllActions();
            this.shine6.opacity = 0x0;
            this.shine1.stopAllActions();
            this.shine1.color = W.BLACK;
            this.petals.stopAllActions();
            this.petals.opacity = 0x0;
            this.petals.scale = 0x1;
            this.coins.stopAllActions();
            this.coins.opacity = 0x0;
            this.coins.scale = 0x1;
            this.flares.forEach(function (N7) {
              N7.stop();
              N7.setCurrentTime(0x0);
              N7.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
            this.ribbons.forEach(function (N7) {
              N7.node.stopAllActions();
              N7.stop();
              N7.setCurrentTime(0x0);
              N7.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
            this.titleNode.stopAllActions();
            this.titleNode.scaleX = this.titleNode.scaleY = 0x0;
            this.titleNode.opacity = 0xff;
            this.numberDisplayNode.stopAllActions();
            this.numberDisplayNode.scale = 0x0;
            this.numberDisplayNode.opacity = 0xff;
            this.screenTintNode.stopAllActions();
            this.screenTintNode.opacity = 0x0;
            this.Kt = false;
            this.Gt = false;
            this.At.spriteFrame = undefined;
            this.frame1.opacity = 0x0;
            this.frame1.scale = 0x2;
            this.frame1.stopAllActions();
            this.frame2.opacity = 0x0;
            this.frame2.scale = 0x2;
            this.frame2.stopAllActions();
          };
          N5.prototype.Ut = function () {
            if (this.Tt) {
              this.Tt();
            }
            this.Tt = V["default"].subscribeOnce(this.Qt.bind(this));
            O.spaceBarInterrupter.subscribeEventInterrupter("big_win", this.node, this.Qt.bind(this));
          };
          N5.prototype.zt = function () {
            if (this.Tt) {
              this.Tt();
            }
            this.Tt = undefined;
            O.spaceBarInterrupter.unsubscribeEventInterrupter("big_win");
          };
          N5.prototype.Qt = function () {
            this.zt();
            if (this.gt && this.St) {
              var N6 = this.Ot;
              var N7 = this.Bt;
              var N8 = this.Rt;
              this.Rt = undefined;
              if (N8) {
                N8();
              }
              if (N6 >= N7.superMegaWinThreshold) {
                this.Ht = Q.SUPER_MEGA_WIN;
              } else if (N6 >= N7.megaWinThreshold) {
                this.Ht = Q.MEGA_WIN;
              }
              this.numberDisplayNode.stopAllActions();
              this.St = false;
              this.Wt();
              this.bt.stop();
              this.pt.displayNumber(this.Ot, true);
              this.scheduleOnce(this.Ut, N1);
              var N9 = F.gDataSource.isGameReplaying ? 0x1 : N2;
              this.scheduleOnce(this.Ft, N9);
              if (this.Ht >= Q.MEGA_WIN) {
                J.playBigWinEndCoin();
              }
              if (this.Ht === Q.SUPER_MEGA_WIN) {
                J.playBigWinEndFirework();
              }
              A.delayCallback(0.4)(function () {
                var NN = {
                  displayState: "DidUpdate",
                  effectType: "BigWin"
                };
                w.emitGameEffectStateChangedEvent(NN);
              });
              this.Yt();
            } else {
              this.unschedule(this.Ft);
              this.Ft();
              J.skipBigWinEnd();
              J.stopBigWinEndCoin();
              J.stopBigWinEndFirework();
            }
          };
          N5.prototype.Yt = function () {
            var N6 = shell.ga;
            var N7 = {
              type: "Big Prize"
            };
            X.sendEvent(N6.CATEGORY_GAME, N6.EVENT_SLOT_SKIP_EFFECT, N7);
          };
          N5.prototype.Xt = function (N6) {
            return {
              'easing': function (N7) {
                return (N7 -= 0x1) * N7 * ((N6 + 0x1) * N7 + N6) + 0x1;
              },
              'reverse': function () {
                return _easeBackInObj;
              }
            };
          };
          __decorate([P(cc.Node)], N5.prototype, "screenTintNode", undefined);
          __decorate([P(cc.Node)], N5.prototype, "titleNode", undefined);
          __decorate([P(cc.Node)], N5.prototype, "titleSpriteNode", undefined);
          __decorate([P(cc.Node)], N5.prototype, "timedNumberRollNode", undefined);
          __decorate([P(cc.Node)], N5.prototype, "numberDisplayNode", undefined);
          __decorate([P(cc.Node)], N5.prototype, "coinAnimParticleNode", undefined);
          __decorate([P(cc.Node)], N5.prototype, "frame1", undefined);
          __decorate([P(cc.Node)], N5.prototype, "frame2", undefined);
          __decorate([P(cc.ParticleSystem)], N5.prototype, "particle1", undefined);
          __decorate([P(cc.ParticleSystem)], N5.prototype, "particle2", undefined);
          __decorate([P([cc.Animation])], N5.prototype, "flares", undefined);
          __decorate([P(cc.Node)], N5.prototype, "shine1", undefined);
          __decorate([P([cc.Animation])], N5.prototype, "ribbons", undefined);
          __decorate([P(cc.Node)], N5.prototype, "shine2", undefined);
          __decorate([P(cc.Node)], N5.prototype, "petals", undefined);
          __decorate([P(cc.Node)], N5.prototype, "coins", undefined);
          __decorate([P([cc.SpriteFrame])], N5.prototype, "coinType", undefined);
          __decorate([P(cc.Node)], N5.prototype, "shine3", undefined);
          __decorate([P(cc.Node)], N5.prototype, "shine4", undefined);
          __decorate([P(cc.Node)], N5.prototype, "shine5", undefined);
          __decorate([P(cc.Node)], N5.prototype, "shine6", undefined);
          __decorate([P(cc.Node)], N5.prototype, "topBar", undefined);
          __decorate([P(sp.Skeleton)], N5.prototype, "topBarSpine", undefined);
          __decorate([P(cc.Node)], N5.prototype, "bottomBar", undefined);
          __decorate([P(cc.Node)], N5.prototype, "frontShine7", undefined);
          __decorate([P(cc.Node)], N5.prototype, "frontNode", undefined);
          __decorate([P(cc.Node)], N5.prototype, "lastNode", undefined);
          __decorate([P([cc.Animation])], N5.prototype, "particles", undefined);
          __decorate([P([cc.SpriteFrame])], N5.prototype, "frame1Sprites", undefined);
          __decorate([P([cc.SpriteFrame])], N5.prototype, "shine1Sprites", undefined);
          __decorate([P([cc.SpriteFrame])], N5.prototype, "shine2Sprites", undefined);
          __decorate([P([cc.SpriteFrame])], N5.prototype, "shine3Sprites", undefined);
          __decorate([P([cc.SpriteFrame])], N5.prototype, "shine4Sprites", undefined);
          __decorate([P([cc.SpriteFrame])], N5.prototype, "shine5Sprites", undefined);
          __decorate([P([cc.SpriteFrame])], N5.prototype, "shine6Sprites", undefined);
          __decorate([P([cc.SpriteFrame])], N5.prototype, "frontShine7Sprites", undefined);
          __decorate([P([cc.SpriteFrame])], N5.prototype, "topBarSprites", undefined);
          __decorate([P([cc.SpriteFrame])], N5.prototype, "bottomBarSprites", undefined);
          __decorate([P(R["default"])], N5.prototype, "fireworkController", undefined);
          __decorate([U.automationDec({
            'func': D.initBigWinControllerNodes
          })], N5.prototype, "_initBigWinControllerNodes", null);
          __decorate([U.automationDec({
            'func': D.skipBigWinNumberRollEvent
          })], N5.prototype, "_enableSkipEvent", null);
          __decorate([U.automationDec({
            'func': D.skipBigWinAnimationEvent
          })], N5.prototype, "_skipPlay", null);
          return __decorate([j], N5);
        }(cc.Component);
        Z["default"] = N3;
        cc._RF.pop();
      }
    }, CW],
    'BigWinFireworkController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "335beYjWYpGvLsBB/D7By8d", "BigWinFireworkController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.fireworkItemPrefab = undefined;
            Z.Zt = new cc.NodePool("BigWinFireworkItem");
            Z.$t = [];
            return Z;
          }
          __extends(g, f);
          g.prototype.init = function () {
            this.ti(0xf);
          };
          g.prototype.cleanup = function () {
            var Z = this;
            this.unscheduleAllCallbacks();
            this.$t.forEach(function (b) {
              Z.ii(b.node);
            });
            this.$t = [];
          };
          g.prototype.destroy = function () {
            this.cleanup();
            this.fireworkItemPrefab = undefined;
            this.Zt.clear();
            this.node.destroy();
            return f.prototype.destroy.call(this);
          };
          g.prototype.play = function (Z, b) {
            var H = this;
            this.unscheduleAllCallbacks();
            this.schedule(function () {
              var I = H.ei();
              var K = I.node;
              var E = Math.floor(0x438 * Math.random() - 0x21c);
              var Q = Math.floor(0xc8 + 0x2a3 * Math.random());
              var X = Math.floor(0x9 + 0x6 * Math.random()) / 0xa;
              H.$t.push(I);
              H.node.addChild(K);
              I.play(cc.v3(E, Q), X, H.ii.bind(H, K));
            }, b || 0x1, cc.macro.REPEAT_FOREVER, Z);
          };
          g.prototype.ti = function (Z) {
            for (var b = 0x0; b < Z && !(this.Zt.size() >= 0x1e); b++) {
              var H = cc.instantiate(this.fireworkItemPrefab);
              this.Zt.put(H);
            }
          };
          g.prototype.ei = function () {
            return this.Zt.size() > 0x0 ? this.Zt.get().getComponent("BigWinFireworkItem") : cc.instantiate(this.fireworkItemPrefab).getComponent("BigWinFireworkItem");
          };
          g.prototype.ii = function (Z) {
            if (this.Zt.size() >= 0x1e) {
              Z.destroy();
            } else {
              this.Zt.put(Z);
            }
          };
          __decorate([G(cc.Prefab)], g.prototype, "fireworkItemPrefab", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'BigWinFireworkItem': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "2b1f4Jn+M1ENr3zAA8L1Qzm", "BigWinFireworkItem")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.fireworkAnim = undefined;
            return Z;
          }
          __extends(g, f);
          g.prototype.cleanup = function () {
            this.fireworkAnim.off("finished");
            this.fireworkAnim.setCurrentTime(0x0);
            this.fireworkAnim.stop();
            this.node.scale = 0x1;
          };
          g.prototype.play = function (Z, b, H) {
            this.cleanup();
            this.node.position = Z;
            this.node.scale = b;
            this.fireworkAnim.on("finished", function () {
              if (H) {
                H();
              }
            });
            this.fireworkAnim.play();
          };
          g.prototype.unuse = function () {
            this.cleanup();
          };
          g.prototype.destroy = function () {
            this.cleanup();
            this.node.destroy();
            return f.prototype.destroy.call(this);
          };
          __decorate([G(cc.Animation)], g.prototype, "fireworkAnim", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'BookView': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "46ec0uZUDVPMZDgV9Idp1EN", "BookView")) {
        var v = {
          value: true
        };
        Object.defineProperty(l, "__esModule", v);
        var G = {
          LEFT: 0x1,
          RIGHT: 0x2,
          NULL: 0x3
        };
        var q = L("ScrollViewEx");
        var f = cc.Enum(G);
        var Z = cc._decorator;
        var b = Z.ccclass;
        Z.property;
        var H = function (I) {
          function K() {
            var Q = null !== I && I.apply(this, arguments) || this;
            Q.ni = {};
            Q.oi = {};
            Q.ci = undefined;
            return Q;
          }
          var E = {
            get: function () {
              return this.ni;
            },
            enumerable: false,
            configurable: true
          };
          __extends(K, I);
          Object.defineProperty(K.prototype, "nodePools", E);
          Object.defineProperty(K.prototype, "templates", {
            'get': function () {
              return this.oi;
            },
            'enumerable': false,
            'configurable': true
          });
          K.prototype.register = function (Q, X, A) {
            if (this.ni[Q]) {
              ;
            } else if (X) {
              var V;
              V = A ? new cc.NodePool(A) : new cc.NodePool();
              this.oi[Q] = X;
              this.ni[Q] = V;
            }
          };
          K.prototype.setDataSource = function (Q) {
            if (Q !== this.ci) {
              this.ci = Q;
            }
          };
          K.prototype.reloadData = function () {
            this.hi();
            this.init(this.ri);
          };
          K.prototype.ai = function () {
            for (this.contentChildsLayout = []; this.content.children.length < 0x3;) {
              var Q = this.node.width;
              var X = this.node.height;
              var A = new cc.Node();
              var V = A.addComponent(cc.Layout);
              V.type = cc.Layout.Type.VERTICAL;
              A.setContentSize(Q, X);
              this.content.addChild(A);
              this.contentChildsLayout.push(V);
            }
          };
          K.prototype.ui = function () {
            var Q = this.node.width;
            var X = this.node.height;
            for (var A = 0x0; A < this.content.children.length; A++) {
              this.content.children[A].setContentSize(Q, X);
            }
            this.cellSize = Q;
            this.maxScrollArea = cc.v2(0x0 * -this.cellSize, 0x2 * -this.cellSize);
            var V = this.li >= this.content.children.length ? this.content.children.length : this.li;
            this.distance = this.cellSize;
            var W = this.contentLayout.spacingX / V;
            this.distance += W;
            this.fi(this.currIndex);
          };
          K.prototype.di = function () {
            this.node.on("size-changed", this.ui, this);
          };
          K.prototype.hi = function () {
            this.node.off("size-changed", this.ui, this);
          };
          K.prototype.init = function (Q) {
            this.di();
            this.ai();
            this.contentLayout = this.content.getComponent(cc.Layout);
            this.cellSize = this.node.width;
            this.target = 0x0;
            this.originalSpeed = this.speed;
            this.freeCells = [];
            this.dir = f.NULL;
            this.selected = true;
            this.ri = Q;
            this.li = 0x0;
            this.constChildList = [];
            this.middleIndex = Math.floor(this.content.children.length / 0x2);
            this.currIndex = 0x0;
            this.itemOffSet = 0x0;
            this.snapPause = false;
            this.maxScrollArea = cc.v2(0x0 * -this.cellSize, 0x2 * -this.cellSize);
            this.li = this.ci.getCount(this, Q);
            for (var X = 0x0; X < this.content.children.length; X++) {
              var A = undefined;
              if (X <= this.li - 0x1) {
                if (this.content.children[X].children.length) {
                  this.vi(this.content.children[X].children[0x0]);
                  (A = this.ci.getItem(this, X, Q)).parent = this.content.children[X];
                  this.content.children[X].zIndex = X;
                  A.cellIndex = X % this.li;
                  this.content.children[X].slotID = X;
                  this.constChildList.push(A);
                } else {
                  this.content.children[X].zIndex = X;
                  (A = this.ci.getItem(this, X, Q)).parent = this.content.children[X];
                  this._i(A);
                  A.cellIndex = X % this.li;
                  this.content.children[X].slotID = X;
                  this.constChildList.push(A);
                }
              } else {
                this.content.children[X].zIndex = X;
                this.content.children[X].slotID = X;
              }
              if (this.li - 0x1 >= X) {
                this.content.children[X].active = true;
              } else {
                this.content.children[X].active = false;
              }
            }
            if (this.li >= this.content.children.length) {
              this.totalItems = this.content.children.length - 0x1;
            } else {
              this.totalItems = this.li - 0x1;
            }
            var V = this.li >= this.content.children.length ? this.content.children.length : this.li;
            this.distance = this.cellSize;
            var W = this.contentLayout.spacingX / V;
            this.distance += W;
            this.fi(this.currIndex);
          };
          K.prototype.toLeftItem = function () {
            var Q = this.content.children[0x0].children[0x0].cellIndex - 0x1;
            if (0x2 === this.currIndex) {
              this.currIndex -= 0x1;
              this.fi(this.currIndex);
              return void (this.nextAppearTarget && this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex));
            }
            if (Q < 0x0) {
              if (0x0 === this.currIndex) {
                if (this.closeFromLeft) {
                  this.closeFromLeft();
                }
                this.fi(this.currIndex);
              } else {
                this.currIndex = 0x0;
                this.fi(this.currIndex);
                if (this.cancelCloseBook) {
                  this.cancelCloseBook();
                }
                if (this.nextAppearTarget) {
                  this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex);
                }
              }
            } else {
              for (var X = 0x0; X < this.content.children.length; X++) {
                if (X === this.content.children.length - 0x1) {
                  if (Q < 0x0) {
                    Q = this.li - 0x1;
                  }
                  this.vi(this.content.children[X].children[0x0]);
                  var A = this.ci.getItem(this, Q, this.ri);
                  this.constChildList[this.content.children[X].slotID] = A;
                  this.constChildList[this.content.children[X].slotID].cellIndex = Q;
                  this.content.children[X].zIndex = 0x0;
                  A.parent = this.content.children[X];
                } else {
                  this.content.children[X].zIndex += 0x1;
                }
              }
              this.resetLayout = true;
              this.changeIndexTo = 0x0;
              this.currIndex -= 0x1;
              if (this.nextAppearTarget) {
                this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex);
              }
              this.contentLayout.updateLayout();
              this.content.x = this.content.x + this.itemOffSet;
              this.snapDone = false;
              this.currIndex = this.middleIndex;
            }
          };
          K.prototype.toRightItem = function () {
            var Q = this.content.children[this.totalItems].children[0x0].cellIndex + 0x1;
            if (0x0 === this.currIndex && this.currIndex < this.totalItems) {
              this.currIndex += 0x1;
              this.fi(this.currIndex);
              return void (this.nextAppearTarget && this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex));
            }
            if (Q > this.li - 0x1) {
              if (this.currIndex === this.totalItems) {
                if (this.closeFromRight) {
                  this.closeFromRight();
                }
                this.fi(this.currIndex);
              } else {
                this.currIndex = this.totalItems;
                this.fi(this.currIndex);
                if (this.cancelCloseBook) {
                  this.cancelCloseBook();
                }
                if (this.nextAppearTarget) {
                  this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex);
                }
              }
            } else {
              for (var X = this.content.children.length - 0x1; X >= 0x0; X--) {
                if (0x0 === X) {
                  if (Q >= this.li) {
                    Q = 0x0;
                  }
                  this.vi(this.content.children[X].children[0x0]);
                  var A = this.ci.getItem(this, Q, this.ri);
                  this.constChildList[this.content.children[X].slotID] = A;
                  this.constChildList[this.content.children[X].slotID].cellIndex = Q;
                  this.content.children[X].zIndex = this.content.children.length - 0x1;
                  A.parent = this.content.children[X];
                } else {
                  this.content.children[X].zIndex -= 0x1;
                }
              }
              this.resetLayout = true;
              this.changeIndexTo = 0x2;
              this.currIndex += 0x1;
              if (this.nextAppearTarget) {
                this.nextAppearTarget(this.constChildList[this.content.children[this.currIndex].slotID].cellIndex);
              }
              this.contentLayout.updateLayout();
              this.content.x = this.content.x + this.itemOffSet;
              this.snapDone = false;
              this.currIndex = this.middleIndex;
            }
          };
          K.prototype.setElasticLeft = function (Q) {
            this.elasticLeft = Q;
          };
          K.prototype.setElasticRight = function (Q) {
            this.elasticRight = Q;
          };
          K.prototype.setClosingFromLeft = function (Q) {
            this.closingFromLeft = Q;
          };
          K.prototype.setCloseFromLeft = function (Q) {
            this.closeFromLeft = Q;
          };
          K.prototype.setClosingFromRight = function (Q) {
            this.closingFromRight = Q;
          };
          K.prototype.setCloseFromRight = function (Q) {
            this.closeFromRight = Q;
          };
          K.prototype.setCancelCloseBook = function (Q) {
            this.cancelCloseBook = Q;
          };
          K.prototype.setStartScrolling = function (Q) {
            this.startScrolling = Q;
          };
          K.prototype.getAllItems = function () {
            var Q = [];
            this.content.children.forEach(function (X) {
              if (X.children.length) {
                Q.push(X.children[0x0]);
              }
            });
            return Q;
          };
          K.prototype.scrollTo = function (Q) {
            if (this.snapDone && !this.snapPause) {
              var X = this.content.children[this.currIndex].children[0x0].cellIndex;
              if (X !== Q && !(Q > this.li - 0x1 || Q < 0x0)) {
                if (Q > X) {
                  if (Q === X + 0x1) {
                    if (0x0 === this.currIndex) {
                      this.toRightItem();
                    } else {
                      this.dir = f.RIGHT;
                      this.itemOffSet = this.cellSize;
                      this.mi();
                    }
                  } else if (0x0 === this.currIndex) {
                    var A = this.content.children.length - 0x1;
                    this.vi(this.content.children[A].children[0x0]);
                    var V = this.ci.getItem(this, Q, this.ri);
                    this.constChildList[this.content.children[A].slotID] = V;
                    this.constChildList[this.content.children[A].slotID].cellIndex = Q;
                    V.parent = this.content.children[A];
                    this.speed = 0xa;
                    this.currIndex = 0x2;
                    this.reloadCells = true;
                    this.fi(this.currIndex);
                  } else {
                    var W = Q;
                    for (var J = this.content.children.length - 0x1; J >= 0x0; J--) {
                      if (0x0 === J) {
                        this.content.children[J].zIndex = 0x2;
                        this.vi(this.content.children[J].children[0x0]);
                        V = this.ci.getItem(this, W, this.ri);
                        this.constChildList[this.content.children[J].slotID] = V;
                        this.constChildList[this.content.children[J].slotID].cellIndex = W;
                        V.parent = this.content.children[J];
                      } else {
                        this.content.children[J].zIndex = 0x1 === J ? 0x0 : 0x1;
                      }
                    }
                    this.currIndex = 0x0;
                    this.changeIndexTo = 0x2;
                    this.changeContentPos = true;
                  }
                } else if (Q === X - 0x1) {
                  if (0x2 === this.currIndex) {
                    this.toLeftItem();
                  } else {
                    this.dir = f.LEFT;
                    this.itemOffSet = -this.cellSize;
                    this.mi();
                  }
                } else if (this.currIndex === this.content.children.length - 0x1) {
                  W = 0x0;
                  this.vi(this.content.children[W].children[0x0]);
                  V = this.ci.getItem(this, Q, this.ri);
                  this.constChildList[this.content.children[W].slotID] = V;
                  this.constChildList[this.content.children[W].slotID].cellIndex = Q;
                  V.parent = this.content.children[W];
                  this.speed = 0xa;
                  this.currIndex = 0x0;
                  this.reloadCells = true;
                  this.fi(this.currIndex);
                } else {
                  A = Q;
                  for (J = this.content.children.length - 0x1; J >= 0x0; J--) {
                    if (0x2 === J) {
                      this.content.children[J].zIndex = 0x0;
                      this.vi(this.content.children[J].children[0x0]);
                      V = this.ci.getItem(this, A, this.ri);
                      this.constChildList[this.content.children[J].slotID] = V;
                      this.constChildList[this.content.children[J].slotID].cellIndex = A;
                      V.parent = this.content.children[J];
                    } else {
                      this.content.children[J].zIndex = 0x1 === J ? 0x2 : 0x1;
                    }
                  }
                  this.currIndex = 0x2;
                  this.changeIndexTo = 0x0;
                  this.changeContentPos = true;
                }
              }
            }
          };
          K.prototype.dequeueReusableItem = function (Q) {
            var X;
            var A = this.ni[Q];
            if (A) {
              if (!(X = A.get())) {
                var V = this.oi[Q];
                X = cc.instantiate(V);
              }
              X.lv_type = Q;
            }
            return X;
          };
          K.prototype.vi = function (Q) {
            var X;
            var A = Q.lv_type;
            if (A) {
              X = this.ni[A];
            }
            if (X) {
              X.put(Q);
            }
          };
          K.prototype.pi = function () {
            var Q = this.content.children[this.currIndex].children[0x0].cellIndex;
            if (Q === this.li - 0x1) {
              var X = Q - 0x2;
              var A = Q - 0x1;
              for (var V = this.content.children.length - 0x1; V >= 0x0; V--) {
                if (0x0 === V) {
                  this.vi(this.content.children[V].children[0x0]);
                  var W = this.ci.getItem(this, X, this.ri);
                  this.constChildList[this.content.children[V].slotID] = W;
                  this.constChildList[this.content.children[V].slotID].cellIndex = X;
                  W.parent = this.content.children[V];
                } else if (0x1 === V) {
                  this.vi(this.content.children[V].children[0x0]);
                  W = this.ci.getItem(this, A, this.ri);
                  this.constChildList[this.content.children[V].slotID] = W;
                  this.constChildList[this.content.children[V].slotID].cellIndex = A;
                  W.parent = this.content.children[V];
                }
              }
            } else if (0x0 === Q) {
              A = Q + 0x1;
              var J = Q + 0x2;
              for (V = this.content.children.length - 0x1; V >= 0x0; V--) {
                if (0x1 === V) {
                  this.vi(this.content.children[V].children[0x0]);
                  W = this.ci.getItem(this, A, this.ri);
                  this.constChildList[this.content.children[V].slotID] = W;
                  this.constChildList[this.content.children[V].slotID].cellIndex = A;
                  W.parent = this.content.children[V];
                } else if (0x2 === V) {
                  this.vi(this.content.children[V].children[0x0]);
                  W = this.ci.getItem(this, J, this.ri);
                  this.constChildList[this.content.children[V].slotID] = W;
                  this.constChildList[this.content.children[V].slotID].cellIndex = J;
                  W.parent = this.content.children[V];
                }
              }
            } else if (0x0 === this.currIndex) {
              A = Q + 0x1;
              J = Q - 0x1;
              for (V = this.content.children.length - 0x1; V >= 0x0; V--) {
                if (0x1 === V) {
                  this.content.children[V].zIndex = 0x2;
                  this.vi(this.content.children[V].children[0x0]);
                  W = this.ci.getItem(this, A, this.ri);
                  this.constChildList[this.content.children[V].slotID] = W;
                  this.constChildList[this.content.children[V].slotID].cellIndex = A;
                  W.parent = this.content.children[V];
                } else if (0x2 === V) {
                  this.content.children[V].zIndex = 0x0;
                  this.vi(this.content.children[V].children[0x0]);
                  W = this.ci.getItem(this, J, this.ri);
                  this.constChildList[this.content.children[V].slotID] = W;
                  this.constChildList[this.content.children[V].slotID].cellIndex = J;
                  W.parent = this.content.children[V];
                } else {
                  this.content.children[V].zIndex = 0x1;
                }
              }
              this.resetContentPos = true;
            } else {
              X = Q + 0x1;
              A = Q - 0x1;
              for (V = this.content.children.length - 0x1; V >= 0x0; V--) {
                if (0x0 === V) {
                  this.content.children[V].zIndex = 0x2;
                  this.vi(this.content.children[V].children[0x0]);
                  W = this.ci.getItem(this, X, this.ri);
                  this.constChildList[this.content.children[V].slotID] = W;
                  this.constChildList[this.content.children[V].slotID].cellIndex = X;
                  W.parent = this.content.children[V];
                } else if (0x1 === V) {
                  this.content.children[V].zIndex = 0x0;
                  this.vi(this.content.children[V].children[0x0]);
                  W = this.ci.getItem(this, A, this.ri);
                  this.constChildList[this.content.children[V].slotID] = W;
                  this.constChildList[this.content.children[V].slotID].cellIndex = A;
                  W.parent = this.content.children[V];
                } else {
                  this.content.children[V].zIndex = 0x1;
                }
              }
              this.resetContentPos = true;
            }
          };
          K.prototype.fi = function (Q) {
            if (!(Q > this.totalItems || Q < 0x0)) {
              this.currIndex = Q;
              this.target = -this.currIndex * this.distance;
              this.snapDone = false;
            }
          };
          K.prototype.mi = function () {
            if (this.dir === f.LEFT && this.content.x > this.maxScrollArea.y) {
              this.toLeftItem();
            } else if (this.dir === f.RIGHT && this.content.x < this.maxScrollArea.x) {
              this.toRightItem();
            }
            this.dir = f.NULL;
          };
          K.prototype.update = function (Q) {
            var X = this;
            if (this.snapDone || this.snapPause) {
              if (this.changeContentPos) {
                this.changeContentPos = false;
                this.target = -this.currIndex * this.distance;
                this.content.x = -this.currIndex * this.distance;
                this.fi(this.changeIndexTo);
                this.reloadCells = true;
              }
            } else {
              this.content.x = this.bi(this.content.x, this.target, Q, this.speed, function () {
                if (X.snapFinish) {
                  X.snapFinish(X.constChildList[X.content.children[X.currIndex].slotID].cellIndex);
                }
                if (X.reloadCells) {
                  X.reloadCells = false;
                  X.speed = X.originalSpeed;
                  X.pi();
                }
              });
              if (this.resetContentPos) {
                this.resetContentPos = false;
                this.currIndex = this.middleIndex;
                this.target = -this.currIndex * this.distance;
                this.content.x = -this.currIndex * this.distance;
              }
              this.content.sortAllChildren();
            }
          };
          K.prototype.Si = function (Q, X) {
            if (!this.reloadCells && this.content.children.length) {
              this.snapPause = true;
              var A = Q.touch;
              var V = cc.v2(A.getLocation().x, A.getLocation().y);
              this.startPos = V;
              this.gi(Q, X);
            } else {
              this.startPos = null;
            }
          };
          K.prototype.tt = function (Q, X) {
            var A = Q.touch;
            var V = cc.v2(A.getLocation().x, A.getLocation().y);
            if (this.startPos && this.content.children.length) {
              if (this.startPos.x < V.x) {
                if (null != this.elasticLeft) {
                  this.elastic = this.elasticLeft;
                }
                if (0x0 === this.content.children[0x0].children[0x0].cellIndex && 0x0 === this.currIndex) {
                  if (this.selected && this.closingFromLeft) {
                    this.closingFromLeft(this.startPos.x, V.x);
                  }
                  if (0x0 !== this.content.x && this.selected) {
                    this.Ci(Q, X);
                  }
                } else if (this.selected) {
                  this.Ci(Q, X);
                }
              } else {
                if (null != this.elasticRight) {
                  this.elastic = this.elasticRight;
                }
                if (this.content.children[this.totalItems].children[0x0].cellIndex + 0x1 === this.li && this.currIndex === this.totalItems) {
                  if (this.selected && this.closingFromRight) {
                    this.closingFromRight(this.startPos.x, V.x);
                  }
                  if (this.content.x !== this.content.width && this.selected) {
                    this.Ci(Q, X);
                  }
                } else if (this.selected) {
                  this.Ci(Q, X);
                }
              }
              if (this.content.x > 0x0 && null != this.elasticLeft) {
                this.elastic = this.elasticLeft;
              } else if (this.content.x > -this.content.width && null != this.elasticRight) {
                this.elastic = this.elasticRight;
              }
            }
          };
          K.prototype.yi = function (Q, X) {
            if (!this.reloadCells && this.content.children.length) {
              this.dragElastic = false;
              var A = Q.touch;
              var V = cc.v2(A.getLocation().x, A.getLocation().y);
              this.currentPos = V;
              if (this.startPos) {
                if (this.Mi(this.startPos.x, this.currentPos.x) && this.selected) {
                  if (this.dir != f.RIGHT && this.startPos.x > this.currentPos.x) {
                    this.dir = f.RIGHT;
                    this.itemOffSet = this.cellSize;
                    this.mi();
                    if (this.cancelCloseBook) {
                      this.cancelCloseBook();
                    }
                  } else if (this.dir != f.LEFT && this.startPos.x < this.currentPos.x) {
                    this.dir = f.LEFT;
                    this.itemOffSet = -this.cellSize;
                    this.mi();
                  } else {
                    this.fi(this.currIndex);
                    if (this.cancelCloseBook) {
                      this.cancelCloseBook();
                    }
                  }
                } else {
                  this.fi(this.currIndex);
                  if (this.cancelCloseBook) {
                    this.cancelCloseBook();
                  }
                }
                this.snapPause = false;
                this.Ai(Q, X);
              }
            }
          };
          K.prototype.Ii = function (Q, X) {
            if (!this.reloadCells && this.content.children.length) {
              this.dragElastic = false;
              var A = Q.touch;
              var V = cc.v2(A.getLocation().x, A.getLocation().y);
              this.currentPos = V;
              if (this.startPos) {
                if (this.Mi(this.startPos.x, this.currentPos.x) && this.selected) {
                  if (this.dir != f.RIGHT && this.startPos.x > this.currentPos.x) {
                    this.dir = f.RIGHT;
                    this.itemOffSet = this.cellSize;
                    this.mi();
                    if (this.cancelCloseBook) {
                      this.cancelCloseBook();
                    }
                  } else if (this.dir != f.LEFT && this.startPos.x < this.currentPos.x) {
                    this.dir = f.LEFT;
                    this.itemOffSet = -this.cellSize;
                    this.mi();
                  } else {
                    this.fi(this.currIndex);
                    if (this.cancelCloseBook) {
                      this.cancelCloseBook();
                    }
                  }
                } else {
                  this.fi(this.currIndex);
                  if (this.cancelCloseBook) {
                    this.cancelCloseBook();
                  }
                }
                this.snapPause = false;
                this.wi(Q, X);
              }
            }
          };
          K.prototype.gi = function (Q) {
            this.clickBegan = true;
            if (this.enabledInHierarchy) {
              var X = Q.touch;
              if (this.content) {
                this.Oi(X);
              }
              this.Hi = false;
              this.Bi(Q);
            }
          };
          K.prototype.Ci = function (Q) {
            if (this.clickBegan) {
              this.clickBegan = false;
              if (this.startScrolling) {
                this.startScrolling();
              }
            }
            if (this.enabledInHierarchy) {
              var X = Q.touch;
              if (this.content) {
                this.Gi(X);
              }
              if (this.cancelInnerEvents) {
                var A;
                A = X.getLocation();
                X.getStartLocation();
                var V = A.mag();
                if (V.sub(undefined) > 0x7 && !this.Hi && Q.target !== this.node) {
                  var W = new cc.Event.EventTouch(Q.getTouches(), Q.bubbles);
                  W.type = cc.Node.EventType.TOUCH_CANCEL;
                  W.touch = Q.touch;
                  W.simulate = true;
                  Q.target.dispatchEvent(W);
                  this.Hi = true;
                }
                this.Bi(Q);
              }
            }
          };
          K.prototype.Ai = function (Q) {
            this.clickBegan = false;
            if (this.enabledInHierarchy) {
              var X = Q.touch;
              if (this.content) {
                this.Ni(X);
              }
              this.Ti("touch-up");
              if (this.Hi) {
                Q.stopPropagation();
              } else {
                this.Bi(Q);
              }
            }
          };
          K.prototype.wi = function (Q) {
            this.clickBegan = false;
            if (this.enabledInHierarchy) {
              if (!Q.simulate) {
                var X = Q.touch;
                if (this.content) {
                  this.Ni(X);
                }
              }
              this.Bi(Q);
            }
          };
          K.prototype.Pi = function () {
            if (this.Li && this.Li.getScrollY() > 0x0) {
              this.dir = f.RIGHT;
            } else if (this.Li && this.Li.getScrollY() < 0x0) {
              this.dir = f.LEFT;
            }
          };
          K.prototype.Ri = function () {
            this.snapPause = true;
            this.snapDone = true;
          };
          K.prototype.Ei = function () {
            this.itemOffSet = this.cellSize;
            this.mi();
            this.snapPause = false;
            this.Li = undefined;
          };
          K.prototype.ki = function (Q) {
            if (this.content.children.length && this.enabledInHierarchy) {
              this.Li = Q;
              var X = cc.v2(0x0, 0x0);
              if (this.vertical) {
                X = cc.v2(0x0, -0.1 * Q.getScrollY());
              } else if (this.horizontal) {
                X = cc.v2(-0.1 * Q.getScrollY(), 0x0);
                this.Pi();
              }
              this.Ui = 0x0;
              this.ji(X);
              if (!this.Di) {
                this.Oi();
                this.schedule(this.Wi, 0.016666666666666666);
                this.Di = true;
                this.Ri();
              }
              this.Bi(Q);
            }
          };
          K.prototype.Wi = function (Q) {
            var X;
            var A;
            X = this.xi();
            A = cc.v2(0x0, 0x0);
            0.0001;
            if (!X.fuzzyEquals(A, 0.0001)) {
              this.Fi();
              this.unschedule(this.Wi);
              this.Di = false;
              return void this.Ei();
            }
            this.Ui += Q;
            if (this.Ui > 0.1) {
              this.Vi();
              this.unschedule(this.Wi);
              this.Di = false;
              this.Ei();
            }
          };
          return __decorate([b], K);
        }(q["default"]);
        l["default"] = H;
        cc._RF.pop();
      }
    }, CJ],
    'ButtonBackground': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "96252/qWvdGA7VOxWpX5d7v", "ButtonBackground")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("UIAppearanceHelper");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.background = undefined;
            b.backgroundColorKey = '';
            return b;
          }
          __extends(Z, g);
          Z.prototype.onLoad = function () {
            this.background.color = r.uiAppearanceHelper.v('' + this.backgroundColorKey) ? r.uiAppearanceHelper.v('' + this.backgroundColorKey) : r.uiAppearanceHelper.v("setting.theme_color");
          };
          __decorate([q(cc.Node)], Z.prototype, "background", undefined);
          __decorate([q(cc.String)], Z.prototype, "backgroundColorKey", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, Cw],
    'ButtonController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "b879fiUzY1Om5HhXaCp7Qrf", "ButtonController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator.ccclass;
        var v = function (G) {
          function q() {
            var c = null !== G && G.apply(this, arguments) || this;
            c.zi = undefined;
            return c;
          }
          __extends(q, G);
          q.prototype.setClickCallback = function (c) {
            this.zi = c;
          };
          q.prototype.onClick = function () {
            if (this.zi) {
              this.zi();
            }
          };
          q.prototype.clearClickCallback = function () {
            this.zi = undefined;
          };
          q.prototype.getControllerAndHandlerName = function () {
            var c = {
              ControllerName: "ButtonController",
              HandlerName: "onClick"
            };
            return c;
          };
          return __decorate([r], q);
        }(cc.Component);
        Y["default"] = v;
        cc._RF.pop();
      }
    }, {}],
    'ButtonHitTest': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "95aac3PHb1J8pXlbPzijfq9", "ButtonHitTest")) {
        Y.__esModule = true;
        Y.buttonHitTest = function (v) {
          var G = cc.EventListener.ListenerID.TOUCH_ONE_BY_ONE;
          cc.internal.eventManager[r.Ji](G, cc.director.getScene());
          var q = cc.internal.eventManager[r.qi](G);
          if (!q) {
            return false;
          }
          var f;
          var g = q[r.Ki];
          var Z = v.parent.convertToWorldSpaceAR(v.getPosition());
          for (var b = 0x0; b < g.length; ++b) {
            if (g[b].owner[r.Qi](Z, g[b])) {
              f = g[b].owner;
              break;
            }
          }
          return f && f === v;
        };
        var l = {
          'Ji': "_sortListenersOfSceneGraphPriority",
          'qi': "_getListeners",
          'Qi': "_hitTest",
          'Ki': "_sceneGraphListeners"
        };
        var r = cc.Enum(l);
        cc._RF.pop();
      }
    }, {}],
    'ButtonTheme': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "2a5d1nUeQZE9KCVbljwPCZP", "ButtonTheme")) {
        l.__esModule = true;
        l["default"] = undefined;
        var r = {
          NONE: 0x0,
          COLOR: 0x1,
          SPRITE: 0x2,
          SCALE: 0x3
        };
        var v = {
          tooltip: false,
          "default": ''
        };
        var G = L("UIAppearanceHelper");
        var q = cc.Enum(r);
        var c = cc.Class({
          'extends': cc.Component,
          'ctor': function () {},
          'editor': false,
          'properties': {
            'transition': {
              'default': q.NONE,
              'tooltip': false,
              'type': q,
              'animatable': false,
              'notify': function () {
                this.Yi();
              }
            },
            'domainKey': v,
            'colorKey': {
              'tooltip': false,
              'default': '',
              'notify': function () {
                this.Xi();
              }
            }
          },
          'onLoad': function () {
            this.Zi = this.node.getComponent(cc.Button);
            this.Yi();
            this.Xi();
          },
          'Yi': function () {
            var f = this.Zi;
            if (f) {
              f.transition = this.transition;
            }
          },
          'Xi': function () {
            var f = this.Zi;
            if (f && this.transition == q.COLOR) {
              this.domainKey;
              this.colorKey;
              var g = G.uiAppearanceHelper.v(this.domainKey + '.' + this.colorKey + ".normal");
              var Z = G.uiAppearanceHelper.v(this.domainKey + '.' + this.colorKey + ".pressed");
              var b = G.uiAppearanceHelper.v(this.domainKey + '.' + this.colorKey + ".hover");
              var H = G.uiAppearanceHelper.v(this.domainKey + '.' + this.colorKey + ".disabled");
              if (g) {
                f.node.opacity = g.getA();
                f.normalColor = g;
                f.pressedColor = Z;
                f.hoverColor = b;
                f.disabledColor = H;
              }
            }
          }
        });
        l["default"] = c;
        Y.exports = l["default"];
        cc._RF.pop();
      }
    }, CO],
    'Button': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "0a573tIV9xKS4qfPLe+tVuo", "Button")) {
        var r = {
          value: true
        };
        Object.defineProperty(l, "__esModule", r);
        var v = {
          '$i': "_transitionFinished",
          'ts': "_fromColor",
          'ss': "_toColor",
          'es': "_fromScale",
          'ns': "_toScale",
          'os': "_pressed"
        };
        var G = cc.Enum(v);
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.targetCascadeOpacity = false;
            I.hs = undefined;
            return I;
          }
          __extends(H, b);
          H.prototype.update = function (I) {
            var K = this.target;
            if (!this[G.$i] && (this.transition === cc.Button.Transition.COLOR || this.transition === cc.Button.Transition.SCALE)) {
              this.time += I;
              var E;
              var Q;
              var X;
              var A = 0x1;
              if (this.duration > 0x0) {
                A = this.time / this.duration;
              }
              if (A >= 0x1) {
                A = 0x1;
                this[G.$i] = true;
              }
              if (this.transition === cc.Button.Transition.COLOR) {
                this[G.ts].a = K.opacity;
                var V = this[G.ts].lerp(this[G.ss], A);
                K.opacity = V.a;
                V.a = 0xff;
                K.color = V;
              } else if (this.transition === cc.Button.Transition.SCALE) {
                E = this[G.es];
                Q = this[G.ns];
                X = A;
                K.scale = cc.misc.lerp(E, Q, X);
              }
            }
          };
          H.prototype.Si = function (I) {
            this.hs = this.node.parent.convertToWorldSpaceAR(I.touch.getLocation());
            b.prototype.Si.call(this, I);
          };
          H.prototype.rs = function (I) {
            var K;
            if (this[G.os]) {
              K = this.node.parent.convertToWorldSpaceAR(I.touch.getLocation());
              if (this.hs.sub(K).mag() > 0x32) {
                this[G.os] = false;
                this.hs = undefined;
              }
            } else {
              this.hs = undefined;
            }
            b.prototype.rs.call(this, I);
          };
          __decorate([g(cc.Boolean)], H.prototype, "targetCascadeOpacity", undefined);
          return __decorate([f], H);
        }(cc.Button);
        l["default"] = Z;
        cc._RF.pop();
      }
    }, {}],
    'CanvasResizeBroadcaster': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "1bceeNXbqdLOquKoj3nUFeA", "CanvasResizeBroadcaster")) {
        var L = System.get("common").CanvasResizeBroadcaster;
        z.exports["default"] = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'ClickEffectController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "9c1bbOo47dBVKQhy7Uc4JE2", "ClickEffectController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.flashSpriteNode = undefined;
            Z.clickEffectNode = undefined;
            Z.as = undefined;
            return Z;
          }
          __extends(g, f);
          g.prototype.onLoad = function () {
            this.as = this.clickEffectNode.getComponent(cc.Animation);
          };
          g.prototype.showClickEffect = function (Z) {
            var b = this.node.convertToNodeSpaceAR(Z);
            this.clickEffectNode.setPosition(b);
            this.as.play("click_effect");
          };
          g.prototype.showFlash = function () {
            this.flashSpriteNode.runAction(cc.sequence(cc.spawn(cc.scaleTo(0.3, 0x96), cc.sequence(cc.delayTime(0.05), cc.fadeOut(0.3))), cc.callFunc(this.us, this)));
          };
          g.prototype.us = function () {
            var Z = this.flashSpriteNode;
            Z.opacity = 0x80;
            Z.scale = 0x0;
          };
          __decorate([G(cc.Node)], g.prototype, "flashSpriteNode", undefined);
          __decorate([G(cc.Node)], g.prototype, "clickEffectNode", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'ColumnTintController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "db1a7ck92RH5IUeHU4fUx37", "ColumnTintController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.columnTintHolder = [];
            return Z;
          }
          __extends(g, f);
          g.prototype.fadeIn = function (Z, b, H) {
            this.columnTintHolder[Z].stopAllActions();
            this.columnTintHolder[Z].runAction(cc.sequence(cc.fadeTo(b, 0x8f), cc.callFunc(function () {
              if (H) {
                H();
              }
            })));
          };
          g.prototype.fadeOut = function (Z, b, H) {
            this.columnTintHolder[Z].stopAllActions();
            this.columnTintHolder[Z].runAction(cc.sequence(cc.fadeOut(b), cc.callFunc(function () {
              if (H) {
                H();
              }
            })));
          };
          __decorate([G([cc.Node])], g.prototype, "columnTintHolder", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'CommonDummy': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "b1293aDfltLSYBmQFiPHMGc", "CommonDummy")) {
        cc._RF.pop();
      }
    }, {}],
    'CreatorTweaks': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "a569ek937NGRIiNfWZy/vYu", "CreatorTweaks")) {
        z.exports = {};
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'CustomAnimParticleSystem': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "335a9gVv9pMJJVIVvm5+mNc", "CustomAnimParticleSystem")) {
        l.__esModule = true;
        l["default"] = undefined;
        var v = {
          LINEAR: 0x0,
          GRAVITY: 0x1
        };
        var G = {
          colorDelay: 0x0
        };
        var q;
        var f = (q = L("AnimParticleSystem")) && q.__esModule ? q : {
          'default': q
        };
        var g = cc.Enum(v);
        var Z = cc.Class({
          'extends': f["default"],
          'properties': G,
          'O': function (N0) {
            var N1 = this;
            var N2 = this.life + this.lifeVar * (Math.random() - 0.5) * 0x2;
            var N3 = this.sourcePos;
            var N4 = this.sourcePosVar;
            var N5 = N3.x + N4.x * (Math.random() - 0.5) * 0x2;
            var N6 = N3.y + N4.y * (Math.random() - 0.5) * 0x2;
            N0.setPosition(N5, N6);
            N0.angle = -(this.startSpin + this.startSpinVar * (Math.random() - 0.5) * 0x2);
            N0.scale = this.startScale + this.startScaleVar * (Math.random() - 0.5) * 0x2;
            N0.opacity = this.startAlpha + this.startAlphaVar * (Math.random() - 0.5) * 0x2;
            var N7 = this.speed + this.speedVar * (Math.random() - 0.5) * 0x2;
            var N8 = this.angle + this.angleVar * (Math.random() - 0.5) * 0x2;
            var N9 = [];
            var NN = Math.cos(N8 / 0xb4 * Math.PI) * N7 * N2;
            var Nz = Math.sin(N8 / 0xb4 * Math.PI) * N7 * N2;
            var NC = N5 + NN;
            var NT = N6 + Nz;
            if (this.emitterMode === g.LINEAR) {
              var NL = cc.moveTo(N2, cc.v2(NC, NT));
              N9.push(NL);
            } else if (this.emitterMode === g.GRAVITY) {
              var NY = this.gravityVec;
              var Nl = this.gravityVecVar;
              var Nr = NY.x + Nl.x * (Math.random() - 0.5) * 0x2;
              var Nt = NY.y + Nl.y * (Math.random() - 0.5) * 0x2;
              var Nv = N5 + NN / 0x3;
              var NG = N6 + Nz / 0x3;
              var Nq = N5 + NN / 0x3 * 0x2;
              var Nc = N6 + Nz / 0x3 * 0x2;
              var Ng = 0x3c * N2 / 0x3;
              var Ns = this.B(Nr, Ng);
              var NZ = this.B(Nt, Ng);
              var Ni = 0x2 * Ng;
              var Nb = this.B(Nr, Ni);
              var NH = this.B(Nt, Ni);
              var NI = 0x3 * Ng;
              var NK = this.B(Nr, NI);
              var NE = this.B(Nt, NI);
              var NQ = NC > 0x0 ? 0x1 : -0x1;
              var NX = cc.v2(Nv - Ns * NQ, NG - NZ);
              var No = cc.v2(Nq - Nb * NQ, Nc - NH);
              var NA = cc.v2(NC - NK * NQ, NT - NE);
              var NV = cc.bezierTo(N2, [NX, No, NA]);
              N9.push(NV);
            }
            var NW = this.endScale + this.endScaleVar * (Math.random() - 0.5) * 0x2;
            if (N0.scale !== NW) {
              var NJ = cc.scaleTo(N2, NW);
              N9.push(NJ);
            }
            var Nw = this.endSpin + this.endSpinVar * (Math.random() - 0.5) * 0x2;
            if (N0.angle !== -Nw) {
              var NO = cc.rotateTo(N2, Nw, Nw);
              N9.push(NO);
            }
            var Na = this.endAlpha + this.endAlphaVar * (Math.random() - 0.5) * 0x2;
            if (N0.opacity !== Na) {
              var NF = cc.fadeTo(N2, Na);
              N9.push(NF);
            }
            var Nh = this.startColor;
            var ND = this.startColorVar;
            var NU = this.endColor;
            var Nu = this.endColorVar;
            if (!(Nh.equals(cc.Color.WHITE) && ND.equals(cc.Color.BLACK) && NU.equals(cc.Color.WHITE) && Nu.equals(cc.Color.BLACK))) {
              if (ND.equals(cc.Color.BLACK)) {
                N0.color = Nh;
              } else {
                var Nn = Nh.getR() + ND.getR() * (Math.random() - 0.5) * 0x2;
                var NS = Nh.getG() + ND.getG() * (Math.random() - 0.5) * 0x2;
                var NR = Nh.getB() + ND.getB() * (Math.random() - 0.5) * 0x2;
                N0.color = new cc.Color(Nn, NS, NR);
              }
              var Nd;
              if (Nu.equals(cc.Color.BLACK)) {
                Nd = NU;
              } else {
                var Nx = NU.getR() + Nu.getR() * (Math.random() - 0.5) * 0x2;
                var Nj = NU.getG() + Nu.getG() * (Math.random() - 0.5) * 0x2;
                var NP = NU.getB() + Nu.getB() * (Math.random() - 0.5) * 0x2;
                Nd = new cc.Color(Nx, Nj, NP);
              }
              if (!N0.color.equals(Nd)) {
                var Nm = this.colorDelay > 0x1 ? 0x1 : this.colorDelay < 0x0 ? 0x0 : this.colorDelay;
                var Np = cc.sequence(cc.delayTime(N2 * Nm), cc.tintTo(N2 - N2 * Nm, Nd));
                N9.push(Np);
              }
            }
            var NM;
            var NB = N9.length;
            if (NB > 0x1) {
              NM = cc.sequence(cc.spawn(N9), cc.callFunc(function () {
                N1.H(N0);
              }, this));
            } else if (0x1 === NB) {
              NM = cc.sequence(N9[0x0], cc.callFunc(function () {
                N1.H(N0);
              }, this));
            }
            this.A.push(N0);
            this.node.addChild(N0);
            N0.runAction(NM);
          }
        });
        l["default"] = Z;
        Y.exports = l["default"];
        cc._RF.pop();
      }
    }, Ca],
    'CustomAssetConfig': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "30248ADAbFJo5w43O2b27X1", "CustomAssetConfig")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.customAssetConfig = undefined;
        var r = z("ResourceLoader");
        var v = z("SettingMenuHelper");
        var G = [{
          'name': "setting_menu_audio",
          'type': r.LoaderType.CUSTOM,
          'loadFunc': function (q, c) {
            v.settingMenuHelper.loadAudio(function (f) {
              if (f) {
                c(f);
              } else {
                q(undefined);
              }
            });
          }
        }];
        Y.customAssetConfig = G;
        cc._RF.pop();
      }
    }, CF],
    'DataSource': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "33f97XHWf5KOK2d9LLYgXNI", "DataSource")) {
        var L = System.get("bvframework").DataSource;
        z.exports["default"] = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'DefaultStartScroller': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "a9e6d7qkYZPw5K5UPSZUUME", "DefaultStartScroller")) {
        var r = {
          value: true
        };
        Object.defineProperty(l, "__esModule", r);
        var v = {
          scrollCallback: undefined,
          maxSpeed: -0x13b0,
          accelerateDuration: 0.15,
          accelerateFactor: 1.68,
          accelerateDistance: -0x17a,
          bounceDistance: 0x3c,
          bounceDuration: 0.15,
          bounceFactor: 1.84
        };
        var G = L("BaseScroller");
        var c = function (f) {
          function g(Z) {
            var b = f.call(this, __assign(__assign({}, v), Z)) || this;
            b.accumulatedTime = 0x0;
            b.previousY = 0x0;
            b.bindedRunUpdate = undefined;
            b.bindedEndUpdate = undefined;
            b.bindedRunUpdate = b.runUpdate.bind(b);
            b.bindedEndUpdate = b.endUpdate.bind(b);
            return b;
          }
          __extends(g, f);
          g.prototype.onReset = function () {
            this.update = undefined;
          };
          g.prototype.onRun = function () {
            this.emitEvent(G.SCROLLER_EVENT.RUN);
            this.accumulatedTime = 0x0;
            this.previousY = 0x0;
            this.update = this.bindedRunUpdate;
          };
          g.prototype.onEnd = function () {
            this.update = this.bindedEndUpdate;
            this.emitEvent(G.SCROLLER_EVENT.END);
          };
          g.prototype.runUpdate = function (Z) {
            var b = this.runtimeConfig;
            Z = this.accumulatedTime += Z;
            var H = b.bounceDuration;
            if (Z <= H) {
              var I = 0x1 - Math.pow(0x1 - Z / H, b.bounceFactor);
              var K = b.bounceDistance * I;
              b.scrollCallback(this, K - this.previousY);
              return void (this.previousY = K);
            }
            Z -= H;
            var E = b.accelerateDuration;
            if (Z < E) {
              I = Math.pow(Z / E, b.accelerateFactor);
              K = b.accelerateDistance * I + b.bounceDistance;
              b.scrollCallback(this, K - this.previousY);
              this.previousY = K;
              return void this.emitEvent(G.SCROLLER_EVENT.ACCELERATE, I);
            }
            this.emitEvent(G.SCROLLER_EVENT.ACCELERATE, 0x1);
            this.end();
          };
          g.prototype.endUpdate = function (Z) {
            this.runtimeConfig.scrollCallback(this, Z * this.runtimeConfig.maxSpeed);
          };
          return g;
        }(G["default"]);
        l["default"] = c;
        cc._RF.pop();
      }
    }, Ch],
    'DefaultStopScroller': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "080a20w+h1E6aNSIb84n3TU", "DefaultStopScroller")) {
        var r = {
          value: true
        };
        Object.defineProperty(l, "__esModule", r);
        var v = {
          scrollCallback: undefined,
          getStopDistance: undefined,
          maxSpeed: -0x13b0,
          endSpeed: -0x1248,
          bounceDistance: -0x3c,
          bounceDuration: 0.15,
          bounceFactor: 1.84
        };
        var G = L("BaseScroller");
        var c = function (f) {
          function g(Z) {
            var b = f.call(this, __assign(__assign({}, v), Z)) || this;
            b.changeSpeedDuration = 0x0;
            b.changeSpeedTimer = 0x0;
            b.previousMaxSpeed = 0x0;
            b.accumulatedTime = 0x0;
            b.previousY = 0x0;
            b.endY = 0x0;
            b.decelerateDistance = 0x0;
            b.decelerateDuration = 0x0;
            b.halfDeceleration = 0x0;
            b.notified = false;
            b.bindedIdleUpdate = undefined;
            b.bindedRunUpdate = undefined;
            b.bindedIdleUpdate = b.idleUpdate.bind(b);
            b.bindedRunUpdate = b.runUpdate.bind(b);
            return b;
          }
          __extends(g, f);
          g.prototype.onReset = function () {
            this.endY = 0x0;
            this.previousY = 0x0;
            this.changeSpeedDuration = 0x0;
            this.notified = false;
            this.update = this.bindedIdleUpdate;
          };
          g.prototype.onRun = function () {
            this.emitEvent(G.SCROLLER_EVENT.RUN);
            var Z = this.runtimeConfig;
            var b = this.endY = Z.getStopDistance(this);
            var H = this.decelerateDistance = b + Z.bounceDistance;
            var I = this.decelerateDuration = 0x2 * H / (Z.maxSpeed + Z.endSpeed);
            this.halfDeceleration = (Z.endSpeed - Z.maxSpeed) / I / 0x2;
            this.previousY = 0x0;
            this.notified = false;
            this.accumulatedTime = 0x0;
            this.update = this.bindedRunUpdate;
          };
          g.prototype.onEnd = function () {
            if (!this.notified) {
              this.notified = true;
              this.emitEvent(G.SCROLLER_EVENT.DECELERATE, 0x0);
            }
            var Z = this.endY;
            if (0x0 === Z) {
              Z = this.runtimeConfig.getStopDistance(this);
            }
            var b = Z - this.previousY;
            if (b) {
              this.runtimeConfig.scrollCallback(this, b);
            }
            this.update = undefined;
            this.emitEvent(G.SCROLLER_EVENT.END);
          };
          g.prototype.idleUpdate = function (Z) {
            var b = this.changeSpeedDuration;
            if (b) {
              var H = this.changeSpeedTimer += Z;
              if (!(H >= b)) {
                var I = this.previousMaxSpeed;
                var K = I + (this.runtimeConfig.maxSpeed - I) * H / b;
                return void this.runtimeConfig.scrollCallback(this, Z * K);
              }
              this.changeSpeedDuration = 0x0;
            }
            this.runtimeConfig.scrollCallback(this, Z * this.runtimeConfig.maxSpeed);
          };
          g.prototype.runUpdate = function (Z) {
            var b = this.runtimeConfig;
            Z = this.accumulatedTime += Z;
            var H = this.decelerateDuration;
            if (Z < H) {
              var I = b.maxSpeed * Z + this.halfDeceleration * Z * Z;
              b.scrollCallback(this, I - this.previousY);
              this.previousY = I;
              return void this.emitEvent(G.SCROLLER_EVENT.DECELERATE, 0x1 - Z / H);
            }
            if (!this.notified) {
              this.notified = true;
              this.emitEvent(G.SCROLLER_EVENT.DECELERATE, 0x0);
            }
            Z -= H;
            var K = b.bounceDuration;
            if (Z < K) {
              var E = 0x1 - Math.pow(0x1 - Z / K, b.bounceFactor);
              I = this.decelerateDistance - b.bounceDistance * E;
              b.scrollCallback(this, I - this.previousY);
              return void (this.previousY = I);
            }
            this.end();
          };
          g.prototype.getDecelerateDuration = function () {
            return this.decelerateDuration;
          };
          g.prototype.changeIdleSpeed = function (Z, b) {
            var H = this.runtimeConfig;
            this.previousMaxSpeed = H.maxSpeed;
            H.maxSpeed = b;
            this.changeSpeedDuration = Z;
            this.changeSpeedTimer = 0x0;
          };
          return g;
        }(G["default"]);
        l["default"] = c;
        cc._RF.pop();
      }
    }, CD],
    'Deserializer': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "755a5d0q9ZMN7vreqSy6/g4", "Deserializer")) {
        var L = System.get("common").Deserialiser;
        z.exports.Deserializer = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'DrawLine': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "0b006l9a0tOS5No6bQvo8YJ", "DrawLine")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.horizontal = true;
            Z.vertical = false;
            return Z;
          }
          __extends(g, f);
          g.prototype.onLoad = function () {
            this.graphics = this.node.addComponent(cc.Graphics);
            this.fs();
            this.node.on("size-changed", this.fs, this);
          };
          g.prototype.fs = function () {
            var Z;
            var b;
            this.graphics.clear();
            if (this.horizontal) {
              Z = -this.node.width * this.node.anchorX;
              b = this.node.width - this.node.width * this.node.anchorX;
              this.graphics.moveTo(Z, this.node.height / 0x2);
              this.graphics.lineTo(b, this.node.height / 0x2);
            } else {
              Z = this.node.height * this.node.anchorX;
              b = this.node.height * this.node.anchorX - this.node.height;
              this.graphics.moveTo(this.node.width / 0x2, Z);
              this.graphics.lineTo(this.node.width / 0x2, b);
            }
            this.graphics.stroke();
          };
          g.prototype.onDestroy = function () {
            this.node.off("size-changed", this.fs, this);
            this.graphics.clear();
          };
          __decorate([G(cc.Boolean)], g.prototype, "horizontal", undefined);
          __decorate([G(cc.Boolean)], g.prototype, "vertical", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'ErrorHandler': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "933099S7qNPvb+XKiLo98KQ", "ErrorHandler")) {
        var L = System.get("bvframework").ErrorHandler;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'FeatureWinController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "95849uIMzZL0pGkaFJkWDGE", "FeatureWinController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("SymbolImageHandler");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.image = undefined;
            return b;
          }
          __extends(Z, g);
          Z.prototype.show = function (b) {
            this.image.spriteFrame = r.symbolImageHandler.symbolImages[b];
            this.node.active = true;
          };
          Z.prototype.hide = function () {
            this.node.active = false;
          };
          __decorate([q(cc.Sprite)], Z.prototype, "image", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, CU],
    'FireworkItem': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "99da7p9RjNLEY8vDpF/6mFE", "FireworkItem")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("Utils");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.fireworkAnimation = undefined;
            b.ds = undefined;
            return b;
          }
          __extends(Z, g);
          Z.prototype.setup = function (b, H) {
            this.ds = b;
            this.fireworkAnimation.node.setPosition(H);
            this.vs();
          };
          Z.prototype.play = function () {
            var b = this;
            this.fireworkAnimation.play();
            this.fireworkAnimation.on("finished", function () {
              b.ds.put(b.fireworkAnimation.node);
            });
          };
          Z.prototype.vs = function () {
            var b = r.randomInt(0x19, 0x23) / 0xa;
            this.fireworkAnimation.node.scale = b;
          };
          __decorate([q(cc.Animation)], Z.prototype, "fireworkAnimation", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, Cu],
    'ForegroundController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "b2cf3LpvJhIu6s35FbXCrhK", "ForegroundController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("GConstants");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.reelShine = [];
            b.reelParticle = [];
            b.footerGold = undefined;
            return b;
          }
          __extends(Z, g);
          Z.prototype.playRespin = function (b) {
            var H = this;
            this._t();
            this.reelShine.forEach(function (I) {
              I.play();
            });
            this.reelParticle.forEach(function (I) {
              I.play();
            });
            this.reelParticle[0x0].on(cc.Animation.EventType.FINISHED, function () {
              H.reelShine.forEach(function (I) {
                I.node.runAction(cc.sequence(cc.tintTo(0.5, r.BLACK), cc.callFunc(H._t.bind(H))));
              });
              if (b) {
                b();
              }
            });
          };
          Z.prototype.showGold = function () {
            this.footerGold.active = true;
          };
          Z.prototype.hideGold = function () {
            this.footerGold.active = false;
          };
          Z.prototype._t = function () {
            this.reelShine.forEach(function (b) {
              b.node.stopAllActions();
              b.node.color = r.WHITE;
              b.stop();
              b.setCurrentTime(0x0);
              b.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
            this.reelParticle.forEach(function (b) {
              b.stop();
              b.setCurrentTime(0x0);
              b.node.getComponent(cc.Sprite).spriteFrame = undefined;
            });
          };
          __decorate([q([cc.Animation])], Z.prototype, "reelShine", undefined);
          __decorate([q([cc.Animation])], Z.prototype, "reelParticle", undefined);
          __decorate([q(cc.Node)], Z.prototype, "footerGold", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, Cn],
    'GApiClient': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "55c9dWBKr5GWqWxtkwOuSVB", "GApiClient")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.gApiClient = undefined;
        var v = z("APIClient");
        z("TweaksData");
        var G = z("Utils");
        var q = z("AutomationDecorator");
        var f = z("APIClient.spec");
        var g = z("GDataSource");
        var Z = G.getPlatform();
        var b = function (I) {
          function K() {
            return null !== I && I.apply(this, arguments) || this;
          }
          __extends(K, I);
          K.prototype.spin = function (E) {
            var Q = this;
            var X = g.gDataSource.transactionModel;
            var A = X.transactionId;
            var V = X.betLevelValue;
            var W = X.betSizeValue;
            var w = g.gDataSource.playerModel.walletKey;
            var O = {
              'cs': W,
              'ml': V,
              'pf': Z,
              'id': A,
              'crl': undefined,
              'wk': w
            };
            this.requestEngine("v2/Spin", O, function (F, D) {
              Q._s(F, D);
              if (E) {
                E(F, D);
              }
            });
          };
          K.prototype._s = function (E, Q) {
            this.logResult("spin", Q);
            if (Q && Q.dt) {
              var X = Q.dt.si;
              this.print(X.sid);
              g.gDataSource.updateTransactionInfo(X);
            }
          };
          __decorate([q.automationDec({
            'func': f.onRequestSent
          })], K.prototype, "spin", null);
          __decorate([q.automationDec({
            'func': f.onRequestReceived
          })], K.prototype, "_onRespond", null);
          return K;
        }(v["default"]);
        Y["default"] = b;
        var H = new b(g.gDataSource);
        Y.gApiClient = H;
        cc._RF.pop();
      }
    }, CS],
    'GConstants': [function (K, E, Q) {
      'use strict';

      if (!cc._RF.push(E, "12c16j/3s5O2aee2zhE3JDM", "GConstants")) {
        var X = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", X);
        Q.AUDIO_RELATED_TIMING = Q.PAY_OUT_DATA = Q.TEASE_TIMING = Q.TURBO_SPIN_SPEEDUP_FACTOR = Q.SPIN_BUTTON_TIMING = Q.FEATURE_TRANSITION_TIMING = Q.BIG_WIN_TIMING = Q.INFOBOARD_TIMING = Q.PAY_SELECT_TIMING = Q.HORIZONTAL_DIRECTION = Q.IS_RTL = Q.GREY = Q.WHITE = Q.BLACK = undefined;
        Q.BLACK = cc.color(0x0, 0x0, 0x0);
        Q.WHITE = cc.color(0xff, 0xff, 0xff);
        Q.GREY = cc.color(0x32, 0x32, 0x32);
        Q.IS_RTL = shell.isRTLLanguage && shell.isRTLLanguage();
        var o = cc.Layout.HorizontalDirection.LEFT_TO_RIGHT;
        var A = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT;
        var V = {
          PLAY_ALTERNATE_LINE_DURATION: 0x2,
          PLAY_ALL_LINE_DURATION: 0x0,
          ALTERNATE_LINE_ONE_BY_ONE_INTERVAL: 0.1,
          ALL_LINE_ONE_BY_ONE_INTERVAL: 0.05,
          ALTERNATE_LINE_DELAY_TIME: 0.05
        };
        var W = {
          MEDIUM_WIN_ROLL_DURATION: 0x2,
          DELAY_RESET: 0.5
        };
        var J = {
          BIG_WIN_DELAY: 0.4,
          SKIP_ROLL_DELAY: 0.7,
          DISMISS_BIG_WIN_DELAY: 0.5,
          AUTO_DISMISS_BIG_WIN_DELAY: 0x6,
          BIG_WIN_ROLL_DURATION: [4.219, 3.75],
          MEGA_WIN_ROLL_DURATION: [3.75, 3.75],
          SUPER_MEGA_WIN_ROLL_DURATION: [3.75, 3.738]
        };
        var w = {
          PRE_ZOOM_DURATION: 0.35,
          UI_TRANSITION_INTO_BONUS_DURATION: 1.75,
          UI_TRANSITION_INTO_NORMAL_DURATION: 0x1,
          UI_TRANSITION_INTO_NORMAL_DELAY: 0x1,
          FADE_OUT_BONUS_REEL_DURATION: 0.35
        };
        var O = {
          SECONDS_PER_ROUND_SPINNING: 0.5,
          SECONDS_PER_ROUND_IDLE: 0x4
        };
        var a = {
          ENTER_TEASE_DURATION: 1.75,
          EXIT_TEASE_DURATION: 1.3
        };
        var F = {
          '3': 0xfa
        };
        var h = {
          '3': 0x64
        };
        var D = {
          '3': 0x19
        };
        var U = {
          '3': 0xa
        };
        var u = {
          '3': 0x8
        };
        var S = {
          '3': 0x5
        };
        var R = {
          '3': 0x3
        };
        var d = {
          '0': F,
          '2': h,
          '3': D,
          '4': U,
          '5': u,
          '6': S,
          '7': R
        };
        var x = {
          FADE_IN_RESPIN_REEL_LOOP_DURATION: 0x1,
          FADE_OUT_RESPIN_REEL_LOOP_DURATION: 0.5,
          FADE_OUT_ZOOM_OUT_SFX_DURATION: 0.5,
          FADE_OUT_MOUSE_TEASE_VOX_DURATION: 0.5,
          BGM_CROSSFADE_DURATION: 0x1,
          FS_REEL_LOOP_VOLUME: 0.6,
          BGM_NORMAL_TO_RESPIN: 0.1,
          BGM_RESPIN_TO_NORMAL: 1.5
        };
        Q.HORIZONTAL_DIRECTION = Q.IS_RTL ? A : o;
        Q.PAY_SELECT_TIMING = V;
        Q.INFOBOARD_TIMING = W;
        Q.BIG_WIN_TIMING = J;
        Q.FEATURE_TRANSITION_TIMING = w;
        Q.SPIN_BUTTON_TIMING = O;
        Q.TURBO_SPIN_SPEEDUP_FACTOR = 0.4;
        Q.TEASE_TIMING = a;
        Q.PAY_OUT_DATA = d;
        Q.AUDIO_RELATED_TIMING = x;
        cc._RF.pop();
      }
    }, {}],
    'GDataSource': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "2a313L7PyZGlqutL42bLW8/", "GDataSource")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.gDataSource = undefined;
        var v = z("RtConfig");
        var G = z("GSlotTransactionModel");
        var q = z("DataSource");
        var f = z("PlayerModel");
        var g = z("SlotSystemModel");
        var Z = function (H) {
          function I() {
            return H.call(this, {
              'playerModel': new f["default"](),
              'systemModel': new g["default"](v.cs_Config),
              'transactionModel': new G["default"]()
            }) || this;
          }
          __extends(I, H);
          return I;
        }(q["default"]);
        Y["default"] = Z;
        var b = new Z();
        Y.gDataSource = b;
        cc._RF.pop();
      }
    }, CR],
    'GIdleState': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "5ac57uin/lCkpc/fmWpJiL5", "GIdleState")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("IdleState");
        var v = z("SlotGameConstants");
        var G = z("ReplayModeHandler");
        var q = z("TransactionStateMachineHandler");
        var f = function (g) {
          function Z(b, H, I, K) {
            if (undefined === K) {
              K = v.DEFAULT_AUTO_SPIN_DELAY_TIME;
            }
            var E = g.call(this, b, H, I, K) || this;
            E.ms = H.uiHelper;
            return E;
          }
          __extends(Z, g);
          Z.prototype.run = function () {
            var b = this;
            var H = function () {
              g.prototype.run.call(b);
            };
            if (G.fmReplayModeHandler.replayCompleted()) {
              H();
            } else {
              q.goToStateCallback("idle")(H);
            }
          };
          Z.prototype.onStateFullyIdle = function () {
            this.ms.onStateFullyIdle();
          };
          Z.prototype.additionalDestroyCleanups = function () {
            this.ms = undefined;
          };
          Z.prototype.preExitStateCleanups = function () {
            var b = this.generalControllers.symbolPopoutController;
            b.disablePanel();
            b.clearOnClickCallback();
          };
          Z.prototype.enableAvailableActions = function () {
            if (G.fmReplayModeHandler.replayStarted()) {
              this.enableSpinAction();
            }
          };
          Z.prototype.defineSystemEventConfigParam = function () {
            var b = this;
            return {
              'callback': function () {
                if (G.fmReplayModeHandler.replayCompleted()) {
                  G.fmReplayModeHandler.endReplay();
                  b.tryAutoSpin();
                } else {
                  q.goToStateCallback("action", true)(function () {
                    if (!G.fmReplayModeHandler.replayCompleted()) {
                      b.tryAutoSpin();
                    }
                  });
                }
              }
            };
          };
          Z.prototype.preStartSpinAction = function (b) {
            q.transitionCompleteCallback("action")(b);
          };
          return Z;
        }(r["default"]);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, Cd],
    'GNormalGameState': [function (L, Y, G) {
      'use strict';

      if (!cc._RF.push(Y, "8ba89Q1SMVGHJfV/8zsSj5r", "GNormalGameState")) {
        var q = {
          value: true
        };
        Object.defineProperty(G, "__esModule", q);
        var g = {
          NONE: 0x0,
          IDLE: 0x1,
          SPIN: 0x2,
          RESULT: 0x3,
          CHECK: 0x4
        };
        var Z = L("Utils");
        var b = L("NormalSpinDecorator");
        var H = L("NormalPrizeDecorator");
        var I = L("GSlotTransactionModel");
        var K = L("GIdleState");
        var E = L("GSpinState");
        var Q = L("GNormalResultState");
        var X = L("GPrizeState");
        var A = L("NormalUIHelper");
        var V = L("GResultDecorator");
        var W = L("TransactionStateMachineHandler");
        var J = cc.Enum(g);
        var w = function () {
          function O(F, D, U) {
            this.name = "Normal Game State";
            this.ci = undefined;
            this.ps = undefined;
            this.bs = undefined;
            this.Ss = undefined;
            this.ms = undefined;
            this.ci = F;
            this.ps = D;
            this.bs = U;
            this.ms = new A["default"](F, D);
          }
          O.prototype.run = function () {
            this.Ss = J.NONE;
            this.gs();
          };
          O.prototype.destroy = function () {
            this.ci = undefined;
            this.ps = undefined;
            this.bs = undefined;
            this.Ss = undefined;
          };
          O.prototype.gs = function () {
            switch (this.Ss) {
              case J.NONE:
                this.Ss = J.IDLE;
                this.Cs();
                break;
              case J.IDLE:
                this.Ss = J.SPIN;
                this.ys();
                break;
              case J.SPIN:
                this.Ss = J.RESULT;
                this.Ms();
                break;
              case J.RESULT:
                this.Ss = J.CHECK;
                this.As();
                break;
              case J.CHECK:
                var F = undefined;
                if (this.ci.transactionModel.stateTransitionTo === I.SpinType.NORMAL) {
                  this.Ss = J.NONE;
                  F = this.gs.bind(this);
                } else {
                  F = this.Is.bind(this);
                }
                this.ws(F);
            }
          };
          O.prototype.Cs = function () {
            var F = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            new K["default"](this.ci, F, this.gs.bind(this), 0.3).run();
          };
          O.prototype.ys = function () {
            var F = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var U = new b["default"](this.ci, F);
            new E["default"](this.ci, F, this.gs.bind(this), U).run();
          };
          O.prototype.Ms = function () {
            var F = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var U = new V["default"](this.ci, F);
            new Q["default"](this.ci, F, this.gs.bind(this), U).run();
          };
          O.prototype.As = function () {
            var F = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var U = new H["default"](this.ci, F);
            new X["default"](this.ci, F, this.gs.bind(this), U).run();
          };
          O.prototype.ws = function (F) {
            var D = this.ci.transactionModel.stateTransitionTo;
            var U = this.ci;
            var S = U.isGameReplaying;
            var R = U.nextGameReplayInfo;
            var x = D === I.SpinType.NORMAL ? "setup" : "idle";
            x = S && R ? "idle" : x;
            W.transitionCompleteCallback(x)(F);
          };
          O.prototype.Is = function () {
            var F = this.bs;
            this.bs = undefined;
            this.destroy();
            Z.deferCallback(this)(F);
          };
          return O;
        }();
        G["default"] = w;
        cc._RF.pop();
      }
    }, Cx],
    'GNormalResultState': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "64d7f1bCUdFaZJl2yqdd7bl", "GNormalResultState")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("ResultState");
        var q = z("SlotStateMachine");
        var g = z("GSlotTransactionModel");
        var Z = z("SlotAnalyticsEnum");
        var b = z("RespinReelStatusHandler");
        var H = z("TransactionStateMachineHandler");
        var I = z("SlotAnalyticsHelper");
        var K = z("SlotProperties");
        var E = z("SpinConfigHandler");
        var Q = function (X) {
          function A(V, W, J, w) {
            var O = X.call(this, V, W, J, w) || this;
            O.uiHelper = undefined;
            O._decorator = undefined;
            O._decorator = w;
            O.ms = W.uiHelper;
            return O;
          }
          __extends(A, X);
          A.prototype.setAvailableActions = function () {
            b.respinReelStatusHandler.updateRespinReelStatus(this.dataSource);
          };
          A.prototype.setSlotData = function () {
            var V = this.generalControllers;
            var W = V.slotController;
            var J = V.symbolPopoutController;
            var w = this.dataSource.transactionModel;
            var O = w.reels;
            var F = w.stateTransitionTo;
            var D = w.featureWinSymbol;
            var U = O.slice();
            if (F === g.SpinType.RESPIN && D) {
              U.forEach(function (S, R) {
                if (S !== D && S !== K.SLOT_INDEX.WILD) {
                  U[R] = -0x1;
                }
              });
            }
            W.setReelData(U);
            J.setReelData(U);
          };
          A.prototype.resultDidStartRender = function (V) {
            var W = this;
            var J = this.dataSource.transactionModel;
            var w = J.stateTransitionTo;
            var O = J.stateTransitionFrom;
            var F = J.isShowTease;
            var D = function () {
              H.goToStateCallback("prize", true)(V);
            };
            if (O === g.SpinType.NORMAL && w === g.SpinType.RESPIN) {
              this.ms.renderBonusFeatureBeforeResult(function () {
                var U = W.generalControllers.slotController;
                if (E.featureConfig.fastStopFeature) {
                  U.unmarkFastStop();
                  U.enableTouchEvent();
                  if (W._decorator && W._decorator.clearAvailableActions) {
                    W._decorator.clearAvailableActions();
                  }
                  W._decorator.triggerFastStop = W.handleSlotRegionFastStop.bind(W);
                  W._decorator.setKeyboardActionsDuringRespinTransition();
                }
                if (E.featureConfig.fastStopFeature && U.getStopStyle() !== q.StopStyle.FAST) {
                  U.setOnClickCallback(W.handleSlotRegionFastStop.bind(W, Z.SpinTrigger.CLICK));
                }
              }, D);
            } else if (F) {
              this.ms.renderTeaseFeatureBeforeResult(this.Os.bind(this), D);
            } else {
              D();
            }
          };
          A.prototype.invokeSlotStop = function () {
            var V = this.generalControllers.slotController;
            if (V.getStopStyle() === q.StopStyle.FAST) {
              V.fastStop();
            } else {
              V.stopSpin();
            }
          };
          A.prototype.slotDidStartStopping = function (V) {
            this.ms.renderFeatureDuringResult(function () {
              if (V) {
                V();
              }
            });
          };
          A.prototype.renderFeature = function (V) {
            this.ms.renderFeatureAfterResult(function () {
              if (V) {
                V();
              }
            });
          };
          A.prototype.handleSlotRegionFastStop = function (V) {
            var W = this.generalControllers;
            var J = W.slotController;
            W.uiShiftController;
            W.backgroundController;
            var w = W.spinButtonController;
            this.dataSource.transactionModel.isShowTease;
            switch (this.process) {
              case Z.SpinStateProcess.REEL_SPINNING:
                I.sendFastStopGA(V, w.isAutoSpin());
                if (this._decorator && this._decorator.fastStopTriggeredWhileSpinning) {
                  this._decorator.fastStopTriggeredWhileSpinning();
                }
                this.fastStopTriggeredWhileSpinning();
                J.setOnClickCallback(undefined);
                J.markFastStop();
                break;
              case Z.SpinStateProcess.REEL_STOPPING:
                I.sendFastStopGA(V, w.isAutoSpin());
                if (this._decorator && this._decorator.triggerFastStopWhileStopping) {
                  this._decorator.triggerFastStopWhileStopping();
                }
                this.triggerFastStopWhileStopping();
                J.setOnClickCallback(undefined);
                J.fastStop();
            }
          };
          A.prototype.additionalDestroyCleanups = function () {
            this.ms = undefined;
          };
          A.prototype.Os = function () {
            var V = this.generalControllers;
            var W = V.slotController;
            var J = V.spinButtonController;
            W.setOnSlotBeginInterruptCallback(function () {
              J.stopSpin();
            });
          };
          return A;
        }(G["default"]);
        Y["default"] = Q;
        cc._RF.pop();
      }
    }, Cj],
    'GNormalStopScroller': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "38e38f5QRpDprD5l00K1bGD", "GNormalStopScroller")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("DefaultStopScroller");
        var G = z("BaseScroller");
        var q = z("GeneralAudioConstant");
        var f = z("AudioManager");
        var g = z("SlotProperties");
        var Z = cc._decorator.ccclass;
        var b = function (H) {
          function I() {
            var K = null !== H && H.apply(this, arguments) || this;
            K.Hs = 0.2;
            K.Bs = undefined;
            K.Gs = undefined;
            return K;
          }
          __extends(I, H);
          I.prototype.updateEndSpeed = function (K) {
            this.config.endSpeed = K;
            this.runtimeConfig.endSpeed = K;
          };
          Object.defineProperty(I.prototype, "scrollerIndex", {
            'set': function (K) {
              this.Ns = K;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(I.prototype, "isRespin", {
            'set': function (K) {
              this.Ts = K;
            },
            'enumerable': false,
            'configurable': true
          });
          I.prototype.setOnScrollerReachesBouncePointCallback = function (K) {
            this.Ps = K;
          };
          I.prototype.setOnScrollerReachesLowestPointCallback = function (K) {
            this.Ls = K;
          };
          I.prototype.setOnScrollerReachesSlowDownPointCallback = function (K) {
            this.Rs = K;
          };
          I.prototype.onRun = function () {
            this.emitEvent(G.SCROLLER_EVENT.RUN);
            var K = this.runtimeConfig;
            var E = this.endY = K.getStopDistance(this);
            var Q = this.decelerateDistance = E + K.bounceDistance;
            var X = this.decelerateDuration = 0x2 * Q / (K.maxSpeed + K.endSpeed);
            this.halfDeceleration = (K.endSpeed - K.maxSpeed) / X / 0x2;
            this.previousY = 0x0;
            this.notified = false;
            this.accumulatedTime = 0x0;
            this.update = this.bindedRunUpdate;
            this.Bs = false;
            this.Gs = false;
          };
          I.prototype.runUpdate = function (K) {
            var E = this.runtimeConfig;
            K = this.accumulatedTime += K;
            var Q = this.decelerateDuration;
            if (K < Q) {
              if (!this.Gs && K > Q * this.Hs) {
                this.Gs = true;
                if (this.Rs) {
                  this.Rs(this.Ns, this.Ts);
                }
              }
              var X = E.maxSpeed * K + this.halfDeceleration * K * K;
              E.scrollCallback(this, X - this.previousY);
              this.previousY = X;
              return void this.emitEvent(G.SCROLLER_EVENT.DECELERATE, 0x1 - K / Q);
            }
            if (!this.notified) {
              this.notified = true;
              this.emitEvent(G.SCROLLER_EVENT.DECELERATE, 0x0);
              if (this.Ps) {
                this.Ps(this.Ns, this.Ts);
              }
              var A = q.GENERAL_AUDIO.spinStop.key;
              f.stopAudioIfPlaying(A);
              f.playAudioIfNotPlaying(A);
              if (this.Ns === g.NORMAL_SLOT_COLUMN - 0x1) {
                var V = q.GENERAL_AUDIO.spinActiveLoop.key;
                f.stopAudioIfPlaying(V);
              }
            }
            if ((K -= Q) < E.bounceDuration) {
              var W = Math.pow(0x2, -0xc * K) * Math.sin(0x2 * Math.PI * (0.1 * K - 0.075) / 0.3) + 0x1;
              var J = (X = this.decelerateDistance - E.bounceDistance * W) - this.previousY;
              E.scrollCallback(this, J);
              if (J > 0x0 && !this.Bs) {
                this.Bs = true;
                if (this.Ls) {
                  this.Ls(this.Ns, this.Ts);
                }
              }
              return void (this.previousY = X);
            }
            this.end();
          };
          return __decorate([Z], I);
        }(v["default"]);
        Y["default"] = b;
        cc._RF.pop();
      }
    }, CP],
    'GPopOutItem': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "545aadFzDRAIoq12el2mf1A", "GPopOutItem")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("PopOutItem");
        var q = z("GConstants");
        var g = z("GeneralAudioConstant");
        var Z = z("SpineConfigHandler");
        var b = z("SlotProperties");
        var H = z("AudioManager");
        var I = cc._decorator;
        var K = I.ccclass;
        var E = I.property;
        var Q = function (X) {
          function A() {
            var V = null !== X && X.apply(this, arguments) || this;
            V.spine = undefined;
            V.background = undefined;
            V.payoutNumber = [];
            V.payoutValue = [];
            V.numberHolder = undefined;
            V.numberHolderLayout = undefined;
            return V;
          }
          __extends(A, X);
          A.prototype.unuse = function () {
            this.node.opacity = 0x0;
          };
          A.prototype.reuse = function () {
            this.node.opacity = 0x0;
          };
          A.prototype.hideItem = function () {
            this.node.opacity = 0x0;
            this.node.active = false;
          };
          A.prototype.showItem = function (V, W, J, w, O, F) {
            if (-0x1 !== w) {
              var D = g.GENERAL_AUDIO.uiInfo.key;
              H.stopAudioIfPlaying(D);
              H.playAudioIfNotPlaying(D);
              var U = Z.spineConfigHandler.getNormalSymbolSpine(w);
              var S = w === b.SLOT_INDEX.WILD ? "idle" : "win_idle";
              this.spine.skeletonData = U;
              this.spine.setAnimation(0x0, S, true);
              this.Es(F);
              this.setPayoutValue(w, W);
              this.node.active = true;
              this.node.setPosition(O);
              this.node.runAction(cc.sequence(cc.fadeTo(0.2, 0xff), cc.callFunc(function () {
                if (V) {
                  V();
                }
              })));
            } else if (V) {
              V();
            }
          };
          A.prototype.Es = function (V) {
            this.ks();
            this.background.node.scaleX = V ? 0x1 : -0x1;
            this.node.anchorX = V ? 0.265 : 0.735;
            if (q.IS_RTL) {
              this.numberHolder.x = V ? 0x118 : -0xf0;
            } else {
              this.numberHolder.x = V ? 0xf0 : -0x118;
            }
          };
          A.prototype.ks = function () {
            this.numberHolderLayout.horizontalDirection = q.HORIZONTAL_DIRECTION;
          };
          A.prototype.setPayoutValue = function (V, W) {
            var J = this;
            var w = W[V];
            var O = Object.keys(w);
            O.reverse();
            this.payoutNumber.forEach(function (F) {
              var D = F.getComponent("NumberDisplayController");
              D.clear();
              D.displayNumber(O[0x0]);
              var U = J.payoutValue[0x0].getComponent("NumberDisplayController");
              U.clear();
              U.displayNumber(w[O[0x0]]);
            });
          };
          __decorate([E(sp.Skeleton)], A.prototype, "spine", undefined);
          __decorate([E(cc.Sprite)], A.prototype, "background", undefined);
          __decorate([E([cc.Node])], A.prototype, "payoutNumber", undefined);
          __decorate([E([cc.Node])], A.prototype, "payoutValue", undefined);
          __decorate([E(cc.Node)], A.prototype, "numberHolder", undefined);
          __decorate([E(cc.Layout)], A.prototype, "numberHolderLayout", undefined);
          return __decorate([K], A);
        }(G["default"]);
        Y["default"] = Q;
        cc._RF.pop();
      }
    }, Cm],
    'GPrizeState': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "78701ULLg5Pe5ROZ+aIrTPo", "GPrizeState")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("PrizeState");
        var v = z("Utils");
        var G = z("GSlotTransactionModel");
        var q = z("TransactionStateMachineHandler");
        var f = function (g) {
          function Z(b, H, I, K) {
            var E = g.call(this, b, H, I, K) || this;
            E.uiHelper = undefined;
            E.uiHelper = H.uiHelper;
            E.uiHelper.setWinThreshold(E.getWinThresholds());
            return E;
          }
          __extends(Z, g);
          Z.prototype.setAvailableActions = function () {
            this.uiHelper.setAvailablePrizeAction();
          };
          Z.prototype.renderPrize = function () {
            v.spawnCallback(this.renderLines.bind(this), v.sequenceCallback(this.Us.bind(this), this.js.bind(this), this.playPrize.bind(this)))(this.exitState.bind(this));
          };
          Z.prototype.Us = function (b) {
            this.uiHelper.renderFeatureBeforePrize(b);
          };
          Z.prototype.playAllLines = function (b) {
            this.uiHelper.playAllLines(b);
          };
          Z.prototype.runSmallPrizeState = function (b, H) {
            this.uiHelper.playSmallWin(b, H);
          };
          Z.prototype.runMediumPrizeState = function (b, H) {
            this.uiHelper.playMediumWin(b, H);
          };
          Z.prototype.runBigPrizeState = function (b, H) {
            var I = this.getWinThresholds();
            this.uiHelper.playBigWin(b, I, H);
          };
          Z.prototype.getWinThresholds = function () {
            var b = this.dataSource.transactionModel;
            var H = b.betLevelValue;
            var I = b.betSizeValue;
            var K = this.dataSource.systemModel.maxLineNumber;
            return this.dataSource.systemModel.winThresholds.getAllThresholds(I, H, K);
          };
          Z.prototype.preExitStateCleanup = function () {
            this.uiHelper.clearLargeSymbol();
          };
          Z.prototype.js = function (b) {
            var H = this.dataSource.transactionModel.stateTransitionTo;
            var I = this.dataSource;
            var K = I.isGameReplaying;
            var E = I.nextGameReplayInfo;
            var Q = H === G.SpinType.NORMAL ? "setup" : "idle";
            Q = K && E ? "idle" : Q;
            v.sequenceCallback(q.transitionCompleteCallback("prize"), q.goToStateCallback(Q, true))(b);
          };
          return Z;
        }(r["default"]);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, Cp],
    'GRefreshWorldHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "a8cd9CQqD5IBJrUbbqohyhh", "GRefreshWorldHandler")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        Y.GRefreshWorldHandler = undefined;
        var G = z("GDataSource");
        var q = z("GApiClient");
        var f = z("RefreshWorldHandler");
        var g = z("Utils");
        var Z = z("AutoSpinHandler");
        var b = z("GSlotTransactionModel");
        var H = z("BGMHandler");
        var I = z("AudioManager");
        var K = function (E) {
          function Q(X) {
            var A = E.call(this, G.gDataSource, q.gApiClient) || this;
            A.setupUICallback = undefined;
            A.ps = undefined;
            A.Ds = [I.GeneralAudioPool.bgm_bigwin_main, I.GeneralAudioPool.bgm_bigwin_end];
            A.Ws = function (V) {
              var W = G.gDataSource.transactionModel;
              var J = W.reels;
              var w = W.wildCount;
              var O = A.ps;
              var F = O.slotController;
              var D = O.tigerController;
              var U = O.backgroundController2;
              var S = O.symbolPopoutController;
              var R = [];
              J.forEach(function (d, x) {
                if (-0x1 === d) {
                  R.push(x);
                }
              });
              D.resetTiger(w);
              U.setupToNormalState();
              F.setReelData(J);
              F.reloadData(J);
              S.setReelData(J);
              S.setupButtonEvent(R);
              if (A.setupUICallback) {
                g.deferCallback(true)(A.setupUICallback.bind(A, V));
              } else {
                V();
              }
            };
            A.ps = X.generalControllers;
            return A;
          }
          __extends(Q, E);
          Q.prototype.cleanup = function () {
            var X = this.ps;
            var A = X.paySelectEffectController;
            var V = X.symbolPopoutController;
            var W = X.slotTintController;
            var J = X.infoboardController;
            var w = X.stickyController;
            V.hidePopOutItem();
            A.stopPaySelect();
            W.fadeOut(0x0);
            J.resetInfoboard(false);
            J.resumeInfoboard();
            J.instantHideMediumWin();
            w.clearSticky();
          };
          Q.prototype.cleanupReplayWorld = function (X) {
            this.cleanup();
            this.xs();
            if (X) {
              X();
            }
          };
          Q.prototype.enableSpinButton = function () {
            this.ps.spinButtonController.idle();
          };
          Q.prototype.disableSpinButton = function () {
            var X = this.ps.spinButtonController;
            Z.exitAutoSpin(X);
            X.idle();
          };
          Q.prototype.hideLoadingPage = function (X) {
            if (X) {
              X();
            }
          };
          Q.prototype.showLoadingPage = function (X) {
            if (X) {
              X();
            }
          };
          Q.prototype.setupNewWorld = function (X) {
            g.sequenceCallback(this.Ws.bind(this), this.Fs.bind(this))(function () {
              if (X) {
                X();
              }
            });
          };
          Q.prototype.setupReplayWorld = function (X) {
            g.sequenceCallback(this.Ws.bind(this), this.Vs.bind(this))(function () {
              if (X) {
                X();
              }
            });
          };
          Q.prototype.Fs = function (X) {
            var A = G.gDataSource.transactionModel;
            var V = A.winLines;
            var W = A.winValues;
            A.w;
            var J = this.ps;
            var w = J.slotTintController;
            var O = J.paySelectEffectController;
            var F = J.infoboardController;
            g.sequenceCallback(function (D) {
              if (V) {
                w.fadeIn(0.2);
                O.playAlternateLines(V, W);
              }
              if (D) {
                D();
              }
            }, function (D) {
              var U = G.gDataSource.systemModel;
              var S = U.maxLineNumber;
              var R = U.winThresholds;
              var d = G.gDataSource.transactionModel;
              var x = d.betSizeValue;
              var j = d.betLevelValue;
              var P = G.gDataSource.transactionModel.accumulatedWinAmount;
              var m = R.getAllThresholds(x, j, S);
              if (P > 0x0) {
                if (P >= m.mediumWinThreshold && P < m.bigWinThreshold) {
                  F.instantPlayMediumWin(P);
                } else {
                  F.playWin(P);
                }
              } else {
                F.resetInfoboard(false);
                F.resumeInfoboard();
              }
              if (D) {
                D();
              }
            })(X);
          };
          Q.prototype.Vs = function (X) {
            var A = G.gDataSource.transactionModel.stateTransitionTo;
            if (!(A !== b.SpinType.NORMAL && A !== b.SpinType.RESPIN)) {
              H.instantPlayNormalBGM();
            }
            if (X) {
              X();
            }
          };
          Q.prototype.xs = function () {
            H.muteAllBGM();
            this.Ds.forEach(function (X) {
              I.stopSfx(X);
            });
          };
          Q.prototype.refreshWorldByGameReplay = function (X) {
            g.sequenceCallback(this.zs(), this.Js(), this.qs(), this.Ks(), this.cleanupReplayWorld.bind(this), this.Qs(), this.setupReplayWorld.bind(this), this.Ys())(function () {
              if (X) {
                X();
              }
            });
          };
          return Q;
        }(f["default"]);
        Y.GRefreshWorldHandler = K;
        cc._RF.pop();
      }
    }, CM],
    'GRespinDecorator': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "aab44w65hdH4JxmZJ9YTyw9", "GRespinDecorator")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("NormalSpinDecorator");
        var v = z("GeneralAudioConstant");
        var G = z("AudioManager");
        var q = function (f) {
          function g(Z, b, H) {
            var I = f.call(this, b, H) || this;
            I.ms = undefined;
            I.Xs = undefined;
            I.ms = H.uiHelper;
            I.Xs = Z;
            return I;
          }
          __extends(g, f);
          g.prototype.startSlotController = function () {
            this.generalControllers.slotController.spin(false, true);
            var Z = v.GENERAL_AUDIO.featureSpin.key;
            G.stopAudioIfPlaying(Z);
            G.playAudioIfNotPlaying(Z);
          };
          return g;
        }(r["default"]);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, CB],
    'GRespinGameState': [function (L, Y, G) {
      'use strict';

      if (!cc._RF.push(Y, "aabe8xM4qJKrqfMY6Fr3srJ", "GRespinGameState")) {
        var q = {
          value: true
        };
        Object.defineProperty(G, "__esModule", q);
        var g = {
          NONE: 0x0,
          IDLE: 0x1,
          SPIN: 0x2,
          RESULT: 0x3,
          CHECK: 0x4
        };
        var Z = L("Utils");
        var b = L("NormalPrizeDecorator");
        var H = L("NormalResultDecorator");
        var I = L("GSlotTransactionModel");
        var K = L("GRespinResultState");
        var E = L("GPrizeState");
        var Q = L("GRespinState");
        var X = L("RespinUIHelper");
        var A = L("GRespinDecorator");
        var V = L("ReplayModeHandler");
        var W = L("TransactionStateMachineHandler");
        var J = cc.Enum(g);
        var w = function () {
          function O(F, D, U) {
            this.name = "Respin Game State";
            this.ci = undefined;
            this.ps = undefined;
            this.bs = undefined;
            this.Ss = undefined;
            this.ms = undefined;
            this.Xs = true;
            this.Zs = true;
            this.ci = F;
            this.ps = D;
            this.bs = U;
            this.ms = new X["default"](F, D);
          }
          O.prototype.run = function (F) {
            this.Xs = F;
            this.Zs = true;
            this.Ss = J.IDLE;
            this.gs();
          };
          O.prototype.destroy = function () {
            this.ci = undefined;
            this.ps = undefined;
            this.bs = undefined;
            this.Ss = undefined;
          };
          O.prototype.gs = function () {
            var F = this;
            switch (this.Ss) {
              case J.IDLE:
                var D = {
                  noBet: true
                };
                this.Ss = J.SPIN;
                W.goToStateCallback("action", true, D)(function () {
                  if (!V.fmReplayModeHandler.replayCompleted()) {
                    W.transitionCompleteCallback("action")(F.ys.bind(F));
                  }
                });
                break;
              case J.SPIN:
                this.Ss = J.RESULT;
                this.Ms();
                break;
              case J.RESULT:
                this.Ss = J.CHECK;
                this.As();
                break;
              case J.CHECK:
                this.Xs = false;
                var U = undefined;
                if (this.ci.transactionModel.stateTransitionTo === I.SpinType.NORMAL) {
                  U = this.Is.bind(this);
                } else {
                  this.Ss = J.IDLE;
                  this.Zs = false;
                  U = this.gs.bind(this);
                }
                this.ws(U);
            }
          };
          O.prototype.ys = function () {
            var F = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var U = new A["default"](this.Xs, this.ci, F);
            var S = new Q["default"](this.ci, F, this.gs.bind(this), U);
            var R = function () {
              S.run();
            };
            if (this.Xs) {
              Z.delayCallback(0x1)(R);
            } else if (this.$s()) {
              Z.delayCallback(0.3)(R);
            } else {
              R();
            }
          };
          O.prototype.Ms = function () {
            var F = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var U = new H["default"](this.ci, F);
            new K["default"](this.ci, F, this.gs.bind(this), U).run();
          };
          O.prototype.As = function () {
            var F = {
              generalControllers: this.ps,
              uiHelper: this.ms
            };
            var U = new b["default"](this.ci, F);
            new E["default"](this.ci, F, this.gs.bind(this), U).run();
          };
          O.prototype.$s = function () {
            return this.ps.slotController.getIsFastStopped();
          };
          O.prototype.ws = function (F) {
            var D = this.ci.transactionModel.stateTransitionTo === I.SpinType.NORMAL ? "setup" : "idle";
            W.transitionCompleteCallback(D)(F);
          };
          O.prototype.Is = function () {
            var F = this.bs;
            this.bs = undefined;
            this.destroy();
            this.ms.exitRespinTransition(F);
          };
          return O;
        }();
        G["default"] = w;
        cc._RF.pop();
      }
    }, Cy],
    'GRespinResultState': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "c495aZAvBNBUrxqFP+J3/Gh", "GRespinResultState")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("ResultState");
        var v = z("RespinReelStatusHandler");
        var G = z("TransactionStateMachineHandler");
        var q = function (f) {
          function g(Z, b, H, I) {
            var K = f.call(this, Z, b, H, I) || this;
            K.uiHelper = undefined;
            K.uiHelper = b.uiHelper;
            return K;
          }
          __extends(g, f);
          g.prototype.setAvailableActions = function () {
            v.respinReelStatusHandler.updateRespinReelStatus(this.dataSource);
          };
          g.prototype.setSlotData = function () {
            var Z = this.generalControllers;
            var b = Z.slotController;
            var H = Z.symbolPopoutController;
            var I = Z.stickyController;
            var K = this.dataSource.transactionModel.reels;
            var E = I.stickyMap;
            var Q = K.slice();
            Q.forEach(function (X, A) {
              if (-0x1 !== X && undefined !== E[A]) {
                Q[A] = -0x1;
              }
            });
            b.setReelData(Q);
            H.setReelData(K);
          };
          g.prototype.renderFeature = function (Z) {
            this.uiHelper.renderFeatureAfterResult(function () {
              if (Z) {
                Z();
              }
            });
          };
          g.prototype.resultDidStartRender = function (Z) {
            G.goToStateCallback("prize", true)(Z);
          };
          return g;
        }(r["default"]);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, Ck],
    'GRespinState': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "013b6kkQudB/q1Mi31uBGqQ", "GRespinState")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("SpinState");
        var G = z("RequestHandler");
        var q = z("Utils");
        var f = z("GApiClient");
        var g = z("AutoSpinHandler");
        var Z = z("TransactionStateMachineHandler");
        var b = function (H) {
          function I(K, E, Q, X) {
            var A = H.call(this, K, E, Q, X) || this;
            A.uiHelper = undefined;
            A.ms = E.uiHelper;
            return A;
          }
          __extends(I, H);
          I.prototype.stateWillStartSpin = function () {
            this.ms.preSpinningCleanup();
            this.ms.playSlotSpinEffect();
          };
          I.prototype.callApi = function (K) {
            q.sequenceCallback(Z.goToStateCallback("result", true), this.te.bind(this))(K);
          };
          I.prototype.te = function (K) {
            var E = this;
            G.doTransactionAPIRequest({
              'name': this.name,
              'apiRequest': f.gApiClient.spin.bind(f.gApiClient)
            }, this.dataSource, function (Q, X) {
              if (X && X.dt) {
                Z.transitionCompleteCallback("result")(K);
                if (Q && g.shouldAutoSpin()) {
                  g.exitAutoSpin(E.generalControllers.spinButtonController);
                }
              }
            });
          };
          I.prototype.additionalDestroyCleanups = function () {
            this.ms = undefined;
          };
          return I;
        }(v["default"]);
        Y["default"] = b;
        cc._RF.pop();
      }
    }, T0],
    'GResultDecorator': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "4f61bnbGm9MGatqeAdCY87z", "GResultDecorator")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = function (v) {
          function G(q, c) {
            return v.call(this, q, c) || this;
          }
          __extends(G, v);
          G.prototype.setKeyboardActionsDuringRespinTransition = function () {
            this.setAvailableActions();
            this.generalControllers.spinButtonController.setOnClickCallback(undefined);
          };
          return G;
        }(z("NormalResultDecorator")["default"]);
        Y["default"] = r;
        cc._RF.pop();
      }
    }, T1],
    'GSlotHelper': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "dfa523kEqBMJLPuPnDqOsIb", "GSlotHelper")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("SlotHelper");
        var v = z("SlotProperties");
        var G = cc._decorator.ccclass;
        var q = function (f) {
          function g() {
            return null !== f && f.apply(this, arguments) || this;
          }
          __extends(g, f);
          g.prototype.init = function (Z) {
            f.prototype.init.call(this, Z);
            this.ie.forEach(function (b, H) {
              b.scrollerIndex = H;
            });
          };
          g.prototype.updateRespinSlotHelperConfig = function () {
            this.ie.forEach(function (Z) {
              Z.isRespin = true;
            });
          };
          g.prototype.updateNormalSpinSlotHelperConfig = function () {
            this.ie.forEach(function (Z) {
              Z.isRespin = false;
            });
          };
          g.prototype.setStopScrollerEndSpeed = function (Z, b) {
            this.ie[Z].updateEndSpeed(b);
          };
          g.prototype.setOnScrollerReachesBouncePointCallback = function (Z) {
            this.ie.forEach(function (b) {
              b.setOnScrollerReachesBouncePointCallback(Z);
            });
          };
          g.prototype.setOnScrollerReachesLowestPointCallback = function (Z) {
            var b = this;
            var H = function (I, K) {
              var E = b.se[I];
              var Q = [];
              E.getFunctionalItems().forEach(function (X) {
                if (X.symbolIndex === v.SLOT_INDEX.FU) {
                  Q.push(X);
                }
              });
              if (Z && Q.length > 0x0) {
                Z(I, K, Q);
              }
            };
            this.ie.forEach(function (I) {
              I.setOnScrollerReachesLowestPointCallback(H);
            });
          };
          g.prototype.setOnScrollerReachesSlowDownPointCallback = function (Z) {
            this.ie.forEach(function (b) {
              b.setOnScrollerReachesSlowDownPointCallback(Z);
            });
          };
          return __decorate([G], g);
        }(r["default"]);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, T2],
    'GSlotItemPool': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "7fcd3oX3IhM0Lp/lFSopY75", "GSlotItemPool")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("NodePoolHandler");
        var v = function (G) {
          function q() {
            return null !== G && G.apply(this, arguments) || this;
          }
          __extends(q, G);
          q.prototype.init = function (c) {
            this.slotItemConstructor = c.slotItem;
            this.normalSpriteFrames = c.normalSpriteFrame;
            this.blurSpriteFrames = c.blurSpriteFrame ? c.blurSpriteFrame : c.normalSpriteFrame;
            this.normalScale = undefined === c.normalScale ? 0x1 : c.normalScale;
            this.blurScale = undefined === c.blurScale ? 0x1 : c.blurScale;
            this.getSymbolZOrder = c.getSymbolZOrder ? c.getSymbolZOrder : 0x0;
          };
          q.prototype.getSlotItem = function (c, f, g) {
            if (undefined === f) {
              f = false;
            }
            if (undefined === g) {
              g = undefined;
            }
            var Z = r.nodePoolHandler.dequeueReusableItem("slotItem").getComponent("GSlotItem");
            if (c < 0x0) {
              Z.symbolIndex = c;
              return Z;
            }
            Z.init({
              'sprite': Z.symbolImage,
              'normalScale': this.normalScale,
              'blurScale': this.blurScale,
              'getSymbolZOrder': this.getSymbolZOrder
            });
            Z.setup(c, this.normalSpriteFrames[c], this.blurSpriteFrames[c], f, g);
            return Z;
          };
          q.prototype.releaseSlotItem = function (c) {
            if (c.symbolIndex < 0x0) {
              c.node.destroy();
            } else {
              r.nodePoolHandler.enqueueReusableItem(c.node, "slotItem");
            }
          };
          return q;
        }(z("SlotItemPool")["default"]);
        Y["default"] = v;
        cc._RF.pop();
      }
    }, T3],
    'GSlotItem': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "a5b01zWV65J67CjEAIlv2aP", "GSlotItem")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("SlotItem");
        var q = z("GeneralAudioConstant");
        var g = z("NodePoolHandler");
        var Z = z("SpineConfigHandler");
        var b = z("AudioManager");
        var H = z("SlotProperties");
        var I = cc._decorator;
        var K = I.ccclass;
        var E = I.property;
        var Q = function (X) {
          function A() {
            var V = null !== X && X.apply(this, arguments) || this;
            V.attachmentHolder = undefined;
            V.symbolImage = undefined;
            V.mask = undefined;
            V.wildShine = undefined;
            V.ee = [];
            return V;
          }
          __extends(A, X);
          A.prototype.setActive = function (V) {
            var W = V ? 0xff : 0x0;
            if (this.symbolImage) {
              this.symbolImage.node.opacity = W;
            }
          };
          A.prototype.unuse = function () {
            this.removeExternalContents();
            this.symbolImage.spriteFrame = undefined;
            this.mask.active = false;
            this.node.stopAllActions();
            this.node.scale = 0x1;
            X.prototype.unuse.call(this);
          };
          A.prototype.setup = function (V, W, J, w) {
            if (undefined === w) {
              w = false;
            }
            if (V === H.SLOT_INDEX.WILD) {
              var O = g.nodePoolHandler.dequeueReusableItem("wildItem");
              var F = g.nodePoolHandler.getPool("wildItem");
              var D = {
                item: O,
                pool: F
              };
              this.addExternalContent(D, true);
              O.getComponent("WildItemController").init(Z.spineConfigHandler.getNormalSymbolSpine(0x0));
              O.getComponent("WildItemController").playIdle();
            }
            X.prototype.setup.call(this, V, W, J, w);
          };
          A.prototype.addExternalContent = function (V, W) {
            this.ee.push(V);
            var J = V.item;
            if (W) {
              J.parent = this.attachmentHolder;
            } else {
              this.attachmentHolder.addChild(J);
            }
          };
          A.prototype.removeExternalContents = function () {
            this.ee.forEach(function (V) {
              if (V.pool) {
                V.pool.put(V.item);
              } else {
                V.item.destroy();
              }
            });
            this.ee = [];
          };
          A.prototype.setZIndex = function (V) {
            if (undefined === V) {
              V = 0x0;
            }
            this.node.zIndex = V + 0x64 * this.zOrder;
          };
          Object.defineProperty(A.prototype, "worldPosition", {
            'get': function () {
              var V = cc.v2();
              return this.node.convertToWorldSpaceAR(V);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(A.prototype, "spriteImage", {
            'get': function () {
              return this.sprite.spriteFrame;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(A.prototype, "symbolZOrder", {
            'get': function () {
              return this.zOrder;
            },
            'enumerable': false,
            'configurable': true
          });
          A.prototype.setBlur = function (V) {
            var W = this.sprite;
            if (W) {
              W.spriteFrame = V ? this.blurSpriteFrame : this.normalSpriteFrame;
              W.node.scaleX = V ? this.blurScale.x : this.normalScale.x;
              W.node.scaleY = V ? this.blurScale.y : this.normalScale.y;
            }
          };
          A.prototype.disableSprite = function () {
            var V = this.sprite;
            this.normalSpriteFrame = undefined;
            this.blurSpriteFrame = undefined;
            if (V) {
              V.spriteFrame = undefined;
            }
          };
          A.prototype.showWildShine = function (V, W) {
            var J = this;
            var w = q.GENERAL_AUDIO.symWildHighlight.key;
            b.stopAudioIfPlaying(w);
            b.playAudioIfNotPlaying(w);
            this.node.stopAllActions();
            this.mask.active = true;
            this.node.runAction(cc.sequence(cc.delayTime(V), cc.callFunc(function () {
              J.wildShine.play();
            }), cc.delayTime(0.2), cc.callFunc(function () {
              if (W) {
                W();
              }
            })));
          };
          __decorate([E(cc.Node)], A.prototype, "attachmentHolder", undefined);
          __decorate([E(cc.Sprite)], A.prototype, "symbolImage", undefined);
          __decorate([E(cc.Node)], A.prototype, "mask", undefined);
          __decorate([E(cc.Animation)], A.prototype, "wildShine", undefined);
          return __decorate([K], A);
        }(G["default"]);
        Y["default"] = Q;
        cc._RF.pop();
      }
    }, T4],
    'GSlotTransactionModel': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "2c611dJeBpLOqKLE3nHj7yi", "GSlotTransactionModel")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.SpinType = undefined;
        var r = z("SlotTransactionModel");
        (function (G) {
          G[G.NORMAL = 0x1] = "NORMAL";
          G[G.RESPIN = 0x4] = "RESPIN";
        })(Y.SpinType || (Y.SpinType = {}));
        var v = function (G) {
          function q() {
            var c = null !== G && G.apply(this, arguments) || this;
            c.Ts = undefined;
            c.ne = undefined;
            c.oe = undefined;
            c.ce = undefined;
            c.he = undefined;
            return c;
          }
          __extends(q, G);
          q.prototype.updateSlotGameTransactionInfo = function (c) {
            var f = c.irs;
            var g = c.fws;
            var Z = c.ist;
            var b = c.wc;
            var H = c.itw;
            this.Ts = f;
            this.ne = g;
            this.oe = Z;
            this.ce = b;
            this.he = H;
          };
          Object.defineProperty(q.prototype, "isRespin", {
            'get': function () {
              return this.Ts;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(q.prototype, "featureWinSymbol", {
            'get': function () {
              return this.ne;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(q.prototype, "isShowTease", {
            'get': function () {
              return this.oe;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(q.prototype, "wildCount", {
            'get': function () {
              return this.ce;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(q.prototype, "isTriggerWild", {
            'get': function () {
              return this.he;
            },
            'enumerable': false,
            'configurable': true
          });
          return q;
        }(r["default"]);
        Y["default"] = v;
        cc._RF.pop();
      }
    }, T5],
    'GSpinButtonController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "d63e8n/nwlEIKjzPvWI/5Nn", "GSpinButtonController")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("SpinButtonController");
        var q = z("GConstants");
        var g = z("AudioManager");
        var Z = z("SpinButtonController.spec");
        var b = z("AutomationDecorator");
        var H = z("GeneralAudioConstant");
        var I = cc._decorator;
        var K = I.ccclass;
        var E = I.property;
        var Q = function (X) {
          function A() {
            var V = null !== X && X.apply(this, arguments) || this;
            V.spinButton = undefined;
            V.spinArrow = undefined;
            V.spinArrowBg = undefined;
            V.autoSpinHolder = undefined;
            V.autoSpinNumberDisplayNode = undefined;
            V.arrowSprite = undefined;
            V.arrowSF = undefined;
            V.arrowBlurSF = undefined;
            V.arrowGreySF = undefined;
            V.arrowGreyBlurSF = undefined;
            V.bounceNode = undefined;
            V.sparkleAnimation = [];
            V.circleGlowNode = undefined;
            V.hoverScale = undefined;
            V.hoverBase = undefined;
            V.autoSpinHoverGlowNode = undefined;
            V.ears = [];
            V.shineAnim = undefined;
            V.backGlow = undefined;
            V.footerShine = undefined;
            V.re = undefined;
            V.ae = undefined;
            return V;
          }
          __extends(A, X);
          A.prototype.destroy = function () {
            this.onStopAllAnimations();
            this.node.destroy();
            return X.prototype.destroy.call(this);
          };
          A.prototype.onStopAllAnimations = function () {
            this.node.stopAllActions();
            this.spinArrow.stopAllActions();
            this.onHideMouseOverEffect();
          };
          A.prototype.onShowIdleAnimation = function () {
            this.ue();
            this.le(false);
            this.spinArrow.stopAllActions();
            var V = cc.repeatForever(cc.rotateBy(q.SPIN_BUTTON_TIMING.SECONDS_PER_ROUND_IDLE, 0x168));
            this.spinArrow.runAction(V);
          };
          A.prototype.onShowSpinAnimation = function () {
            var V = this;
            if (this.mode === G.SpinButtonMode.ENABLED) {
              var W = H.GENERAL_AUDIO.spinBtn.key;
              g.stopAudioIfPlaying(W);
              g.playAudioIfNotPlaying(W);
              this.footerShine.stop();
              this.footerShine.setCurrentTime(0x0);
              this.footerShine.play();
              this.shineAnim.play();
              this.backGlow.play();
              this.sparkleAnimation.forEach(function (w) {
                w.node.opacity = 0xff;
                w.play();
                w.on("finished", function () {
                  w.node.opacity = 0x0;
                }, V);
              });
              this.circleGlowNode.runAction(cc.sequence(cc.fadeIn(0.1).easing(cc.easeCubicActionOut()), cc.fadeOut(0.2)));
              this.bounceNode.getComponent(cc.Animation).play();
              this.onHideMouseOverEffect();
              this.fe();
              this.le(false);
              this.spinArrow.stopAllActions();
              var J = cc.repeatForever(cc.rotateBy(q.SPIN_BUTTON_TIMING.SECONDS_PER_ROUND_SPINNING, 0x168));
              this.spinArrow.runAction(J);
            }
          };
          A.prototype.replaceSpinBlurredSpriteFrame = function () {
            this.fe();
          };
          A.prototype.onShowStopSpinningAnimation = function () {
            if (this.mode === G.SpinButtonMode.DISABLED) {
              this.de();
            } else {
              this.ue();
            }
            this.le(false);
            this.spinArrow.stopAllActions();
          };
          A.prototype.onEnableButton = function () {
            this.ue();
            this.ve(true);
          };
          A.prototype.onDisableButton = function () {
            if (this.animationState === G.SpinButtonAnimationState.SPINNING) {
              this._e();
            } else {
              this.de();
            }
            this.ve(false);
          };
          A.prototype.showAutoSpinLook = function (V) {
            this.le(true);
            this.re.clear();
            this.re.displayNumber(V);
            X.prototype.showAutoSpinLook.call(this, V);
          };
          A.prototype.onUpdateAutoSpinCount = function (V) {
            if (this.mode === G.SpinButtonMode.AUTOSPIN) {
              this.re.clear();
              this.re.displayNumber(V);
            }
          };
          A.prototype.onExitAutoSpinMode = function () {};
          A.prototype.onResumeIdle = function () {
            if (this.mode !== G.SpinButtonMode.DISABLED) {
              this.onShowIdleAnimation();
            }
          };
          A.prototype.onResumeSpin = function () {
            if (this.mode !== G.SpinButtonMode.DISABLED) {
              this.onHideMouseOverEffect();
              this.onShowSpinAnimation();
            }
          };
          A.prototype.onResumeStop = function () {
            this.onHideMouseOverEffect();
            this.onShowStopSpinningAnimation();
          };
          A.prototype.onPlayMouseOverEffect = function () {
            if (this.animationState === G.SpinButtonAnimationState.IDLE && this.mode !== G.SpinButtonMode.AUTOSPIN) {
              this.hoverBase.opacity = 0x0;
              this.hoverScale.color = q.BLACK;
              this.hoverBase.parent.getComponent(cc.Animation).play();
            } else if (this.mode === G.SpinButtonMode.AUTOSPIN) {
              this.autoSpinHoverGlowNode.play();
            }
          };
          A.prototype.onHideMouseOverEffect = function () {
            this.hoverBase.opacity = 0x0;
            this.hoverScale.color = q.BLACK;
            this.autoSpinHoverGlowNode.node.opacity = 0x0;
            this.autoSpinHoverGlowNode.stop();
            this.hoverBase.parent.getComponent(cc.Animation).stop();
            this.hoverBase.parent.getComponent(cc.Animation).setCurrentTime(0x0);
          };
          A.prototype.onInit = function () {
            this.re = this.autoSpinNumberDisplayNode.getComponent("NumberDisplayController");
            this.ae = this.bounceNode.scale;
            this.initSpinButtonControllerNodes({
              'spinButtonNode': this.spinButton.node
            });
          };
          A.prototype.initSpinButtonControllerNodes = function () {};
          A.prototype.ue = function () {
            this.arrowSprite.spriteFrame = this.arrowSF;
          };
          A.prototype.fe = function () {
            this.arrowSprite.spriteFrame = this.arrowBlurSF;
          };
          A.prototype.de = function () {
            this.arrowSprite.spriteFrame = this.arrowGreySF;
          };
          A.prototype._e = function () {
            this.arrowSprite.spriteFrame = this.arrowGreyBlurSF;
          };
          A.prototype.le = function (V) {
            this.spinArrow.active = !V;
            this.spinArrowBg.active = !V;
            this.autoSpinHolder.active = V;
            this.ears.forEach(function (W) {
              W.active = !V;
            });
          };
          A.prototype.ve = function (V) {
            this.spinButton.interactable = V;
          };
          __decorate([E(cc.Button)], A.prototype, "spinButton", undefined);
          __decorate([E(cc.Node)], A.prototype, "spinArrow", undefined);
          __decorate([E(cc.Node)], A.prototype, "spinArrowBg", undefined);
          __decorate([E(cc.Node)], A.prototype, "autoSpinHolder", undefined);
          __decorate([E(cc.Node)], A.prototype, "autoSpinNumberDisplayNode", undefined);
          __decorate([E(cc.Sprite)], A.prototype, "arrowSprite", undefined);
          __decorate([E(cc.SpriteFrame)], A.prototype, "arrowSF", undefined);
          __decorate([E(cc.SpriteFrame)], A.prototype, "arrowBlurSF", undefined);
          __decorate([E(cc.SpriteFrame)], A.prototype, "arrowGreySF", undefined);
          __decorate([E(cc.SpriteFrame)], A.prototype, "arrowGreyBlurSF", undefined);
          __decorate([E(cc.Node)], A.prototype, "bounceNode", undefined);
          __decorate([E([cc.Animation])], A.prototype, "sparkleAnimation", undefined);
          __decorate([E(cc.Node)], A.prototype, "circleGlowNode", undefined);
          __decorate([E(cc.Node)], A.prototype, "hoverScale", undefined);
          __decorate([E(cc.Node)], A.prototype, "hoverBase", undefined);
          __decorate([E(cc.Animation)], A.prototype, "autoSpinHoverGlowNode", undefined);
          __decorate([E([cc.Node])], A.prototype, "ears", undefined);
          __decorate([E(cc.Animation)], A.prototype, "shineAnim", undefined);
          __decorate([E(cc.Animation)], A.prototype, "backGlow", undefined);
          __decorate([E(cc.Animation)], A.prototype, "footerShine", undefined);
          __decorate([b.automationDec({
            'func': Z.initSpinButtonControllerNodes
          })], A.prototype, "initSpinButtonControllerNodes", null);
          __decorate([b.automationDec({
            'func': Z.setButtonInteractivity
          })], A.prototype, "_setButtonInteractivity", null);
          return __decorate([K], A);
        }(G["default"]);
        Y["default"] = Q;
        cc._RF.pop();
      }
    }, T6],
    'GSpinState': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "a1887bwwCZHBLvxcJ2M9gy3", "GSpinState")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("SpinState");
        var G = z("RequestHandler");
        var q = z("Utils");
        var f = z("GApiClient");
        var g = z("AutoSpinHandler");
        var Z = z("TransactionStateMachineHandler");
        var b = function (H) {
          function I(K, E, Q, X) {
            var A = H.call(this, K, E, Q, X) || this;
            A.uiHelper = undefined;
            A.uiHelper = E.uiHelper;
            return A;
          }
          __extends(I, H);
          I.prototype.stateWillStartSpin = function () {
            this.uiHelper.preSpinningCleanup();
            this.uiHelper.playSlotSpinEffect();
          };
          I.prototype.callApi = function (K) {
            q.sequenceCallback(Z.goToStateCallback("result", true), this.te.bind(this))(K);
          };
          I.prototype.te = function (K) {
            var E = this;
            G.doTransactionAPIRequest({
              'name': this.name,
              'apiRequest': f.gApiClient.spin.bind(f.gApiClient)
            }, this.dataSource, function (Q, X) {
              if (X && X.dt) {
                if (Q && g.shouldAutoSpin()) {
                  g.exitAutoSpin(E.generalControllers.spinButtonController);
                }
                Z.transitionCompleteCallback("result")(K);
              }
            });
          };
          I.prototype.additionalDestroyCleanups = function () {
            this.uiHelper = undefined;
          };
          return I;
        }(v["default"]);
        Y["default"] = b;
        cc._RF.pop();
      }
    }, T7],
    'GameAudioAdapter': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "72ce2m7Nz9BCpH6kGYmhcUG", "GameAudioAdapter")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("AudioManager");
        var v = z("AudioAdapter");
        var G = z("AudioAdapterConstant");
        var q = cc._decorator.ccclass;
        var f = function (g) {
          function Z(b, H) {
            var I = g.call(this, b) || this;
            I.me = undefined;
            I.pe = undefined;
            I.pe = H;
            return I;
          }
          __extends(Z, g);
          Z.prototype.load = function () {
            var b = this;
            var H = function () {
              b.off(G.AUDIO_ADAPTER_EVENT.LOAD_ERROR, I);
              b.me = r.registerAudio(b, b.pe);
            };
            var I = function () {
              b.off(G.AUDIO_ADAPTER_EVENT.LOADED, H);
            };
            this.once(G.AUDIO_ADAPTER_EVENT.LOADED, H);
            this.once(G.AUDIO_ADAPTER_EVENT.LOAD_ERROR, I);
            return g.prototype.load.call(this);
          };
          Z.prototype.unload = function () {
            r.unregisterAudio(this, this.me);
            return g.prototype.unload.call(this);
          };
          return __decorate([q], Z);
        }(v["default"]);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, T8],
    'GameEventHandler': [function (z, L) {
      'use strict';

      if (!cc._RF.push(L, "6da04mFMhpNcpdeGLQM+RKD", "GameEventHandler")) {
        var Y = {
          subscribeGameInfoUpdateEvent: "subscribeUpdateGameInfoEvent",
          subscribeGameLayoutInfoRequestEvent: "subscribeGameLayoutInfoEvent",
          subscribeGameConfigRequestEvent: "subscribeGameConfigRequest",
          subscribeGameConfigUpdateEvent: "subscribeGameConfigUpdateRequest",
          subscribeAudioPlayRateUpdateEvent: "subscribeUpdateAudioPlayRateEvent",
          subscribeInUIIdleStateStatusUpdateEvent: "subscribeUIIdleStateEvent",
          subscribeOperatorCurrencyFormatUpdateEvent: "subscribeOperatorCurrencyFormatUpdate",
          subscribeStoredGamesNameRequestEvent: "subscribeGameNameRequestEvent",
          emitGameStateChangedEvent: "emitGameStateChange",
          emitAutoplayStartedEvent: "emitAutoplayStarted",
          emitAutoplayStoppedEvent: "emitAutoplayStopped",
          emitErrorLogEvent: "emitErrorLog",
          emitGamePlayUIBlockEvent: "emitBlockUIEvent",
          addGamePauseEventCallback: "setGamePauseEventCallback",
          addGameResumeEventCallback: "setGameResumeEventCallback",
          addTransactionInfoChangedEventCallback: "setTransactionInfoChangedCallback",
          removeTransactionInfoChangedEventCallback: "removeTransactionInfoChangedCallback",
          addGamePlayUIBlockEventCallback: "setGamePlayUIBlockEventCallback",
          addInUIIdleStateCallback: "setInUIIdleStateCallback",
          subscribeSessionSocketErrorEvent: "subscribeOperationSocketErrorEvent",
          subscribeSessionSocketConnectedEvent: "subscribeOperationSocketConnectedEvent",
          subscribeSessionSocketConnectionStatusRequestEvent: "subscribeOperationSocketConnectionStatusRequestEvent"
        };
        var l = System.get("bvframework").GameEventHandler;
        var v = __assign({}, l);
        Object.keys(Y).forEach(function (q) {
          v[Y[q]] = v[q];
        });
        for (var G in v) L.exports[G] = v[G];
        L.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GameHeaderHelper': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "295f80O8n1EXbn2oiNk8NLd", "GameHeaderHelper")) {
        var L = System.get("bvframework").GameHeaderHelper;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GameInitializationHandler': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "b3a04bieS1EsYWkuqlKhqB3", "GameInitializationHandler")) {
        var L = System.get("bvframework").GameInitializationHandler;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GameLayout': [function (e, g, Z) {
      'use strict';

      var b = {
        value: true
      };
      var H = {
        'x': 0x0,
        'y': -0xeb
      };
      var I = {
        width: 0x438,
        height: 0x12c
      };
      var K = {
        position: H,
        size: I
      };
      var E = {
        'x': 0x0,
        'y': -0x208
      };
      var Q = {
        width: 0x438,
        height: 0xf0
      };
      var X = {
        position: E,
        size: Q
      };
      var o = {
        'x': 0x0,
        'y': -0x27b
      };
      var A = {
        width: 0x438,
        height: 0x12c
      };
      var V = {
        position: o,
        size: A
      };
      var W = {
        uiFreeSpace: K,
        uiSettingMenu: X,
        uiBigWinFreeSpace: V
      };
      if (!cc._RF.push(g, "dce93T8CsZHTbOXkpseC7dW", "GameLayout")) {
        Object.defineProperty(Z, "__esModule", b);
        Z.gameLayout = undefined;
        Z.gameLayout = W;
        cc._RF.pop();
      }
    }, {}],
    'GameMaintenanceHandler': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "6c833L7mQpG+JThxZci79NX", "GameMaintenanceHandler")) {
        var L = System.get("bvframework").GameMaintenanceHandler;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GameMaintenanceModel': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "9919da29LFDdJcSuJgAAHrr", "GameMaintenanceModel")) {
        var L = System.get("bvframework").GameMaintenanceModel;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GamePluginModel': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "c0badZnWvFI0LG/0J35BfII", "GamePluginModel")) {
        var L = System.get("bvframework").GamePluginModel;
        z.exports["default"] = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GamePreference': [function (N, z, L) {
      'use strict';

      if (!cc._RF.push(z, "20addtomYtGCrhEXEIvVhDS", "GamePreference")) {
        L.__esModule = true;
        L.globalPreference = L.gamePreference = undefined;
        var Y = N("Preference");
        var l = N("RtConfig");
        0x0;
        var r = Y.getPreference(l.cs_Config.bundleId);
        L.gamePreference = r;
        0x0;
        var v = Y.getPreference(l.cs_Config.globalDomain);
        L.globalPreference = v;
        cc._RF.pop();
      }
    }, T9],
    'GameTitle': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "12eedGFUCVPu7lTHrspCNtZ", "GameTitle")) {
        var L = System.get("bvframework").GameTitle;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GameTweaksConfig': [function (N, z, L) {
      'use strict';

      var Y;
      if (!cc._RF.push(z, "82e00IU/NVM3bUxTCWfQzx3", "GameTweaksConfig")) {
        L.__esModule = true;
        L["default"] = undefined;
        N("CreatorTweaks");
        if (Y = N("TweaksConfig")) {
          Y.__esModule;
        }
        N("TweaksData");
        L["default"] = false;
        z.exports = L["default"];
        cc._RF.pop();
      }
    }, TN],
    'GameTweaksData': [function (N, z, L) {
      'use strict';

      if (!cc._RF.push(z, "21ddbUCEaFM06TmBlOwfWKe", "GameTweaksData")) {
        L.__esModule = true;
        L.testSymbols = undefined;
        L.testSymbols = undefined;
        cc._RF.pop();
      }
    }, {}],
    'GameUtils': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "576e78TekpIpIcjjcHFmVOq", "GameUtils")) {
        var L = System.get("bvframework").GameUtils;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'GeneralAssetConfig': [function (n, S, R) {
      'use strict';

      if (!cc._RF.push(S, "39993EWULpL9o77fgroS3sO", "GeneralAssetConfig")) {
        var d = {
          value: true
        };
        Object.defineProperty(R, "__esModule", d);
        R.generalAssetConfig = undefined;
        var x = {
          name: "angpao_controller",
          url: "load_res/angpao_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var j = {
          name: "background_controller",
          url: "load_res/background_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var P = {
          name: "background_controller_2",
          url: "load_res/background_controller_2",
          type: cc.Prefab,
          isLocalized: false
        };
        var m = {
          name: "big_win_controller",
          url: "load_res/big_win_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var p = {
          name: "big_win_text",
          url: "texture/big_win/bigwin_text",
          type: cc.SpriteAtlas,
          isLocalized: true
        };
        var M = {
          name: "column_tint_controller",
          url: "load_res/column_tint_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var B = {
          name: "click_effect",
          url: "lib/click_effect/prefab/click_effect_layer",
          type: cc.Prefab,
          isLocalized: false
        };
        var y = {
          name: "h_firecracker_atlas_symbols",
          url: "spine/h_firecracker_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var k = {
          name: "h_ingot_atlas_symbols",
          url: "spine/h_ingot_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var N0 = {
          name: "h_pouch_atlas_symbols",
          url: "spine/h_pouch_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var N1 = {
          name: "h_orange_atlas_symbols",
          url: "spine/h_orange_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var N2 = {
          name: "h_ruyi_atlas_symbols",
          url: "spine/h_ruyi_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var N3 = {
          name: "h_angbao_atlas_symbols",
          url: "spine/h_angbao_atlas_symbols",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var N4 = {
          name: "info_board_controller",
          url: "load_res/info_board_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var N5 = {
          name: "infoboard_text",
          url: "texture/info_board/infoboard_text",
          type: cc.SpriteAtlas,
          isLocalized: true
        };
        var N6 = {
          name: "infoboard_win_text",
          url: "texture/info_board/infoboard_win_text",
          type: cc.SpriteAtlas,
          isLocalized: true
        };
        var N7 = {
          name: "normal_symbol",
          url: "texture/slot/normal_symbol",
          type: cc.SpriteAtlas,
          isLocalized: false
        };
        var N8 = {
          name: "pay_line_number_controller",
          url: "load_res/pay_line_number_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var N9 = {
          name: "pay_line_controller",
          url: "load_res/pay_line_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var NN = {
          name: "pay_out_effect_controller",
          url: "load_res/pay_out_effect_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var Nz = {
          name: "pay_select_effect_controller",
          url: "load_res/pay_select_effect_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var NC = {
          name: "s_wild",
          url: "spine/s_wild",
          type: sp.SkeletonData,
          isLocalized: true
        };
        var NT = {
          name: "setting_menu_wallet_panel",
          url: "lib/setting_menu/prefab/info_footer/setting_info_footer_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var NL = {
          name: "slot_controller",
          url: "load_res/slot_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var NY = {
          name: "slot_tint_controller",
          url: "load_res/slot_tint_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var Nl = {
          name: "trail_particle_controller",
          url: "load_res/trail_particle_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var Nr = {
          name: "spin_button_controller",
          url: "load_res/spin_button_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var Nt = {
          name: "foreground_controller",
          url: "load_res/foreground_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var Nv = {
          name: "wild_symbol",
          url: "texture/slot/wild_symbol",
          type: cc.SpriteAtlas,
          isLocalized: true
        };
        var NG = {
          name: "symbol_popout_controller",
          url: "load_res/symbol_payout_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var Nq = {
          name: "tiger_controller",
          url: "load_res/tiger_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var Nc = {
          name: "sticky_controller",
          url: "load_res/sticky_controller",
          type: cc.Prefab,
          isLocalized: false
        };
        var Nf = [x, j, P, m, p, M, B, y, k, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, NN, Nz, NC, NT, NL, NY, Nl, Nr, Nt, Nv, NG, Nq, Nc];
        R.generalAssetConfig = Nf;
        cc._RF.pop();
      }
    }, {}],
    'GeneralAudioConstant': [function (x, j, P) {
      'use strict';

      var m = {
        value: true
      };
      var p = {
        from: 0x0,
        'to': 1.156271,
        key: "featureAngpauFly"
      };
      var M = {
        from: 0x2,
        'to': 5.795333,
        key: "featureAngpauReveal"
      };
      var B = {
        from: 0x6,
        'to': 9.010396,
        key: "featureMultiAppear"
      };
      var y = {
        from: 0xa,
        'to': 11.625021,
        key: "featureQuit"
      };
      var k = {
        from: 0xc,
        'to': 13.437521,
        key: "featureSpin"
      };
      var N0 = {
        from: 0xe,
        'to': 17.766708,
        key: "featureStart"
      };
      var N1 = {
        from: 0x12,
        'to': 21.805479,
        key: "featureTease"
      };
      var N2 = {
        from: 0x16,
        'to': 24.093812,
        key: "featureWinLine1"
      };
      var N3 = {
        from: 0x19,
        'to': 27.102688,
        key: "featureWinLine2"
      };
      var N4 = {
        from: 0x1c,
        'to': 30.061479,
        key: "featureWinLine3"
      };
      var N5 = {
        from: 0x1f,
        'to': 33.090667,
        key: "featureWinLine4"
      };
      var N6 = {
        from: 0x22,
        'to': 36.080292,
        key: "featureWinLine5"
      };
      var N7 = {
        from: 0x25,
        'to': 38.537542,
        key: "infobarAfterBigwin"
      };
      var N8 = {
        from: 0x27,
        'to': 40.352646,
        key: "multiAppearWoRespin"
      };
      var N9 = {
        from: 0x29,
        'to': 42.256792,
        key: "multiFly"
      };
      var NN = {
        from: 0x2b,
        'to': 44.875,
        key: "prizeMedwinEnd"
      };
      var Nz = {
        from: 0x2d,
        'to': 46.5,
        key: "prizeMedwinMain"
      };
      var NC = {
        from: 0x2f,
        'to': 47.916667,
        key: "prizePayoutIdle"
      };
      var NT = {
        from: 0x30,
        'to': 49.733896,
        key: "prizeSmalwin"
      };
      var NL = {
        from: 0x32,
        'to': 52.531792,
        key: "prizeWinFullscreen"
      };
      var NY = {
        from: 0x35,
        'to': 53.068229,
        key: "spinActiveLoop"
      };
      var Nl = {
        from: 0x36,
        'to': 55.039104,
        key: "spinBtn"
      };
      var Nr = {
        from: 0x38,
        'to': 56.125021,
        key: "spinStop"
      };
      var Nt = {
        from: 0x39,
        'to': 57.184208,
        key: "spinStopQuick"
      };
      var Nv = {
        from: 0x3a,
        'to': 59.041667,
        key: "symWildHighlight"
      };
      var NG = {
        from: 0x3c,
        'to': 0x3d,
        key: "symWildReach"
      };
      var Nq = {
        from: 0x3d,
        'to': 62.020854,
        key: "symWildSpawn"
      };
      var Nc = {
        from: 0x3f,
        'to': 63.208354,
        key: "uiInfo"
      };
      var Nf = {
        from: 0x40,
        'to': 65.892208,
        key: "voxIdle4"
      };
      var Ne = {
        from: 0x42,
        'to': 69.3,
        key: "voxRsWin"
      };
      var Ng = {
        from: 0x46,
        'to': 71.702104,
        key: "voxSmallwin1a"
      };
      var Ns = {
        from: 0x48,
        'to': 73.623458,
        key: "voxSmallwin1b"
      };
      var NZ = {
        from: 0x4a,
        'to': 75.343771,
        key: "voxSmallwin1c"
      };
      var Ni = {
        from: 0x4c,
        'to': 77.166667,
        key: "voxSmallwin2a"
      };
      var Nb = {
        from: 0x4e,
        'to': 79.831771,
        key: "voxSmallwin2b"
      };
      var NH = {
        from: 0x50,
        'to': 81.083333,
        key: "voxZoExit"
      };
      var NI = {
        featureAngpauFly: p,
        featureAngpauReveal: M,
        featureMultiAppear: B,
        featureQuit: y,
        featureSpin: k,
        featureStart: N0,
        featureTease: N1,
        featureWinLine1: N2,
        featureWinLine2: N3,
        featureWinLine3: N4,
        featureWinLine4: N5,
        featureWinLine5: N6,
        infobarAfterBigwin: N7,
        multiAppearWoRespin: N8,
        multiFly: N9,
        prizeMedwinEnd: NN,
        prizeMedwinMain: Nz,
        prizePayoutIdle: NC,
        prizeSmalwin: NT,
        prizeWinFullscreen: NL,
        spinActiveLoop: NY,
        spinBtn: Nl,
        spinStop: Nr,
        spinStopQuick: Nt,
        symWildHighlight: Nv,
        symWildReach: NG,
        symWildSpawn: Nq,
        uiInfo: Nc,
        voxIdle4: Nf,
        voxRsWin: Ne,
        voxSmallwin1a: Ng,
        voxSmallwin1b: Ns,
        voxSmallwin1c: NZ,
        voxSmallwin2a: Ni,
        voxSmallwin2b: Nb,
        voxZoExit: NH,
        __duration: 82.03
      };
      if (!cc._RF.push(j, "98107tSwVFGrb9HqR7fLSWz", "GeneralAudioConstant")) {
        Object.defineProperty(P, "__esModule", m);
        P.GENERAL_AUDIO = undefined;
        P.GENERAL_AUDIO = NI;
        cc._RF.pop();
      }
    }, {}],
    'GenericSettingButton': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "aeaa7CV0CtEMo2Sab7CGMw1", "GenericSettingButton")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("ButtonTheme");
        var G = z("UIAppearanceHelper");
        var q = z("Utils");
        var f = cc._decorator;
        var g = f.ccclass;
        var Z = f.property;
        var b = function (I) {
          function K() {
            var E = null !== I && I.apply(this, arguments) || this;
            E.iconSprite = undefined;
            E.collider = undefined;
            E.buttonTheme = undefined;
            E.be = true;
            E.Se = cc.v2();
            E.ge = cc.v2();
            E.Ce = false;
            E.ye = false;
            E.Me = false;
            E.Ae = false;
            return E;
          }
          __extends(K, I);
          K.prototype.onLoad = function () {
            this.enableTouchInteraction();
            if (this.buttonTheme) {
              var E = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              q.setNodeColorWithOpacity(this.iconSprite, E);
            }
          };
          K.prototype.setIconSprite = function (E) {
            this.iconSprite.getComponent(cc.Sprite).spriteFrame = E;
          };
          K.prototype.destroy = function () {
            this.disableTouchInteraction();
            return I.prototype.destroy.call(this);
          };
          K.prototype.onClick = function () {};
          K.prototype.buttonActivate = function (E) {
            if (E) {
              this.node.active = true;
              q.deferCallback(this)(this.enableTouchInteraction);
            } else {
              this.disableTouchInteraction();
              this.node.active = false;
            }
          };
          Object.defineProperty(K.prototype, "isInteractable", {
            'get': function () {
              return this.be;
            },
            'set': function (E) {
              this.be = E;
              this.interactableButtonColor(E);
              if (E) {
                this.enableTouchInteraction();
              } else {
                this.disableTouchInteraction();
                this.Ae = false;
              }
            },
            'enumerable': false,
            'configurable': true
          });
          K.prototype.Ie = function (E) {
            if (this.be) {
              this.Ae = true;
              this.ge = this.Se = E.touch.getLocation();
              this.Ce = false;
              this.ye = false;
              this.changeButtonPressedColor(true);
            } else {
              E.stopPropagation();
            }
          };
          K.prototype.Hi = function (E) {
            if (this.Ae) {
              if (this.be) {
                this.ge = E.touch.getLocation();
                if (!this.Ce) {
                  if (cc.v2(0x0, this.Se.y).sub(cc.v2(0x0, this.ge.y)).mag() > 0x3c) {
                    this.Ce = true;
                    this.changeButtonPressedColor(false);
                  }
                  E.stopPropagation();
                }
                if (!this.ye) {
                  if (cc.v2(this.Se.x, 0x0).sub(cc.v2(this.ge.x, 0x0)).mag() > 0x3c) {
                    this.ye = true;
                    this.changeButtonPressedColor(false);
                  }
                }
              } else {
                E.stopPropagation();
              }
            }
          };
          K.prototype.we = function (E) {
            if (this.Ae) {
              if (this.be) {
                if (!this.Ce) {
                  E.stopPropagation();
                  this.changeButtonPressedColor(false);
                  this.onClick();
                }
              } else {
                E.stopPropagation();
              }
            }
          };
          K.prototype.Oe = function (E) {
            if (this.Ae) {
              if (this.be) {
                if (!this.Ce) {
                  E.stopPropagation();
                  this.changeButtonPressedColor(false);
                }
              } else {
                E.stopPropagation();
              }
            }
          };
          K.prototype.changeButtonColor = function (E) {
            this.changeButtonPressedColor(E);
          };
          K.prototype.changeButtonPressedColor = function (E) {
            if (this.buttonTheme) {
              var Q = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var X = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".pressed");
              q.setNodeColorWithOpacity(this.iconSprite, E ? X : Q);
            }
          };
          K.prototype.interactableButtonColor = function (E) {
            if (this.buttonTheme) {
              var Q = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var X = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              q.setNodeColorWithOpacity(this.iconSprite, E ? Q : X);
            }
          };
          K.prototype.enableTouchInteraction = function () {
            if (!this.Me) {
              this.Me = true;
              this.collider.on(cc.Node.EventType.TOUCH_START, this.Ie, this);
              this.collider.on(cc.Node.EventType.TOUCH_MOVE, this.Hi, this);
              this.collider.on(cc.Node.EventType.TOUCH_END, this.we, this);
              this.collider.on(cc.Node.EventType.TOUCH_CANCEL, this.Oe, this);
            }
          };
          K.prototype.disableTouchInteraction = function () {
            if (this.Me) {
              this.Me = false;
              this.collider.off(cc.Node.EventType.TOUCH_START, this.Ie, this);
              this.collider.off(cc.Node.EventType.TOUCH_MOVE, this.Hi, this);
              this.collider.off(cc.Node.EventType.TOUCH_END, this.we, this);
              this.collider.off(cc.Node.EventType.TOUCH_CANCEL, this.Oe, this);
            }
          };
          __decorate([Z(cc.Node)], K.prototype, "iconSprite", undefined);
          __decorate([Z(cc.Node)], K.prototype, "collider", undefined);
          __decorate([Z(v)], K.prototype, "buttonTheme", undefined);
          return __decorate([g], K);
        }(cc.Component);
        Y["default"] = b;
        cc._RF.pop();
      }
    }, Tz],
    'GridView': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "2a349Sf9h1Dw6gCmtoNZ3ZP", "GridView")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("ScrollViewEx");
        var f = cc._decorator;
        var g = f.ccclass;
        f.property;
        var Z = function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.autoSnap = true;
            I.ni = {};
            I.oi = {};
            return I;
          }
          __extends(H, b);
          Object.defineProperty(H.prototype, "nodePools", {
            'get': function () {
              return this.ni;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "templates", {
            'get': function () {
              return this.oi;
            },
            'enumerable': false,
            'configurable': true
          });
          H.prototype.setEstimatedSize = function (I) {
            if (this.vertical) {
              this.estimatedHeight = I.y;
            } else {
              this.estimatedWidth = I.x;
            }
          };
          H.prototype.setConstantCellSize = function (I, K) {
            var E = {
              width: I,
              height: K
            };
            this.constCellSize = E;
          };
          H.prototype.setResetFinish = function (I) {
            this.resetFinish = I;
          };
          H.prototype.setSpawnCell = function (I) {
            this.He = I;
          };
          H.prototype.setRemoveCell = function (I) {
            this.Be = I;
          };
          H.prototype.setPullingLeft = function (I) {
            this.Ge = I;
          };
          H.prototype.setPullLeftEnd = function (I) {
            this.Ne = I;
          };
          H.prototype.setPullingRight = function (I) {
            this.Te = I;
          };
          H.prototype.setPullRightEnd = function (I) {
            this.Pe = I;
          };
          H.prototype.setPullingDown = function (I) {
            this.Le = I;
          };
          H.prototype.setPullDownEnd = function (I) {
            this.Re = I;
          };
          H.prototype.setPullingUp = function (I) {
            this.Ee = I;
          };
          H.prototype.setPullUpEnd = function (I) {
            this.ke = I;
          };
          H.prototype.setFocusPoint = function (I) {
            switch (I) {
              case 0x1:
                this.focusPoint = {};
                this.focusPoint.type = 0x1;
                this.focusPoint.width = this.viewSize.width / 0x2;
                this.focusPoint.height = this.viewSize.height / 0x2;
                break;
              case 0x2:
                this.focusPoint = {};
                this.focusPoint.type = 0x2;
                this.focusPoint.width = this.viewSize.width;
                this.focusPoint.height = this.viewSize.height;
                break;
              default:
                this.focusPoint = {};
                this.focusPoint.type = 0x0;
                this.focusPoint.width = 0x0;
                this.focusPoint.height = 0x0;
            }
          };
          H.prototype.getFocusPoint = function () {
            if (!this.focusPoint) {
              this.focusPoint = {};
              this.focusPoint.type = 0x0;
              this.focusPoint.width = 0x0;
              this.focusPoint.height = 0x0;
            }
            return this.focusPoint;
          };
          H.prototype.setLayoutSetting = function (I) {
            this.contentLayout = this.content.getComponent(cc.Layout);
            this.layoutSetting = this.getLayoutSetting();
            if (I.spacingLeft) {
              this.layoutSetting.spacingLeft = I.spacingLeft;
            }
            if (I.spacingRight) {
              this.layoutSetting.spacingRight = I.spacingRight;
            }
            if (I.spacingTop) {
              this.layoutSetting.spacingTop = I.spacingTop;
            }
            if (I.spacingBottom) {
              this.layoutSetting.spacingBottom = I.spacingBottom;
            }
            if (I.spacingX) {
              this.layoutSetting.spacingX = I.spacingX;
            }
            if (I.spacingY) {
              this.layoutSetting.spacingY = I.spacingY;
            }
            this.contentLayout.paddingLeft = this.layoutSetting.spacingLeft;
            this.contentLayout.paddingRight = this.layoutSetting.spacingRight;
            this.contentLayout.paddingTop = this.layoutSetting.spacingTop;
            this.contentLayout.paddingBottom = this.layoutSetting.spacingBottom;
            this.contentLayout.spacingX = this.layoutSetting.spacingX;
            this.contentLayout.spacingY = this.layoutSetting.spacingY;
          };
          H.prototype.getLayoutSetting = function () {
            var I = {
              spacingLeft: 0x0,
              spacingRight: 0x0,
              spacingTop: 0x0,
              spacingBottom: 0x0,
              spacingX: 0x0,
              spacingY: 0x0
            };
            return this.layoutSetting ? this.layoutSetting : this.layoutSetting = I;
          };
          H.prototype.getVisibleItems = function () {
            var I = [];
            var K = this.content.children;
            if (K.length) {
              for (var E = 0x0; E < K.length; E++) {
                I.push(K[E]);
              }
            }
            return I;
          };
          H.prototype.setDataSource = function (I) {
            var K = this.node;
            var E = K.width;
            var Q = K.height;
            this.Ue(E, Q);
            if (I !== this.ci) {
              this.ci = I;
            }
          };
          H.prototype.je = function () {
            return this.ci;
          };
          H.prototype.De = function (I) {
            this.We = I;
          };
          H.prototype.xe = function () {
            if (!this.We) {
              this.We = 0x0;
            }
            return this.We;
          };
          H.prototype.ui = function () {
            var I = this.node;
            var K = I.width;
            var E = I.height;
            this.Ue(K, E);
            this.Fe(this.ri, this.currentIndex);
          };
          H.prototype.Ue = function (I, K) {
            var E = {
              width: I,
              height: K
            };
            this.viewSize = E;
            this.content.parent.setContentSize(I, K);
          };
          H.prototype.Ve = function () {
            return this.viewSize;
          };
          H.prototype.register = function (I, K, E) {
            if (this.nodePools[I]) {
              ;
            } else if (K) {
              var Q = new cc.NodePool(E);
              this.templates[I] = K;
              this.nodePools[I] = Q;
            }
          };
          H.prototype.reloadData = function () {
            this.setSnapDone(true);
            var I = this.ci;
            var K = I.getCount(this, this.ri);
            var E = this.We;
            if (E !== K) {
              this.setMasterControl(true);
              if (K < E) {
                this.ze(K);
              } else {
                this.De(K);
                this.reloadCurrentData();
                this.Je();
              }
            } else {
              this.reloadCurrentData();
            }
            if (I.didReloadData) {
              I.didReloadData();
            }
          };
          H.prototype.insertItem = function () {};
          H.prototype.removeItem = function () {};
          H.prototype.Fe = function (I, K, E) {
            if (undefined === I) {
              I = this.ri;
            }
            this.hi();
            this.qe();
            this.setMasterControl(true);
            this.content.y = 0x0;
            this.content.x = 0x0;
            this.content.setContentSize(0x0, 0x0);
            this.contentLayout.paddingTop = this.layoutSetting.spacingTop;
            this.contentLayout.paddingBottom = this.layoutSetting.spacingBottom;
            this.contentLayout.paddingLeft = this.layoutSetting.spacingLeft;
            this.contentLayout.paddingRight = this.layoutSetting.spacingRight;
            if (this.content.children.length) {
              for (var Q = this.content.children.length - 0x1; Q >= 0x0; Q--) {
                var X = this.content.children[Q];
                this.Ke(X);
              }
            }
            this.init(I, K, false, E);
          };
          H.prototype.reset = function (I, K) {
            if (undefined === I) {
              I = this.ri;
            }
            this.Fe(I, K, this.resetFinish);
          };
          H.prototype.init = function (I, K, E, Q) {
            var X = {
              spacingLeft: 0x0,
              spacingRight: 0x0,
              spacingTop: 0x0,
              spacingBottom: 0x0,
              spacingX: 0x0,
              spacingY: 0x0
            };
            if (undefined === K) {
              K = 0x0;
            }
            if (undefined === E) {
              E = true;
            }
            if (!this.layoutSetting) {
              this.setLayoutSetting(X);
            }
            var A = this.ci;
            this.isDynamicSize = !!A.getCellSize;
            this.isPreCalculateSize = !(!this.constCellSize && !this.isDynamicSize);
            if (!this.isPreCalculateSize) {
              K = 0x0;
            }
            this.originalElastic = this.elastic;
            this.currentIndex = K;
            this.currentTarget = K;
            this.requestSnap = false;
            this.setMasterControl(false);
            this.contentLayout = this.content.getComponent(cc.Layout);
            this.setSnapDone(true);
            this.snapPause = false;
            this.outerCellsMatrix = [];
            this.ri = I;
            this.pauseUpdate = false;
            this.pullDir = null;
            this.prevContentY = this.content.y;
            this.prevContentX = -0x1 * this.content.x;
            this.di();
            this.De(A.getCount(this, this.ri));
            if (this.vertical) {
              this.contentLayout.startAxis = 0x0;
              this.content.width = this.viewSize.width;
              this.Qe(0x0, K, this.viewSize.height, E, Q);
            } else {
              this.contentLayout.startAxis = 0x1;
              this.content.height = this.viewSize.height;
              this.Ye(0x0, K, this.viewSize.width, E, Q);
            }
          };
          H.prototype.scrollTo = function (I, K) {
            var E = this;
            if (undefined === K) {
              K = true;
            }
            if (!(I >= this.We)) {
              if (!this.isPreCalculateSize || K) {
                if (this.vertical) {
                  var Q = this.Xe(I);
                  if (null !== Q) {
                    var X = this.getFocusPoint();
                    this.currentIndex = I;
                    if (0x1 === X.type) {
                      this.target = this.Ze(Q) - this.outerCellsMatrix[Q].height - X.height + this.outerCellsMatrix[Q][0x0].height / 0x2;
                    } else {
                      this.target = this.Ze(Q) - this.outerCellsMatrix[Q].height - this.layoutSetting.spacingTop;
                    }
                    var A = this.content.height - this.viewSize.height;
                    if (this.target < 0x0) {
                      this.target = 0x0;
                    } else if (this.target > A) {
                      this.target = A;
                    }
                  } else {
                    this.target = this.estimatedHeight;
                    this.suddenStopIndex = I;
                  }
                } else {
                  var V = this.Xe(I);
                  if (null !== V) {
                    X = this.getFocusPoint();
                    this.currentIndex = I;
                    if (0x1 === X.type) {
                      this.target = this.$e(V) - this.outerCellsMatrix[V].width - X.width + this.outerCellsMatrix[V][0x0].width / 0x2;
                    } else {
                      this.target = this.$e(V) - this.outerCellsMatrix[V].width - this.layoutSetting.spacingLeft;
                    }
                    var W = this.content.width - this.viewSize.width;
                    if (this.target < 0x0) {
                      this.target = 0x0;
                    } else if (this.target > W) {
                      this.target = W;
                    }
                  } else {
                    this.target = this.estimatedWidth;
                    this.suddenStopIndex = I;
                  }
                }
                this.lerpSpeed = 0xa;
                this.setSnapDone(false);
              } else {
                this.Fe(this.ri, I, function () {
                  if (E.snapFinish) {
                    E.snapFinish(I);
                  }
                });
              }
            }
          };
          H.prototype.stopUpdate = function () {
            this.setMasterControl(true);
          };
          H.prototype.resumeUpdate = function () {
            if (this.pauseUpdate) {
              this.setMasterControl(false);
              this.pullDir = null;
              this.pauseUpdate = false;
            }
          };
          H.prototype.setMasterControl = function (I) {
            this.tn = I;
          };
          H.prototype['in'] = function () {
            if (!(this.pauseUpdate || this.tn)) {
              if (this.content.children.length) {
                if (this.vertical) {
                  if (this.content.y !== this.prevContentY) {
                    this.sn();
                  }
                } else if (-0x1 * this.content.x !== this.prevContentX) {
                  this.en();
                }
              }
            }
          };
          H.prototype.Ze = function (I) {
            if (this.outerCellsMatrix[I] && this.outerCellsMatrix[I].totalHeight) {
              return this.outerCellsMatrix[I].totalHeight;
            }
            var K = this.layoutSetting.spacingTop;
            for (var E = 0x0; E <= I; E++) {
              K += this.outerCellsMatrix[E].height;
              if (E === I) {
                this.outerCellsMatrix[I].totalHeight = K;
                return K;
              }
              K += this.layoutSetting.spacingY;
            }
          };
          H.prototype.$e = function (I) {
            if (this.outerCellsMatrix[I] && this.outerCellsMatrix[I].totalWidth) {
              return this.outerCellsMatrix[I].totalWidth;
            }
            var K = this.layoutSetting.spacingLeft;
            for (var E = 0x0; E <= I; E++) {
              K += this.outerCellsMatrix[E].width;
              if (E === I) {
                this.outerCellsMatrix[I].totalWidth = K;
                return K;
              }
              K += this.layoutSetting.spacingX;
            }
          };
          H.prototype.nn = function () {
            if (this.vertical) {
              if (this.cn() < this.hn) {
                return 0x0;
              }
              if (this.rn() > this.an) {
                var I = this.content.children.length - 0x1;
                return this.content.children[I].row;
              }
              var K = 0x0;
              var E = 0x0;
              var Q = this.content.height;
              var X = null;
              for (var A = 0x0; A < this.content.children.length; A++) {
                if (X != this.content.children[A].row) {
                  X = this.content.children[A].row;
                  var V = this.Ze(X) - this.outerCellsMatrix[X].height - this.layoutSetting.spacingTop;
                  if ((E = Math.abs(V - this.content.y)) >= Q) {
                    return K;
                  }
                  K = X;
                  Q = E;
                }
              }
              return K;
            }
            if (this.un() > this.ln) {
              return 0x0;
            }
            if (this.dn() < this.vn) {
              I = this.content.children.length - 0x1;
              return this.content.children[I].col;
            }
            var W = 0x0;
            var J = 0x0;
            Q = this.content.width;
            var w = null;
            for (A = 0x0; A < this.content.children.length; A++) {
              if (w != this.content.children[A].col) {
                w = this.content.children[A].col;
                var O = this.$e(w) - this.outerCellsMatrix[w].width - this.layoutSetting.spacingLeft;
                if ((J = Math.abs(O - -0x1 * this.content.x)) >= Q) {
                  return W;
                }
                W = w;
                Q = J;
              }
            }
            return W;
          };
          H.prototype._n = function () {
            this.elastic = this.originalElastic;
            if (!this.tn && this.requestSnap && this.content.children.length) {
              if (this.vertical) {
                var I = this.getFocusPoint();
                this.requestSnap = false;
                var K = this.nn();
                this.currentTarget = K;
                this.currentIndex = this.outerCellsMatrix[K][0x0] ? this.outerCellsMatrix[K][0x0].zIndex : null;
                if (0x1 === I.type) {
                  this.target = this.Ze(K) - this.outerCellsMatrix[K].height - I.height + this.outerCellsMatrix[K][0x0].height / 0x2;
                } else {
                  this.target = this.Ze(K) - this.outerCellsMatrix[K].height - this.layoutSetting.spacingTop;
                }
                var E = this.content.height - this.viewSize.height;
                if (E < 0x0) {
                  E = 0x0;
                }
                if (this.target <= 0x0) {
                  this.target = 0x0;
                } else if (this.target >= E) {
                  this.target = E;
                }
              } else {
                I = this.getFocusPoint();
                this.requestSnap = false;
                var Q = this.nn();
                this.currentTarget = Q;
                this.currentIndex = this.outerCellsMatrix[Q][0x0] ? this.outerCellsMatrix[Q][0x0].zIndex : null;
                if (0x1 === I.type) {
                  this.target = this.$e(Q) - this.outerCellsMatrix[Q].width - I.width + this.outerCellsMatrix[Q][0x0].width / 0x2;
                } else {
                  this.target = this.$e(Q) - this.outerCellsMatrix[Q].width - this.layoutSetting.spacingLeft;
                }
                var X = this.content.width - this.viewSize.width;
                if (X < 0x0) {
                  X = 0x0;
                }
                if (this.target <= 0x0) {
                  this.target = 0x0;
                } else if (this.target >= X) {
                  this.target = X;
                }
              }
              this.lerpSpeed = 0x5;
              this.setSnapDone(false);
            }
          };
          H.prototype.sn = function () {
            var I = this.content.y;
            var K = this.content.children[0x0];
            var E = this.content.children[this.content.children.length - 0x1];
            var Q = K.row;
            var X = E.row;
            var A = this.Ze(X) - this.viewSize.height;
            if (this.prevContentY > I) {
              var V = K.zIndex;
              var W = I - this.contentLayout.paddingTop + this.layoutSetting.spacingY;
              if (0x0 > W) {
                this.mn(Q - 0x1, V - 0x1, W);
              }
              if (X > 0x0 && this.outerCellsMatrix[X - 0x1] && this.outerCellsMatrix[X - 0x1][0x0]) {
                var J = I - A + this.layoutSetting.spacingY + this.outerCellsMatrix[X].height;
                if (J < 0x0) {
                  this.pn(X, J, A);
                }
              }
            } else {
              var w = E.zIndex;
              var O = I - A;
              if (0x0 < O) {
                this.bn(X + 0x1, 0x0, w + 0x1, O);
              }
              if (Q < this.outerCellsMatrix.length - 0x1 && this.outerCellsMatrix[Q + 0x1] && this.outerCellsMatrix[Q + 0x1][0x0]) {
                var F = I - this.contentLayout.paddingTop - this.outerCellsMatrix[Q].height;
                if (0x0 < F) {
                  this.Sn(Q, F);
                }
              }
            }
            this.prevContentY = I;
          };
          H.prototype.en = function () {
            var I = -0x1 * this.content.x;
            var K = this.content.children[0x0];
            var E = this.content.children[this.content.children.length - 0x1];
            var Q = K.col;
            var X = E.col;
            var A = this.$e(X) - this.viewSize.width;
            if (this.prevContentX > I) {
              var V = K.zIndex;
              var W = I - this.contentLayout.paddingLeft + this.layoutSetting.spacingX;
              if (0x0 > W) {
                this.gn(Q - 0x1, V - 0x1, W);
              }
              if (X > 0x0 && this.outerCellsMatrix[X - 0x1] && this.outerCellsMatrix[X - 0x1][0x0]) {
                var J = I - A + this.layoutSetting.spacingX + this.outerCellsMatrix[X].width;
                if (J < 0x0) {
                  this.Cn(X, J, A);
                }
              }
            } else {
              var w = E.zIndex;
              var O = I - A;
              if (0x0 < O) {
                this.yn(0x0, X + 0x1, w + 0x1, O);
              }
              if (Q < this.outerCellsMatrix.length - 0x1 && this.outerCellsMatrix[Q + 0x1] && this.outerCellsMatrix[Q + 0x1][0x0]) {
                var F = I - this.contentLayout.paddingLeft - this.outerCellsMatrix[Q].width;
                if (0x0 < F) {
                  this.Mn(Q, F);
                }
              }
            }
            this.prevContentX = I;
          };
          H.prototype.An = function () {
            var I;
            var K;
            var E = this.layoutSetting;
            var Q = E.spacingX;
            var X = E.spacingLeft + E.spacingRight;
            var A = 0x0;
            var V = 0x0;
            var W = 0x0;
            for (var J = this.We; A < J;) {
              if (this.isDynamicSize) {
                var w = this.ci.getCellSize(A);
                I = w.width + Q;
                K = w.height;
              } else {
                I = this.constCellSize.width + Q;
                K = this.constCellSize.height;
              }
              if (!this.outerCellsMatrix[V]) {
                this.outerCellsMatrix[V] = {};
                this.outerCellsMatrix[V][W] = null;
                this.outerCellsMatrix[V].itemCount = 0x0;
                this.outerCellsMatrix[V].height = 0x0;
                this.outerCellsMatrix[V].freeWidth = this.viewSize.width - X;
                this.freeWidth = this.viewSize.width - X;
              }
              if (this.freeWidth - I >= 0x0) {
                this.outerCellsMatrix[V].height = Math.max(K, this.outerCellsMatrix[V].height);
                this.outerCellsMatrix[V][W] = null;
                this.freeWidth -= I;
                W += 0x1;
                this.outerCellsMatrix[V].itemCount = W;
                A++;
              } else if (this.freeWidth + Q - I >= 0x0) {
                this.outerCellsMatrix[V].height = Math.max(K, this.outerCellsMatrix[V].height);
                this.outerCellsMatrix[V][W] = null;
                this.freeWidth -= I;
                W += 0x1;
                this.outerCellsMatrix[V].itemCount = W;
                A++;
              } else {
                V += 0x1;
                W = 0x0;
              }
            }
            this.freeWidth = undefined;
            this.In();
          };
          H.prototype.wn = function () {
            var I;
            var K;
            var E = this.layoutSetting;
            var Q = E.spacingY;
            var X = E.spacingTop + E.spacingBottom;
            var A = 0x0;
            var V = 0x0;
            var W = 0x0;
            for (var J = this.We; A < J;) {
              if (this.isDynamicSize) {
                var w = this.ci.getCellSize(A);
                I = w.width;
                K = w.height + Q;
              } else {
                I = this.constCellSize.width;
                K = this.constCellSize.height + Q;
              }
              if (!this.outerCellsMatrix[W]) {
                this.outerCellsMatrix[W] = {};
                this.outerCellsMatrix[W][V] = {};
                this.outerCellsMatrix[W].itemCount = 0x0;
                this.outerCellsMatrix[W].width = 0x0;
                this.outerCellsMatrix[W].freeHeight = this.viewSize.height - X;
                this.freeHeight = this.viewSize.height - X;
              }
              if (this.freeHeight - K >= 0x0) {
                this.outerCellsMatrix[W].width = Math.max(I, this.outerCellsMatrix[W].width);
                this.outerCellsMatrix[W][V] = null;
                this.freeHeight -= K;
                V += 0x1;
                this.outerCellsMatrix[W].itemCount = V;
                A++;
              } else if (this.freeHeight + this.layoutSetting.spacingY - K >= 0x0) {
                this.outerCellsMatrix[W].width = Math.max(I, this.outerCellsMatrix[W].width);
                this.outerCellsMatrix[W][V] = null;
                this.freeHeight -= K;
                V += 0x1;
                this.outerCellsMatrix[W].itemCount = V;
                A++;
              } else {
                W += 0x1;
                V = 0x0;
              }
            }
            this.freeHeight = undefined;
            this.On();
          };
          H.prototype.Hn = function (I, K, E) {
            this.lastContentY = this.content.y;
            var Q;
            var X;
            var A = this.layoutSetting;
            var V = A.spacingX;
            var W = A.spacingY;
            var J = A.spacingLeft + A.spacingRight;
            var w = I;
            var O = 0x0;
            var F = this.We;
            for (var D = 0x0; K < F;) {
              if (this.isDynamicSize) {
                var U = this.ci.getCellSize(K);
                Q = U.width + V;
                X = U.height;
              } else {
                Q = this.constCellSize.width + V;
                X = this.constCellSize.height;
              }
              if (!(E > 0x0)) {
                return;
              }
              if (!this.outerCellsMatrix[w]) {
                this.outerCellsMatrix[w] = {};
                this.outerCellsMatrix[w][O] = null;
                this.outerCellsMatrix[w].itemCount = 0x0;
                this.outerCellsMatrix[w].height = 0x0;
                this.outerCellsMatrix[w].freeWidth = this.viewSize.width - J;
              }
              if (this.outerCellsMatrix[w].freeWidth - Q >= 0x0) {
                this.outerCellsMatrix[w].height = Math.max(X, this.outerCellsMatrix[w].height);
                var S = this.ci.getItem(this, K, this.ri);
                this.Bn(S, w, O, K);
                this.outerCellsMatrix[w].freeWidth -= Q;
                O += 0x1;
                this.outerCellsMatrix[w].itemCount = O;
                K++;
              } else if (this.outerCellsMatrix[w].freeWidth + V - Q >= 0x0) {
                this.outerCellsMatrix[w].height = Math.max(X, this.outerCellsMatrix[w].height);
                S = this.ci.getItem(this, K, this.ri);
                this.Bn(S, w, O, K);
                this.outerCellsMatrix[w].freeWidth -= Q;
                O += 0x1;
                this.outerCellsMatrix[w].itemCount = O;
                K++;
              } else {
                var R = (E -= D) - (this.outerCellsMatrix[w].height + W);
                if (R > 0x0) {
                  E = R;
                } else if (R + W > 0x0) {
                  E = R + W;
                  D = W;
                } else {
                  E = R;
                }
                w += 0x1;
                O = 0x0;
              }
            }
          };
          H.prototype.Gn = function (I, K, E) {
            this.lastContentX = -0x1 * this.content.x;
            var Q;
            var X;
            var A = this.layoutSetting;
            var V = A.spacingX;
            var W = A.spacingY;
            var J = A.spacingTop + A.spacingBottom;
            var w = 0x0;
            var O = I;
            var F = this.We;
            for (var D = 0x0; K < F;) {
              if (this.isDynamicSize) {
                var U = this.ci.getCellSize(K);
                Q = U.width;
                X = U.height + W;
              } else {
                Q = this.constCellSize.width;
                X = this.constCellSize.height + W;
              }
              if (!(E > 0x0)) {
                return void this.setMasterControl(false);
              }
              if (!this.outerCellsMatrix[O]) {
                this.outerCellsMatrix[O] = {};
                this.outerCellsMatrix[O][w] = {};
                this.outerCellsMatrix[O].itemCount = 0x0;
                this.outerCellsMatrix[O].width = 0x0;
                this.outerCellsMatrix[O].freeHeight = this.viewSize.height - J;
              }
              if (this.outerCellsMatrix[O].freeHeight - X >= 0x0) {
                this.outerCellsMatrix[O].width = Math.max(Q, this.outerCellsMatrix[O].width);
                var S = this.ci.getItem(this, K, this.ri);
                this.Bn(S, w, O, K);
                this.outerCellsMatrix[O].freeHeight -= X;
                w += 0x1;
                this.outerCellsMatrix[O].itemCount = w;
                K++;
              } else if (this.outerCellsMatrix[O].freeHeight + W - X >= 0x0) {
                this.outerCellsMatrix[O].width = Math.max(Q, this.outerCellsMatrix[O].width);
                S = this.ci.getItem(this, K, this.ri);
                this.Bn(S, w, O, K);
                this.outerCellsMatrix[O].freeHeight -= X;
                w += 0x1;
                this.outerCellsMatrix[O].itemCount = w;
                K++;
              } else {
                var R = (E -= D) - (this.outerCellsMatrix[O].width + V);
                if (R > 0x0) {
                  E = R;
                } else if (R + V > 0x0) {
                  E = R + V;
                  D = V;
                } else {
                  E = R;
                }
                O += 0x1;
                w = 0x0;
              }
            }
            this.setMasterControl(false);
          };
          H.prototype.Nn = function (I, K, E) {
            var Q = this.Xe(I);
            var X = this.Tn(Q);
            var A = this.Ze(Q) - this.outerCellsMatrix[Q].height;
            if (this.cn() < this.hn) {
              this.target = 0x0;
            } else if (this.rn() > this.an) {
              this.target = this.content.height + this.an;
            } else {
              this.target = A - this.layoutSetting.spacingTop;
            }
            this.content.y = this.target;
            this.contentLayout.paddingTop = A;
            this.contentLayout.paddingBottom = this.layoutSetting.spacingBottom;
            this.contentLayout.updateLayout();
            this.Hn(Q, X, K);
            var V = this.content.y - A;
            if (V < 0x0) {
              this.mn(Q - 0x1, X - 0x1, V, E);
            } else if (E) {
              E();
            }
            this.setMasterControl(false);
          };
          H.prototype.Pn = function (I, K, E) {
            var Q = this.Xe(I);
            var X = this.Tn(Q);
            var A = -0x1 * (this.$e(Q) - this.outerCellsMatrix[Q].width);
            if (this.un() > this.ln) {
              this.target = 0x0;
            } else if (this.dn() < this.vn) {
              this.target = -0x1 * (this.content.width - this.vn);
            } else {
              this.target = A + this.layoutSetting.spacingLeft;
            }
            this.content.x = this.target;
            this.contentLayout.paddingLeft = -A;
            this.contentLayout.paddingRight = this.layoutSetting.spacingRight;
            this.contentLayout.updateLayout();
            this.Gn(Q, X, K);
            var V = -0x1 * this.content.x + A;
            if (V < 0x0) {
              this.gn(Q - 0x1, X - 0x1, V, E);
            } else if (E) {
              E();
            }
            this.setMasterControl(false);
          };
          H.prototype.Qe = function (I, K, E, Q, X) {
            if (undefined === Q) {
              Q = true;
            }
            if (this.We) {
              if (this.isPreCalculateSize && !Q) {
                this.An();
                this.Nn(K, E, X);
              } else {
                this.lastContentY = this.content.y;
                var A = this.layoutSetting;
                var V = A.spacingX;
                var W = A.spacingY;
                var J = A.spacingLeft + A.spacingRight;
                var w = I;
                var O = 0x0;
                var F = undefined;
                var D = undefined;
                var U = undefined;
                var S = this.We;
                for (var R = 0x0; K < S;) {
                  D = (F = this.ci.getItem(this, K, this.ri)).width + V;
                  U = F.height;
                  if (!(E > 0x0)) {
                    this.In();
                    this.vi(F);
                    return void this.setMasterControl(false);
                  }
                  if (!this.outerCellsMatrix[w]) {
                    this.outerCellsMatrix[w] = {};
                    this.outerCellsMatrix[w][O] = null;
                    this.outerCellsMatrix[w].itemCount = 0x0;
                    this.outerCellsMatrix[w].height = 0x0;
                    this.outerCellsMatrix[w].freeWidth = this.viewSize.width - J;
                  }
                  if (this.outerCellsMatrix[w].freeWidth - D >= 0x0) {
                    this.outerCellsMatrix[w].height = Math.max(U, this.outerCellsMatrix[w].height);
                    this.Bn(F, w, O, K);
                    this.outerCellsMatrix[w].freeWidth -= D;
                    O += 0x1;
                    this.outerCellsMatrix[w].itemCount = O;
                    K++;
                    this.In();
                  } else if (this.outerCellsMatrix[w].freeWidth + V - D >= 0x0) {
                    this.outerCellsMatrix[w].height = Math.max(U, this.outerCellsMatrix[w].height);
                    this.Bn(F, w, O, K);
                    this.outerCellsMatrix[w].freeWidth -= D;
                    O += 0x1;
                    this.outerCellsMatrix[w].itemCount = O;
                    K++;
                    this.In();
                  } else {
                    var x = (E -= R) - (this.outerCellsMatrix[w].height + W);
                    if (x > 0x0) {
                      E = x;
                    } else if (x + W > 0x0) {
                      E = x + W;
                      R = W;
                    } else {
                      E = x;
                    }
                    this.In();
                    this.vi(F);
                    w += 0x1;
                    O = 0x0;
                  }
                }
                this.setMasterControl(false);
              }
            } else if (X) {
              X();
            }
          };
          H.prototype.Ye = function (I, K, E, Q, X) {
            if (this.We) {
              if (this.isPreCalculateSize && !Q) {
                this.wn();
                this.Pn(K, E, X);
              } else {
                this.lastContentX = -0x1 * this.content.x;
                var A = this.layoutSetting;
                var V = A.spacingX;
                var W = A.spacingY;
                var J = A.spacingTop + A.spacingBottom;
                var w = 0x0;
                var O = I;
                var F = undefined;
                var D = undefined;
                var U = undefined;
                var S = this.We;
                for (var R = 0x0; K < S;) {
                  D = (F = this.ci.getItem(this, K, this.ri)).width;
                  U = F.height + W;
                  if (!(E > 0x0)) {
                    this.On();
                    this.vi(F);
                    return void this.setMasterControl(false);
                  }
                  if (!this.outerCellsMatrix[O]) {
                    this.outerCellsMatrix[O] = {};
                    this.outerCellsMatrix[O][w] = {};
                    this.outerCellsMatrix[O].itemCount = 0x0;
                    this.outerCellsMatrix[O].width = 0x0;
                    this.outerCellsMatrix[O].freeHeight = this.viewSize.height - J;
                  }
                  if (this.outerCellsMatrix[O].freeHeight - U >= 0x0) {
                    this.outerCellsMatrix[O].width = Math.max(D, this.outerCellsMatrix[O].width);
                    this.Bn(F, w, O, K);
                    this.outerCellsMatrix[O].freeHeight -= U;
                    w += 0x1;
                    this.outerCellsMatrix[O].itemCount = w;
                    K++;
                    this.On();
                  } else if (this.outerCellsMatrix[O].freeHeight + W - U >= 0x0) {
                    this.outerCellsMatrix[O].width = Math.max(D, this.outerCellsMatrix[O].width);
                    this.Bn(F, w, O, K);
                    this.outerCellsMatrix[O].freeHeight -= U;
                    w += 0x1;
                    this.outerCellsMatrix[O].itemCount = w;
                    K++;
                    this.On();
                  } else {
                    var x = (E -= R) - (this.outerCellsMatrix[O].width + V);
                    if (x > 0x0) {
                      E = x;
                    } else if (x + V > 0x0) {
                      E = x + V;
                      R = V;
                    } else {
                      E = x;
                    }
                    this.On();
                    this.vi(F);
                    O += 0x1;
                    w = 0x0;
                  }
                }
                this.setMasterControl(false);
              }
            } else if (X) {
              X();
            }
          };
          H.prototype.Sn = function (I, K) {
            var E = this.layoutSetting.spacingLeft + this.layoutSetting.spacingRight;
            for (var Q = this.outerCellsMatrix[I].itemCount - 0x1; 0x0 < K;) {
              if (Q >= 0x0) {
                if (this.Be) {
                  this.Be();
                }
                this.Ke(this.outerCellsMatrix[I][Q]);
                Q--;
              } else {
                this.contentLayout.paddingTop += this.outerCellsMatrix[I].height + this.layoutSetting.spacingY;
                this.outerCellsMatrix[I].freeWidth = this.viewSize.width - E;
                if ((I += 0x1) >= this.outerCellsMatrix.length - 0x1 || !this.outerCellsMatrix[I][0x0]) {
                  return;
                }
                Q = this.outerCellsMatrix[I].itemCount - 0x1;
                K = this.content.y - this.contentLayout.paddingTop - this.outerCellsMatrix[I].height;
              }
            }
          };
          H.prototype.Mn = function (I, K) {
            var E = this.layoutSetting.spacingTop + this.layoutSetting.spacingBottom;
            for (var Q = this.outerCellsMatrix[I].itemCount - 0x1; 0x0 < K;) {
              if (Q >= 0x0) {
                this.Ke(this.outerCellsMatrix[I][Q]);
                Q--;
              } else {
                this.contentLayout.paddingLeft += this.outerCellsMatrix[I].width + this.layoutSetting.spacingX;
                this.outerCellsMatrix[I].freeHeight = this.viewSize.height - E;
                if ((I += 0x1) >= this.outerCellsMatrix.length - 0x1 || !this.outerCellsMatrix[I][0x0]) {
                  return;
                }
                Q = this.outerCellsMatrix[I].itemCount - 0x1;
                K = -0x1 * this.content.x - this.contentLayout.paddingLeft - this.outerCellsMatrix[I].width;
              }
            }
          };
          H.prototype.pn = function (I, K, E) {
            var Q = this.layoutSetting.spacingLeft + this.layoutSetting.spacingRight;
            for (var X = this.outerCellsMatrix[I].itemCount - 0x1; K < 0x0;) {
              if (X >= 0x0) {
                if (this.Be) {
                  this.Be();
                }
                this.Ke(this.outerCellsMatrix[I][X]);
                X--;
              } else {
                this.outerCellsMatrix[I].freeWidth = this.viewSize.width - Q;
                if ((I -= 0x1) <= 0x0 || !this.outerCellsMatrix[I][0x0]) {
                  return;
                }
                X = this.outerCellsMatrix[I].itemCount - 0x1;
                E = this.Ze(I) - this.viewSize.height;
                K = this.content.y - E + this.layoutSetting.spacingY + this.outerCellsMatrix[I].height;
              }
            }
          };
          H.prototype.Cn = function (I, K, E) {
            var Q = this.layoutSetting.spacingTop + this.layoutSetting.spacingBottom;
            for (var X = this.outerCellsMatrix[I].itemCount - 0x1; K < 0x0;) {
              if (X >= 0x0) {
                if (this.Be) {
                  this.Be();
                }
                this.Ke(this.outerCellsMatrix[I][X]);
                X--;
              } else {
                this.outerCellsMatrix[I].freeHeight = this.viewSize.height - Q;
                if ((I -= 0x1) <= 0x0 || !this.outerCellsMatrix[I][0x0]) {
                  return;
                }
                X = this.outerCellsMatrix[I].itemCount - 0x1;
                E = this.$e(I) - this.viewSize.width;
                K = -0x1 * this.content.x - E + this.layoutSetting.spacingX + this.outerCellsMatrix[I].width;
              }
            }
          };
          H.prototype.removeUselessItems = function (I, K) {
            this.De(I);
            if (this.vertical) {
              for (var E = this.content.children.length - 0x1; E >= 0x0; E--) {
                if (!((X = this.content.children[E]).zIndex > I - 0x1)) {
                  this.reloadCurrentData();
                  var Q = X.col + 0x1;
                  this.outerCellsMatrix[X.row].itemCount = Q;
                  this.outerCellsMatrix.splice(X.row + 0x1, this.outerCellsMatrix.length - 0x1);
                  this.In();
                  this.setMasterControl(false);
                  if (K) {
                    K();
                  }
                  break;
                }
                this.outerCellsMatrix[X.row].freeWidth += this.outerCellsMatrix[X.row][X.col].width + this.layoutSetting.spacingX;
                this.Ke(X);
                if (0x0 === E) {
                  this.In();
                  this.setMasterControl(false);
                  if (K) {
                    K();
                  }
                }
              }
            } else {
              for (E = this.content.children.length - 0x1; E >= 0x0; E--) {
                var X;
                if (!((X = this.content.children[E]).zIndex >= I - 0x1)) {
                  this.reloadCurrentData();
                  Q = X.row + 0x1;
                  this.outerCellsMatrix[X.col].itemCount = Q;
                  this.outerCellsMatrix.splice(X.col + 0x1, this.outerCellsMatrix.length - 0x1);
                  this.On();
                  this.setMasterControl(false);
                  if (K) {
                    K();
                  }
                  break;
                }
                this.outerCellsMatrix[X.col].freeHeight += this.outerCellsMatrix[X.col][X.row].height + this.layoutSetting.spacingY;
                this.Ke(X);
                if (0x0 === E) {
                  this.In();
                  this.setMasterControl(false);
                  if (K) {
                    K();
                  }
                }
              }
            }
          };
          H.prototype.bn = function (I, K, E, Q) {
            this.lastContentY = this.content.y;
            var X;
            var A;
            var V;
            var W = this.layoutSetting.spacingLeft + this.layoutSetting.spacingRight;
            var J = I;
            var w = K;
            for (var O = this.We; E < O;) {
              A = (X = this.ci.getItem(this, E, this.ri)).width + this.layoutSetting.spacingX;
              V = X.height;
              if (!(0x0 < Q)) {
                this.In();
                return void this.vi(X);
              }
              if (!this.outerCellsMatrix[J]) {
                this.outerCellsMatrix[J] = {};
                this.outerCellsMatrix[J][w] = {};
                this.outerCellsMatrix[J].itemCount = 0x0;
                this.outerCellsMatrix[J].height = 0x0;
                this.outerCellsMatrix[J].freeWidth = this.viewSize.width - W;
              }
              if (this.outerCellsMatrix[J].freeWidth - A >= 0x0) {
                if (this.He) {
                  this.He();
                }
                this.outerCellsMatrix[J].height = Math.max(V, this.outerCellsMatrix[J].height);
                this.Bn(X, J, w, E);
                this.outerCellsMatrix[J].freeWidth -= A;
                w += 0x1;
                this.outerCellsMatrix[J].itemCount = w;
                if (++E >= O) {
                  this.In();
                }
              } else if (this.outerCellsMatrix[J].freeWidth + this.layoutSetting.spacingX - A >= 0x0) {
                if (this.He) {
                  this.He();
                }
                this.outerCellsMatrix[J].height = Math.max(V, this.outerCellsMatrix[J].height);
                this.Bn(X, J, w, E);
                this.outerCellsMatrix[J].freeWidth -= A;
                w += 0x1;
                this.outerCellsMatrix[J].itemCount = w;
                E++;
                this.In();
              } else {
                var F = this.content.children[this.content.children.length - 0x1].row;
                var D = this.Ze(F) - this.viewSize.height;
                Q = this.content.y - D;
                this.In();
                this.vi(X);
                J += 0x1;
                w = 0x0;
              }
            }
          };
          H.prototype.yn = function (I, K, E, Q) {
            this.lastContentY = -0x1 * this.content.x;
            var X;
            var A;
            var V;
            var W = this.layoutSetting.spacingTop + this.layoutSetting.spacingBottom;
            var J = I;
            var w = K;
            for (var O = this.We; E < O;) {
              A = (X = this.ci.getItem(this, E, this.ri)).width;
              V = X.height + this.layoutSetting.spacingY;
              if (!(0x0 < Q)) {
                this.On();
                return void this.vi(X);
              }
              if (!this.outerCellsMatrix[w]) {
                this.outerCellsMatrix[w] = {};
                this.outerCellsMatrix[w][J] = {};
                this.outerCellsMatrix[w].itemCount = 0x0;
                this.outerCellsMatrix[w].width = 0x0;
                this.outerCellsMatrix[w].freeHeight = this.viewSize.height - W;
              }
              if (this.outerCellsMatrix[w].freeHeight - V >= 0x0) {
                if (this.He) {
                  this.He();
                }
                this.outerCellsMatrix[w].width = Math.max(A, this.outerCellsMatrix[w].width);
                this.Bn(X, J, w, E);
                this.outerCellsMatrix[w].freeHeight -= V;
                J += 0x1;
                this.outerCellsMatrix[w].itemCount = J;
                if (++E >= O) {
                  this.On();
                }
              } else if (this.outerCellsMatrix[w].freeHeight + this.layoutSetting.spacingY - V >= 0x0) {
                if (this.He) {
                  this.He();
                }
                this.outerCellsMatrix[w].width = Math.max(A, this.outerCellsMatrix[w].width);
                this.Bn(X, J, w, E);
                this.outerCellsMatrix[w].freeHeight -= V;
                J += 0x1;
                this.outerCellsMatrix[w].itemCount = J;
                E++;
                this.On();
              } else {
                var F = this.content.children[this.content.children.length - 0x1].col;
                var D = this.$e(F) - this.viewSize.width;
                Q = -0x1 * this.content.x - D;
                this.On();
                this.vi(X);
                w += 0x1;
                J = 0x0;
              }
            }
          };
          H.prototype.mn = function (I, K, E, Q) {
            if (!(I < 0x0)) {
              var X;
              var A;
              var V;
              var W = I;
              for (var J = this.outerCellsMatrix[W].itemCount - 0x1; K >= 0x0;) {
                A = (X = this.ci.getItem(this, K, this.ri)).width + this.layoutSetting.spacingX;
                V = X.height;
                if (!(0x0 > E)) {
                  this.In();
                  this.vi(X);
                  return void (Q && Q());
                }
                if (J >= 0x0) {
                  if (this.He) {
                    this.He();
                  }
                  this.outerCellsMatrix[W].height = Math.max(V, this.outerCellsMatrix[W].height);
                  this.Bn(X, W, J, K);
                  this.outerCellsMatrix[W].freeWidth -= A;
                  if (0x0 === K) {
                    this.contentLayout.paddingTop -= this.outerCellsMatrix[W].height + this.layoutSetting.spacingY;
                    E = this.content.y - this.contentLayout.paddingTop;
                  }
                  J -= 0x1;
                  K--;
                } else {
                  this.contentLayout.paddingTop -= this.outerCellsMatrix[W].height + this.layoutSetting.spacingY;
                  E = this.content.y - this.contentLayout.paddingTop;
                  this.In();
                  this.vi(X);
                  W -= 0x1;
                  J = this.outerCellsMatrix[W].itemCount - 0x1;
                }
              }
              if (Q) {
                Q();
              }
            }
          };
          H.prototype.gn = function (I, K, E, Q) {
            if (!(I < 0x0)) {
              var X;
              var A;
              var V;
              var W = -0x1 * this.content.x;
              var J = I;
              for (var w = this.outerCellsMatrix[J].itemCount - 0x1; K >= 0x0;) {
                A = (X = this.ci.getItem(this, K, this.ri)).width;
                V = X.height + this.layoutSetting.spacingY;
                if (!(0x0 > E)) {
                  this.On();
                  this.vi(X);
                  return void (Q && Q());
                }
                if (w >= 0x0) {
                  if (this.He) {
                    this.He();
                  }
                  this.outerCellsMatrix[J].width = Math.max(A, this.outerCellsMatrix[J].width);
                  this.Bn(X, w, J, K);
                  this.outerCellsMatrix[J].freeHeight -= V;
                  if (0x0 === K) {
                    this.contentLayout.paddingLeft -= this.outerCellsMatrix[J].width + this.layoutSetting.spacingX;
                    E = W - this.contentLayout.paddingLeft;
                  }
                  w -= 0x1;
                  K--;
                } else {
                  this.contentLayout.paddingLeft -= this.outerCellsMatrix[J].width + this.layoutSetting.spacingX;
                  E = W - this.contentLayout.paddingLeft;
                  this.On();
                  this.vi(X);
                  J -= 0x1;
                  w = this.outerCellsMatrix[J].itemCount - 0x1;
                }
              }
              if (Q) {
                Q();
              }
            }
          };
          H.prototype.In = function () {
            var I = this.layoutSetting.spacingTop + this.layoutSetting.spacingBottom;
            for (var K = 0x0; K < this.outerCellsMatrix.length; K++) {
              I += this.outerCellsMatrix[K].height;
              if (K !== this.outerCellsMatrix.length - 0x1) {
                I += this.layoutSetting.spacingY;
              } else if (this.content.height !== I) {
                this.content.height = I;
              }
            }
          };
          H.prototype.On = function () {
            var I = this.layoutSetting.spacingLeft + this.layoutSetting.spacingRight;
            for (var K = 0x0; K < this.outerCellsMatrix.length; K++) {
              I += this.outerCellsMatrix[K].width;
              if (K !== this.outerCellsMatrix.length - 0x1) {
                I += this.layoutSetting.spacingX;
              } else if (this.content.width !== I) {
                this.content.width = I;
              }
            }
          };
          H.prototype.Bn = function (I, K, E, Q) {
            var X = this.Ln();
            if (this.vertical) {
              this.outerCellsMatrix[K][E] = X;
            } else {
              this.outerCellsMatrix[E][K] = X;
            }
            this.content.addChild(X);
            X.addChild(I);
            X.row = K;
            X.col = E;
            X.zIndex = Q;
            X.width = I.width;
            X.height = I.height;
            this.content.sortAllChildren();
          };
          H.prototype.dequeueReusableItem = function (I) {
            var K;
            var E = this.nodePools[I];
            if (E) {
              if (!(K = E.get())) {
                var Q = this.templates[I];
                K = cc.instantiate(Q);
              }
              K.lv_type = I;
            }
            return K;
          };
          H.prototype.vi = function (I) {
            var K;
            var E = I.lv_type;
            if (E) {
              K = this.nodePools[E];
            }
            if (K) {
              K.put(I);
            }
          };
          H.prototype.ze = function (I) {
            if (this.vertical) {
              var K = this.Xe(this.currentIndex);
              if (this.currentIndex <= I - 0x1) {
                this.removeUselessItems(I);
              } else if (null !== K) {
                this.isReducingData = true;
                this.newDataCount = I;
                this.setMasterControl(true);
                this.scrollTo(0x0);
              } else {
                this.removeUselessItems(I);
              }
            } else {
              var E = this.Xe(this.currentIndex);
              if (this.currentIndex < I - 0x1) {
                this.removeUselessItems(I);
              } else if (null !== E) {
                this.isReducingData = true;
                this.stopAutoScroll();
                this.setMasterControl(true);
                this.scrollTo(0x0);
              } else {
                this.removeUselessItems(I);
              }
            }
          };
          H.prototype.Je = function () {
            if (this.vertical) {
              if (!this.content.children.length) {
                return void this.Qe(0x0, 0x0, this.viewSize.height);
              }
              var I = (V = this.content.children[this.content.children.length - 0x1]).row;
              var K = I - 0x1;
              if (K < 0x0) {
                K = 0x0;
              }
              var E = this.Ze(K) - this.viewSize.height;
              var Q = V.zIndex;
              var X = this.content.y - E;
              var A = (w = this.ci.getItem(this, Q + 0x1, this.ri)).width + this.layoutSetting.spacingX;
              this.vi(w);
              if (this.outerCellsMatrix[I].freeWidth - A >= 0x0) {
                this.bn(I, this.outerCellsMatrix[I].itemCount, Q + 0x1, X);
              } else if (this.outerCellsMatrix[I].freeWidth + this.layoutSetting.spacingX - A >= 0x0) {
                this.bn(I, this.outerCellsMatrix[I].itemCount, Q + 0x1, X);
              }
              this.setMasterControl(false);
            } else {
              if (!this.content.children.length) {
                return void this.Ye(0x0, 0x0, this.viewSize.width);
              }
              var V;
              var W = (V = this.content.children[this.content.children.length - 0x1]).col;
              var J = W - 0x1;
              if (J < 0x0) {
                J = 0x0;
              }
              E = this.$e(J) - this.viewSize.width;
              var w;
              var O = V.zIndex;
              var F = -0x1 * this.content.x - E;
              var D = (w = this.ci.getItem(this, O + 0x1, this.ri)).height + this.layoutSetting.spacingY;
              this.vi(w);
              if (this.outerCellsMatrix[W].freeHeight - D >= 0x0) {
                this.yn(this.outerCellsMatrix[O].itemCount, W, O + 0x1, F);
              } else if (this.outerCellsMatrix[W].freeWidth + this.layoutSetting.spacingX - D >= 0x0) {
                this.yn(this.outerCellsMatrix[W].itemCount, W, O + 0x1, F);
              }
              this.setMasterControl(false);
            }
          };
          H.prototype.reloadCurrentData = function (I) {
            if (this.content.children.length) {
              for (var K = 0x0; K < this.content.children.length; K++) {
                this.vi(this.content.children[K].children[0x0]);
                var E = this.ci.getItem(this, this.content.children[K].zIndex, this.ri);
                this.content.children[K].addChild(E);
                this.content.sortAllChildren();
              }
            }
            if (I) {
              I();
            }
          };
          H.prototype.Ke = function (I) {
            if (null !== I && null !== I.row && null !== I.col) {
              if (this.vertical) {
                this.outerCellsMatrix[I.row][I.col] = null;
              } else {
                this.outerCellsMatrix[I.col][I.row] = null;
              }
              if (I.children.length) {
                this.vi(I.children[0x0]);
              }
              this.M.put(I);
              this.content.sortAllChildren();
            }
          };
          H.prototype.Ln = function () {
            return this.M ? this.M.size() ? this.M.get() : new cc.Node() : (this.M = new cc.NodePool(), new cc.Node());
          };
          H.prototype.bi = function (I, K, E, Q, X) {
            if (undefined === Q) {
              Q = 0x1;
            }
            if (cc.v2(I, 0x0).sub(cc.v2(K, 0x0)).mag() <= 0x1) {
              this.Rn(X);
              return K;
            }
            this.Ti("scrolling");
            var A = I + (E *= Q) * (K - I);
            if (I >= K) {
              if (A <= K) {
                this.Rn(X);
                A = K;
              }
            } else if (A >= K) {
              this.Rn(X);
              A = K;
            }
            return A;
          };
          H.prototype.Rn = function (I) {
            var K = this;
            if (this.isReducingData) {
              this.isReducingData = false;
              this.removeUselessItems(this.newDataCount, function () {
                K.setMasterControl(false);
                K.setSnapDone(true);
                K.stopAutoScroll();
                K.Ti("scroll-ended");
                if (null === K.currentIndex) {
                  var Q = K.nn();
                  K.currentIndex = K.outerCellsMatrix[Q][0x0].zIndex;
                }
                if (K.snapFinish) {
                  K.snapFinish(K.currentIndex);
                }
                if (I) {
                  I();
                }
              });
            } else {
              this.setMasterControl(false);
              this.setSnapDone(true);
              this.stopAutoScroll();
              this.Ti("scroll-ended");
              if (null === this.currentIndex) {
                var E = this.nn();
                this.currentIndex = this.outerCellsMatrix[E][0x0].zIndex;
              }
              if (this.snapFinish) {
                this.snapFinish(this.currentIndex);
              }
              if (I) {
                I();
              }
            }
          };
          H.prototype.Tn = function (I) {
            var K = 0x0;
            for (var E = 0x0; E <= I; E++) {
              if (I === E) {
                return K;
              }
              K += this.outerCellsMatrix[E].itemCount;
            }
          };
          H.prototype.Xe = function (I) {
            var K = this.outerCellsMatrix.length - 0x1;
            for (var E = 0x0; E <= K; E++) {
              if (!((I -= this.outerCellsMatrix[E].itemCount) >= 0x0)) {
                return E;
              }
              if (E === K) {
                return null;
              }
            }
          };
          H.prototype.destroy = function () {
            this.hi();
            b.prototype.destroy.call(this);
          };
          H.prototype.di = function () {
            this.content.on(cc.Node.EventType.POSITION_CHANGED, this['in'], this);
            if (this.autoSnap) {
              this.node.on("scroll-ended", this._n, this);
            }
            this.node.on(cc.Node.EventType.SIZE_CHANGED, this.ui, this);
          };
          H.prototype.hi = function () {
            this.content.off(cc.Node.EventType.POSITION_CHANGED, this['in'], this);
            if (this.autoSnap) {
              this.node.off("scroll-ended", this._n, this);
            }
            this.node.off(cc.Node.EventType.SIZE_CHANGED, this.ui, this);
          };
          H.prototype.qe = function () {
            this.hn = 0x0;
            this.an = 0x0;
            this.ln = 0x0;
            this.vn = 0x0;
            this.En = [];
            this.kn = [];
            this.Un = 0x0;
            this.Hi = false;
            this.jn = false;
            this.Dn = false;
            this.Wn = cc.v2(0x0, 0x0);
            this.xn = cc.v2(0x0, 0x0);
            this.Fn = 0x0;
            this.Vn = 0x0;
            this.zn = false;
            this.Jn = false;
            this.qn = cc.v2(0x0, 0x0);
            this.Kn = cc.v2(0x0, 0x0);
            this.Qn = true;
            this.Di = false;
            this.Ui = 0x0;
            this.Yn = false;
            this.Xn = 0x0;
            this.Zn = false;
            this.$n = false;
          };
          H.prototype.update = function (I) {
            if (!this.pauseUpdate) {
              if (this.snapPause) {
                this.setSnapDone(true);
                return void this.stopAutoScroll();
              }
              if (!this.snapDone) {
                if (!this.content.children.length) {
                  this.content.setPosition(cc.v2(0x0, 0x0));
                  return void this.setSnapDone(true);
                }
                if (!(this.suddenStopIndex && this.content.children[this.content.children.length - 0x1].zIndex >= this.suddenStopIndex)) {
                  this.stopAutoScroll();
                  return void (this.vertical ? this.content.y = this.bi(this.content.y, this.target, I, this.lerpSpeed) : this.content.x = -0x1 * this.bi(-0x1 * this.content.x, this.target, I, this.lerpSpeed));
                }
                this.setMasterControl(true);
                this.scrollTo(this.suddenStopIndex);
                this.suddenStopIndex = null;
              }
              b.prototype.update.call(this, I);
            }
          };
          H.prototype.Si = function (I, K) {
            this.elastic = this.originalElastic;
            this.touchPos = I.touch.getLocation();
            if (!this.tn && this.content.children.length) {
              this.unschedule(this.Wi);
              this.Di = false;
              this.snapPause = true;
              this.setSnapDone(true);
              b.prototype.Si.call(this, I, K);
            }
          };
          H.prototype.tt = function (I, K) {
            this.elastic = this.originalElastic;
            if (!this.tn && this.content.children.length) {
              if (this.vertical) {
                this.io(I);
              } else {
                this.so(I);
              }
              if (!this.pauseUpdate) {
                b.prototype.tt.call(this, I, K);
              }
            }
          };
          H.prototype.eo = function () {
            if (this.Li && this.Li.getScrollY() > 0x0) {
              if (this.Ee && 0x2 === this.pullDir) {
                this.Ee(0x0);
              }
              if (this.Le && this.cn() <= this.hn) {
                if (!this.pauseUpdate) {
                  this.beginPullPos = cc.v2(0x0, this.Li.getScrollY());
                }
                if ((I = this.beginPullPos.y - this.Li.getScrollY()) > 0x0) {
                  I = 0x0;
                }
                this.Le(Math.abs(I));
                this.pauseUpdate = true;
                this.pullDir = 0x1;
              }
              if (this.content.children[0x0].zIndex > 0x0) {
                this.elastic = true;
              }
            } else if (this.Li && this.Li.getScrollY() < 0x0) {
              var I;
              if (this.Le && 0x1 === this.pullDir) {
                this.Le(0x0);
              }
              if (this.Ee && Math.round(this.rn()) >= Math.round(this.an)) {
                if (!(this.content.children.length && this.content.children[this.content.children.length - 0x1].zIndex !== this.We - 0x1)) {
                  if (!this.pauseUpdate) {
                    this.beginPullPos = cc.v2(0x0, this.Li.getScrollY());
                  }
                  if ((I = this.beginPullPos.y - this.Li.getScrollY()) < 0x0) {
                    I = 0x0;
                  }
                  this.Ee(I);
                  this.pauseUpdate = true;
                  this.pullDir = 0x2;
                }
              }
              if (this.content.children[this.content.children.length - 0x1].zIndex < this.We - 0x1) {
                this.elastic = true;
              }
            }
          };
          H.prototype.Pi = function () {
            if (this.Li && this.Li.getScrollY() > 0x0) {
              if (this.Ee && 0x2 === this.pullDir) {
                this.Te(0x0);
              }
              if (this.Ge && this.dn() <= this.vn) {
                if (!this.pauseUpdate) {
                  this.beginPullPos = cc.v2(this.Li.getScrollY(), 0x0);
                }
                if ((I = this.beginPullPos.x - this.Li.getScrollY()) > 0x0) {
                  I = 0x0;
                }
                this.Ge(Math.abs(I));
                this.pauseUpdate = true;
                this.pullDir = 0x1;
              }
              if (this.content.children[0x0].zIndex > 0x0) {
                this.elastic = true;
              }
            } else if (this.Li && this.Li.getScrollY() < 0x0) {
              var I;
              if (this.Le && 0x1 === this.pullDir) {
                this.Ge(0x0);
              }
              if (this.Te && this.un() >= this.ln) {
                if (!(this.content.children.length && this.content.children[this.content.children.length - 0x1].zIndex !== this.We - 0x1)) {
                  if (!this.pauseUpdate) {
                    this.beginPullPos = cc.v2(this.Li.getScrollY(), 0x0);
                  }
                  if ((I = this.beginPullPos.x - this.Li.getScrollY()) < 0x0) {
                    I = 0x0;
                  }
                  this.Te(I);
                  this.pauseUpdate = true;
                  this.pullDir = 0x2;
                }
              }
              if (this.content.children[this.content.children.length - 0x1].zIndex < this.We - 0x1) {
                this.elastic = true;
              }
            }
          };
          H.prototype.io = function (I) {
            if (this.touchPos.y > I.touch.getLocation().y) {
              if (this.Ee && 0x2 === this.pullDir) {
                this.Ee(0x0);
              }
              if (this.Le && this.cn() <= this.hn) {
                if (!this.pauseUpdate) {
                  this.beginPullPos = I.touch.getLocation();
                }
                if ((K = this.beginPullPos.y - I.touch.getLocation().y) < 0x0) {
                  K = 0x0;
                }
                this.Le(K);
                this.pauseUpdate = true;
                this.pullDir = 0x1;
              }
              if (this.content.children[0x0].zIndex > 0x0) {
                this.elastic = true;
              }
            } else if (this.touchPos.y < I.touch.getLocation().y) {
              var K;
              if (this.Le && 0x1 === this.pullDir) {
                this.Le(0x0);
              }
              if (this.Ee && Math.round(this.rn()) >= Math.round(this.an)) {
                if (!(this.content.children.length && this.content.children[this.content.children.length - 0x1].zIndex !== this.We - 0x1)) {
                  if (!this.pauseUpdate) {
                    this.beginPullPos = I.touch.getLocation();
                  }
                  if ((K = this.beginPullPos.y - I.touch.getLocation().y) > 0x0) {
                    K = 0x0;
                  }
                  this.Ee(Math.abs(K));
                  this.pauseUpdate = true;
                  this.pullDir = 0x2;
                }
              }
              if (this.content.children[this.content.children.length - 0x1].zIndex < this.We - 0x1) {
                this.elastic = true;
              }
            }
          };
          H.prototype.so = function (I) {
            if (this.touchPos.x > I.touch.getLocation().x) {
              if (this.Te && 0x1 === this.pullDir) {
                this.Te(0x0);
              }
              if (this.Ge && this.dn() <= this.vn) {
                if (!(this.content.children.length && this.content.children[this.content.children.length - 0x1].zIndex !== this.We - 0x1)) {
                  if (!this.pauseUpdate) {
                    this.beginPullPos = I.touch.getLocation();
                  }
                  if ((K = this.beginPullPos.x - I.touch.getLocation().x) < 0x0) {
                    K = 0x0;
                  }
                  this.Ge(K);
                  this.pauseUpdate = true;
                  this.pullDir = 0x2;
                }
              }
              if (this.content.children[this.content.children.length - 0x1].zIndex < this.We - 0x1) {
                this.elastic = true;
              }
            } else if (this.touchPos.x < I.touch.getLocation().x) {
              var K;
              if (this.Ge && 0x2 === this.pullDir) {
                this.Ge(0x0);
              }
              if (this.Te && this.un() >= this.ln) {
                if (!this.pauseUpdate) {
                  this.beginPullPos = I.touch.getLocation();
                }
                if ((K = this.beginPullPos.x - I.touch.getLocation().x) > 0x0) {
                  K = 0x0;
                }
                this.Te(Math.abs(K));
                this.pauseUpdate = true;
                this.pullDir = 0x1;
              }
              if (this.content.children[0x0].zIndex > 0x0) {
                this.elastic = true;
              }
            }
          };
          H.prototype.yi = function (I, K) {
            if (this.touchPos.sub(I.touch.getLocation()).mag() >= 0x32) {
              I.stopPropagationImmediate();
            }
            if (!this.tn && this.content.children.length) {
              if (this.pauseUpdate) {
                if (this.vertical) {
                  var E = this.beginPullPos.y - I.touch.getLocation().y;
                  if (this.Re && 0x1 === this.pullDir) {
                    if (E < 0x0) {
                      E = 0x0;
                    }
                    this.Re(E);
                  } else if (this.ke && 0x2 === this.pullDir) {
                    if (E > 0x0) {
                      E = 0x0;
                    }
                    this.ke(Math.abs(E));
                  }
                } else {
                  E = this.beginPullPos.x - I.touch.getLocation().x;
                  if (this.Pe && 0x1 === this.pullDir) {
                    if (E > 0x0) {
                      E = 0x0;
                    }
                    this.Pe(Math.abs(E));
                  } else if (this.Ne && 0x2 === this.pullDir) {
                    if (E < 0x0) {
                      E = 0x0;
                    }
                    this.Ne(E);
                  }
                }
                this.pullDir = null;
              }
              this.snapPause = false;
              this.requestSnap = true;
              b.prototype.yi.call(this, I, K);
            }
          };
          H.prototype.Ii = function (I, K) {
            if (this.touchPos.sub(I.touch.getLocation()).mag() >= 0x32) {
              I.stopPropagationImmediate();
            }
            if (!this.tn && this.content.children.length) {
              if (this.pauseUpdate) {
                if (this.vertical) {
                  var E = this.beginPullPos.y - I.touch.getLocation().y;
                  if (this.Re && 0x1 === this.pullDir) {
                    if (E < 0x0) {
                      E = 0x0;
                    }
                    this.Re(E);
                  } else if (this.ke && 0x2 === this.pullDir) {
                    if (E > 0x0) {
                      E = 0x0;
                    }
                    this.ke(Math.abs(E));
                  }
                } else {
                  E = this.beginPullPos.x - I.touch.getLocation().x;
                  if (this.Pe && 0x1 === this.pullDir) {
                    if (E > 0x0) {
                      E = 0x0;
                    }
                    this.Pe(Math.abs(E));
                  } else if (this.Ne && 0x2 === this.pullDir) {
                    if (E < 0x0) {
                      E = 0x0;
                    }
                    this.Ne(E);
                  }
                }
                this.pullDir = null;
              }
              this.snapPause = false;
              this.requestSnap = true;
              b.prototype.Ii.call(this, I, K);
            }
          };
          H.prototype.Ri = function () {
            this.snapPause = true;
            this.setSnapDone(true);
          };
          H.prototype.Ei = function () {
            if (!this.tn) {
              if (this.pauseUpdate) {
                if (this.vertical) {
                  var I = this.beginPullPos.y - this.Li.getScrollY();
                  if (this.Re && 0x1 === this.pullDir) {
                    if (I > 0x0) {
                      I = 0x0;
                    }
                    this.Re(Math.abs(I));
                  } else if (this.ke && 0x2 === this.pullDir) {
                    if (I < 0x0) {
                      I = 0x0;
                    }
                    this.ke(I);
                  }
                } else {
                  I = this.beginPullPos.x - this.Li.getScrollY();
                  if (this.Pe && 0x1 === this.pullDir) {
                    if (I > 0x0) {
                      I = 0x0;
                    }
                    this.Pe(Math.abs(I));
                  } else if (this.Ne && 0x2 === this.pullDir) {
                    if (I < 0x0) {
                      I = 0x0;
                    }
                    this.Ne(I);
                  }
                }
                this.pullDir = null;
              }
              this.snapPause = false;
              this.requestSnap = true;
              if (this.autoSnap) {
                this._n();
              }
              this.Li = undefined;
            }
          };
          H.prototype.ki = function (I, K) {
            this.elastic = this.originalElastic;
            if (!this.tn && this.content.children.length && this.enabledInHierarchy && !this.no(I, K)) {
              this.Li = I;
              var E = cc.v2(0x0, 0x0);
              if (this.vertical) {
                E = cc.v2(0x0, -0.1 * I.getScrollY());
                this.eo();
              } else if (this.horizontal) {
                E = cc.v2(-0.1 * I.getScrollY(), 0x0);
                this.Pi();
              }
              this.Ui = 0x0;
              this.ji(E);
              if (!this.Di) {
                this.Oi();
                this.schedule(this.Wi, 0.016666666666666666);
                this.Di = true;
                this.Ri();
              }
              this.Bi(I);
            }
          };
          H.prototype.Wi = function (I) {
            if (!this.tn) {
              var K = this.xi();
              if (!K.fuzzyEquals(cc.v2(0x0, 0x0), 0.0001)) {
                this.Fi();
                this.unschedule(this.Wi);
                this.Di = false;
                return void this.Ei();
              }
              this.Ui += I;
              if (this.Ui > 0.1) {
                this.Vi();
                this.unschedule(this.Wi);
                this.Di = false;
                this.Ei();
              }
            }
          };
          H.prototype.oo = function (I) {
            var K = this.co();
            var E = K ? 0.05 : 0x1;
            this.Vn += I * (0x1 / E);
            var Q;
            var X = Math.min(0x1, this.Vn / this.Fn);
            if (this.Dn) {
              Q = X;
              X = (Q -= 0x1) * Q * Q * Q * Q + 0x1;
            }
            var A = this.Wn.add(this.xn.mul(X));
            var V = X > 0.5;
            if (Math.abs(X - 0x1) <= this.getScrollEndedEventTiming() && !this.Yn) {
              this.Ti("scroll-ended-with-threshold");
              this.Yn = true;
            }
            if (this.elastic) {
              var W = A.sub(this.qn);
              if (K) {
                W = W.mul(E);
              }
              A = this.qn.add(W);
            } else {
              var J = A.sub(this.getContentPosition());
              var w = this.xi(J);
              if (!w.fuzzyEquals(cc.v2(0x0, 0x0), 0.0001)) {
                A = A.add(w);
                V = true;
              }
            }
            if (V) {
              this.jn = false;
            }
            var O = A.sub(this.getContentPosition());
            this.ho(this.ro(O), V);
            this.Ti("scrolling");
            if (!this.jn) {
              this.Zn = false;
              this.$n = false;
              this.Ti("scroll-ended");
            }
          };
          H.prototype.no = function () {
            return false;
          };
          H.prototype.Fi = function () {
            if (!this.ao() && this.inertia) {
              var I = this.uo();
              if (!I.fuzzyEquals(cc.v2(0x0, 0x0), 0.0001) && this.brake < 0x1) {
                this.lo(I);
              } else if (this.autoSnap) {
                this._n();
              }
            }
            this.Vi();
          };
          return __decorate([g], H);
        }(v["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, TC],
    'HitPassThrough': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "c55eeQvpvBJQ70BFU5konXG", "HitPassThrough")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r;
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        (function (g) {
          g.Qi = "_hitTest";
        })(r || (r = {}));
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.passPoint = cc.v2(0x0, 0x0);
            b.passSize = cc.size(0x0, 0x0);
            return b;
          }
          __extends(Z, g);
          Z.prototype.onEnable = function () {
            var b = this;
            this.fo = this.node[r.Qi];
            this.node[r.Qi] = function (H, I) {
              if (!b.fo.call(this, H, I)) {
                return false;
              }
              var K = b.passPoint.x + this.x - b.passSize.width / 0x2;
              var E = b.passPoint.y + this.y - b.passSize.height / 0x2;
              for (var Q = this.getParent(); null !== Q; Q = Q.parent) {
                K += Q.x;
                E += Q.y;
              }
              var X = b.passSize.width;
              var A = b.passSize.height;
              var V = H.x - K;
              var W = K + X - H.x;
              var J = E + A - H.y;
              var w = H.y - E;
              return !(V >= 0x0 && W >= 0x0 && J >= 0x0 && w >= 0x0);
            };
          };
          Z.prototype.onDisable = function () {
            this.node[r.Qi] = this.fo;
            this.fo = undefined;
          };
          __decorate([q(cc.Vec2)], Z.prototype, "passPoint", undefined);
          __decorate([q(cc.Size)], Z.prototype, "passSize", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, {}],
    'IdleState': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "9928eUmiH5DjJzRecinmoRP", "IdleState")) {
        var G = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", G);
        var q = z("AutoSpinHandler");
        var g = z("SlotGameConstants");
        var Z = z("SlotAnalyticsEnum");
        var b = z("SystemFeatureHandler");
        var H = z("AnalyticsHelper");
        var I = z("GameEventHandler");
        var K = z("ButtonHitTest");
        var E = z("WalletHelper");
        var Q = z("SettingMenuHelper");
        var X = z("Utils");
        var A = z("JakeSlotGameTemplate");
        var V = z("SpinButtonController");
        var W = function () {
          function J(w, O, F, D) {
            if (undefined === D) {
              D = g.DEFAULT_AUTO_SPIN_DELAY_TIME;
            }
            this.name = "Idle";
            this.dataSource = w;
            this.generalControllers = O.generalControllers;
            this.finalCallback = F;
            this['do'] = {
              'dataSource': this.dataSource,
              'autoSpinCount': q.getAutoSpinCount(),
              'walletHelper': E.walletHelper,
              'settingMenuHelper': Q.settingMenuHelper,
              'exitAutoSpinHandler': this.vo.bind(this),
              'callback': this.tryAutoSpin.bind(this)
            };
            this._o = D;
          }
          J.prototype.run = function () {
            var w = this.mo();
            b.handleSystemEvent(w);
          };
          J.prototype.destroy = function () {
            this.additionalDestroyCleanups();
            this.disableSpinAction();
            this.po();
            this.dataSource = undefined;
            this.finalCallback = undefined;
            this.generalControllers = undefined;
          };
          J.prototype.tryAutoSpin = function () {
            var w = this;
            var O = this.generalControllers.spinButtonController;
            this.bo();
            if (O.isAutoSpin()) {
              var F = this.dataSource;
              var D = F.playerModel.balance;
              var U = F.transactionModel.accumulatedWinAmount;
              var S = Q.settingMenuHelper.isBalanceHitTargetInAutoSpinMode(U, D);
              if (!q.shouldAutoSpin() || S) {
                this.vo();
                this.So();
              } else {
                var R = this.Co(this.yo.bind(this));
                this.Mo(function () {
                  w.enableSpinAction();
                  if (R) {
                    R();
                  }
                });
              }
            } else {
              this.So();
            }
          };
          J.prototype.bo = function () {
            I.setGamePauseEventCallback(this.name, this.Ao.bind(this));
          };
          J.prototype.Ao = function () {
            if (this.Io) {
              this.po();
            }
            I.emitGameNotifyPauseEvent();
          };
          J.prototype.wo = function () {
            I.removeGamePauseEventCallback(this.name);
          };
          J.prototype.Mo = function (w) {
            I.setGameResumeEventCallback(this.name, w);
          };
          J.prototype.Co = function (w) {
            var O = I.isGameStatePaused() ? 0x1 : 0x0;
            return function () {
              if (w) {
                w(O);
              }
            };
          };
          J.prototype.Oo = function () {
            I.removeGameResumeEventCallback(this.name);
          };
          J.prototype.So = function () {
            var w = this.generalControllers.spinButtonController;
            w.enableButton();
            w.idle();
            this.onStateFullyIdle();
            this.Ho();
            this.enableAvailableActions();
            this.Mo(this.enableSpinAction.bind(this));
          };
          J.prototype.Bo = function (w) {
            if (this.generalControllers.spinButtonController.isAutoSpin()) {
              this.vo();
              this.So();
            } else {
              this.Go(w);
            }
          };
          J.prototype.No = function (w) {
            if (!A.JSGTConfig.spaceBarInterrupterEnabled && K.buttonHitTest(this.generalControllers.spinButtonController.node)) {
              switch (w.keyCode) {
                case g.SPIN_BUTTON_TRIGGER_KEY:
                  this.Bo(Z.SpinTrigger.SPACEBAR);
              }
            }
          };
          J.prototype.Go = function (w) {
            var O = this;
            var F = this.generalControllers.spinButtonController;
            if (!(F && F.mode === V.SpinButtonMode.DISABLED)) {
              this.wo();
              this.Oo();
              this.preStartSpinAction(function () {
                b.checkSpinValidity({
                  'getCostPerSpinFunction': O.getCostPerSpin.bind(O),
                  'dataSource': O.dataSource,
                  'walletHelper': E.walletHelper,
                  'callback': function (D) {
                    switch (D) {
                      case Z.SpinCredits.FREE_GAME:
                        Q.settingMenuHelper.setWinAmount(0x0);
                        E.walletHelper.spin();
                        if (F.isAutoSpin()) {
                          q.decrementAutoSpinCount(F);
                        }
                        O.Is(w);
                        break;
                      case Z.SpinCredits.CASH:
                      case Z.SpinCredits.BONUS:
                        O.To();
                        if (F.isAutoSpin()) {
                          q.decrementAutoSpinCount(F);
                        }
                        O.Is(w);
                    }
                  }
                });
              });
            }
          };
          J.prototype.po = function () {
            var w = this.Io;
            this.Io = undefined;
            if (w) {
              w();
            }
          };
          J.prototype.Is = function (w) {
            if (!this.dataSource.isGameReplaying) {
              var O = Q.settingMenuHelper.turboSpinOn ? "Turbo" : "Normal";
              var F = w === Z.SpinTrigger.AUTOSPIN ? "Auto" : "Manual";
              var D = {
                actionName: '' + O + F + "Spin"
              };
              H.sendAnalyticsEvent(D);
            }
            this.disableAvailableActions();
            this.Po();
            this.disableSpinAction();
            this.preExitStateCleanups();
            var U = this.finalCallback;
            this.finalCallback = undefined;
            this.destroy();
            X.deferCallback(true)(function () {
              X.deferCallback(true)(U);
            });
          };
          J.prototype.onStateFullyIdle = function () {};
          J.prototype.additionalDestroyCleanups = function () {};
          J.prototype.preExitStateCleanups = function () {};
          J.prototype.enableAvailableActions = function () {};
          J.prototype.disableAvailableActions = function () {};
          J.prototype.preStartSpinAction = function (w) {
            if (w) {
              w();
            }
          };
          J.prototype.defineSystemEventConfigParam = function () {
            return {};
          };
          J.prototype.mo = function () {
            var w = this.defineSystemEventConfigParam();
            return Object.assign(this['do'], w);
          };
          J.prototype.Ho = function () {
            Q.settingMenuHelper.autoSpinCallback = this.Lo.bind(this);
            Q.settingMenuHelper.setAllButtonsInteractable(true);
          };
          J.prototype.Po = function () {
            Q.settingMenuHelper.autoSpinCallback = undefined;
            Q.settingMenuHelper.setAllButtonsInteractable(false);
          };
          J.prototype.enableSpinAction = function () {
            this.generalControllers.spinButtonController.setOnClickCallback(this.Bo.bind(this, Z.SpinTrigger.CLICK));
            if (!A.JSGTConfig.spaceBarInterrupterEnabled) {
              cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
            }
          };
          J.prototype.disableSpinAction = function () {
            this.generalControllers.spinButtonController.clearOnClickCallback();
            if (!A.JSGTConfig.spaceBarInterrupterEnabled) {
              cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
            }
          };
          J.prototype.Lo = function () {
            var w = this;
            var O = Q.settingMenuHelper.autoSpinCount;
            var F = Q.settingMenuHelper.singleWinAmount;
            var D = Q.settingMenuHelper.balanceAmountMoreThan;
            var U = Q.settingMenuHelper.balanceAmountLessThan;
            var S = {
              count: O,
              single_win: F,
              increment: D,
              decrement: U
            };
            H.sendEvent(shell.ga.CATEGORY_GAME, shell.ga.EVENT_SLOT_AUTO_SPIN, S);
            this.Po();
            this.disableAvailableActions();
            q.startAutoSpin(O, this.generalControllers.spinButtonController, function () {
              w.Mo(w.yo.bind(w, w._o));
            });
          };
          J.prototype.vo = function () {
            var w = this.generalControllers.spinButtonController;
            q.exitAutoSpin(w);
            w.idle();
            this.po();
            this.enableAvailableActions();
            this.Ho();
            this.Mo(this.enableSpinAction.bind(this));
          };
          J.prototype.yo = function (w) {
            var O = this.dataSource.transactionModel.accumulatedWinAmount > 0x0 ? 0x0 : this._o;
            O = w || O;
            this.Io = X.delayCallback(O)(this.Go.bind(this, Z.SpinTrigger.AUTOSPIN));
          };
          J.prototype.getCostPerSpin = function () {
            var w = this.dataSource.systemModel.maxLineNumber;
            var O = this.dataSource.transactionModel;
            var F = O.betSizeValue;
            var D = O.betLevelValue;
            return X.toDecimalWithExp(F * D * w, 0x2);
          };
          J.prototype.To = function () {
            var w = this.getCostPerSpin();
            Q.settingMenuHelper.setWinAmount(0x0);
            E.walletHelper.spin(w);
          };
          return J;
        }();
        Y["default"] = W;
        cc._RF.pop();
      }
    }, TT],
    'InfoboardController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "d9237cyY11EsrptxXomkPBH", "InfoboardController")) {
        var G = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", G);
        Y.InfoboardBgState = Y.InfoBoardState = undefined;
        var q;
        var g = z("AnalyticsHelper");
        var Z = z("Utils");
        var b = z("SkipHandler");
        var H = z("InfoboardMessageController");
        var I = z("SymbolImageHandler");
        var K = z("GeneralAudioConstant");
        var E = z("AudioManager");
        var Q = z("GConstants");
        (function (J) {
          J[J.SHOWING_MESSAGE = 0x0] = "SHOWING_MESSAGE";
          J[J.SHOWING_WIN = 0x1] = "SHOWING_WIN";
          J[J.SHOWING_ROLL = 0x2] = "SHOWING_ROLL";
          J[J.SHOWING_EVENT = 0x3] = "SHOWING_EVENT";
        })(q = Y.InfoBoardState || (Y.InfoBoardState = {}));
        (function (J) {
          J[J.LEVEL_ONE = 0x0] = "LEVEL_ONE";
          J[J.LEVEL_TWO = 0x1] = "LEVEL_TWO";
        })(Y.InfoboardBgState || (Y.InfoboardBgState = {}));
        var X = cc._decorator;
        var A = X.ccclass;
        var V = X.property;
        var W = function (J) {
          function w() {
            var O = null !== J && J.apply(this, arguments) || this;
            O.numberDisplayNode = undefined;
            O.winDisplayNode = undefined;
            O.infoboardMessageController = undefined;
            O.coins = undefined;
            O.particle = undefined;
            O.shine = undefined;
            O.dispenser = undefined;
            O.glow = undefined;
            O.infoboardHolder = undefined;
            O.level2Infoboard = undefined;
            O.level3Infoboard = undefined;
            O.leftMask = undefined;
            O.rightMask = undefined;
            O.multiplier = undefined;
            O.multiplier2 = undefined;
            O.multiplier2Ten = undefined;
            O.multiplier2Shine = undefined;
            O.multiplier2Particle = undefined;
            O.sparkle = undefined;
            O.sparkle2 = undefined;
            O.firstPart = undefined;
            O.secondPart = undefined;
            O.symbolSprite = undefined;
            O.dynamicMessage = undefined;
            O.message = undefined;
            O.Ro = [];
            O.Eo = [];
            O.ko = undefined;
            O.Uo = undefined;
            O.jo = undefined;
            O.Do = undefined;
            O.Wo = undefined;
            O.xo = undefined;
            O.Fo = undefined;
            O.Vo = undefined;
            O.zo = {};
            O.Jo = 0x0;
            O.qo = -0x1;
            return O;
          }
          __extends(w, J);
          w.prototype.init = function () {
            this.Ro.length = 0x0;
            if (shell.isRTLLanguage()) {
              this.Jo = 0x1;
              this.qo = 0x1;
              this.dynamicMessage.getComponent(cc.Layout).horizontalDirection = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT;
            }
          };
          w.prototype.destroy = function () {
            this._t();
            return J.prototype.destroy.call(this);
          };
          Object.defineProperty(w.prototype, "infoboardState", {
            'get': function () {
              return this.Vo;
            },
            'enumerable': false,
            'configurable': true
          });
          w.prototype._t = function () {
            var O = this.xo;
            this.xo = undefined;
            if (O) {
              O();
            }
            cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.quickStopMediumWin, this);
          };
          w.prototype.getInfoboardWorldPosition = function () {
            return this.node.convertToWorldSpaceAR(cc.v2(0x0, 0x0));
          };
          w.prototype.setLocalizedSprites = function (O) {
            this.Ro.length = 0x0;
            this.Eo.length = 0x0;
            this.Ro.push(O.getSpriteFrame("info_main1"), O.getSpriteFrame("info_main2"), O.getSpriteFrame("info_main3"));
            this.ko = O.getSpriteFrame("info_bns");
            this.Uo = O.getSpriteFrame("info_respin1");
            this.jo = O.getSpriteFrame("info_respin2");
            this.firstPart.spriteFrame = this.Uo;
            this.secondPart.spriteFrame = this.jo;
          };
          w.prototype.setLocalizedWinAndTotalWinSprites = function (O) {
            var F = O.getSpriteFrame("info_win");
            var D = O.getSpriteFrame("info_tw");
            this.infoboardMessageController.setLocalizedSpriteFrame(F, D);
          };
          w.prototype.setThreshold = function (O) {
            this.zo = O;
          };
          w.prototype.playZoom = function () {
            this.dynamicMessage.stopAllActions();
            this.dynamicMessage.active = false;
            this.message.active = true;
            var O = this.ko;
            this.infoboardMessageController.setSprites([O]);
            if (this.Vo !== q.SHOWING_ROLL) {
              this.infoboardMessageController.clearNumberRoll();
            } else if (this.Vo === q.SHOWING_MESSAGE) {
              this.infoboardMessageController.clear(true);
            }
            this.infoboardMessageController.clearDisplayNumber();
            this.infoboardMessageController.setTotalAndWinText(false, false);
            this.Ko();
          };
          w.prototype.playRespin = function (O) {
            var F = this;
            if (false !== this.message.active) {
              this.symbolSprite.spriteFrame = I.symbolImageHandler.symbolImages[O];
              this.dynamicMessage.active = true;
              this.message.active = false;
              this.dynamicMessage.stopAllActions();
              Z.deferCallback()(function () {
                var D = F.infoboardMessageController.maskNode.width;
                var U = F.infoboardMessageController.padding;
                if (F.dynamicMessage.width * F.dynamicMessage.scaleY + 0x2 * U > D) {
                  var S = F.qo;
                  F.dynamicMessage.setAnchorPoint(F.Jo, F.dynamicMessage.anchorY);
                  F.dynamicMessage.setPosition(cc.v2((D / 0x2 - U) * S, F.dynamicMessage.y));
                  F.Do = F.dynamicMessage.position;
                  var R = F.dynamicMessage.width * F.dynamicMessage.scaleY + 0x2 * U;
                  var x = cc.delayTime(1.5);
                  var j = cc.moveBy(R / 0x82, cc.v2(R * S, 0x0));
                  var P = cc.sequence(x, j, cc.callFunc(function () {
                    F.dynamicMessage.position = F.Do;
                  })).repeatForever();
                  F.dynamicMessage.runAction(P);
                }
              });
              this.infoboardMessageController.clear(true);
              if (this.Vo !== q.SHOWING_ROLL) {
                this.infoboardMessageController.clearNumberRoll();
              }
              this.infoboardMessageController.clearDisplayNumber();
              this.infoboardMessageController.setTotalAndWinText(false, false);
              this.Ko();
            }
          };
          w.prototype.resetInfoboard = function (O) {
            this.dynamicMessage.stopAllActions();
            this.message.active = true;
            this.dynamicMessage.active = false;
            var F = O ? this.Eo.slice() : this.Ro.slice();
            this.infoboardMessageController.setSprites(F);
            if (this.Vo !== q.SHOWING_ROLL) {
              this.infoboardMessageController.clearNumberRoll();
            } else if (this.Vo === q.SHOWING_MESSAGE) {
              this.infoboardMessageController.clear(true);
            }
            this.infoboardMessageController.clearDisplayNumber();
            this.infoboardMessageController.setTotalAndWinText(false, false);
            this.Ko();
          };
          w.prototype.resumeInfoboard = function (O) {
            if (undefined === O) {
              O = 0x0;
            }
            var F = this.Qo;
            this.Qo = undefined;
            if (F) {
              F();
            }
            if (O > 0x0) {
              this.Qo = Z.delayCallback(O)(this.Yo.bind(this));
            } else {
              this.Yo();
            }
          };
          w.prototype.deactivateInfoboardMessage = function () {
            this.infoboardMessageController.hideInfoboardMessage();
          };
          w.prototype.playWin = function (O, F) {
            if (undefined === F) {
              F = false;
            }
            var D = this.Qo;
            this.Qo = undefined;
            if (D) {
              D();
            }
            this.infoboardMessageController.showDisplayNumber(O, false);
            this.infoboardMessageController.setTotalAndWinText(F, !F);
            this.infoboardMessageController.unscheduleRandomSpriteTips();
            if (this.Vo === q.SHOWING_MESSAGE) {
              this.deactivateInfoboardMessage();
            }
            this.Vo = q.SHOWING_WIN;
          };
          w.prototype.playDynamicWin = function (O, F) {
            if (undefined === F) {
              F = false;
            }
            this.Xo();
            if (O >= this.zo.bigWinThreshold) {
              this.level3Infoboard.active = true;
              this.level3Infoboard.opacity = 0xff;
              this.level2Infoboard.active = false;
              this.level2Infoboard.opacity = 0x0;
              this.leftMask.active = false;
              this.rightMask.active = false;
              this.shine.node.position = cc.v3(0x0, 0x23);
              this.shine.node.setScale(3.3, 3.3);
              this.shine.play("infoboard_c3");
            } else if (O >= this.zo.mediumWinThreshold) {
              this.level2Infoboard.active = true;
              this.level2Infoboard.opacity = 0xff;
              this.level3Infoboard.active = false;
              this.level3Infoboard.opacity = 0x0;
              this.leftMask.active = false;
              this.rightMask.active = false;
            } else {
              this.level2Infoboard.active = false;
              this.level2Infoboard.opacity = 0x0;
              this.level3Infoboard.active = false;
              this.level3Infoboard.opacity = 0x0;
              this.leftMask.active = true;
              this.rightMask.active = true;
            }
            this.playWin(O, F);
          };
          w.prototype.playTotalWin = function (O, F) {
            var D = this.Qo;
            this.Qo = undefined;
            if (D) {
              D();
            }
            this.infoboardMessageController.showDisplayNumber(O, false);
            this.infoboardMessageController.setTotalAndWinText(true, false);
            this.infoboardMessageController.unscheduleRandomSpriteTips();
            if (this.Vo === q.SHOWING_MESSAGE) {
              this.deactivateInfoboardMessage();
            }
            this.Vo = q.SHOWING_WIN;
            if (F) {
              F();
            }
          };
          w.prototype.playSmallWin = function (O, F) {
            this.infoboardMessageController.clearNumberRoll();
            this.playWin(O);
            Z.spawnCallback(this.Xo.bind(this), this.Zo.bind(this))(function () {
              if (F) {
                F();
              }
            });
          };
          w.prototype.Xo = function (O) {
            this.infoboardHolder.stopAllActions();
            this.infoboardHolder.scale = 0x1;
            this.infoboardHolder.runAction(cc.sequence(cc.scaleTo(0.2, 1.05).easing(cc.easeCircleActionOut()), cc.scaleTo(0.2, 0x1).easing(cc.easeCircleActionOut()), cc.delayTime(0.3), cc.callFunc(function () {
              if (O) {
                O();
              }
            })));
            this.coins.play();
            this.particle.play();
            this.sparkle.play();
            this.sparkle2.play();
            this.shine.node.position = cc.v3(0x0, 0x0);
            this.shine.node.setScale(3.3, 3.3);
            this.shine.play();
            this.dispenser.play();
            this.glow.runAction(cc.fadeTo(0.25, 0x9b));
          };
          w.prototype.playMediumWin = function (O, F, D) {
            this.$o = undefined;
            this.Wo = F;
            this.Fo = D;
            this.tc(O);
            this.infoboardHolder.stopAllActions();
            this.infoboardHolder.scale = 0x1;
            this.infoboardHolder.runAction(cc.sequence(cc.scaleTo(0.2, 1.05).easing(cc.easeCircleActionOut()), cc.scaleTo(0.2, 0x1).easing(cc.easeCircleActionOut())));
            this.ic();
            this.xo = b["default"].subscribeOnce(this.quickStopMediumWin.bind(this));
            cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.quickStopMediumWin, this);
            cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.quickStopMediumWin, this);
          };
          w.prototype.instantPlayMediumWin = function (O) {
            this.playWin(O, true);
          };
          w.prototype.ic = function () {
            this.leftMask.active = false;
            this.rightMask.active = false;
            this.coins.stop();
            this.coins.setCurrentTime(0x0);
            this.coins.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.particle.stop();
            this.particle.setCurrentTime(0x0);
            this.particle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.sparkle.stop();
            this.sparkle.setCurrentTime(0x0);
            this.sparkle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.sparkle2.stop();
            this.sparkle2.setCurrentTime(0x0);
            this.sparkle2.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.shine.stop();
            this.shine.setCurrentTime(0x0);
            this.shine.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.dispenser.stop();
            this.dispenser.setCurrentTime(0x0);
            this.dispenser.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.glow.stopAllActions();
            this.glow.opacity = 0x0;
            this.level2Infoboard.stopAllActions();
            this.level2Infoboard.active = true;
            this.level2Infoboard.opacity = 0x0;
            this.level2Infoboard.runAction(cc.fadeIn(0.2));
            this.coins.play();
            this.particle.play();
            this.sparkle.play();
            this.sparkle2.play();
            this.shine.node.position = cc.v3(0x0, 0x28);
            this.shine.node.setScale(3.35, 3.7);
            this.shine.play("infoboard_c2");
            this.dispenser.play();
            this.glow.runAction(cc.fadeTo(0.25, 0x96));
          };
          w.prototype.Zo = function (O) {
            var F = this.winDisplayNode;
            F.scaleX = F.scaleY = 0x1;
            F.stopAllActions();
            F.runAction(cc.sequence(cc.delayTime(0.1), cc.scaleTo(0.1, 1.15), cc.scaleTo(0.2, 0x1).easing(cc.easeBackInOut()), cc.callFunc(function () {
              if (O) {
                O();
              }
            })));
          };
          w.prototype.playBigWin = function (O, F) {
            this.playDynamicWin(O);
            this.Zo(F);
          };
          w.prototype.quickStopMediumWin = function () {
            var O = K.GENERAL_AUDIO.prizeMedwinMain.key;
            E.stopAudioIfPlaying(O);
            this.sparkle.play();
            this.sparkle2.play();
            this.particle.play();
            this.infoboardHolder.stopAllActions();
            this.infoboardHolder.scale = 0x1;
            this.infoboardHolder.runAction(cc.sequence(cc.scaleTo(0.2, 1.05).easing(cc.easeCircleActionOut()), cc.scaleTo(0.2, 0x1).easing(cc.easeCircleActionOut())));
            var F = this.Fo;
            this.Fo = undefined;
            if (F) {
              F();
            }
            if (this.Wo) {
              var D = this.xo;
              this.xo = undefined;
              if (D) {
                D();
              }
              cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.quickStopMediumWin, this);
              this.Yt();
              this.playWin(this.Wo, true);
              this.sc();
              this.infoboardMessageController.clearNumberRoll();
            }
          };
          w.prototype.tc = function (O) {
            if (undefined === O) {
              O = 0x0;
            }
            var F = K.GENERAL_AUDIO.prizeMedwinMain.key;
            E.stopAudioIfPlaying(F);
            E.playAudioIfNotPlaying(F);
            this.infoboardMessageController.unscheduleRandomSpriteTips();
            this.infoboardMessageController.setTotalAndWinText(false, true);
            if (this.Vo === q.SHOWING_MESSAGE) {
              this.deactivateInfoboardMessage();
            }
            this.Vo = q.SHOWING_ROLL;
            this.infoboardMessageController.showNumberRoll(1.488, O, this.Wo, this.ec.bind(this), !this.numberDisplayNode.active);
          };
          w.prototype.ec = function () {
            var O = this.xo;
            this.xo = undefined;
            if (O) {
              O();
            }
            cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.quickStopMediumWin, this);
            this.sc();
          };
          w.prototype.sc = function () {
            var O = this;
            var F = K.GENERAL_AUDIO.prizeMedwinEnd.key;
            E.stopAudioIfPlaying(F);
            E.playAudioIfNotPlaying(F);
            this.playWin(this.Wo, false);
            this.particle.play();
            this.sparkle.play();
            this.sparkle2.play();
            this.infoboardHolder.stopAllActions();
            this.infoboardHolder.scale = 0x1;
            this.infoboardHolder.runAction(cc.sequence(cc.scaleTo(0.2, 1.05).easing(cc.easeCircleActionOut()), cc.scaleTo(0.2, 0x1).easing(cc.easeCircleActionOut())));
            this.Zo(function () {
              var D = O.Fo;
              O.Fo = undefined;
              if (D) {
                D();
              }
            });
          };
          w.prototype.hideMediumWinEffect = function (O) {
            if (O) {
              O();
            }
          };
          w.prototype.instantHideMediumWin = function () {};
          w.prototype.Yo = function () {
            if (this.Vo !== q.SHOWING_ROLL) {
              this.infoboardMessageController.clearNumberRoll();
              this.infoboardMessageController.showInfoboardMessage();
            }
            this.infoboardMessageController.clearDisplayNumber();
            this.Vo = q.SHOWING_MESSAGE;
            this.infoboardMessageController.playScheduleRandomSpriteTips();
            this.infoboardMessageController.setTotalAndWinText(false, false);
            this.Ko();
          };
          w.prototype.Yt = function () {
            var O = shell.ga;
            var F = {
              type: "Medium Prize"
            };
            g.sendEvent(O.CATEGORY_GAME, O.EVENT_SLOT_SKIP_EFFECT, F);
          };
          w.prototype.playMultiplier = function (O, F) {
            var D = this;
            var U = cc.v3(0x0, 0x3f7);
            this.multiplier.position = U;
            this.multiplier.scale = 3.5;
            this.multiplier.opacity = 0xff;
            var S = K.GENERAL_AUDIO.multiFly.key;
            E.stopAudioIfPlaying(S);
            E.playAudioIfNotPlaying(S);
            this.multiplier.runAction(cc.sequence(cc.spawn(cc.moveTo(0x1, cc.v2(0x0, 0x0)).easing(cc.easeQuinticActionIn()), cc.scaleTo(0.8, 0x5).easing(cc.easeQuinticActionIn())), cc.spawn(cc.fadeOut(0.5), cc.callFunc(function () {
              D.multiplier.scale = 0x0;
              if (F) {
                F();
              }
            }), cc.scaleTo(0x2, 0x5))));
          };
          w.prototype.playNormalMultiplier = function (O) {
            var F = this;
            this.multiplier2Particle.stop();
            this.multiplier2Particle.setCurrentTime(0x0);
            this.multiplier2Particle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.multiplier2.position = cc.v3(-0x122, 0x4b0);
            this.multiplier2.scale = 0x1;
            this.multiplier2Ten.scale = 0x0;
            this.multiplier2.active = true;
            this.multiplier2Shine.color = Q.BLACK;
            var D = K.GENERAL_AUDIO.multiAppearWoRespin.key;
            E.stopAudioIfPlaying(D);
            E.playAudioIfNotPlaying(D);
            this.multiplier2Particle.play();
            this.multiplier2.runAction(cc.sequence(cc.targetedAction(this.multiplier2Ten, cc.scaleTo(0.25, 0.7)), cc.spawn(cc.targetedAction(this.multiplier2Shine, cc.tintTo(0.5, Q.WHITE)), cc.targetedAction(this.multiplier2Ten, cc.scaleTo(0.1, 0.6))), cc.delayTime(0.7), cc.callFunc(function () {
              var U = K.GENERAL_AUDIO.multiFly.key;
              E.stopAudioIfPlaying(U);
              E.playAudioIfNotPlaying(U);
            }), cc.bezierTo(0.5, [cc.v2(-0x122, 0x4b0), cc.v2(0x64, 0x3e8), cc.v2(0x0, 0x0)]), cc.callFunc(function () {
              F.multiplier2.active = false;
              if (O) {
                O();
              }
            })));
          };
          w.prototype.Ko = function () {
            this.multiplier.stopAllActions();
            this.multiplier.scale = 0x0;
            this.level2Infoboard.active = false;
            this.level2Infoboard.opacity = 0x0;
            this.level2Infoboard.stopAllActions();
            this.level3Infoboard.active = false;
            this.level3Infoboard.opacity = 0x0;
            this.leftMask.active = true;
            this.rightMask.active = true;
            this.infoboardHolder.stopAllActions();
            this.infoboardHolder.runAction(cc.scaleTo(0.2, 0x1));
            this.coins.stop();
            this.coins.setCurrentTime(0x0);
            this.coins.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.particle.stop();
            this.particle.setCurrentTime(0x0);
            this.particle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.sparkle.stop();
            this.sparkle.setCurrentTime(0x0);
            this.sparkle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.sparkle2.stop();
            this.sparkle2.setCurrentTime(0x0);
            this.sparkle2.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.shine.stop();
            this.shine.setCurrentTime(0x0);
            this.shine.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.dispenser.stop();
            this.dispenser.setCurrentTime(0x0);
            this.dispenser.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.glow.stopAllActions();
            this.glow.opacity = 0x0;
          };
          __decorate([V(cc.Node)], w.prototype, "numberDisplayNode", undefined);
          __decorate([V(cc.Node)], w.prototype, "winDisplayNode", undefined);
          __decorate([V(H["default"])], w.prototype, "infoboardMessageController", undefined);
          __decorate([V(cc.Animation)], w.prototype, "coins", undefined);
          __decorate([V(cc.Animation)], w.prototype, "particle", undefined);
          __decorate([V(cc.Animation)], w.prototype, "shine", undefined);
          __decorate([V(cc.Animation)], w.prototype, "dispenser", undefined);
          __decorate([V(cc.Node)], w.prototype, "glow", undefined);
          __decorate([V(cc.Node)], w.prototype, "infoboardHolder", undefined);
          __decorate([V(cc.Node)], w.prototype, "level2Infoboard", undefined);
          __decorate([V(cc.Node)], w.prototype, "level3Infoboard", undefined);
          __decorate([V(cc.Node)], w.prototype, "leftMask", undefined);
          __decorate([V(cc.Node)], w.prototype, "rightMask", undefined);
          __decorate([V(cc.Node)], w.prototype, "multiplier", undefined);
          __decorate([V(cc.Node)], w.prototype, "multiplier2", undefined);
          __decorate([V(cc.Node)], w.prototype, "multiplier2Ten", undefined);
          __decorate([V(cc.Node)], w.prototype, "multiplier2Shine", undefined);
          __decorate([V(cc.Animation)], w.prototype, "multiplier2Particle", undefined);
          __decorate([V(cc.Animation)], w.prototype, "sparkle", undefined);
          __decorate([V(cc.Animation)], w.prototype, "sparkle2", undefined);
          __decorate([V(cc.Sprite)], w.prototype, "firstPart", undefined);
          __decorate([V(cc.Sprite)], w.prototype, "secondPart", undefined);
          __decorate([V(cc.Sprite)], w.prototype, "symbolSprite", undefined);
          __decorate([V(cc.Node)], w.prototype, "dynamicMessage", undefined);
          __decorate([V(cc.Node)], w.prototype, "message", undefined);
          return __decorate([A], w);
        }(cc.Component);
        Y["default"] = W;
        cc._RF.pop();
      }
    }, TL],
    'InfoboardMessageController.spec': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "9a894aU+wtPzI8aYY1BbeiI", "InfoboardMessageController.spec")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.setWinAmount = Y.setTotalAndWinText = undefined;
        Y.setTotalAndWinText = function (r, v) {
          if (r || v) {
            var G = System.get("automation") && System.get("automation").GameData;
            if (G) {
              G.emit(r ? "ShowTotalWin" : "ShowWin");
            }
          }
        };
        Y.setWinAmount = function (r, v) {
          if (r && r > 0x0) {
            var G = System.get("automation") && System.get("automation").GameData;
            if (G) {
              G.emit(v ? "ShowTotalWin" : "ShowWin");
            }
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'InfoboardMessageController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "f962cm61b9P6rw9Yco9B/O4", "InfoboardMessageController")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        Y.InfoboardMessageOrderState = undefined;
        var G;
        var q;
        var g = z("NumberDisplayController");
        var Z = z("NumberRollController");
        var b = z("Utils");
        var H = z("AutomationDecorator");
        var I = z("InfoboardMessageController.spec");
        (function (A) {
          A[A.SEQUENCE = 0x0] = "SEQUENCE";
          A[A.RANDOM = 0x1] = "RANDOM";
        })(G = Y.InfoboardMessageOrderState || (Y.InfoboardMessageOrderState = {}));
        (function (A) {
          A.nc = "_fntConfig";
        })(q || (q = {}));
        var K = cc._decorator;
        var E = K.ccclass;
        var Q = K.property;
        var X = function (A) {
          function V() {
            var S = null !== A && A.apply(this, arguments) || this;
            S.maskNode = undefined;
            S.padding = 0x28;
            S.label = undefined;
            S.winLabelColor = new cc.Color();
            S.winLabelOutlineColor = new cc.Color();
            S.tipsLabelColor = new cc.Color();
            S.tipsLabelOutlineColor = new cc.Color();
            S.enableWinOutline = true;
            S.enableTipsOutline = true;
            S.spriteMessageNode = undefined;
            S.sprite = undefined;
            S.numberRollController = undefined;
            S.numberDisplayController = undefined;
            S.winText = undefined;
            S.totalText = undefined;
            S.winDisplayNode = undefined;
            S.Do = undefined;
            S.oc = [];
            S.cc = [];
            S.hc = [];
            S.rc = [];
            S.ac = undefined;
            S.uc = undefined;
            S.lc = undefined;
            S.fc = undefined;
            S.dc = 0x4;
            S.vc = 0x3;
            S._c = 0x4;
            S.mc = 0x3;
            S.pc = 0x0;
            S.bc = 0x28a;
            S.Sc = 0x1;
            S.Cc = G.RANDOM;
            S.Jo = 0x0;
            S.qo = -0x1;
            return S;
          }
          var W = {
            get: function () {
              return this.uc;
            },
            enumerable: false,
            configurable: true
          };
          var J = {
            tooltip: false
          };
          var w = {
            tooltip: false
          };
          var O = {
            tooltip: false
          };
          var F = {
            tooltip: false
          };
          var D = {
            tooltip: false
          };
          var U = {
            tooltip: false
          };
          __extends(V, A);
          Object.defineProperty(V.prototype, "willExpire", W);
          V.prototype.onLoad = function () {
            if (shell.isRTLLanguage()) {
              this.Jo = 0x1;
              this.qo = 0x1;
              this.winDisplayNode.getComponent(cc.Layout).horizontalDirection = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT;
            }
          };
          V.prototype.initNumberDisplayNodeEvent = function () {
            this.Sc = this.winDisplayNode.scale;
            this.winDisplayNode.on("size-changed", this.resizeNumberDisplay, this);
          };
          V.prototype.setNumberDisplayNodeWidth = function (S) {
            this.bc = S;
          };
          V.prototype.setEventMessage = function (S, R, x) {
            if (undefined === R) {
              R = true;
            }
            if (undefined === x) {
              x = false;
            }
            if (!this.ac) {
              if (x) {
                this.label.node.color = this.tipsLabelOutlineColor;
                this.label.node.getComponent(cc.LabelOutline).enabled = this.enableTipsOutline;
              }
              this.ac = false;
              this.lc = true;
              this.uc = R;
              this.unschedule(this.playRandomTips);
              this.unschedule(this.playRandomSpriteTips);
              if (S instanceof cc.SpriteFrame) {
                this.setSpriteMessage(S);
              } else if ("string" == typeof S) {
                this.setLabel(S);
              }
            }
          };
          V.prototype.clear = function (S) {
            if (undefined === S) {
              S = false;
            }
            if (this.ac || this.lc || S || this.Cc !== G.RANDOM) {
              if (this.sprite) {
                this.unschedule(this.playRandomSpriteTips);
                this.playRandomSpriteTips();
              } else if (this.label) {
                this.unschedule(this.playRandomTips);
                this.playRandomTips();
              }
            }
          };
          V.prototype.stop = function () {
            if (this.sprite) {
              this.sprite.node.stopAllActions();
            }
            if (this.label) {
              this.label.node.stopAllActions();
            }
          };
          V.prototype.setLocalizedSpriteFrame = function (S, R) {
            this.winText.spriteFrame = S;
            this.totalText.spriteFrame = R;
          };
          V.prototype.setSprites = function (S) {
            this.cc = undefined;
            this.cc = S;
            this.rc = S.slice();
          };
          V.prototype.setOrderOfMessage = function (S) {
            if (undefined === S) {
              S = G.RANDOM;
            }
            this.Cc = S;
          };
          V.prototype.setRandomSpriteScheduleTime = function (S, R) {
            if (undefined === S) {
              S = 0x4;
            }
            if (undefined === R) {
              R = 0x3;
            }
            this.mc = R;
            this._c = S;
          };
          V.prototype.playScheduleRandomSpriteTipsOverride = function () {
            var S = Math.floor(Math.random() * this.mc) + this._c;
            this.unschedule(this.playRandomSpriteTips);
            this.scheduleOnce(this.playRandomSpriteTips, S);
          };
          V.prototype.playScheduleRandomSpriteTips = function (S) {
            if (undefined === S) {
              S = 0x0;
            }
            this.unschedule(this.playRandomSpriteTips);
            this.scheduleOnce(this.playRandomSpriteTips, S);
          };
          V.prototype.unscheduleRandomSpriteTips = function () {
            this.unschedule(this.playRandomSpriteTips);
          };
          V.prototype.setTotalAndWinText = function (S, R) {
            var x = this;
            this.winDisplayNode.opacity = 0x0;
            this.totalText.node.active = S;
            this.winText.node.active = R;
            b.deferCallback(true)(function () {
              b.deferCallback(true)(function () {
                x.winDisplayNode.opacity = 0xff;
              });
            });
          };
          V.prototype.showInfoboardMessage = function () {
            var S = this.maskNode.getComponent(cc.Mask);
            if (S) {
              S.enabled = true;
            }
            this.spriteMessageNode.active = true;
          };
          V.prototype.hideInfoboardMessage = function () {
            this.spriteMessageNode.active = false;
            var S = this.maskNode.getComponent(cc.Mask);
            if (S) {
              S.enabled = false;
            }
          };
          V.prototype.showDisplayNumber = function (S, R) {
            if (undefined === R) {
              R = false;
            }
            this.ac = true;
            if (this.winDisplayNode) {
              this.winDisplayNode.setScale(this.Sc);
            }
            this.numberDisplayController.clear();
            this.numberDisplayController.displayNumber(S, R);
          };
          V.prototype.clearDisplayNumber = function () {
            this.numberDisplayController.clear();
          };
          V.prototype.showNumberRoll = function (S, R, x, j, P) {
            if (undefined === P) {
              P = true;
            }
            this.lc = false;
            this.ac = true;
            this.fc = j;
            if (this.winDisplayNode) {
              this.winDisplayNode.setScale(this.Sc);
            }
            this.numberRollController.rollDuration = S;
            this.numberRollController.play(R, x, this.onNumberRollComplete.bind(this), P);
          };
          V.prototype.skipNumberRoll = function () {
            this.numberRollController.skip();
            this.onNumberRollComplete();
          };
          V.prototype.clearNumberRoll = function () {
            this.numberRollController.stop();
          };
          V.prototype.setSpriteMessage = function (S) {
            var R = this;
            var x = this.padding;
            var j = this.sprite;
            var P = j.node;
            P.stopAllActions();
            j.spriteFrame = S;
            var m = this.maskNode.width;
            if (P.width * P.scaleY + 0x2 * x > m) {
              var p = this.qo;
              P.setAnchorPoint(this.Jo, P.anchorY);
              P.setPosition(cc.v2((m / 0x2 - x) * p, P.y));
              this.Do = P.position;
              var M = P.width * P.scaleY + 0x2 * x;
              var B = cc.delayTime(1.5);
              var y = cc.moveBy(M / 0x82, cc.v2(M * p, 0x0));
              var k = undefined;
              k = this.uc ? cc.sequence(B, y, cc.callFunc(this.playScheduleRandomSpriteTips, this)) : cc.sequence(B, y, cc.callFunc(function () {
                P.position = R.Do;
              })).repeatForever();
              P.runAction(k);
            } else {
              P.setAnchorPoint(0.5, P.anchorY);
              P.x = 0x0;
              if (!this.uc) {
                return;
              }
              b.deferCallback(true)(this.playScheduleRandomSpriteTipsOverride.bind(this));
            }
          };
          V.prototype.playRandomSpriteTips = function () {
            this.ac = false;
            this.lc = false;
            this.uc = true;
            if (0x0 === this.rc.length) {
              this.rc = this.cc.slice();
            }
            var S = this.rc;
            if (this.Cc === G.RANDOM) {
              var R = Math.floor(Math.random() * S.length);
              if (S.length > 0x1) {
                for (; this.sprite.spriteFrame === S[R];) {
                  R = Math.floor(Math.random() * S.length);
                }
              }
              this.setSpriteMessage(S[R]);
              this.rc.splice(R, 0x1);
            } else if (this.Cc === G.SEQUENCE) {
              this.setSpriteMessage(S[0x0]);
              this.rc.splice(0x0, 0x1);
            }
          };
          V.prototype.resizeNumberDisplay = function () {
            var S = this.bc;
            var R = this.winDisplayNode.width * this.Sc;
            var x = R - S;
            if (x > 0x0) {
              var j = this.Sc - x / R;
              this.winDisplayNode.scale = j;
            }
          };
          V.prototype.onNumberRollComplete = function () {
            var S = this.fc;
            this.ac = false;
            this.fc = undefined;
            if (S) {
              S();
            }
          };
          V.prototype.initLabelNodeY = function () {
            this.pc = this.label.node.y;
          };
          V.prototype.setTips = function (S) {
            this.oc = S;
            this.hc = S.slice();
          };
          V.prototype.setLocalizedFont = function (S) {
            this.label.font = S;
          };
          V.prototype.setLabelFontHeight = function (S) {
            if (undefined === S) {
              S = 0x0;
            }
            var R = this.label.font;
            if (R[q.nc]) {
              this.label.lineHeight = R[q.nc].commonHeight + S;
            }
          };
          V.prototype.setWinLabelColor = function (S) {
            this.winLabelColor = S;
          };
          V.prototype.setWinLabelOutlineColor = function (S) {
            this.winLabelOutlineColor = S;
          };
          V.prototype.setTipsLabelColor = function (S) {
            this.tipsLabelColor = S;
          };
          V.prototype.setTipsLabelOutlineColor = function (S) {
            this.tipsLabelOutlineColor = S;
          };
          V.prototype.setWinAmount = function (S, R, x) {
            if (undefined === R) {
              R = false;
            }
            if (undefined === x) {
              x = false;
            }
            if (S && S > 0x0) {
              this.unschedule(this.playRandomTips);
              this.unschedule(this.playRandomSpriteTips);
              this.lc = false;
              this.ac = true;
              this.uc = x;
              var j = this.label.node;
              var P = j.getComponent(cc.LabelOutline);
              j.color = this.winLabelColor;
              if (P) {
                P.color = this.winLabelOutlineColor;
                P.enabled = this.enableWinOutline;
              }
              var m = (R ? shell.I18n.t("InfoboardMessage.TotalWin") : shell.I18n.t("InfoboardMessage.Win")) + " " + b.formatCurrency(S, '', '');
              this.setLabel(m);
            }
          };
          V.prototype.setRandomLabelScheduleTime = function (S, R) {
            if (undefined === S) {
              S = 0x4;
            }
            if (undefined === R) {
              R = 0x3;
            }
            this.vc = R;
            this.dc = S;
          };
          V.prototype.scheduleRandomTips = function () {
            var S = Math.floor(Math.random() * this.vc) + this.dc;
            this.unschedule(this.playRandomTips);
            this.scheduleOnce(this.playRandomTips, S);
          };
          V.prototype.playScheduleRandomTips = function (S) {
            if (undefined === S) {
              S = 0x0;
            }
            this.unschedule(this.playRandomTips);
            this.scheduleOnce(this.playRandomTips, S);
          };
          V.prototype.unscheduleRandomTips = function () {
            this.unschedule(this.playRandomTips);
          };
          V.prototype.playRandomTips = function () {
            this.ac = false;
            this.lc = false;
            if (0x1 !== this.oc.length) {
              this.uc = true;
            }
            if (0x0 === this.hc.length) {
              this.hc = this.oc.slice();
            }
            var S = this.hc;
            var R = Math.floor(Math.random() * S.length);
            var x = this.label.node;
            x.color = this.tipsLabelColor;
            var j = x.getComponent(cc.LabelOutline);
            if (j) {
              j.color = this.tipsLabelOutlineColor;
              j.enabled = this.enableTipsOutline;
            }
            this.setLabel(S[R]);
            this.hc.splice(R, 0x1);
          };
          V.prototype.setLabel = function (S) {
            var R = this.label;
            R.string = S;
            R.node.y = 0x2 * this.maskNode.height;
            this.unschedule(this.determineOverFlow);
            this.scheduleOnce(this.determineOverFlow);
          };
          V.prototype.determineOverFlow = function () {
            var S = this.label.node;
            var R = this.padding;
            if (S.width + 0x2 * R > this.maskNode.width) {
              this.scrollLabel();
            } else {
              S.stopAllActions();
              S.setAnchorPoint(0.5, S.anchorY);
              S.x = 0x0;
              if (this.uc) {
                this.scheduleRandomTips();
              }
            }
            S.y = this.pc;
          };
          V.prototype.scrollLabel = function () {
            var S = this.label;
            var R = this.padding;
            var x = S.node;
            var j = this.qo;
            x.stopAllActions();
            x.setAnchorPoint(this.Jo, x.anchorY);
            x.setPosition(cc.v2((this.maskNode.width / 0x2 - R) * j, x.y));
            var P;
            var m = x.width + 0x2 * R;
            var p = cc.delayTime(1.5);
            var M = cc.moveBy(m / 0x82, cc.v2(m * j, 0x0));
            P = this.uc ? cc.sequence(p, M, cc.callFunc(this.playScheduleRandomTips, this)) : cc.sequence(p, M, cc.callFunc(this.scrollLabel, this));
            x.runAction(P);
          };
          V.prototype.yc = function () {
            this.stop();
            this.numberRollController.stop();
            this.numberDisplayController.clear();
            this.unschedule(this.scheduleRandomTips);
            this.unschedule(this.playRandomSpriteTips);
            this.unschedule(this.playRandomTips);
            this.padding = 0x28;
            this.bc = 0x28a;
            this.pc = 0x0;
            this.Cc = G.RANDOM;
            this.enableTipsOutline = true;
            this.enableWinOutline = true;
            this.ac = false;
            this.oc = [];
            this.cc = [];
            this.rc = [];
            this.hc = undefined;
            this.uc = undefined;
            this.lc = undefined;
            this.tipsLabelColor = undefined;
            this.tipsLabelOutlineColor = undefined;
            this.fc = undefined;
          };
          V.prototype.destroy = function () {
            this.yc();
            this.node.destroy();
            return A.prototype.destroy.call(this);
          };
          __decorate([Q({
            'type': cc.Node,
            'tooltip': false
          })], V.prototype, "maskNode", undefined);
          __decorate([Q({
            'type': cc.Float,
            'tooltip': false
          })], V.prototype, "padding", undefined);
          __decorate([Q({
            'type': cc.Label,
            'tooltip': false
          })], V.prototype, "label", undefined);
          __decorate([Q(J)], V.prototype, "winLabelColor", undefined);
          __decorate([Q(w)], V.prototype, "winLabelOutlineColor", undefined);
          __decorate([Q(O)], V.prototype, "tipsLabelColor", undefined);
          __decorate([Q(F)], V.prototype, "tipsLabelOutlineColor", undefined);
          __decorate([Q(D)], V.prototype, "enableWinOutline", undefined);
          __decorate([Q(U)], V.prototype, "enableTipsOutline", undefined);
          __decorate([Q({
            'type': cc.Node,
            'tooltip': false
          })], V.prototype, "spriteMessageNode", undefined);
          __decorate([Q({
            'type': cc.Sprite,
            'tooltip': false
          })], V.prototype, "sprite", undefined);
          __decorate([Q({
            'type': Z["default"],
            'tooltip': false
          })], V.prototype, "numberRollController", undefined);
          __decorate([Q({
            'type': g["default"],
            'tooltip': false
          })], V.prototype, "numberDisplayController", undefined);
          __decorate([Q({
            'type': cc.Sprite,
            'tooltip': false
          })], V.prototype, "winText", undefined);
          __decorate([Q({
            'type': cc.Sprite,
            'tooltip': false
          })], V.prototype, "totalText", undefined);
          __decorate([Q({
            'type': cc.Node,
            'tooltip': false
          })], V.prototype, "winDisplayNode", undefined);
          __decorate([H.automationDec({
            'func': I.setTotalAndWinText
          })], V.prototype, "setTotalAndWinText", null);
          __decorate([H.automationDec({
            'func': I.setWinAmount
          })], V.prototype, "setWinAmount", null);
          return __decorate([E], V);
        }(cc.Component);
        Y["default"] = X;
        cc._RF.pop();
      }
    }, TY],
    'JSONSerializer': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "1252bHHaiZC15bpK+5v9l5B", "JSONSerializer")) {
        var L = System.get("common").JSONSerialiser;
        z.exports.JSONSerializer = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'JakeSlotGameTemplate': [function (L, Y, l) {
      'use strict';

      var r = {
        value: true
      };
      var v = {
        spaceBarInterrupterEnabled: false
      };
      if (!cc._RF.push(Y, "e12d8fBWfBCyboZWCaBLXDu", "JakeSlotGameTemplate")) {
        Object.defineProperty(l, "__esModule", r);
        l.initJakeSlotGameTemplate = l.JSGTConfig = undefined;
        l.JSGTConfig = v;
        l.initJakeSlotGameTemplate = function (G) {
          l.JSGTConfig = Object.freeze(G);
        };
        cc._RF.pop();
      }
    }, {}],
    'LabelLocalized': [function (N, z, L) {
      'use strict';

      if (!cc._RF.push(z, "f5f30hTmFFOcLgg2elp0I0D", "LabelLocalized")) {
        L.__esModule = true;
        L["default"] = undefined;
        var Y = cc.Class({
          'extends': cc.Component,
          'editor': false,
          'properties': {
            'key': {
              'tooltip': false,
              'default': '',
              'notify': function () {
                this.Mc();
              }
            }
          },
          'onLoad': function () {
            this.Ac = this.node.getComponent(cc.Label);
            if (!this.Ac) {
              this.Ac = this.node.getComponent(cc.RichText);
            }
            this.Mc();
          },
          'Mc': function () {
            var l = this.Ac;
            if (l) {
              l.string = shell.I18n.t(this.key);
            }
          }
        });
        L["default"] = Y;
        z.exports = L["default"];
        cc._RF.pop();
      }
    }, {}],
    'LabelTheme': [function (q, f, g) {
      'use strict';

      if (!cc._RF.push(f, "05b6c8yPn1LZIH3AnSTBq8U", "LabelTheme")) {
        g.__esModule = true;
        g["default"] = undefined;
        var Z = {
          'Ic': "_updateRichText",
          'Oc': "_isBold",
          'Hc': "_isItalic"
        };
        var b;
        var H = function (D) {
          if (D && D.__esModule) {
            return D;
          }
          if (null === D || "object" != typeof D && "function" != typeof D) {
            return {
              'default': D
            };
          }
          var U = F(undefined);
          if (U && U.has(D)) {
            return U.get(D);
          }
          var S = {};
          var R = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var d in D) if ("default" !== d && Object.prototype.hasOwnProperty.call(D, d)) {
            var x = R ? Object.getOwnPropertyDescriptor(D, d) : null;
            if (x && (x.get || x.set)) {
              Object.defineProperty(S, d, x);
            } else {
              S[d] = D[d];
            }
          }
          S["default"] = D;
          if (U) {
            U.set(D, S);
          }
          return S;
        }(q("ResRC"));
        var I = q("ResourceQualifierHelper");
        var K = q("Utils");
        var E = q("UIAppearanceHelper");
        var Q = cc.Enum(Z);
        0x0;
        var X = K.getCocosMajor();
        b = "number" == typeof X && X >= 0x4 ? function (D) {
          return D.markForRender(true);
        } : function (D) {
          return D.markForUpdateRenderData(true);
        };
        var A = {
          tooltip: false,
          "default": ''
        };
        var V = {
          tooltip: false,
          "default": "theme_font"
        };
        var W = {
          tooltip: false,
          "default": ''
        };
        var J = {
          tooltip: false,
          "default": ''
        };
        var w = {
          tooltip: false,
          "default": ''
        };
        var O = cc.Class({
          'extends': cc.Component,
          'ctor': function () {},
          'editor': false,
          'properties': {
            'followThemeColor': false,
            'followFont': false,
            'domainKey': A,
            'colorKey': {
              'tooltip': false,
              'default': '',
              'notify': function () {
                this.Bc();
              }
            },
            'fontFamilyKey': V,
            'fontKey': W,
            'fontWeightKey': J,
            'fontStyleKey': w
          },
          'onLoad': function () {
            this.Ac = this.node.getComponent(cc.Label);
            if (!this.Ac) {
              this.Ac = this.node.getComponent(cc.RichText);
            }
            this.Bc();
            this.Gc();
          },
          'Bc': function () {
            if (this.followThemeColor) {
              var D = this.node;
              this.domainKey;
              this.colorKey;
              if (D && '' != this.colorKey) {
                var U = E.uiAppearanceHelper.v(this.domainKey + '.' + this.colorKey);
                D.color = new cc.Color(U.r, U.g, U.b);
                D.opacity = U.getA();
              }
            }
          },
          'Gc': function () {
            var D = this;
            if (this.followFont) {
              var U = this.Ac;
              if (U) {
                0x0;
                U.offsetY = E.getOffsetY();
                if (this.fontFamilyKey && this.domainKey) {
                  var S = E.uiAppearanceHelper.v(this.domainKey + '.' + this.fontFamilyKey);
                  this.Nc(S);
                }
                if (this.fontWeightKey) {
                  var R = this.fontWeightKey;
                  this.Tc(R);
                }
                if (this.fontStyleKey) {
                  var d = this.fontStyleKey;
                  this.Pc(d);
                }
                if (!this.fontFamilyKey && this.fontKey && this.domainKey) {
                  var x = E.uiAppearanceHelper.v(this.domainKey + '.' + this.fontKey);
                  if ("object" == typeof x) {
                    return void this.Lc(x);
                  }
                  if (x) {
                    0x0;
                    var j = I.getResourceURL(x);
                    return void (j && H.load(j, cc.Font, function (P, m) {
                      if (!P) {
                        D.Lc(m);
                      }
                    }));
                  }
                }
              }
            }
          },
          'Lc': function (D) {
            var U = this.Ac;
            if (cc.isValid(this.node)) {
              U.font = D;
              if (U instanceof cc.Label) {
                b(U);
              } else if (U instanceof cc.RichText) {
                U[Q.Ic]();
              }
            }
          },
          'Nc': function (D) {
            var U = this.Ac;
            if (cc.isValid(this.node)) {
              U.fontFamily = D;
              if (U instanceof cc.Label) {
                b(U);
              } else if (U instanceof cc.RichText) {
                U[Q.Ic]();
              }
            }
          },
          'Tc': function (D) {
            var U = this.Ac;
            if (cc.isValid(this.node)) {
              U[Q.Oc] = D;
              if (U instanceof cc.Label) {
                b(U);
              } else {
                cc.RichText;
              }
            }
          },
          'Pc': function (D) {
            var U = this.Ac;
            if (cc.isValid(this.node)) {
              U[Q.Hc] = D;
              if (U instanceof cc.Label) {
                b(U);
              } else {
                cc.RichText;
              }
            }
          }
        });
        g["default"] = O;
        f.exports = g["default"];
        cc._RF.pop();
      }
      function F(D) {
        if ("function" != typeof WeakMap) {
          return null;
        }
        var U = new WeakMap();
        var S = new WeakMap();
        return (F = function (R) {
          return R ? S : U;
        })(D);
      }
    }, Tl],
    'LandscapeSettingInfoFooterController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "e550bCO+rxMtaTFsIcS7wfm", "LandscapeSettingInfoFooterController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("SettingInfoFooterController");
        var G = z("UIAppearanceHelper");
        var q = z("Utils");
        var f = cc._decorator;
        var g = f.ccclass;
        var Z = f.property;
        var b = function (H) {
          function I() {
            var K = null !== H && H.apply(this, arguments) || this;
            K.borders = [];
            K.descriptionLabel = [];
            K.landscapeSoundButtonHolder = undefined;
            return K;
          }
          __extends(I, H);
          I.prototype.boot = function () {
            H.prototype.boot.call(this);
            var K = G.uiAppearanceHelper.v("setting.secondary_theme_color");
            this.borders.forEach(function (Q) {
              q.setNodeColorWithOpacity(Q, K);
            });
            var E = G.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.descriptionLabel.forEach(function (Q) {
              q.setNodeColorWithOpacity(Q.node, E);
            });
            this.betOptionsButton.normalColor = G.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.betOptionsButton.pressedColor = G.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.betOptionsButton.hoverColor = G.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.betOptionsButton.disabledColor = G.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.walletButton.normalColor = G.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.walletButton.pressedColor = G.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.walletButton.hoverColor = G.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.walletButton.disabledColor = G.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.winButton.normalColor = G.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.winButton.pressedColor = G.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.winButton.hoverColor = G.uiAppearanceHelper.v("setting.tertiary_theme_color");
            this.winButton.disabledColor = G.uiAppearanceHelper.v("setting.tertiary_theme_color");
          };
          I.prototype.setWalletNavigateIcon = function (K) {
            this.Rc();
            switch (K) {
              case v.WALLET_FOOTER_TYPE.CASH:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = this.walletFooterTypeSFList[K - 0x1];
                break;
              case v.WALLET_FOOTER_TYPE.FREE_GAME:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = this.walletFooterTypeSFList[K - 0x1];
                this.specialIcon.spriteFrame = this.rewardFooterTypeSFList[K - 0x2];
                this.descriptionLabel[0x2].string = shell.I18n.t("SettingMenu.FreeGame");
                break;
              case v.WALLET_FOOTER_TYPE.BONUS:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = this.walletFooterTypeSFList[K - 0x1];
                this.specialIcon.spriteFrame = this.rewardFooterTypeSFList[K - 0x2];
                this.descriptionLabel[0x2].string = shell.I18n.t("SettingMenu.RollOver");
                break;
              default:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = undefined;
            }
          };
          I.prototype.Rc = function () {
            this.descriptionLabel[0x0].string = shell.I18n.t("WalletHelper.Balance");
            this.descriptionLabel[0x1].string = shell.I18n.t("SettingMenu.WinPrizeWord");
            this.descriptionLabel[0x2].string = '';
            this.descriptionLabel[0x3].string = shell.I18n.t("SettingMenu.Bet");
          };
          __decorate([Z([cc.Node])], I.prototype, "borders", undefined);
          __decorate([Z([cc.Label])], I.prototype, "descriptionLabel", undefined);
          __decorate([Z(cc.Node)], I.prototype, "landscapeSoundButtonHolder", undefined);
          return __decorate([g], I);
        }(v.SettingInfoFooterController);
        Y["default"] = b;
        cc._RF.pop();
      }
    }, Tr],
    'LandscapeSettingMenuController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "0a93fcJrXdI5b2EdfUH4UAj", "LandscapeSettingMenuController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.LandscapeSettingMenuController = undefined;
        var v = z("SettingMenuController");
        var G = z("CanvasResizeBroadcaster");
        var q = z("UIAppearanceHelper");
        var f = cc._decorator;
        var g = f.ccclass;
        var Z = f.property;
        var b = function (H) {
          function I() {
            var K = null !== H && H.apply(this, arguments) || this;
            K.landscapeSoundButtonHolder = undefined;
            K.moreMenuLayoutNode = undefined;
            K.moreMenuBGNode = undefined;
            K.Ec = undefined;
            return K;
          }
          __extends(I, H);
          I.prototype.onLoad = function () {
            this.kc();
            this.moreMenuLayoutNode.on("size-changed", this.kc.bind(this));
            this.Ec = this.moreMenuLayerNode.position;
            this.settingTurboSprite.node.color = q.uiAppearanceHelper.v("setting.theme_color");
            this.defaultMenuLayerNode.y = 0x0;
            this.settingToast.opacity = 0x0;
            this.moreMenuLayerNode.y = -(this.moreMenuLayerNode.height + this.Uc());
            this.reminderBoard.active = false;
            this.reminderBoard.opacity = 0x1;
            this.settingMenuUIBlock.active = false;
            this.subControllerHolder.height = this.jc = cc.view.getVisibleSize().height;
            this.Dc = G["default"].subscribe(this.ui.bind(this));
          };
          I.prototype.showMoreMenuLayer = function () {
            var K = this;
            if (!this.Wc) {
              this.Wc = true;
              this.xc = true;
              this.Fc();
              this.moreMenuLayerNode.active = true;
              this.moreMenuLayerNode.stopAllActions();
              this.moreMenuLayerNode.runAction(cc.sequence(cc.spawn(cc.moveTo(0.2, this.Ec.x, this.Ec.y).easing(cc.easeQuadraticActionOut()), cc.fadeIn(0.2).easing(cc.easeQuadraticActionOut())), cc.callFunc(function () {
                K.Wc = false;
                if (K.onMenuEndChanged) {
                  K.onMenuEndChanged();
                }
              })));
              var E = this.onMenuStartChanged;
              if (E) {
                E(true, true);
              }
            }
          };
          I.prototype.hideMoreMenuLayer = function () {
            var K = this;
            if (!this.Wc) {
              this.Wc = true;
              this.xc = true;
              this.Fc();
              this.moreMenuLayerNode.stopAllActions();
              this.moreMenuLayerNode.runAction(cc.sequence(cc.spawn(cc.moveTo(0.2, this.Ec.x, -this.moreMenuLayerNode.height).easing(cc.easeQuadraticActionOut()), cc.fadeOut(0.2).easing(cc.easeQuadraticActionOut())), cc.callFunc(function () {
                K.Wc = false;
                K.moreMenuLayerNode.active = false;
                if (K.onMenuEndChanged) {
                  K.onMenuEndChanged();
                }
              })));
              if (false === this.moreMenuLayerNode.active) {
                this.Wc = false;
              }
              var E = this.onMenuStartChanged;
              if (E) {
                E(false, true);
              }
            }
          };
          I.prototype.kc = function () {
            this.moreMenuBGNode.width = this.moreMenuLayoutNode.width;
            this.moreMenuBGNode.height = this.moreMenuLayoutNode.height;
          };
          __decorate([Z(cc.Node)], I.prototype, "landscapeSoundButtonHolder", undefined);
          __decorate([Z(cc.Node)], I.prototype, "moreMenuLayoutNode", undefined);
          __decorate([Z(cc.Node)], I.prototype, "moreMenuBGNode", undefined);
          return __decorate([g], I);
        }(v.SettingMenuController);
        Y.LandscapeSettingMenuController = b;
        cc._RF.pop();
      }
    }, Tt],
    'LandscapeSoundButton': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "948ffXQc5hNbqpouW3VdkkX", "LandscapeSoundButton")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("SoundButton");
        var G = z("UIAppearanceHelper");
        var q = z("Utils");
        var f = cc._decorator;
        var g = f.ccclass;
        var Z = f.property;
        var b = function (H) {
          function I() {
            var K = null !== H && H.apply(this, arguments) || this;
            K.largeSprite = undefined;
            K.largeSoundOnIcon = undefined;
            K.largeSoundOffIcon = undefined;
            return K;
          }
          __extends(I, H);
          I.prototype.onLoad = function () {
            this.enableTouchInteraction();
            if (this.buttonTheme) {
              var K = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              q.setNodeColorWithOpacity(this.largeSprite.node, K);
            }
          };
          I.prototype.changeButtonPressedColor = function (K) {
            if (this.buttonTheme) {
              var E = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var Q = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".pressed");
              q.setNodeColorWithOpacity(this.largeSprite.node, K ? Q : E);
            }
          };
          I.prototype.interactableButtonColor = function (K) {
            if (this.buttonTheme) {
              var E = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var Q = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              q.setNodeColorWithOpacity(this.largeSprite.node, K ? E : Q);
            }
          };
          __decorate([Z(cc.Sprite)], I.prototype, "largeSprite", undefined);
          __decorate([Z(cc.SpriteFrame)], I.prototype, "largeSoundOnIcon", undefined);
          __decorate([Z(cc.SpriteFrame)], I.prototype, "largeSoundOffIcon", undefined);
          return __decorate([g], I);
        }(v["default"]);
        Y["default"] = b;
        cc._RF.pop();
      }
    }, Tv],
    'LaunchConfig': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "9687e72GwxLXpeDvVqr6s0O", "LaunchConfig")) {
        var L = System.get("bvframework").LaunchConfig;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'LineController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "15878i9jmRPk6rKeeTw6Ok4", "LineController")) {
        Y.__esModule = true;
        Y["default"] = undefined;
        var l = {
          HEAD: 0x0,
          BODY: 0x1,
          TAIL: 0x2
        };
        var r = cc.Enum(l);
        var v = cc.Class({
          'extends': cc.Component,
          'properties': {
            'headerLineMargin': 0xa,
            'lineMargin': 0xa,
            'tailLineMargin': 0xa,
            'headerLinePrefab': cc.Prefab,
            'linePrefab': cc.Prefab,
            'tailLinePrefab': cc.Prefab,
            'animtionHeaderLineName': "header_line",
            'animtionReverseHeaderLineName': "reverse_header_line",
            'animtionLineName': "line",
            'animtionReverseLineName': "reverse_line",
            'animtionTailLineName': "tail_line",
            'animtionReverseTailLineName': "reverse_tail_line",
            'animtionLoop': false,
            'animationInverted': false
          },
          'onLoad': function () {
            this.Vc = {};
            this.zc = 0x0;
            this.Jc = false;
            this.qc = false;
            this.Kc = new cc.NodePool("LinePrefabController");
            this.Qc = new cc.NodePool("LinePrefabController");
            this.Yc = new cc.NodePool("LinePrefabController");
            this.Xc = 0x7;
            this.Zc = [];
            for (var G = 0x0; G < this.Xc - 0x1; G++) {
              this.Zc.push(false);
            }
          },
          'destroy': function () {
            this.$c = null;
            this.Kc.clear();
            this.Qc.clear();
            this.Yc.clear();
            this.node.destroy();
            this._super();
          },
          'setCallbackForAnimationFinish': function (G) {
            this.$c = G;
          },
          'addLine': function (G, q) {
            var c = this;
            if (!this.Vc[q]) {
              var f = [];
              G.forEach(function (Z, H, I) {
                if (0x0 != H) {
                  var K;
                  var E;
                  var Q = I[H - 0x1];
                  var X = I[H];
                  if (0x1 == H) {
                    if (!(K = c.Qc.get())) {
                      K = cc.instantiate(c.headerLinePrefab);
                    }
                    E = c.headerLineMargin;
                    K.typeIdentifier = r.HEAD;
                  } else if (H == I.length - 0x1) {
                    if (!(K = c.Yc.get())) {
                      K = cc.instantiate(c.tailLinePrefab);
                    }
                    E = c.tailLineMargin;
                    K.typeIdentifier = r.TAIL;
                  } else {
                    if (!(K = c.Kc.get())) {
                      K = cc.instantiate(c.linePrefab);
                    }
                    E = c.lineMargin;
                    K.typeIdentifier = r.BODY;
                  }
                  var A = Q.x;
                  var V = Q.y;
                  var W = X.x;
                  var J = X.y;
                  var w = (A + W) / 0x2;
                  var O = (V + J) / 0x2;
                  var F = 0xb4 * Math.atan2(J - V, W - A) / Math.PI;
                  var D = c.th(F);
                  var U = Math.sqrt(Math.pow(W + -A, 0x2) + Math.pow(J - V, 0x2));
                  K.x = w;
                  K.y = O;
                  K.width = U + E;
                  K.angle = -D;
                  if (0x0 == c.Jc) {
                    c.ih(K, "line").getComponent("LinePrefabController").setAnimTimeFrameCallback(c.sh.bind(c));
                  }
                  c.node.addChild(K);
                  f.push(K);
                }
              });
              this.Jc = true;
              if (0x1 == this.animationInverted) {
                f.reverse();
              }
              var g = this.eh(f);
              this.Vc[q] = g;
            }
          },
          'removeAllLines': function () {
            var G = this;
            this.stopAnimation();
            Object.keys(this.Vc).map(function (q) {
              var c = G.Vc[q];
              G.nh(c, q);
            });
            this.Jc = false;
            cc.sys.garbageCollect();
          },
          'removeLine': function (G) {
            var q = this.Vc[G];
            this.nh(q, G);
            this.oh();
            if (Object.keys(this.Vc).length < 0x1) {
              this.qc = false;
            }
          },
          'startAnimation': function () {
            if (0x0 == this.qc && Object.keys(this.Vc).length > 0x0) {
              this.qc = true;
              this.zc = 0x0;
              this.hh();
              this.Zc[0x0] = true;
              this.rh();
            }
          },
          'stopAnimation': function () {
            this.zc = 0x0;
            this.qc = false;
          },
          'oh': function () {
            var G = this;
            var q = Object.keys(this.Vc);
            if (q.length > 0x0) {
              q.forEach(function (f) {
                if (G.Vc[f][0x0].LinePrefabController.getAnimTimeFrameCallback()) {
                  G.Jc = true;
                }
              });
              var c = Math.floor(Math.random() * Math.floor(q.length));
              this.Vc[q[c]].forEach(function (f) {
                f.LinePrefabController.setAnimTimeFrameCallback(G.sh.bind(G));
              });
              this.Jc = true;
            }
          },
          'rh': function () {
            if (0x1 == this.qc) {
              var G = this.Zc.indexOf(true);
              this.zc = G;
              if (-0x1 == G) {
                return;
              }
              var q = this.ah();
              if (q.length > 0x0) {
                q.forEach(function (c) {
                  var f = c.LineAnimation;
                  var g = this.uh(c.Line.typeIdentifier);
                  f.play(g);
                }, this);
                this.Zc[G] = false;
                if (++G < this.Zc.length) {
                  this.Zc[G] = true;
                } else {
                  this.zc = G;
                }
              }
            }
          },
          'sh': function () {
            if (this.ah().length < 0x1) {
              this.lh();
            } else if (0x1 == this.qc) {
              this.rh();
            }
          },
          'uh': function (G) {
            var q;
            switch (G) {
              case r.HEAD:
                q = 0x1 == this.animationInverted ? this.animtionReverseHeaderLineName : this.animtionHeaderLineName;
                break;
              case r.TAIL:
                q = 0x1 == this.animationInverted ? this.animtionReverseTailLineName : this.animtionTailLineName;
                break;
              default:
                q = 0x1 == this.animationInverted ? this.animtionReverseLineName : this.animtionLineName;
            }
            return q;
          },
          'ah': function () {
            var G = this;
            var q = [];
            Object.keys(this.Vc).map(function (c) {
              var f = G.Vc[c];
              if (f.length >= G.zc + 0x1) {
                var g = f[G.zc];
                q.push(g);
              }
            });
            return q;
          },
          'lh': function () {
            var G = this;
            if (0x1 == this.animtionLoop) {
              Object.keys(this.Vc).map(function (c) {
                G.Vc[c].forEach(function (f) {
                  var g = f.LineAnimation;
                  g.setCurrentTime(0x0);
                  g.stop();
                });
              });
              this.hh();
              this.Zc[0x0] = true;
              this.scheduleOnce(this.rh);
            } else {
              this.qc = false;
            }
            var q = this.$c;
            if (q) {
              q();
            }
          },
          'nh': function (G, q) {
            if (G && G.length > 0x0) {
              G.forEach(function (c) {
                c.LinePrefabController.setAnimTimeFrameCallback(null);
                var f = c.LineAnimation;
                f.setCurrentTime(0x0);
                f.stop();
                c.parent = null;
                if (c.Line.typeIdentifier == r.HEAD) {
                  this.Qc.put(c.Line);
                } else if (c.Line.typeIdentifier == r.TAIL) {
                  this.Yc.put(c.Line);
                } else {
                  this.Kc.put(c.Line);
                }
              }, this);
              delete this.Vc[q];
            }
          },
          'hh': function () {
            for (var G = 0x0; G < this.Zc.length; G++) {
              this.Zc[G] = false;
            }
          },
          'th': function (G) {
            return 0x0 == G ? 0x0 : G > 0x0 ? -0x1 * G : Math.abs(G);
          },
          'fh': function (G) {
            var q = this.angleMarginRatio;
            return Math.abs(G) / 0xb4 * q;
          },
          'eh': function (G) {
            var q = this;
            if (!Array.isArray(G)) {
              throw Error("Line Node is not an array");
            }
            var c = [];
            G.forEach(function (f) {
              var g = Object.create(null);
              var Z = q.ih(f, "line");
              g.Line = f;
              g.LinePrefabController = Z.getComponent("LinePrefabController");
              g.LineAnimation = Z.getComponent(cc.Animation);
              c.push(g);
            });
            return c;
          },
          'ih': function (G, q) {
            var c = G.getChildByName(q);
            return null !== c ? c : G;
          }
        });
        Y["default"] = v;
        L.exports = Y["default"];
        cc._RF.pop();
      }
    }, {}],
    'LinePrefabController': [function (N, z, L) {
      'use strict';

      if (!cc._RF.push(z, "275baJMs+tIcoOItOeSbgwO", "LinePrefabController")) {
        L.__esModule = true;
        L["default"] = undefined;
        var Y = cc.Class({
          'extends': cc.Component,
          'properties': {},
          'onLoad': function () {},
          'unuse': function () {
            var l = this.node.getComponent(cc.Animation);
            if (l && l.setCurrentTime(0x0)) {
              l.stop();
            }
            this.$c = null;
          },
          'setAnimTimeFrameCallback': function (l) {
            this.$c = l;
          },
          'getAnimTimeFrameCallback': function () {
            return this.$c;
          },
          'onAnimTimeFrameCallback': function () {
            var l = this.$c;
            if (l) {
              l();
            }
          },
          'destroy': function () {
            this.$c = null;
            var l = this.node.getComponent(cc.Animation);
            if (l) {
              l.stop();
            }
            this.node.destroy();
            this._super();
          }
        });
        L["default"] = Y;
        z.exports = L["default"];
        cc._RF.pop();
      }
    }, {}],
    'Line': [function (N, z, L) {
      'use strict';

      if (!cc._RF.push(z, "fbd9fUvpvVLs5ubCe3O9Csy", "Line")) {
        L.__esModule = true;
        L.Line = undefined;
        var Y;
        var l = (Y = N("LineController")) && Y.__esModule ? Y : {
          'default': Y
        };
        var r = {
          'init': function (v, G, q, f, g) {
            if (null == v) {
              throw Error("WinningLine :: init : lineHolder is required!");
            }
            this.dh = [];
            var Z = new cc.Node();
            Z.anchorX = 0x0;
            Z.anchorY = 0x0;
            Z.x = G / 0x2 * -0x1;
            v.addChild(Z);
            var b = this.vh = Z.addComponent(l["default"]);
            b.headerLinePrefab = q;
            b.linePrefab = f;
            b.tailLinePrefab = g;
          },
          'updateLineMargin': function (v, G, q) {
            if (undefined === v) {
              v = 0xa;
            }
            if (undefined === G) {
              G = 0xa;
            }
            if (undefined === q) {
              q = 0xa;
            }
            var c = this.vh;
            c.headerLineMargin = v;
            c.lineMargin = G;
            c.tailLineMargin = q;
          },
          'updateLineAnimName': function (v, G, q) {
            if (undefined === v) {
              v = "header_line";
            }
            if (undefined === G) {
              G = "line";
            }
            if (undefined === q) {
              q = "tail_line";
            }
            var c = this.vh;
            c.animtionHeaderLineName = v;
            c.animtionLineName = G;
            c.animtionTailLineName = q;
          },
          'updateLineReverseAnimName': function (v, G, q) {
            if (undefined === v) {
              v = "header_line";
            }
            if (undefined === G) {
              G = "line";
            }
            if (undefined === q) {
              q = "tail_line";
            }
            var c = this.vh;
            c.animtionReverseHeaderLineName = v;
            c.animtionReverseLineName = G;
            c.animtionReverseTailLineName = q;
          },
          'setLineMap': function (v) {
            if (undefined === v) {
              v = [];
            }
            this.dh = v;
          },
          'showLines': function (v) {
            if (undefined === v) {
              v = [];
            }
            v.forEach(function (G) {
              this.vh.addLine(this.dh[G - 0x1], G);
            }, this);
          },
          'hideLine': function (v) {
            this.vh.removeLine(v);
          },
          'hideAllLines': function () {
            this.vh.removeAllLines();
          },
          'stopLineAnimation': function () {
            this.vh.stopAnimation();
          },
          'startLineAnimation': function (v, G, q) {
            if (undefined === v) {
              v = true;
            }
            if (undefined === G) {
              G = false;
            }
            var c = this.vh;
            c.animtionLoop = v;
            c.animationInverted = G;
            c.setCallbackForAnimationFinish(q);
            c.startAnimation();
          }
        };
        L.Line = r;
        cc._RF.pop();
      }
    }, TG],
    'ListViewCellUpdateAnim': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "5502dsWooBCr7Ubvh4+KVSO", "ListViewCellUpdateAnim")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator.ccclass;
        var v = function () {
          function G() {}
          G.prototype.layoutDuration = function () {
            return 0.5;
          };
          G.prototype.layoutDelay = function () {
            return 0.5;
          };
          G.prototype.updateCellAmimation = function () {};
          G.prototype.animationEnd = function () {};
          return __decorate([r], G);
        }();
        Y["default"] = v;
        cc._RF.pop();
      }
    }, {}],
    'ListViewEnum': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "1db1bgDOdFP2LjHMP1kDfIt", "ListViewEnum")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.cellUpdateAction = Y.scrollPosition = undefined;
        (function (r) {
          r[r.scrollPositionTop = 0x0] = "scrollPositionTop";
          r[r.scrollPositionMiddle = 0x1] = "scrollPositionMiddle";
          r[r.scrollPositionBottom = 0x2] = "scrollPositionBottom";
        })(Y.scrollPosition || (Y.scrollPosition = {}));
        (function (r) {
          r[r.cellUpdateActionInsert = 0x0] = "cellUpdateActionInsert";
          r[r.cellUpdateActionRemove = 0x1] = "cellUpdateActionRemove";
          r[r.cellUpdateActionUpdate = 0x2] = "cellUpdateActionUpdate";
        })(Y.cellUpdateAction || (Y.cellUpdateAction = {}));
        cc._RF.pop();
      }
    }, {}],
    'ListView': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "3d710qNmRNP1LLRNNBcLNnF", "ListView")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("ListViewEnum");
        var G = cc._decorator;
        var q = G.ccclass;
        var f = G.property;
        var g = function (H) {
          function I() {
            var X = null !== H && H.apply(this, arguments) || this;
            X.view = undefined;
            X.contentWidget = undefined;
            X.ni = {};
            X.oi = {};
            X._h = [];
            X.mh = 0x0;
            X.ph = 0x0;
            X.bh = 0x0;
            X.Sh = 0x0;
            X.gh = false;
            X.Ch = false;
            X.yh = false;
            X.ci = undefined;
            return X;
          }
          var K = {
            get: function () {
              return this.ni;
            },
            enumerable: false,
            configurable: true
          };
          var E = {
            get: function () {
              return this.oi;
            },
            enumerable: false,
            configurable: true
          };
          var Q = {
            get: function () {
              return this._h;
            },
            enumerable: false,
            configurable: true
          };
          __extends(I, H);
          Object.defineProperty(I.prototype, "nodePools", K);
          Object.defineProperty(I.prototype, "templates", E);
          Object.defineProperty(I.prototype, "visibleCells", Q);
          I.prototype.onLoad = function () {
            this.content.originY = this.content.y;
          };
          I.prototype.start = function () {
            H.prototype.start.call(this);
            cc.director.once(cc.Director.EVENT_AFTER_DRAW, this.Mh, this);
          };
          I.prototype.onDisable = function () {
            H.prototype.onDisable.call(this);
            this.content.off("position-changed", this.Ah, this);
            this.node.off("scroll-to-top", this.Ih, this);
            this.node.off("scroll-to-bottom", this.wh, this);
            this.node.off("scroll-ended", this.Oh, this);
            this.node.off("scrolling", this.Hh, this);
            this.node.off("size-changed", this.ui, this);
          };
          I.prototype.onEnable = function () {
            H.prototype.onEnable.call(this);
            this.content.on("position-changed", this.Ah, this);
            this.node.on("scroll-to-top", this.Ih, this);
            this.node.on("scroll-to-bottom", this.wh, this);
            this.node.on("scroll-ended", this.Oh, this);
            this.node.on("scrolling", this.Hh, this);
            this.node.on("size-changed", this.ui, this);
            if (this.Ch) {
              this.reloadData();
              this.Ch = false;
            }
          };
          I.prototype.viewWillLayoutSubviews = function () {};
          I.prototype.viewDidLayoutSubviews = function () {
            var X = this.node.width;
            var A = this.node.height;
            this.view.setContentSize(X, A);
            for (this.content.width = X; this.Bh();) {
              this.Gh();
            }
            for (; this.Nh();) {
              this.Th();
            }
            for (; this.Ph();) {
              this.Lh();
            }
            for (; this.Rh();) {
              this.Eh();
            }
          };
          I.prototype.setDataSource = function (X) {
            this.ci = X;
          };
          I.prototype.register = function (X, A, V) {
            if (this.nodePools[X]) {
              ;
            } else if (A) {
              var W;
              W = V ? new cc.NodePool(V) : new cc.NodePool();
              this.templates[X] = A;
              this.nodePools[X] = W;
            }
          };
          I.prototype.dequeueReusableItem = function (X) {
            var A;
            var V = this.nodePools[X];
            if (V) {
              if (!(A = V.get())) {
                var W = this.templates[X];
                A = cc.instantiate(W);
              }
              A.lv_type = X;
            }
            return A;
          };
          I.prototype.reloadData = function () {
            var X = this;
            if (this.ci) {
              if (this.kh) {
                this.stopAutoScroll();
                var A = this._h;
                var V = this.bh = this.ci.getCount(this);
                var W = 0x0;
                var J = 0x0;
                var w = 0x0;
                if (A && A.length && A.length > 0x0) {
                  W = (k = A[0x0]).listViewIndex;
                  J = k.y - k.height * k.anchorY + k.height;
                  w = A[A.length - 0x1].listViewIndex;
                }
                this.gh = true;
                if (A && A.length && (0x0 === V || w >= V)) {
                  for (var O = A.length - 0x1; w >= V && (R = A[O]);) {
                    if (R) {
                      this.vi(R);
                    }
                    w--;
                    O--;
                  }
                }
                var F = this._h = [];
                if (W < V) {
                  var D = 0x0;
                  for (var U = J; O < V && this.Bh();) {
                    var D;
                    var U;
                    var R;
                    if (R = this.Uh(O, A)) {
                      this.vi(R);
                    }
                    if (B = this.ci.getItem(this, O)) {
                      B.lv_type;
                      B.x = 0x0;
                      B.y = U - B.height * B.anchorY;
                      B.listViewIndex = O;
                      D += B.height;
                      this.content.addChild(B);
                      F.push(B);
                      U = B.y - B.height * B.anchorY;
                      O++;
                    }
                  }
                  var x = this.content.originY - U - this.view.height;
                  this.content.height = Math.abs(U);
                  if (D < this.view.height && W > 0x0) {
                    O = W - 0x1;
                    var j = this.view.height - D;
                    var P = 0x0;
                    for (var M = J; O >= 0x0 && P < j;) {
                      if (B = this.ci.getItem(this, O)) {
                        B.lv_type;
                        B.x = 0x0;
                        B.y = M + B.height * (0x1 - B.anchorY);
                        B.listViewIndex = O;
                        P += B.height;
                        this.content.addChild(B);
                        F.unshift(B);
                        M = B.y - B.height * B.anchorY + B.height;
                        O--;
                      }
                    }
                    this.content.runAction(cc.sequence(cc.moveTo(0.2, cc.v2(0x0, x)), cc.callFunc(function () {
                      X.content.y = x;
                      X.content.oldY = x;
                      X.gh = false;
                      X.jh();
                    })));
                  } else {
                    this.gh = false;
                    this.jh();
                  }
                } else {
                  D = 0x0;
                  O = V - 0x1;
                  for (M = -V * this.Sh; O >= 0x0 && D < this.view.height;) {
                    var B;
                    if (B = this.ci.getItem(this, O)) {
                      B.lv_type;
                      B.x = 0x0;
                      B.y = M + B.height * (0x1 - B.anchorY);
                      B.listViewIndex = O;
                      D += B.height;
                      this.content.addChild(B);
                      F.unshift(B);
                      M = B.y - B.height * B.anchorY + B.height;
                      O--;
                    }
                  }
                  j = 0x0;
                  if (D > this.view.height) {
                    j = D - this.view.height;
                  } else if (D < this.view.height) {
                    this.Dh(true);
                  }
                  var y = this.content.originY + j;
                  this.content.runAction(cc.sequence(cc.moveTo(0.2, cc.v2(0x0, y)), cc.callFunc(function () {
                    X.content.y = y;
                    X.content.oldY = y;
                    X.gh = false;
                    X.jh();
                  })));
                }
                if (F.length && F.length > 0x0) {
                  var k = F[0x0];
                  var N0 = F[F.length - 0x1];
                  this.Sh = (k.y - k.height * k.anchorY + k.height - (N0.y - N0.height * N0.anchorY)) / (N0.listViewIndex - k.listViewIndex + 0x1);
                  this.content.height = this.Sh * V;
                }
              } else {
                this.Ch = true;
              }
            }
          };
          I.prototype.scrollToRow = function (X, A, V) {
            var W = this;
            if (undefined === A) {
              A = v.scrollPosition.scrollPositionTop;
            }
            if (undefined === V) {
              V = true;
            }
            this.stopAutoScroll();
            var J = this.content.y;
            if (!(X < 0x0 || X >= this.bh)) {
              var w = this._h;
              if (w && w.length && !(w.length <= 0x0)) {
                this.content.off("position-changed", this.Ah, this);
                var O = this.ph = X;
                w = this.Wh(O, w);
                this._h = w;
                if (0x0 === w[0x0].listViewIndex) {
                  this.Dh(true);
                }
                var F;
                var D;
                var U = this.itemAtIndex(X);
                var S = w.indexOf(U);
                var R = 0x0;
                D = A === v.scrollPosition.scrollPositionTop ? 0x0 : A === v.scrollPosition.scrollPositionMiddle ? this.view.height / 0x2 - U.height * U.anchorY : this.view.height;
                if (A === v.scrollPosition.scrollPositionBottom) {
                  R = (R = D - (x = this.xh(S, w, D, false))) >= 0x0 ? R : 0x0;
                  F = this.content.originY + Math.abs(U.y) + U.height * U.anchorY - D + R;
                } else if (A === v.scrollPosition.scrollPositionTop) {
                  var x = this.xh(S, w, this.view.height - D, true);
                  R = (R = this.view.height - D - x) >= 0x0 ? R : 0x0;
                  F = this.content.originY + Math.abs(U.y) - U.height * U.anchorY - D - R;
                } else {
                  x = this.xh(S, w, this.view.height - D, true);
                  if ((R = this.view.height - D - x) <= 0x0) {
                    R = D - (x = this.xh(S - 0x1, w, D, false));
                  }
                  R = R >= 0x0 ? R : 0x0;
                  F = this.content.originY + Math.abs(U.y) - U.height * U.anchorY - D - R;
                }
                if (J === (F = F >= this.content.originY ? F : this.content.originY)) {
                  this.content.y = F;
                  this.content.oldY = F;
                  this.Fh(O);
                  return void this.content.on("position-changed", this.Ah, this);
                }
                if (V) {
                  this.content.runAction(cc.sequence(cc.moveTo(0.2, cc.v2(this.content.x, F)), cc.callFunc(function () {
                    W.content.y = F;
                    W.content.oldY = F;
                    W.Fh(O);
                    W.content.on("position-changed", W.Ah, W);
                  })));
                } else {
                  this.content.y = F;
                  this.content.oldY = F;
                  this.Fh(O);
                  this.content.on("position-changed", this.Ah, this);
                }
              }
            }
          };
          I.prototype.visibleItems = function () {
            return this._h;
          };
          I.prototype.itemAtIndex = function (X) {
            return this.Uh(X, this._h);
          };
          I.prototype.insertCellAtIndex = function (X, A) {
            var V = this;
            if (undefined === A) {
              A = true;
            }
            if (!(X > this.bh)) {
              this.stopAutoScroll();
              this.bh += 0x1;
              this.content.height = this.Sh * this.bh;
              var W = this.itemAtIndex(X);
              var J = this._h;
              var w = this.Vh;
              if (!W) {
                var O = J[0x0];
                if (O.listViewIndex > X) {
                  this.zh(0x0, O.listViewIndex + 0x1);
                } else if (this.Bh()) {
                  this.Gh();
                }
                if (w) {
                  w.updateCellAmimation(null, v.cellUpdateAction.cellUpdateActionInsert);
                }
                return void (w && w.animationEnd());
              }
              var F = J.indexOf(W);
              var D = W.y - W.height * W.anchorY + W.height;
              var U = this.ci.getItem(this, X);
              U.x = 0x0;
              U.y = D - U.height * U.anchorY;
              U.listViewIndex = X;
              this.content.addChild(U);
              J.splice(F, 0x0, U);
              D = U.y - U.height * U.anchorY;
              this.zh(F + 0x1, X + 0x1);
              if (w) {
                w.updateCellAmimation(U, v.cellUpdateAction.cellUpdateActionInsert);
              }
              this.Jh(F + 0x1, D, v.cellUpdateAction.cellUpdateActionInsert, A, function () {
                for (; V.Rh();) {
                  V.Eh();
                }
                V.qh();
                V.Kh = false;
              });
            }
          };
          I.prototype.removeCellAtIndex = function (X, A) {
            var V = this;
            if (undefined === A) {
              A = true;
            }
            if (!(X >= this.bh)) {
              var W = this._h;
              this.bh -= 0x1;
              var J = this.itemAtIndex(X);
              var w = this.Vh;
              if (!J) {
                var O = W[0x0];
                if (O.listViewIndex > X) {
                  this.zh(0x0, O.listViewIndex - 0x1);
                }
                if (w) {
                  w.updateCellAmimation(null, v.cellUpdateAction.cellUpdateActionRemove);
                }
                return void (w && w.animationEnd());
              }
              this.stopAutoScroll();
              var F = W.indexOf(J);
              var D = J.y - J.height * J.anchorY + J.height;
              W.splice(F, 0x1);
              this.zh(F, X);
              if (this.Vh) {
                w.updateCellAmimation(J, v.cellUpdateAction.cellUpdateActionRemove, function () {
                  V.vi(J);
                  J.removeFromParent();
                });
              } else {
                this.vi(J);
                J.removeFromParent();
              }
              this.Jh(F, D, v.cellUpdateAction.cellUpdateActionRemove, A, function () {
                for (; V.Ph();) {
                  V.Lh();
                }
                for (; V.Bh();) {
                  V.Gh();
                }
                V.qh();
                V.Kh = false;
              });
            }
          };
          I.prototype.updateCellAtIndex = function (X, A) {
            var V = this;
            if (undefined === A) {
              A = true;
            }
            var W = this.itemAtIndex(X);
            if (W) {
              var J = this._h;
              var w = J.indexOf(W);
              var O = W.y - W.height * W.anchorY + W.height;
              var F = W.height;
              var D = this.ci.getItem(this, X);
              if (D && (this.vi(W), D.x = 0x0, D.y = O - D.height * D.anchorY, D.listViewIndex = X, this.content.addChild(D), J[w] = D, F !== D.height)) {
                O = D.y - D.height * D.anchorY;
                this.Jh(w + 0x1, O, v.cellUpdateAction.cellUpdateActionUpdate, A, function () {
                  if (F < D.height) {
                    for (; V.Rh();) {
                      V.Eh();
                    }
                  } else {
                    for (; V.Bh();) {
                      V.Gh();
                    }
                  }
                  V.qh();
                  V.Kh = false;
                });
              }
            }
          };
          I.prototype.setScrollToTopCallback = function (X) {
            this.Qh = X;
          };
          I.prototype.setScrollToBottomCallback = function (X) {
            this.Yh = X;
          };
          I.prototype.setScrollEndedCallback = function (X) {
            this.Xh = X;
          };
          I.prototype.setScrollingCallback = function (X) {
            this.Zh = X;
          };
          I.prototype.setCellUpdateAnimCallback = function (X) {
            this.Vh = X;
          };
          I.prototype.Mh = function () {
            if (this.contentWidget) {
              this.contentWidget.isAlignTop = false;
            }
          };
          I.prototype.vi = function (X) {
            var A;
            var V = X.lv_type;
            if (V) {
              A = this.nodePools[V];
            }
            if (A) {
              A.put(X);
            }
          };
          I.prototype.qh = function () {
            var X = this._h;
            if (X.length > 0x0) {
              var A = X[X.length - 0x1];
              var V = X[0x0];
              var W = Math.abs(A.y) + A.height * A.anchorY;
              if (W > this.content.height) {
                this.content.height = W;
              } else if (W < this.view.height && 0x0 === V.listViewIndex) {
                this.content.y = this.content.originY;
                this.content.oldY = this.content.originY;
                this.content.height = W;
              } else if (A.listViewIndex === this.bh - 0x1) {
                this.content.height = W;
              }
            } else {
              this.content.height = 0x0;
            }
          };
          I.prototype.$h = function () {
            var X = this._h;
            if (X && X.length && !(X.length <= 0x0)) {
              var A = X[0x0];
              var V = A.y - A.height * A.anchorY + A.height;
              var W = X[X.length - 0x1];
              if (0x0 !== A.listViewIndex || 0x0 === V) {
                if (V > -this.Sh && A.listViewIndex > 0x1) {
                  this.tr(true);
                } else if (W.listViewIndex === this.bh - 0x1 && Math.abs(W.y) + W.height * W.anchorY < this.content.height) {
                  this.tr(true);
                } else if (Math.abs(W.y) + W.height * W.anchorY > this.content.height) {
                  this.tr(false);
                }
              } else {
                this.tr(true);
              }
            }
          };
          I.prototype.tr = function (X, A) {
            if (undefined === A) {
              A = true;
            }
            this.gh = true;
            this.Dh(X);
            this.gh = false;
            this.Wn.y = this.content.y;
            if (A) {
              this.ir();
            }
          };
          I.prototype.Dh = function (X) {
            var A = this._h;
            if (A && A.length && !(A.length <= 0x0)) {
              this.stopAutoScroll();
              if (X) {
                var V = -A[0x0].listViewIndex * this.Sh;
                for (var W = 0x0; W < A.length;) {
                  (w = A[W]).x = 0x0;
                  w.y = V - w.height * w.anchorY;
                  V = w.y - w.height * w.anchorY;
                  W++;
                }
              } else {
                var J = -A[A.length - 0x1].listViewIndex * this.Sh;
                for (W = A.length - 0x1; W >= 0x0;) {
                  var w;
                  (w = A[W]).x = 0x0;
                  w.y = J - w.height * w.anchorY + w.height;
                  J = w.y - w.height * w.anchorY + w.height;
                  W--;
                }
              }
              var O = A[0x0];
              var F = this.content.originY - (O.y - O.height * O.anchorY);
              this.content.y = F;
              this.content.oldY = F;
              this.qh();
            }
          };
          I.prototype.ir = function () {
            this.jn = true;
            this.Fn = this.sr;
            this.Vn = 0x0;
            this.xn = this.er;
          };
          I.prototype.Bh = function () {
            var X = false;
            var A = this._h;
            if (A.length > 0x0) {
              var V = A[A.length - 0x1];
              if (V.listViewIndex === this.bh - 0x1) {
                return false;
              }
              var W = V.y - V.height * V.anchorY;
              var J = this.content.convertToWorldSpaceAR(cc.v2(0x0, W));
              var w = this.view.y - this.view.height * this.view.anchorY;
              var O = this.view.parent.convertToWorldSpaceAR(cc.v2(0x0, w));
              if (J.y >= O.y) {
                X = true;
              }
            } else if (0x0 === A.length && this.bh > 0x0) {
              X = true;
            }
            return X;
          };
          I.prototype.Ph = function () {
            var X = false;
            var A = this._h;
            if (A.length > 0x0) {
              var V = A[0x0];
              if (0x0 === V.listViewIndex) {
                return false;
              }
              var W = V.y - V.height * V.anchorY + V.height;
              var J = this.content.convertToWorldSpaceAR(cc.v2(0x0, W));
              var w = this.view.y - this.view.height * this.view.anchorY + this.view.height;
              var O = this.view.parent.convertToWorldSpaceAR(cc.v2(0x0, w));
              if (J.y <= O.y) {
                X = true;
              }
            }
            return X;
          };
          I.prototype.Rh = function () {
            var X = false;
            var A = this._h;
            if (A.length > 0x1) {
              var V = A[A.length - 0x1].y - A[A.length - 0x1].height * A[A.length - 0x1].anchorY + A[A.length - 0x1].height;
              var W = this.content.convertToWorldSpaceAR(cc.v2(0x0, V));
              var J = this.view.y - this.view.height * this.view.anchorY;
              var w = this.view.parent.convertToWorldSpaceAR(cc.v2(0x0, J));
              if (W.y < w.y) {
                X = true;
              }
            }
            return X;
          };
          I.prototype.Nh = function () {
            var X = false;
            var A = this._h;
            if (A.length > 0x1) {
              var V = A[0x0].y - A[0x0].height * A[0x0].anchorY;
              var W = this.content.convertToWorldSpaceAR(cc.v2(0x0, V));
              var J = this.view.y - this.view.height * this.view.anchorY + this.view.height;
              var w = this.view.parent.convertToWorldSpaceAR(cc.v2(0x0, J));
              if (W.y > w.y) {
                X = true;
              }
            }
            return X;
          };
          I.prototype.Gh = function () {
            var X = this._h;
            if (X.length > 0x0) {
              var A = this.bh;
              var V = X[X.length - 0x1];
              var W = V.listViewIndex + 0x1;
              if (W < A) {
                var J = this.ci.getItem(this, W);
                J.lv_type;
                var w = V.y - V.height * V.anchorY;
                J.x = 0x0;
                J.y = w - J.height * J.anchorY;
                J.listViewIndex = W;
                this.content.addChild(J);
                X.push(J);
              }
            }
          };
          I.prototype.Lh = function () {
            var X = this._h;
            if (X.length > 0x0) {
              var A = X[0x0];
              var V = A.listViewIndex - 0x1;
              if (V >= 0x0) {
                var W = this.ci.getItem(this, V);
                W.lv_type;
                var J = A.y - A.height * A.anchorY + A.height;
                W.x = 0x0;
                W.y = J - W.height * W.anchorY + W.height;
                W.listViewIndex = V;
                this.content.addChild(W);
                X.unshift(W);
              }
            }
          };
          I.prototype.Th = function () {
            var X = this._h;
            if (X.length > 0x0) {
              var A = X[0x0];
              this.vi(A);
              X.shift();
            }
          };
          I.prototype.Eh = function () {
            var X = this._h;
            if (X.length > 0x0) {
              var A = X[X.length - 0x1];
              this.vi(A);
              X.pop();
            }
          };
          I.prototype.nr = function () {
            var X = this._h;
            if (X.length > 0x0) {
              for (var A = 0x0; A < X.length && this.Nh();) {
                this.Th();
                A++;
              }
            }
          };
          I.prototype.or = function () {
            var X = this._h;
            if (X.length > 0x0) {
              for (var A = X[X.length - 0x1]; A >= 0x0 && this.Rh();) {
                this.Eh();
                A--;
              }
            }
          };
          I.prototype.Fh = function (X) {
            this.nr();
            this.or();
            var A = this._h;
            var V = this.itemAtIndex(X);
            var W = A.indexOf(V);
            if (-0x1 !== W) {
              var J = W;
              var w = [];
              var O = -0x1;
              var F = -0x1;
              if (A.length > J) {
                var D = A[J];
                var U = D.listViewIndex;
                J++;
                for (w.push(D); J < A.length;) {
                  if ((S = (j = A[J]).listViewIndex) - U != 0x1) {
                    O = S;
                    break;
                  }
                  w.push(j);
                  J++;
                  U = S;
                }
                J = W - 0x1;
                for (U = D.listViewIndex; J >= 0x0;) {
                  var S;
                  if (U - (S = (j = A[J]).listViewIndex) != 0x1) {
                    F = S;
                    break;
                  }
                  w.unshift(j);
                  J--;
                  U = S;
                }
              }
              if (O >= 0x0) {
                var R = this.itemAtIndex(O);
                for (var x = A.indexOf(R); A.length > x;) {
                  var j = A[x];
                  this.vi(j);
                  x++;
                }
              }
              if (F >= 0x0) {
                var P = this.itemAtIndex(F);
                for (var m = A.indexOf(P); m >= 0x0;) {
                  j = A[m];
                  this.vi(j);
                  m--;
                }
              }
              this._h = w;
            }
          };
          I.prototype.cr = function (X, A) {
            var V = this._h;
            var W = V[0x0];
            var J = V[V.length - 0x1];
            var w = X;
            var O = 0x0;
            for (var F = []; w < this.bh && O <= A && w !== W.listViewIndex && w !== J.listViewIndex;) {
              var D = this.ci.getItem(this, w);
              D.listViewIndex = w;
              this.content.addChild(D);
              F.push(D);
              O += D.height;
              w++;
            }
            return F;
          };
          I.prototype.hr = function (X, A) {
            var V = this._h;
            var W = V[0x0];
            var J = V[V.length - 0x1];
            var w = X;
            var O = 0x0;
            for (var F = []; w >= 0x0 && O <= A && w !== W.listViewIndex && w !== J.listViewIndex;) {
              var D = this.ci.getItem(this, w);
              D.listViewIndex = w;
              this.content.addChild(D);
              F.unshift(D);
              O += D.height;
              w--;
            }
            return F;
          };
          I.prototype.rr = function (X, A) {
            if (!A || !A.length || A.length <= 0x0) {
              return null;
            }
            for (var V = 0x0; V < A.length; V++) {
              var W = A[V];
              W.x = 0x0;
              W.y = X - W.height * W.anchorY;
              X -= W.height;
            }
            return A;
          };
          I.prototype.ar = function (X, A) {
            if (!A || !A.length || A.length <= 0x0) {
              return null;
            }
            for (var V = A.length - 0x1; V >= 0x0; V--) {
              var W = A[V];
              W.x = 0x0;
              W.y = X + W.height * W.anchorY;
              X += W.height;
            }
            return A;
          };
          I.prototype.xh = function (X, A, V, W) {
            var w = 0x0;
            if (W) {
              for (var O = X; O < A.length && !((w += A[O].height) >= V); O++) {
                ;
              }
            } else {
              for (O = X; O >= 0x0 && !((w += A[O].height) >= V); O--) {
                ;
              }
            }
            return w;
          };
          I.prototype.Wh = function (X, A) {
            var V;
            var W;
            var J = A[0x0];
            var w = A[A.length - 0x1];
            var O = this.view.height;
            if (X >= J.listViewIndex && X <= w.listViewIndex) {
              V = this.cr(w.listViewIndex + 0x1, O);
              W = this.hr(J.listViewIndex - 0x1, O);
              V = this.rr(w.y - w.height * w.anchorY, V);
              if (W = this.ar(J.y - J.height * J.anchorY + J.height, W)) {
                A = W.concat(A);
              }
              if (V) {
                A = A.concat(V);
              }
            } else {
              var F = X;
              V = this.cr(F, O);
              F = X;
              var D = undefined;
              D = (W = this.hr(F - 0x1, O)) && V ? W.concat(V) : W || V;
              if (X > w.listViewIndex) {
                D = this.rr(w.y - w.height * w.anchorY, D);
                A = A.concat(D);
              } else if (D = this.ar(J.y - J.height * J.anchorY + J.height, D)) {
                A = D.concat(A);
              }
            }
            return A;
          };
          I.prototype.ur = function () {
            var X = this._h;
            return !(X.length > 0x0) || X[X.length - 0x1].listViewIndex === this.bh - 0x1;
          };
          I.prototype.Uh = function (X, A) {
            if (!A || !A.length || A.length <= 0x0) {
              return null;
            }
            var V = null;
            for (var W = 0x0; W < A.length;) {
              var J = A[W];
              if (J.listViewIndex === X) {
                V = J;
                break;
              }
              W++;
            }
            return V;
          };
          I.prototype.jh = function () {
            this.qh();
            if (this.ci.didReloadData) {
              this.ci.didReloadData(this);
            }
          };
          I.prototype.Jh = function (X, A, V, W, J) {
            var w = this;
            var O = this.Vh;
            this.Kh = true;
            var F;
            var D = this._h;
            var U = O ? O.layoutDuration() : 0.5;
            var S = O ? O.layoutDelay(V) : 0x0;
            var R = function (P) {
              var m = D[P];
              var p = m.y;
              var M = A - m.height * m.anchorY;
              A = M - m.height * m.anchorY;
              if (P === D.length - 0x1) {
                F = Math.abs(M) + m.height * m.anchorY;
              }
              if (p !== M && W) {
                m.runAction(cc.sequence(cc.delayTime(S), cc.moveTo(U, cc.v2(m.x, M)), cc.callFunc(function () {
                  m.y = M;
                  if (P === D.length - 0x1) {
                    w.lr(F);
                    if (J) {
                      J();
                    }
                    if (O) {
                      O.animationEnd();
                    }
                  }
                })));
              } else {
                m.y = M;
                if (P === D.length - 0x1) {
                  x.lr(F);
                  if (J) {
                    J();
                  }
                  if (O) {
                    O.animationEnd();
                  }
                }
              }
            };
            var x = this;
            for (var j = X; j < D.length; j++) {
              R(j);
            }
            if (X >= D.length) {
              if (J) {
                J();
              }
              if (O) {
                O.animationEnd();
              }
            }
          };
          I.prototype.lr = function (X) {
            var A = X + this.content.originY - this.content.y - this.view.height;
            if (A < 0x0) {
              this.content.oldY += A;
              this.content.y += A;
            }
          };
          I.prototype.zh = function (X, A) {
            var V = this._h;
            for (var W = X; W < V.length; W++) {
              V[W].listViewIndex = A;
              A += 0x1;
            }
          };
          I.prototype.Ah = function () {
            var X = this.content;
            var A = X.y - X.oldY;
            X.oldY = X.y;
            if (!this.gh) {
              if (A > 0x0) {
                for (; this.Bh();) {
                  this.Gh();
                }
                for (; this.Nh();) {
                  this.Th();
                }
              } else if (A < 0x0) {
                for (; this.Ph();) {
                  this.Lh();
                }
                for (; this.Rh();) {
                  this.Eh();
                }
              }
              this.$h();
            }
          };
          I.prototype.Ih = function () {
            this.dr = true;
          };
          I.prototype.wh = function () {
            this.vr = true;
          };
          I.prototype.Oh = function () {
            if (this.Xh) {
              this.Xh();
            }
          };
          I.prototype.Hh = function () {
            var X = this.xi();
            if (this.Zh) {
              this.Zh(X.y);
            }
          };
          I.prototype.ui = function () {
            this.viewDidLayoutSubviews();
          };
          I.prototype.stopAutoScroll = function () {
            if (this.gh) {
              this.sr = this.Fn - this.Vn;
              var X = Math.min(0x1, this.Vn / this.Fn);
              if (this.Dn) {
                V = X;
                X = (V -= 0x1) * V * V * V * V + 0x1;
              }
              A = 0x1 - X;
              this.er = this.xn.mul(A);
            }
            var A;
            var V;
            H.prototype.stopAutoScroll.call(this);
          };
          I.prototype.Fi = function () {
            var X = this;
            if (this.dr && this.Qh) {
              var A = this.xi();
              this.Qh(function () {
                X.dr = false;
                X.lo(cc.v2(0x0, 0x0));
              }, A);
            } else if (this.vr && this.Yh && this.ur()) {
              this.Yh(function (V) {
                X.vr = false;
                var W = X.bh = X.ci.getCount(X);
                X.content.height = X.Sh * W;
                var J = X._h;
                if (J && J.length && J.length > 0x0) {
                  var w = J[J.length - 0x1].listViewIndex;
                  for (X.content.off("position-changed", X.Ah, X); w < W && X.Bh();) {
                    X.Gh();
                    w += 0x1;
                  }
                  X.qh();
                  X.content.on("position-changed", X.Ah, X);
                }
                if (V) {
                  X.Fi();
                }
              });
            } else {
              this.dr = false;
              this.vr = false;
              H.prototype.Fi.call(this);
            }
          };
          I.prototype.Gi = function (X) {
            if (!this.Kh) {
              H.prototype.Gi.call(this, X);
            }
          };
          __decorate([f(cc.Node)], I.prototype, "view", undefined);
          __decorate([f(cc.Widget)], I.prototype, "contentWidget", undefined);
          return __decorate([q], I);
        }(cc.ScrollView);
        Y["default"] = g;
        cc._RF.pop();
      }
    }, Tq],
    'LoadingController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "d3b3aRS5uVIkp5h4hZ4Ux5H", "LoadingController")) {
        var G = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", G);
        var q = z("ResourceLoader");
        var Z = z("NoSoundAdapter");
        var H = z("GameAudioAdapter");
        var I = z("SettingMenuHelper");
        var K = z("AnalyticsHelper");
        var E = z("BVFrameworkEnum");
        var Q = z("ErrorHandler");
        var X = z("QuitGameWithEvent");
        var A = z("LaunchConfig");
        var V = z("GeneralAssetConfig");
        var W = z("AudioAssetConfig");
        var J = z("CustomAssetConfig");
        var w = z("SymbolImageHandler");
        var O = z("SpineConfigHandler");
        var F = z("AudioManager");
        var D = cc._decorator;
        var U = D.ccclass;
        var R = D.property;
        var x = function (j) {
          function P() {
            var M = null !== j && j.apply(this, arguments) || this;
            M.backgroundControllerHolder = undefined;
            M.angpaoControllerHolder = undefined;
            M.behindSlotHolder = undefined;
            M.backgroundController2Holder = undefined;
            M.bigWinControllerHolder = undefined;
            M.clickEffectHolder = undefined;
            M.infoBoardControllerHolder = undefined;
            M.paySelectEffectControllerHolder = undefined;
            M.payOutEffectControllerHolder = undefined;
            M.payLineNumberControllerHolder = undefined;
            M.settingMenuHolder = undefined;
            M.slotControllerHolder = undefined;
            M.spinButtonControllerHolder = undefined;
            M.foregroundControllerHolder = undefined;
            M.symbolPopoutControllerHolder = undefined;
            M.featureWinControllerHolder = undefined;
            M.trailParticleHolder = undefined;
            M.tigerControllerHolder = undefined;
            M.stickyControllerHolder = undefined;
            M.uiShiftNode = undefined;
            M._r = new q["default"]();
            M.ps = undefined;
            M.mr = undefined;
            M.pr = false;
            M.br = "load resource fail";
            return M;
          }
          __extends(P, j);
          P.prototype.setup = function (M) {
            this.ps = M.generalControllers;
            this.Sr = M.bonusControllers;
            this.gr();
            this.Cr();
            this.yr();
            this.spinButtonControllerHolder.zIndex = E.EN_GAME_LAYER_Z_INDEX_HIGH + 0x32;
            this.settingMenuHolder.zIndex = E.EN_GAME_LAYER_Z_INDEX_HIGH + 0x32;
            this.bigWinControllerHolder.zIndex = E.EN_GAME_LAYER_Z_INDEX_HIGH + 0x32;
          };
          P.prototype.loadGeneralBundle = function (M, B) {
            if (undefined === B) {
              B = false;
            }
            var y = [].concat(V.generalAssetConfig, W.audioAssetConfig, J.customAssetConfig);
            this.pr = B;
            this.Mr(y, this.Ar.bind(this), this.Ir.bind(this), M);
          };
          P.prototype.Mr = function (M, B, y, k) {
            shell.setProgressVisible(true);
            this.mr = k;
            var N0 = {
              'bundle': M,
              'progressCallback': B,
              'retryHandling': this.wr.bind(this),
              'retryingCallback': this.Or.bind(this),
              'retryMessage': shell.I18n.t("General.ResourceRetryMessage")
            };
            this._r.loadBundle(N0).then(y);
          };
          P.prototype.gr = function () {
            var M = '1' === A.cs_Launch.noAudio ? Z["default"] : H["default"];
            I.settingMenuHelper.initAudio(M);
          };
          P.prototype.Cr = function () {
            Object.keys(F.GeneralAudioPool).forEach(function (M) {
              W.audioAssetConfig.push({
                'name': M,
                'type': q.LoaderType.CUSTOM,
                'loadFunc': function (B, y) {
                  F.loadAudio(F.GeneralAudioPool[M], function (k) {
                    if (k) {
                      y(k);
                    }
                    B(undefined);
                  });
                }
              });
            });
            W.audioAssetConfig.push({
              'name': "general_audio",
              'type': q.LoaderType.CUSTOM,
              'loadFunc': function (M, B) {
                F.loadAudio(F.generalGameAudio, function (y) {
                  if (y) {
                    B(y);
                  }
                  M(undefined);
                });
              }
            });
          };
          P.prototype.yr = function () {
            var M = {
              setting_menu: I.settingMenuHelper.path + "prefab/setting_menu/setting_menu",
              setting_menu_auto_spin_button: I.settingMenuHelper.path + "prefab/others/spin_options_button",
              setting_menu_more_menu_button: I.settingMenuHelper.path + "prefab/others/more_menu_button",
              setting_menu_setting_button: I.settingMenuHelper.path + "prefab/others/sound_button",
              setting_menu_rules_button: I.settingMenuHelper.path + "prefab/others/rules_button",
              setting_menu_payout_button: I.settingMenuHelper.path + "prefab/others/payout_button",
              setting_menu_history_button: I.settingMenuHelper.path + "prefab/others/history_button",
              setting_menu_hide_more_button: I.settingMenuHelper.path + "prefab/others/hide_more_menu_button",
              setting_menu_minus_bet_button: I.settingMenuHelper.path + "prefab/others/minus_bet_button",
              setting_menu_plus_bet_button: I.settingMenuHelper.path + "prefab/others/plus_bet_button",
              setting_menu_smartbot_button: I.settingMenuHelper.path + "prefab/others/smartbot_button",
              setting_menu_turbo_spin_button: I.settingMenuHelper.path + "prefab/others/turbo_spin_button",
              setting_menu_quit_button: I.settingMenuHelper.path + "prefab/others/quit_button"
            };
            var y = {
              name: "setting_menu_locale",
              url: I.settingMenuHelper.path + "texture/hd/setting_menu_locale",
              type: cc.SpriteAtlas,
              isLocalized: true
            };
            J.customAssetConfig.push(y);
            Object.keys(M).forEach(function (k) {
              var N0 = {
                name: k,
                url: M[k],
                type: cc.Prefab,
                isLocalized: false
              };
              J.customAssetConfig.push(N0);
            });
          };
          P.prototype.wr = function (M, B, y, k) {
            var N0 = this;
            var N1 = shell.Error;
            var N2 = shell.ClientError;
            var N3 = new N1(N2.Domain, N2.GameLoadResourceError);
            var N4 = k > 0x0 ? k : undefined;
            K.sendLoadFailReport(N4);
            var N5 = this.pr ? Q.ErrContext.Launch : Q.ErrContext.Preload;
            Q.showError(N3, N5, function (N6) {
              switch (N6) {
                case Q.ErrAction.Retry:
                  if (M) {
                    M();
                  }
                  break;
                case Q.ErrAction.Quit:
                  X.quitGameWithEvent(N0.br)();
              }
            });
          };
          P.prototype.Or = function (M) {
            var B = M > 0x0 ? M : undefined;
            K.sendLoadFailReport(B);
          };
          P.prototype.Ar = function (M, B) {
            shell.setProgress(M, B);
          };
          P.prototype.Ir = function (N0) {
            var N1;
            var N2;
            var N3 = N0.angpao_controller;
            var N4 = N0.background_controller;
            var N5 = N0.background_controller_2;
            var N6 = N0.big_win_controller;
            var N7 = N0.big_win_text;
            var N8 = N0.column_tint_controller;
            var N9 = N0.click_effect;
            var NN = N0.h_firecracker_atlas_symbols;
            var Nz = N0.h_ingot_atlas_symbols;
            var NC = N0.h_pouch_atlas_symbols;
            var NT = N0.h_orange_atlas_symbols;
            var NL = N0.h_angbao_atlas_symbols;
            var NY = N0.h_ruyi_atlas_symbols;
            var Nl = N0.s_wild;
            var Nr = N0.info_board_controller;
            var Nt = N0.infoboard_text;
            var Nv = N0.infoboard_win_text;
            var NG = N0.normal_symbol;
            var Nq = N0.setting_menu;
            var Nc = N0.setting_menu_auto_spin_button;
            var Nf = N0.setting_menu_more_menu_button;
            var Ne = N0.setting_menu_setting_button;
            var Ng = N0.setting_menu_rules_button;
            var Ns = N0.setting_menu_payout_button;
            var NZ = N0.setting_menu_history_button;
            var Ni = N0.setting_menu_hide_more_button;
            var Nb = N0.setting_menu_wallet_panel;
            var NH = N0.setting_menu_locale;
            var NI = N0.setting_menu_minus_bet_button;
            var NK = N0.setting_menu_plus_bet_button;
            var NE = N0.setting_menu_smartbot_button;
            var NQ = N0.setting_menu_turbo_spin_button;
            var NX = N0.setting_menu_quit_button;
            var No = N0.spin_button_controller;
            var NA = N0.slot_controller;
            var NV = N0.slot_tint_controller;
            var NW = N0.pay_select_effect_controller;
            var NJ = N0.pay_line_number_controller;
            var Nw = N0.pay_line_controller;
            var NO = N0.pay_out_effect_controller;
            var Na = N0.wild_symbol;
            var NF = N0.foreground_controller;
            var Nh = N0.symbol_popout_controller;
            var ND = N0.trail_particle_controller;
            var NU = N0.tiger_controller;
            var Nu = N0.sticky_controller;
            N1 = cc.instantiate(ND.result);
            this.trailParticleHolder.addChild(N1);
            N2 = N1.getComponent("TrailParticleEffectController");
            this.ps.trailParticleEffectController = N2;
            N1 = cc.instantiate(Nu.result);
            this.stickyControllerHolder.addChild(N1);
            (N2 = N1.getComponent("StickyController")).init();
            this.ps.stickyController = N2;
            this.ps.uiShiftController = this.uiShiftNode.getComponent("UIShiftController");
            this.ps.uiShiftController.init();
            N1 = cc.instantiate(N9.result);
            this.clickEffectHolder.addChild(N1);
            N2 = N1.getComponent("ClickEffectController");
            this.ps.clickEffectController = N2;
            N1 = cc.instantiate(Nq.result);
            this.settingMenuHolder.addChild(N1);
            N2 = N1.getComponent("SettingMenuController");
            this.ps.settingController = N2;
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.SPIN_OPTIONS, Nc.result);
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.MORE_MENU, Nf.result);
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.SOUND, Ne.result, true);
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.RULE, Ng.result);
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.PAYTABLE, Ns.result);
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.HISTORY, NZ.result);
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.HIDE_MORE, Ni.result);
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.TURBO_SPIN, NQ.result, true);
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.SMARTBOT, NE.result);
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.MINUS_BET, NI.result);
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.PLUS_BET, NK.result);
            I.settingMenuHelper.setButtonPrefab(I.ButtonPrefabType.QUIT, NX.result);
            I.settingMenuHelper.settingMenuLocaleIcons = NH.result;
            N1 = cc.instantiate(Nb.result);
            this.ps.settingMenuFooterController = N1.getComponent("SettingInfoFooterController");
            var Nn = [Nl.result, undefined, Nz.result, NY.result, NC.result, NL.result, NN.result, NT.result];
            O.spineConfigHandler.setSymbolSpine(Nn);
            N1 = cc.instantiate(N3.result);
            this.angpaoControllerHolder.addChild(N1);
            (N2 = N1.getComponent("AngpaoController")).init(this.behindSlotHolder);
            this.ps.angpaoController = N2;
            N1 = cc.instantiate(N4.result);
            this.backgroundControllerHolder.addChild(N1);
            (N2 = N1.getComponent("BackgroundController")).init();
            this.ps.backgroundController = N2;
            N1 = cc.instantiate(N5.result);
            this.backgroundController2Holder.addChild(N1);
            N2 = N1.getComponent("BackgroundControllerTwo");
            this.ps.backgroundController2 = N2;
            N1 = cc.instantiate(N6.result);
            this.bigWinControllerHolder.addChild(N1);
            (N2 = N1.getComponent("BigWinController")).init();
            N2.setBigWinLocalizedTitleSpriteFrame(N7.result);
            this.ps.bigWinController = N2;
            w.symbolImageHandler.setSymbolImage(NG.result);
            w.symbolImageHandler.setLocalizedWildImage(Na.result);
            N1 = cc.instantiate(NA.result);
            this.slotControllerHolder.addChild(N1);
            (N2 = N1.getComponent("SlotController")).setSymbolImageHandler(w.symbolImageHandler);
            this.ps.slotController = N2;
            (N2 = (N1 = cc.instantiate(NV.result)).getComponent("SlotTintController")).init();
            this.ps.slotTintController = N2;
            N2 = (N1 = cc.instantiate(N8.result)).getComponent("ColumnTintController");
            this.ps.columnTintController = N2;
            N1 = cc.instantiate(No.result);
            this.spinButtonControllerHolder.addChild(N1);
            (N2 = N1.getComponent("GSpinButtonController")).init();
            this.ps.spinButtonController = N2;
            N1 = cc.instantiate(NF.result);
            this.foregroundControllerHolder.addChild(N1);
            N2 = N1.getComponent("ForegroundController");
            this.ps.foregroundController = N2;
            N1 = cc.instantiate(NU.result);
            this.tigerControllerHolder.addChild(N1);
            (N2 = N1.getComponent("TigerController")).init();
            this.ps.tigerController = N2;
            N1 = cc.instantiate(Nr.result);
            this.infoBoardControllerHolder.addChild(N1);
            (N2 = N1.getComponent("InfoboardController")).init();
            N2.setLocalizedSprites(Nt.result);
            N2.setLocalizedWinAndTotalWinSprites(Nv.result);
            this.ps.infoboardController = N2;
            N1 = cc.instantiate(NJ.result);
            this.payLineNumberControllerHolder.addChild(N1);
            (N2 = N1.getComponent("PayLineNumberController")).init();
            this.ps.payLineNumberController = N2;
            N1 = cc.instantiate(Nw.result);
            this.paySelectEffectControllerHolder.addChild(N1);
            (N2 = N1.getComponent("PayLineController")).init();
            this.ps.payLineController = N2;
            N1 = cc.instantiate(NO.result);
            this.payOutEffectControllerHolder.addChild(N1);
            (N2 = N1.getComponent("PayOutEffectController")).init(this.ps.slotController);
            this.ps.payOutEffectController = N2;
            (N2 = (N1 = cc.instantiate(NW.result)).getComponent("PaySelectEffectController")).init(this.ps.slotController, this.ps.payOutEffectController, this.ps.payLineNumberController, this.ps.payLineController);
            this.ps.paySelectEffectController = N2;
            this.paySelectEffectControllerHolder.addChild(N1);
            (N2 = (N1 = cc.instantiate(Nh.result)).getComponent("SymbolPayoutController")).disablePanel();
            this.ps.symbolPopoutController = N2;
            this.symbolPopoutControllerHolder.addChild(N1);
            N1 = new cc.Node("symbol_payout_tint_node");
            this.symbolPopoutControllerHolder.addChild(N1);
            this.ps.symbolPopoutController.setPopOutTintHolder(N1);
            N1 = new cc.Node("symbol_payout_display_node");
            this.symbolPopoutControllerHolder.addChild(N1);
            this.ps.symbolPopoutController.setPopOutDisplayHolder(N1);
            var NS = this.mr;
            this.mr = undefined;
            if (NS) {
              NS();
            }
          };
          __decorate([R(cc.Node)], P.prototype, "backgroundControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "angpaoControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "behindSlotHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "backgroundController2Holder", undefined);
          __decorate([R(cc.Node)], P.prototype, "bigWinControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "clickEffectHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "infoBoardControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "paySelectEffectControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "payOutEffectControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "payLineNumberControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "settingMenuHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "slotControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "spinButtonControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "foregroundControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "symbolPopoutControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "featureWinControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "trailParticleHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "tigerControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "stickyControllerHolder", undefined);
          __decorate([R(cc.Node)], P.prototype, "uiShiftNode", undefined);
          return __decorate([U], P);
        }(cc.Component);
        Y["default"] = x;
        cc._RF.pop();
      }
    }, Tc],
    'Main': [function (Y, q, Z) {
      'use strict';

      if (!cc._RF.push(q, "4beca/GAZlDX4iji0eR7872", "Main")) {
        var K = {
          value: true
        };
        Object.defineProperty(Z, "__esModule", K);
        var E = Y("GDataSource");
        var Q = Y("GApiClient");
        var X = Y("GSlotTransactionModel");
        var V = Y("AudioManager");
        var W = Y("Transitions");
        var J = Y("RequestHandler");
        var F = Y("GameInitializationHandler");
        var D = Y("MultiResHandler");
        var U = Y("GRefreshWorldHandler");
        var R = Y("NotifyHelper");
        var x = Y("AnalyticsHelper");
        var j = Y("Utils");
        var k = Y("SettingMenuHelper");
        var N0 = Y("UIAppearanceHelper");
        var N1 = Y("WalletHelper");
        var N2 = Y("GameLayout");
        var N3 = Y("SettingMenuHandlers");
        var N4 = Y("WalletHandlers");
        var N5 = Y("GameEventHandler");
        var N6 = Y("GNormalGameState");
        var N7 = Y("GRespinGameState");
        var N8 = Y("BGMHandler");
        var N9 = Y("JakeSlotGameTemplate");
        var NN = Y("SpaceBarInterrupter");
        var Nz = Y("ReplayModeHandler");
        var NC = Y("TransactionStateMachineHandler");
        var NT = Y("SlotProperties");
        var NL = Y("GConstants");
        var NY = Y("GeneralAudioConstant");
        var Nl = Y("SpinConfigHandler");
        var Nr = cc._decorator.ccclass;
        var Nt = function (Nv) {
          function NG() {
            var Nq = null !== Nv && Nv.apply(this, arguments) || this;
            Nq.generalControllers = Object.create(null);
            Nq.Hr = undefined;
            Nq.Br = undefined;
            Nq.Gr = true;
            return Nq;
          }
          __extends(NG, Nv);
          NG.prototype.onLoad = function () {
            var Nq = {
              enableSessionSocket: true
            };
            var Nc = {
              spaceBarInterrupterEnabled: true
            };
            F.initializeGame({
              'dataSource': E.gDataSource,
              'apiClient': Q.gApiClient,
              'multiResHandler': D["default"],
              'notifyConfig': {
                'theme': R.ThemeType.SLOT,
                'buttonColor': N0.uiAppearanceHelper.v("game.theme_color"),
                'buttonTitleColor': N0.uiAppearanceHelper.v("game.white_color"),
                'titleColor': N0.uiAppearanceHelper.v("game.white_color"),
                'messageColor': N0.uiAppearanceHelper.v("game.white_color")
              },
              'gameTitle': {
                'name': shell.I18n.t("FT.Title"),
                'fontFamily': N0.uiAppearanceHelper.v("game.theme_font_family")
              },
              'callback': this.Nr.bind(this),
              'refreshWorldCallback': this.Tr.bind(this),
              'updateBalanceCallback': this.Pr.bind(this),
              'gameLayoutInfo': N2.gameLayout,
              'autoDeductBalance': true,
              'updateAudioPlayRateCallback': this.Lr.bind(this),
              'socketConfig': Nq
            });
            N9.initJakeSlotGameTemplate(Nc);
          };
          NG.prototype.Nr = function () {
            j.sequenceCallback(this.Rr.bind(this), this.Er.bind(this), this.kr.bind(this), this.Ur.bind(this), this.jr.bind(this), this.Dr.bind(this), this.Wr.bind(this), this.xr.bind(this), this.Fr.bind(this), this.Vr.bind(this), this.zr.bind(this), this.Jr.bind(this), this.qr.bind(this), this.Kr.bind(this))(this.Qr.bind(this));
          };
          NG.prototype.Rr = function (Nq) {
            var Nc = {
              minimumSpinningTime: 0.3,
              regularSpinningTime: 0.8,
              jurisdictionModel: E.gDataSource.systemModel.operatorJurisdiction
            };
            Nl.initSpinConfig(Nc);
            if (Nq) {
              Nq();
            }
          };
          NG.prototype.Tr = function (Nq) {
            var Nc = function () {
              if (Nq) {
                Nq();
              }
            };
            if (E.gDataSource.isGameReplaying) {
              this.Yr(Nc);
            } else {
              this.Xr(Nc);
            }
          };
          NG.prototype.Yr = function (Nq) {
            var Nc;
            var Nf = this;
            if (Nz.fmReplayModeHandler.replayStarted()) {
              Nz.fmReplayModeHandler.completeReplay();
              Nc = function () {
                if (Nq) {
                  Nq();
                }
                Nz.fmReplayModeHandler.stopReplay(function () {
                  if (Nf.L) {
                    Nf.L.destroy();
                    Nf.L = undefined;
                  }
                  j.deferCallback(Nf)(Nf.Zr);
                });
              };
            } else {
              Nz.fmReplayModeHandler.startReplay();
              Nc = function () {
                if (Nq) {
                  Nq();
                }
                if (Nf.L) {
                  Nf.L.destroy();
                  Nf.L = undefined;
                }
                j.deferCallback(Nf)(Nf.Zr);
              };
            }
            this.generalControllers.refreshWorld.refreshWorldByGameReplay(Nc);
          };
          NG.prototype.Xr = function (Nq) {
            if (E.gDataSource.transactionModel.previousGameState === X.SpinType.NORMAL) {
              this.generalControllers.refreshWorld.refreshWorldByChangeWalletIdle(Nq);
            } else if (Nq) {
              Nq();
            }
          };
          NG.prototype.Pr = function (Nq) {
            k.settingMenuHelper.setBalance(Nq);
          };
          NG.prototype.Lr = function (Nq) {
            V.updatePlayRate(Nq);
          };
          NG.prototype.Er = function (Nq) {
            var Nc = {
              'getGameInfo': this.$r.bind(this)
            };
            N1.walletHelper.init(Nc);
            if (Nq) {
              Nq();
            }
          };
          NG.prototype.$r = function (Nq, Nc) {
            var Nf = Nq ? {
              'wk': Nq
            } : undefined;
            this.ta(function (Ne, Ng) {
              if (Nc) {
                Nc(Ng);
              }
            }, Nf);
          };
          NG.prototype.kr = function (Nq) {
            var Nc = Date.now();
            x.sendEvent(shell.ga.CATEGORY_QUERY, shell.ga.EVENT_READ_INFO);
            shell.setProgressVisible(false);
            R.showMessage(shell.I18n.t("General.LoadingInfo"));
            var Nf = {
              eatk: E.gDataSource.systemModel.extraAssetTableKey
            };
            this.ta(function (Ng, Ns) {
              N1.walletHelper.processInitGameInfo(Ns, function () {
                shell.ga.sendTiming(shell.ga.CATEGORY_QUERY, shell.ga.EVENT_READ_INFO, Date.now() - Nc);
                if (Nq) {
                  Nq();
                }
              });
            }, Nf);
          };
          NG.prototype.ta = function (Nq, Nc) {
            J.doAPIRequest({
              'name': "Get Game Info",
              'apiRequest': Q.gApiClient.getGameInfo.bind(Q.gApiClient),
              'apiRequestParam': Nc,
              'retryMessage': shell.I18n.t("General.LoadingInfoRetry"),
              'errorTitle': shell.I18n.t("General.ErrorLaunchFailed")
            }, this.ia(Nq));
          };
          NG.prototype.ia = function (Nq) {
            return function (Nc, Nf) {
              if (Nf && Nf.dt) {
                var Ne = E.gDataSource.systemModel;
                var Ng = Ne.betLevelList;
                var Ns = Ne.betSizeList;
                var NZ = Ne.maxLineNumber;
                var Ni = E.gDataSource.transactionModel;
                var Nb = Ni.betSizeValue;
                var NH = Ni.betLevelValue;
                k.settingMenuHelper.betSizeList = Ns;
                k.settingMenuHelper.betSizeValue = Nb;
                k.settingMenuHelper.betLevelList = Ng;
                k.settingMenuHelper.betLevelValue = NH;
                k.settingMenuHelper.betLineValue = NZ;
                Nq(Nc, Nf);
              }
            };
          };
          NG.prototype.Ur = function (Nq) {
            V.init();
            if (Nq) {
              Nq();
            }
          };
          NG.prototype.jr = function (Nq) {
            var Nc = {
              historyLibPath: "lib/fortune_mouse_history",
              historyPrefabPath: "lib/fortune_mouse_history/prefab/history_factory"
            };
            var Nf = {
              apiClient: Q.gApiClient,
              dataSource: E.gDataSource,
              settingMenuHelper: k.settingMenuHelper,
              walletHelper: N1.walletHelper,
              isProgressiveGame: false,
              settingMenuDependenciesPath: Nc,
              toggleEffectMuted: V.toggleEffectMuted,
              toggleMusicMuted: V.toggleMusicMuted,
              callback: Nq
            };
            N3.setupSettingMenu(Nf);
          };
          NG.prototype.Dr = function (Nq) {
            var Nc = {
              generalControllers: this.generalControllers
            };
            this.sa = this.getComponent("LoadingController");
            this.sa.setup(Nc);
            if (Nq) {
              Nq();
            }
          };
          NG.prototype.Wr = function (Nq) {
            R.showMessage(shell.I18n.t("General.LoadingResource"));
            this.sa.loadGeneralBundle(Nq, true);
          };
          NG.prototype.xr = function (Nq) {
            var Nc = this.generalControllers;
            var Nf = {
              dataSource: E.gDataSource,
              settingMenuHelper: k.settingMenuHelper,
              settingController: Nc.settingController,
              settingWalletPanelController: Nc.settingMenuFooterController,
              spinButtonController: Nc.spinButtonController,
              callback: Nq
            };
            N3.initializeSettingMenu(Nf);
          };
          NG.prototype.Fr = function (Nq) {
            var Nc = {
              dataSource: E.gDataSource,
              settingWalletPanelController: this.generalControllers.settingMenuFooterController,
              settingMenuHelper: k.settingMenuHelper,
              walletHelper: N1.walletHelper,
              callback: Nq
            };
            N4.setupWallets(Nc);
          };
          NG.prototype.Vr = function (Nq) {
            var Nc = E.gDataSource.transactionModel.reels;
            var Nf = this.generalControllers;
            var Ne = Nf.slotController;
            var Ng = Nf.clickEffectController;
            var Ns = Nf.angpaoController;
            Ne.init(Nc);
            Ne.setClickEffectController(Ng);
            Ne.setOnReelReachesBouncePointCallback(function (NZ) {
              var Ni = E.gDataSource.transactionModel;
              var Nb = Ni.reels;
              var NH = Ni.stateTransitionTo;
              var NI = Ni.stateTransitionFrom;
              var NK = [];
              Nb.forEach(function (NE, NQ) {
                if (NT.getColumnFromIndex(NQ) === NZ) {
                  NK.push(NE);
                }
              });
              if (NK.includes(NT.SLOT_INDEX.WILD) && NI === X.SpinType.NORMAL && NH === X.SpinType.NORMAL) {
                V.playAudioIfNotPlaying(NY.GENERAL_AUDIO.symWildSpawn.key);
              }
              if (NH === X.SpinType.RESPIN && 0x2 === NZ) {
                Ns.shake10();
              }
            });
            Ne.setOnSlotInterruptCallback(function () {
              var NZ = E.gDataSource.transactionModel;
              var Ni = NZ.reels;
              var Nb = NZ.stateTransitionTo;
              var NH = NZ.stateTransitionFrom;
              if (Ni.includes(NT.SLOT_INDEX.WILD) && NH === X.SpinType.NORMAL && Nb === X.SpinType.NORMAL) {
                V.stopAudioIfPlaying(NY.GENERAL_AUDIO.symWildSpawn.key);
                V.playAudioIfNotPlaying(NY.GENERAL_AUDIO.symWildSpawn.key);
              }
            });
            Ne.setSpinTiming(Nl.featureConfig.minimumSpinningTime, Nl.featureConfig.regularSpinningTime);
            if (Nq) {
              Nq();
            }
          };
          NG.prototype.ea = function () {
            NN.spaceBarInterrupter.init({
              'spinButtonClickCallback': this.generalControllers.spinButtonController.clickSpinButton.bind(this.generalControllers.spinButtonController),
              'reelClickCallback': this.generalControllers.slotController.onKeyBoardDownClicked.bind(this.generalControllers.slotController)
            });
          };
          NG.prototype.zr = function (Nq) {
            var Nc = this.generalControllers;
            var Nf = Nc.slotController;
            var Ne = Nc.spinButtonController;
            var Ng = Nc.slotTintController;
            var Ns = Nc.columnTintController;
            var NZ = Nc.foregroundController;
            var Ni = Nf.mask.node;
            var Nb = {
              'generalControllers': this.generalControllers
            };
            Ni.addChild(Ng.node);
            Ni.addChild(Ns.node);
            k.settingMenuHelper.menuChangedCallBack = function () {
              if (k.settingMenuHelper.isIdle()) {
                Ne.show();
                NZ.showGold();
              } else {
                Ne.hide();
                NZ.hideGold();
              }
            };
            this.generalControllers.refreshWorld = new U.GRefreshWorldHandler(Nb);
            this.generalControllers.refreshWorld.setupUICallback = this.qr.bind(this);
            if (Nq) {
              Nq();
            }
          };
          NG.prototype.Jr = function (Nq) {
            var Nc = {
              numberOfColumn: NT.NORMAL_SLOT_COLUMN,
              numberOfRow: NT.NORMAL_SLOT_ROW,
              payoutData: NL.PAY_OUT_DATA
            };
            var Nf = this.generalControllers.symbolPopoutController;
            var Ne = E.gDataSource.transactionModel.reels;
            var Ns = {
              height: 0x44c
            };
            Nf.setReelData(Ne);
            Nf.setTintConfig(Ns);
            Nf.init(Nc);
            if (Nq) {
              Nq();
            }
          };
          NG.prototype.qr = function (Nq) {
            var Nc;
            switch (E.gDataSource.transactionModel.stateTransitionTo) {
              case X.SpinType.NORMAL:
                Nc = new W.ToNormalSpinTransition();
                break;
              case X.SpinType.RESPIN:
                Nc = new W.ToRespinTransition();
            }
            var Nf = {
              generalControllers: this.generalControllers,
              loadingController: this.sa
            };
            Nc.instanceRun(Nf, function () {
              Nc.destroy();
              if (Nq) {
                Nq();
              }
            });
          };
          NG.prototype.Kr = function (Nq) {
            var Nc = this;
            N5.subscribeGamePauseEvent();
            N5.subscribeGameResumeEvent();
            N5.setGamePlayUIBlockEventCallback(function (Nf) {
              var Ne = Nc.generalControllers.spinButtonController;
              if (Nf) {
                Ne.node.pauseSystemEvents(true);
              } else {
                Ne.node.resumeSystemEvents(true);
              }
            });
            if (Nq) {
              Nq();
            }
          };
          NG.prototype.Qr = function () {
            shell.setProgressVisible(false);
            R.showMessage(shell.I18n.t("General.LoadingCompleted"));
            shell.requestGameStart(true, this.na.bind(this));
          };
          NG.prototype.na = function () {
            this.Vs();
            this.ea();
            this.oa(this.Zr.bind(this));
          };
          NG.prototype.oa = function (Nq) {
            var Nc = E.gDataSource.transactionModel.stateTransitionTo === X.SpinType.NORMAL ? "setup" : "idle";
            NC.initState(Nc);
            if (Nq) {
              Nq();
            }
          };
          NG.prototype.Vs = function () {
            var Nq = E.gDataSource.transactionModel.stateTransitionTo;
            V.toggleAudioGameStarted();
            if (Nq === X.SpinType.RESPIN) {
              N8.instantPlayRespinBGM();
            } else {
              N8.instantPlayNormalBGM();
            }
          };
          NG.prototype.Zr = function () {
            var Nq = E.gDataSource.transactionModel;
            var Nc = Nq.stateTransitionFrom;
            var Nf = Nq.stateTransitionTo;
            switch (Nc) {
              case X.SpinType.NORMAL:
                if (Nf === X.SpinType.NORMAL) {
                  this.ca = this.ha.bind(this);
                } else if (Nf === X.SpinType.RESPIN) {
                  if (this.Gr) {
                    this.ca = this.ra.bind(this);
                  } else {
                    this.ca = this.aa.bind(this, this.ra.bind(this));
                  }
                }
                break;
              case X.SpinType.RESPIN:
                if (Nf === X.SpinType.NORMAL) {
                  this.ca = this.ua.bind(this, this.ha.bind(this));
                } else if (Nf === X.SpinType.RESPIN) {
                  this.ca = this.ra.bind(this);
                }
            }
            j.deferCallback(this)(this.ca);
          };
          NG.prototype.la = function () {
            this.Gr = false;
            var Nq = this.L;
            if (Nq) {
              Nq.destroy();
            }
            this.L = undefined;
            j.deferCallback(this)(this.Zr.bind(this));
          };
          NG.prototype.ha = function () {
            (this.L = new N6["default"](E.gDataSource, this.generalControllers, this.la.bind(this))).run();
          };
          NG.prototype.ra = function () {
            (this.L = new N7["default"](E.gDataSource, this.generalControllers, this.la.bind(this))).run(this.Gr);
          };
          NG.prototype.ua = function (Nq) {
            var Nc = new W.ToNormalSpinTransition();
            var Nf = {
              generalControllers: this.generalControllers,
              loadingController: this.sa
            };
            Nc.run(Nf, function () {
              Nc.destroy();
              if (Nq) {
                Nq();
              }
            });
          };
          NG.prototype.aa = function (Nq) {
            var Nc = new W.ToRespinTransition();
            var Nf = {
              generalControllers: this.generalControllers,
              loadingController: this.sa
            };
            Nc.run(Nf, function () {
              Nc.destroy();
              if (Nq) {
                Nq();
              }
            });
          };
          return __decorate([Nr], NG);
        }(cc.Component);
        Z["default"] = Nt;
        cc._RF.pop();
      }
    }, Tf],
    'MaxBetButton': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "57d52E5rw9F7Iqp2UOZL/vK", "MaxBetButton")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("BetModifierButton");
        var G = z("UIAppearanceHelper");
        var q = z("Utils");
        var f = cc._decorator;
        var g = f.ccclass;
        var Z = f.property;
        var b = function (H) {
          function I() {
            var K = null !== H && H.apply(this, arguments) || this;
            K.labelNode = undefined;
            return K;
          }
          __extends(I, H);
          I.prototype.changeButtonPressedColor = function (K) {
            if (this.buttonTheme) {
              var E = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var Q = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".pressed");
              if (this.isReachLimit) {
                var X = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
                q.setNodeColorWithOpacity(this.iconSprite, X);
                this.labelNode.opacity = 127.5;
              } else {
                q.setNodeColorWithOpacity(this.iconSprite, K ? Q : E);
                this.labelNode.opacity = K ? 127.5 : 0xff;
              }
            }
          };
          I.prototype.interactableButtonColor = function (K) {
            if (this.buttonTheme) {
              var E = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var Q = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              if (this.isReachLimit) {
                q.setNodeColorWithOpacity(this.iconSprite, Q);
                this.labelNode.opacity = 127.5;
              } else {
                q.setNodeColorWithOpacity(this.iconSprite, K ? E : Q);
                this.labelNode.opacity = K ? 0xff : 63.75;
              }
            }
          };
          __decorate([Z(cc.Node)], I.prototype, "labelNode", undefined);
          return __decorate([g], I);
        }(v["default"]);
        Y["default"] = b;
        cc._RF.pop();
      }
    }, Te],
    'MultiResHandler': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "3ae3du76uBKurm1YFGdqj7/", "MultiResHandler")) {
        var L = System.get("common").MultiResHandler;
        z.exports["default"] = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'NavigationBar': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "0dc7dijGWtKO4QKzl8UL9Pz", "NavigationBar")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.fa = undefined;
            Z.animatedLayer = undefined;
            Z.defaultLeftItem = undefined;
            Z.rightItemContainer = undefined;
            Z.leftItemContainer = undefined;
            Z.middleItemContainer = undefined;
            Z.titleLabel = undefined;
            Z.background = undefined;
            Z.shadow = undefined;
            Z.da = [];
            Z.va = false;
            Z._a = undefined;
            return Z;
          }
          __extends(g, f);
          Object.defineProperty(g.prototype, "navigator", {
            'get': function () {
              return this.fa;
            },
            'set': function (Z) {
              this.fa = Z;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(g.prototype, "topItem", {
            'get': function () {
              if (this.da && this.da.length > 0x0) {
                return this.da[this.da.length - 0x1];
              }
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(g.prototype, "backItem", {
            'get': function () {
              if (this.da && this.da.length > 0x1) {
                return this.da[this.da.length - 0x2];
              }
            },
            'enumerable': false,
            'configurable': true
          });
          g.prototype.onLoad = function () {
            var Z = this.node.width;
            var b = this.node.height;
            this.background.node.setContentSize(Z, b);
            this.shadow.y = -b;
          };
          g.prototype.getBarHeight = function (Z, b) {
            var H = this.node.width;
            var I = Z.height;
            var K = b.top;
            var E = I + K;
            this.animatedLayer.setContentSize(H, I);
            this.animatedLayer.y = -K;
            this.node.height = E;
            this.shadow.y = -I;
            this.ma(Z.item_space_x);
            return E;
          };
          g.prototype.pushItem = function (Z, b) {
            if (Z) {
              var H = this.da[this.da.length - 0x1];
              var I = this.leftItemContainer.children[0x0];
              var K = this.middleItemContainer.children[0x1];
              var E = this.rightItemContainer.children[0x0];
              var Q = H ? H.title : '';
              var X = H && !H.leftItem;
              var A = Z.title;
              var V = undefined;
              var W = undefined;
              var J = Z.rightItem instanceof cc.Node ? Z.rightItem : undefined;
              var w = true;
              this.da.push(Z);
              this.va = b;
              if (Z.middleItem instanceof cc.Node) {
                W = Z.middleItem;
                Z.title = '';
              }
              if (Z.leftItem instanceof cc.Node) {
                V = Z.leftItem;
                w = false;
              } else if (this.da.length > 0x1) {
                V = cc.instantiate(this.defaultLeftItem);
                this.pa(V);
                var O = V.children ? V.getComponentInChildren(cc.Label) : undefined;
                if (O instanceof cc.Label && Q) {
                  O.string = Q;
                }
              }
              var F = {
                leftItem: I,
                middleItem: K,
                rightItem: E,
                title: Q,
                useDefaultLeftItem: X
              };
              var D = {
                leftItem: V,
                middleItem: W,
                rightItem: J,
                title: A,
                useDefaultLeftItem: w
              };
              if (b) {
                this.ba(F, D);
              } else {
                this.Sa(I);
                this.ga(this.leftItemContainer, V);
                this.Sa(K);
                this.ga(this.middleItemContainer, W);
                this.Sa(E);
                this.ga(this.rightItemContainer, J);
                this.titleLabel.string = A;
                this._a = this.titleLabel.node.color;
                if ("land" === shell.environment.getOrientationMode()) {
                  this.titleLabel.fontSize = 0x2a;
                  this.titleLabel.lineHeight = 0x32;
                }
              }
            }
          };
          g.prototype.popItem = function (Z) {
            var b = this.topItem;
            if (b) {
              var H = this.backItem;
              this.da.pop();
              if (!H) {
                this.titleLabel.string = '';
                this.rightItemContainer.removeAllChildren(false);
                this.leftItemContainer.removeAllChildren(false);
                if (this.middleItemContainer.children[0x1]) {
                  this.middleItemContainer.children[0x1].removeFromParent(false);
                }
                return void (this._a = this.titleLabel.node.color);
              }
              var I = this.da[this.da.length - 0x2];
              var K = '';
              if (I && !I.middleItem) {
                K = I.title;
              }
              var E = this.leftItemContainer.children[0x0];
              var Q = this.middleItemContainer.children[0x1];
              var X = this.rightItemContainer.children[0x0];
              var A = Q ? '' : b.title;
              var V = !b.leftItem;
              var W = H.title;
              var J = undefined;
              var w = undefined;
              var O = H.rightItem instanceof cc.Node ? H.rightItem : undefined;
              var F = true;
              if (H.middleItem instanceof cc.Node) {
                w = H.middleItem;
                H.title = '';
              }
              if (H.leftItem instanceof cc.Node) {
                J = H.leftItem;
                F = false;
              } else if (this.da.length > 0x1) {
                J = cc.instantiate(this.defaultLeftItem);
                this.pa(J);
                var D = J.children ? J.getComponentInChildren(cc.Label) : null;
                if (D) {
                  D.string = K;
                }
              }
              var U = {
                leftItem: E,
                middleItem: Q,
                rightItem: X,
                title: A,
                useDefaultLeftItem: V
              };
              var S = {
                leftItem: J,
                middleItem: w,
                rightItem: O,
                title: W,
                useDefaultLeftItem: F
              };
              if (Z) {
                this.Ca(U, S);
              } else {
                this.Sa(E);
                this.ga(this.leftItemContainer, J);
                this.Sa(Q);
                this.ga(this.middleItemContainer, w);
                this.Sa(X);
                this.ga(this.rightItemContainer, O);
                this.titleLabel.string = W;
                this._a = this.titleLabel.node.color;
              }
            }
          };
          g.prototype.enableButtons = function () {
            var Z = this.leftItemContainer.children[0x0];
            var b = this.rightItemContainer.children[0x0];
            if (Z) {
              var H = Z.getComponent(cc.Button);
              if (H) {
                H.interactable = true;
              }
            }
            if (b) {
              var I = b.getComponent(cc.Button);
              if (I) {
                I.interactable = true;
              }
            }
          };
          g.prototype.disableButtons = function () {
            var Z = this.leftItemContainer.children[0x0];
            var b = this.rightItemContainer.children[0x0];
            if (Z) {
              var H = Z.getComponent(cc.Button);
              if (H) {
                H.interactable = false;
              }
            }
            if (b) {
              var I = b.getComponent(cc.Button);
              if (I) {
                I.interactable = false;
              }
            }
          };
          g.prototype.setTitleColor = function (Z) {
            this.titleLabel.node.color = Z;
          };
          g.prototype.setTitleSize = function (Z) {
            this.titleLabel.fontSize = Z;
          };
          g.prototype.removeItemsAtIndex = function (Z) {
            if (!(this.da.length <= Z)) {
              this.da.splice(Z, 0x1);
            }
          };
          g.prototype.ya = function (Z) {
            Z.node.setContentSize(this.titleLabel.node.width, this.titleLabel.node.height);
            Z.string = this.titleLabel.string;
            Z.fontSize = this.titleLabel.fontSize;
            Z.lineHeight = this.titleLabel.lineHeight;
            Z.verticalAlign = 0x1;
            if (this.titleLabel.font) {
              Z.font = this.titleLabel.font;
            }
          };
          g.prototype.pa = function (Z) {
            var b = new cc.Component.EventHandler();
            b.target = this.node;
            b.component = "NavigationBar";
            b.handler = "onLeftItemPressed";
            Z.getComponent(cc.Button).clickEvents.push(b);
          };
          g.prototype.ma = function (Z) {
            var b = this.node.width;
            var H = this.leftItemContainer;
            var I = -b / 0x2 + Z + H.width / 0x2;
            var K = this.rightItemContainer;
            var E = b / 0x2 - Z - K.width / 0x2;
            H.x = I;
            K.x = E;
          };
          g.prototype.onLeftItemPressed = function () {
            var Z = this.navigator;
            this.navigator.topController;
            if (Z && Z.topController) {
              var b = this.va;
              this.navigator.popController(b);
            }
          };
          g.prototype.ba = function (Z, b) {
            var H = Z.leftItem;
            var I = Z.middleItem;
            var K = Z.rightItem;
            var E = Z.title;
            var Q = Z.useDefaultLeftItem;
            var X = b.leftItem;
            var A = b.middleItem;
            var V = b.rightItem;
            var W = b.title;
            var J = b.useDefaultLeftItem;
            var w = !I && !A;
            this.Ma(w, E, W, I, A);
            this.Aa(J, Q, w, H, X);
            this.Ia(K, V);
          };
          g.prototype.Ca = function (Z, b) {
            var H = Z.leftItem;
            var I = Z.middleItem;
            var K = Z.rightItem;
            var E = Z.title;
            var Q = Z.useDefaultLeftItem;
            var X = b.leftItem;
            var A = b.middleItem;
            var V = b.rightItem;
            var W = b.title;
            var J = b.useDefaultLeftItem;
            var w = !I && !A;
            this.wa(w, E, W, I, A);
            this.Oa(J, Q, w, H, X);
            this.Ia(K, V);
          };
          g.prototype.Ma = function (Z, b, H, I, K, E) {
            if (Z) {
              var Q = this.middleItemContainer;
              var X = this.leftItemContainer;
              var A = Q.x - Q.width * Q.anchorX - X.x - X.width * (0x1 - X.anchorX);
              if (b) {
                var V = this.titleLabel.node;
                var W = V.parent.convertToWorldSpaceAR(cc.v2(V.x, V.y));
                var J = this.animatedLayer.convertToNodeSpaceAR(W);
                var w = new cc.Node();
                var O = w.addComponent(cc.Label);
                w.parent = this.animatedLayer;
                w.position = J;
                O.node.color = this._a;
                this.ya(O);
                var F = cc.spawn(cc.moveBy(0.2, cc.v2(-A / 0x2, 0x0)).easing(cc.easeIn(0x3)), cc.fadeOut(0.2).easing(cc.easeIn(0x3)));
                w.runAction(cc.sequence(F, cc.callFunc(function () {
                  w.active = false;
                  w.removeFromParent();
                })));
              }
              Q.x += A;
              Q.opacity = 0x0;
              this.titleLabel.string = H;
              var D = cc.spawn(cc.moveBy(0.3, cc.v2(-A, 0x0)).easing(cc.easeOut(0x3)), cc.fadeIn(0.3).easing(cc.easeIn(0x3)));
              Q.runAction(cc.sequence(cc.delayTime(0.1), D, cc.callFunc(function () {
                Q.active = true;
                Q.opacity = 0xff;
                if (E) {
                  E();
                }
              })));
            } else {
              this.Ha(I, K, H, E);
            }
          };
          g.prototype.Aa = function (Z, H, I, K, E, Q) {
            var X = this;
            if (Z && H && I) {
              var V = undefined;
              var W = undefined;
              var J = undefined;
              var w = undefined;
              if (K && K.children) {
                V = K.getComponentInChildren(cc.Label);
                W = K.getComponentInChildren(cc.Sprite);
              }
              if (E && E.children) {
                J = E.getComponentInChildren(cc.Label);
                w = E.getComponentInChildren(cc.Sprite);
              }
              if (J) {
                if (V) {
                  var O = V.node;
                  var F = O.x;
                  var D = O.width;
                  var U = O.anchorX;
                  var R = F - D * U - F - D * (0x1 - U);
                  var x = cc.spawn(cc.moveBy(0.2, cc.v2(0x2 * -R, 0x0)).easing(cc.easeOut(0x3)), cc.fadeOut(0.2).easing(cc.easeIn(0x3)));
                  O.runAction(cc.sequence(x, cc.callFunc(function () {
                    O.active = false;
                  })));
                }
                var j = this.middleItemContainer;
                var P = this.leftItemContainer;
                var B = j.x - j.width * j.anchorX - P.x - P.width * (0x1 - P.anchorX);
                var k = w.node;
                var N0 = J.node;
                if (E) {
                  P.addChild(E);
                }
                k.active = false;
                N0.opacity = 0x0;
                N0.x += B / 0x2;
                var N1 = cc.spawn(cc.moveBy(0.2, cc.v2(-B / 0x2, 0x0)).easing(cc.easeOut(0x3)), cc.fadeIn(0.2).easing(cc.easeIn(0x3)));
                N0.runAction(cc.sequence(cc.delayTime(0.2), N1, cc.callFunc(function () {
                  N0.opacity = 0xff;
                  k.active = true;
                  if (K) {
                    K.removeFromParent(false);
                  }
                  if (Q) {
                    Q();
                  }
                })));
              } else {
                this.Ba(K, E, Q);
              }
            } else if (Z && H && K) {
              V = undefined;
              W = undefined;
              if (K && K.children) {
                V = K.getComponentInChildren(cc.Label);
                W = K.getComponentInChildren(cc.Sprite);
              }
              if (!V || !W) {
                return void this.Ba(K, E, Q);
              }
              var N2 = W.node;
              var N3 = V.node;
              R = N3.x - N3.width * N3.anchorX - N2.x - N2.width * (0x1 - N2.anchorX);
              x = cc.spawn(cc.moveBy(0.2, cc.v2(-R, 0x0)).easing(cc.easeOut(0x3)), cc.fadeOut(0.2).easing(cc.easeIn(0x3)));
              N3.runAction(cc.sequence(x, cc.callFunc(function () {
                if (K) {
                  K.removeFromParent(false);
                }
                if (E) {
                  X.leftItemContainer.addChild(E);
                }
                if (Q) {
                  Q();
                }
              })));
            } else {
              this.Ba(K, E, Q);
            }
          };
          g.prototype.Oa = function (Z, H, I, K, E, Q) {
            if (Z && H && I) {
              var X = undefined;
              var A = undefined;
              var V = undefined;
              var W = undefined;
              if (K && K.children) {
                X = K.getComponentInChildren(cc.Label);
                A = K.getComponentInChildren(cc.Sprite);
              }
              if (E && E.children) {
                V = E.getComponentInChildren(cc.Label);
                W = E.getComponentInChildren(cc.Sprite);
              }
              if (!V || !X) {
                return void this.Ba(K, E, Q);
              }
              var J = this.middleItemContainer;
              var w = this.leftItemContainer;
              var O = J.x - J.width * J.anchorX - w.x - w.width * (0x1 - w.anchorX);
              var F = X.node;
              var D = A.node;
              var U = F.x - F.width * F.anchorX - D.x - D.width * (0x1 - D.anchorX);
              var R = cc.spawn(cc.moveBy(0.2, cc.v2(O / 0x2, 0x0)).easing(cc.easeOut(0x3)), cc.fadeOut(0.2).easing(cc.easeIn(0x3)));
              if (E) {
                F.runAction(cc.sequence(R, cc.callFunc(function () {
                  F.active = false;
                })));
                var x = V.node;
                var j = W.node;
                j.active = false;
                x.opacity = 0x0;
                w.addChild(E);
                x.x -= 0x2 * U;
                var P = cc.spawn(cc.moveBy(0.2, cc.v2(0x2 * U, 0x0)).easing(cc.easeOut(0x3)), cc.fadeIn(0.2).easing(cc.easeIn(0x3)));
                x.runAction(cc.sequence(cc.delayTime(0.2), P, cc.callFunc(function () {
                  x.opacity = 0xff;
                  j.active = true;
                  if (K) {
                    K.removeFromParent(false);
                  }
                  if (Q) {
                    Q();
                  }
                })));
              } else {
                F.runAction(cc.sequence(R, cc.callFunc(function () {
                  if (K) {
                    K.removeFromParent(false);
                  }
                  if (Q) {
                    Q();
                  }
                })));
              }
            } else if (Z && H) {
              V = undefined;
              W = undefined;
              if (E && E.children) {
                V = E.getComponentInChildren(cc.Label);
                W = E.getComponentInChildren(cc.Sprite);
              }
              if (!V || !W) {
                return void this.Ba(K, E, Q);
              }
              var M = V.node;
              var B = W.node;
              U = M.x - M.width * M.anchorX - B.x - B.width * (0x1 - B.anchorX);
              if (K) {
                K.removeFromParent(false);
              }
              if (E) {
                this.leftItemContainer.addChild(E);
              }
              M.opacity = 0x0;
              M.x -= 0x2 * U;
              P = cc.spawn(cc.moveBy(0.2, cc.v2(0x2 * U, 0x0)).easing(cc.easeOut(0x3)), cc.fadeIn(0.2).easing(cc.easeIn(0x3)));
              M.runAction(cc.sequence(cc.delayTime(0.2), P, cc.callFunc(function () {
                M.opacity = 0xff;
                if (Q) {
                  Q();
                }
              })));
            } else {
              this.Ba(K, E, Q);
            }
          };
          g.prototype.wa = function (Z, b, H, I, K, E) {
            if (Z) {
              var Q = this.leftItemContainer;
              var X = this.middleItemContainer;
              var A = X.x - X.width * X.anchorX - Q.x - Q.width * (0x1 - Q.anchorX);
              if (b) {
                var V = this.titleLabel.node.parent.convertToWorldSpaceAR(cc.v2(this.titleLabel.node.x, this.titleLabel.node.y));
                var W = this.animatedLayer.convertToNodeSpaceAR(V);
                var J = new cc.Node();
                J.addComponent(cc.Label);
                var w = J.getComponent(cc.Label);
                J.parent = this.animatedLayer;
                w.node.color = this._a;
                J.position = W;
                this.ya(w);
                var O = cc.spawn(cc.moveBy(0.2, cc.v2(A / 0x2, 0x0)).easing(cc.easeOut(0x3)), cc.fadeOut(0.2).easing(cc.easeOut(0x3)));
                J.runAction(cc.sequence(O, cc.callFunc(function () {
                  J.active = false;
                  J.removeFromParent();
                })));
              }
              this.titleLabel.string = H;
              X.x -= A / 0x2;
              X.opacity = 0x0;
              var F = cc.spawn(cc.moveBy(0.3, cc.v2(A / 0x2, 0x0)).easing(cc.easeOut(0x3)), cc.fadeIn(0.3).easing(cc.easeIn(0x3)));
              this.middleItemContainer.runAction(cc.sequence(cc.delayTime(0.1), F, cc.callFunc(function () {
                X.active = true;
                X.opacity = 0xff;
                if (E) {
                  E();
                }
              })));
            } else {
              this.Ha(I, K, H, E);
            }
          };
          g.prototype.Ba = function (Z, b, H) {
            var I = this.leftItemContainer;
            if (Z) {
              Z.removeFromParent(false);
            }
            if (b) {
              this.leftItemContainer.addChild(b);
            }
            I.opacity = 0x0;
            I.runAction(cc.sequence(cc.fadeIn(0.3).easing(cc.easeOut(0x3)), cc.callFunc(function () {
              if (H) {
                H();
              }
            })));
          };
          g.prototype.Ha = function (Z, b, H, I) {
            var K = this.middleItemContainer;
            if (Z) {
              Z.removeFromParent(false);
            }
            if (b) {
              K.addChild(b);
            }
            this.titleLabel.string = H;
            K.opacity = 0x0;
            K.runAction(cc.sequence(cc.fadeIn(0.3), cc.callFunc(function () {
              if (I) {
                I();
              }
            })));
          };
          g.prototype.Ia = function (Z, b, H) {
            var I = this;
            if (Z) {
              Z.removeFromParent(false);
            }
            if (b) {
              this.rightItemContainer.addChild(b);
            }
            this.rightItemContainer.opacity = 0x0;
            this.rightItemContainer.runAction(cc.sequence(cc.fadeIn(0.3).easing(cc.easeOut(0x3)), cc.callFunc(function () {
              I._a = I.titleLabel.node.color;
              if (H) {
                H();
              }
            })));
          };
          g.prototype.Sa = function (Z) {
            if (Z && Z.parent) {
              Z.removeFromParent(false);
            }
          };
          g.prototype.ga = function (Z, b) {
            if (Z && b) {
              Z.addChild(b);
            }
          };
          __decorate([G(cc.Node)], g.prototype, "animatedLayer", undefined);
          __decorate([G(cc.Prefab)], g.prototype, "defaultLeftItem", undefined);
          __decorate([G(cc.Node)], g.prototype, "rightItemContainer", undefined);
          __decorate([G(cc.Node)], g.prototype, "leftItemContainer", undefined);
          __decorate([G(cc.Node)], g.prototype, "middleItemContainer", undefined);
          __decorate([G(cc.Label)], g.prototype, "titleLabel", undefined);
          __decorate([G(cc.Sprite)], g.prototype, "background", undefined);
          __decorate([G(cc.Node)], g.prototype, "shadow", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'NavigationController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "d742diXy4tHCIVIgSy1jEIb", "NavigationController")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("ViewController");
        var q = z("NavigationBar");
        var g = z("TransitionEnum");
        var Z = z("NavigationDefaultTransition");
        var b = z("TransitionContext");
        var H = z("UIKit");
        var I = z("TabBarItem");
        var K = cc._decorator;
        var E = K.ccclass;
        var Q = K.property;
        var X = function (A) {
          function V() {
            var W = null !== A && A.apply(this, arguments) || this;
            W.defaultNavigationBar = undefined;
            W.statusBarPlaceholderNode = undefined;
            W.contentNode = undefined;
            W.Ga = undefined;
            W.Na = [];
            W.Ta = false;
            W.Pa = undefined;
            return W;
          }
          __extends(V, A);
          Object.defineProperty(V.prototype, "controllers", {
            'get': function () {
              return this.Na.slice();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(V.prototype, "tabBarItem", {
            'get': function () {
              return this.Pa;
            },
            'set': function (W) {
              this.Pa = W;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(V.prototype, "topController", {
            'get': function () {
              var W = this.controllers;
              if (W && W.length > 0x0) {
                return W[W.length - 0x1];
              }
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(V.prototype, "backController", {
            'get': function () {
              var W = this.controllers;
              if (W && W.length > 0x1) {
                return W[W.length - 0x2];
              }
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(V.prototype, "navigationBar", {
            'get': function () {
              if (!this.Ga) {
                this.Ga = this.defaultNavigationBar;
                if (this.Ga) {
                  this.Ga.navigator = this;
                }
              }
              return this.Ga;
            },
            'set': function (W) {
              if (W !== this.Ga) {
                var J = this.Ga;
                this.Ga = W;
                if (this.Ga) {
                  this.Ga.navigator = this;
                }
                if (J) {
                  J.navigator = undefined;
                }
              }
            },
            'enumerable': false,
            'configurable': true
          });
          V.prototype.onLoad = function () {
            var W = cc.Canvas.instance.designResolution;
            var J = W.height;
            var w = W.width;
            this.node.setContentSize(w, J);
            this.navigationBar.node.width = w;
            var O = "land" === shell.environment.getOrientationMode() ? H.NavigationConfigs.bar.landscape : H.NavigationConfigs.bar.portrait;
            var F = this.navigationBar.getBarHeight(O, this.safeAreaInsets);
            var D = J - F;
            this.contentNode.setContentSize(w, D);
            this.contentNode.y = -F;
            this.statusBarPlaceholderNode.height = this.safeAreaInsets.top;
            this.node.on("size-changed", this.La, this);
          };
          V.prototype.onEnable = function () {
            var W = this.topController;
            if (W) {
              W.enabled = true;
            }
          };
          V.prototype.onDisable = function () {
            var W = this.topController;
            if (W) {
              W.enabled = false;
            }
          };
          V.prototype.viewWillAppear = function (W) {
            var J = this.topController;
            if (J) {
              J.viewWillAppear(W);
            }
          };
          V.prototype.viewDidAppear = function (W) {
            var J = this.topController;
            if (J) {
              J.viewDidAppear(W);
            }
          };
          V.prototype.viewWillDisappear = function (W) {
            var J = this.topController;
            if (J) {
              J.viewWillDisappear(W);
            }
          };
          V.prototype.viewDidDisappear = function (W) {
            var J = this.topController;
            if (J) {
              J.viewDidDisappear(W);
            }
          };
          V.prototype.viewDidLayoutSubviews = function () {};
          V.prototype.pushController = function (W, J) {
            if (!this.Ta && W) {
              this.Ta = true;
              var w = this.contentNode;
              var O = w.width;
              var F = w.height;
              W.navigator = this;
              W.view.setContentSize(O, F);
              var D = (W.node.anchorY - w.anchorY) * F;
              var U = (W.node.anchorX - w.anchorX) * O;
              if (J) {
                U = (W.node.anchorX - w.anchorX + 0x1) * O;
              }
              W.view.setPosition(cc.v2(U, D));
              w.addChild(W.view);
              W.enabled = true;
              if (this.Ra()) {
                W.viewWillAppear(J);
              } else {
                J = false;
              }
              var S = this.topController;
              if (S) {
                S.viewWillDisappear(J);
              }
              this.navigationBar.pushItem(W, J);
              if (J) {
                var R = undefined;
                var x = this.navigationDelegate;
                R = x && x.animationForOperation ? x.animationForOperation(g.NavigationControllerOperation.Push) : new Z.DefaultNavigationPushTransition();
                var j = S ? S.view : undefined;
                var P = new b.TransitionContext(S, W, j, W.view, w);
                var m = this.Ea.bind(this, W, true);
                R.animateTransition(P, m);
              } else {
                this.Ea(W, false);
              }
            }
          };
          V.prototype.popController = function (W) {
            var J = this.topController;
            var w = this.backController;
            if (!this.Ta && J && w) {
              this.Ta = true;
              w.enabled = true;
              w.viewWillAppear(W);
              J.viewWillDisappear(W);
              this.navigationBar.popItem(W);
              if (W) {
                var O = undefined;
                var F = this.navigationDelegate;
                O = F && F.animationForOperation ? F.animationForOperation(g.NavigationControllerOperation.Pop) : new Z.DefaultNavigationPopTransition();
                var D = new b.TransitionContext(J, w, J.view, w.view, this.contentNode);
                var U = this.ka.bind(this, true);
                O.animateTransition(D, U);
              } else {
                this.ka(false);
              }
            }
          };
          V.prototype.popToController = function (W, J) {
            for (var w = this.controllers.length - J; w;) {
              var O = this.topController;
              if (O) {
                O.enabled = false;
                this.navigationBar.popItem(false);
                this.contentNode.removeChild(O.view);
                this.Na.pop();
                O.node.destroy();
              }
              w -= 0x1;
            }
            this.popController(W);
          };
          V.prototype.popToRootController = function (W) {
            for (var J = this.controllers.length - 0x2; J;) {
              var w = this.topController;
              if (w) {
                w.enabled = false;
                this.navigationBar.popItem(false);
                this.contentNode.removeChild(w.view);
                this.Na.pop();
                w.node.destroy();
              }
              J -= 0x1;
            }
            this.popController(W);
          };
          V.prototype.hideNavigationBarBackground = function () {
            this.navigationBar.background.node.active = false;
            this.navigationBar.shadow.active = false;
          };
          V.prototype.showNavigationBarBackground = function () {
            this.navigationBar.background.node.active = true;
            this.navigationBar.shadow.active = true;
          };
          V.prototype.hideNavigationBar = function (W) {
            if (undefined === W) {
              W = true;
            }
            this.navigationBar.node.active = false;
            if (W) {
              this.La();
            }
          };
          V.prototype.showNavigationBar = function (W) {
            if (undefined === W) {
              W = true;
            }
            this.navigationBar.node.active = true;
            if (W) {
              this.La();
            }
          };
          V.prototype.enableItems = function () {
            this.navigationBar.enableButtons();
          };
          V.prototype.disableItems = function () {
            this.navigationBar.disableButtons();
          };
          V.prototype.setControllers = function (W) {
            if (W && W.length && !(W.length < 0x1)) {
              var J = this.controllers;
              var w = J.filter(function (U) {
                return W.indexOf(U) < 0x0;
              });
              for (var O = w.length - 0x1; O >= 0x0; O--) {
                var F = w[O];
                F.enabled = false;
                this.contentNode.removeChild(F.view);
                var D = J.indexOf(F);
                this.navigationBar.removeItemsAtIndex(D);
                F.node.destroy();
              }
              this.Na = W;
            }
          };
          V.prototype.La = function () {
            this.Ua();
            this.ja();
          };
          V.prototype.Ua = function () {
            var W = this.contentNode;
            var J = this.navigationBar.node.active ? this.navigationBar.node.height : this.statusBarPlaceholderNode.height;
            var w = this.node.height - J;
            W.setContentSize(this.node.width, w);
            W.y = -J;
          };
          V.prototype.ja = function () {
            var W = this.contentNode;
            var J = W.width;
            var w = W.height;
            var O = W.anchorX;
            var F = W.anchorY;
            this.controllers.forEach(function (D) {
              var U = D.node;
              var S = (U.anchorX - O) * J;
              var R = (U.anchorY - F) * w;
              D.viewWillLayoutSubviews();
              U.setContentSize(J, w);
              U.setPosition(cc.v2(S, R));
              D.viewDidLayoutSubviews();
            });
          };
          V.prototype.Ea = function (W, J) {
            if (undefined === J) {
              J = false;
            }
            if (this.Ra()) {
              W.viewDidAppear(J);
            }
            var w = this.topController;
            this.Na.push(W);
            W.view.setContentSize(this.contentNode.width, this.contentNode.height);
            this.Ta = false;
            if (w) {
              w.viewDidDisappear(J);
              w.enabled = false;
            }
          };
          V.prototype.ka = function (W) {
            if (undefined === W) {
              W = false;
            }
            var J = this.backController;
            if (J) {
              J.viewDidAppear(W);
            }
            this.scheduleOnce(this.Da.bind(this, W));
          };
          V.prototype.Da = function (W) {
            var J = this.topController;
            if (J) {
              this.contentNode.removeChild(J.view);
              this.Na.pop();
              this.Ta = false;
              J.viewDidDisappear(W);
              J.enabled = false;
              if (J.destroy) {
                J.destroy();
              }
              J.node.destroy();
            }
          };
          V.prototype.Ra = function () {
            return !(this.tabBarItem instanceof I["default"] && !this.topController);
          };
          __decorate([Q(q["default"])], V.prototype, "defaultNavigationBar", undefined);
          __decorate([Q(cc.Node)], V.prototype, "statusBarPlaceholderNode", undefined);
          __decorate([Q(cc.Node)], V.prototype, "contentNode", undefined);
          return __decorate([E], V);
        }(G["default"]);
        Y["default"] = X;
        cc._RF.pop();
      }
    }, Tg],
    'NavigationDefaultTransition': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "2472eYgH9NBWJvtIuLXvIEh", "NavigationDefaultTransition")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.DefaultNavigationPopTransition = Y.DefaultNavigationPushTransition = undefined;
        var r = z("ViewControllerTransition");
        var v = function (q) {
          function c() {
            return null !== q && q.apply(this, arguments) || this;
          }
          __extends(c, q);
          c.prototype.transitionDuration = function () {};
          c.prototype.animateTransition = function (f, g) {
            var Z = f.getToController();
            var b = f.getFromController();
            var H = f.getContainer();
            var I = (b.node.anchorX - H.anchorX - 0x1) * H.width;
            var K = (b.node.anchorY - H.anchorY) * H.height;
            b.node.runAction(cc.sequence(cc.moveTo(0.4, cc.v2(I, K)).easing(cc.easeSineIn()), cc.callFunc(function () {
              b.node.setPosition(I, K);
            })));
            var E = (Z.node.anchorX - H.anchorX) * H.width;
            var Q = (Z.node.anchorY - H.anchorY) * H.height;
            Z.node.runAction(cc.sequence(cc.moveTo(0.4, cc.v2(E, Q)).easing(cc.easeSineIn()), cc.callFunc(function () {
              Z.node.setPosition(E, Q);
              if (g) {
                g();
              }
            })));
          };
          c.prototype.animationEnd = function () {};
          return c;
        }(r["default"]);
        Y.DefaultNavigationPushTransition = v;
        var G = function (q) {
          function c() {
            return null !== q && q.apply(this, arguments) || this;
          }
          __extends(c, q);
          c.prototype.transitionDuration = function () {};
          c.prototype.animateTransition = function (f, g) {
            var Z = f.getToController();
            var b = f.getFromController();
            var H = f.getContainer();
            var I = (b.node.anchorX - H.anchorX + 0x1) * H.width;
            var K = (b.node.anchorY - H.anchorY) * H.height;
            b.node.runAction(cc.sequence(cc.moveTo(0.4, cc.v2(I, K)).easing(cc.easeSineIn()), cc.callFunc(function () {
              b.node.setPosition(I, K);
            })));
            var E = (Z.node.anchorX - H.anchorX) * H.width;
            var Q = (Z.node.anchorY - H.anchorY) * H.height;
            Z.node.runAction(cc.sequence(cc.moveTo(0.4, cc.v2(E, Q)).easing(cc.easeSineIn()), cc.callFunc(function () {
              Z.node.setPosition(E, Q);
              if (g) {
                g();
              }
            })));
          };
          c.prototype.animationEnd = function () {};
          return c;
        }(r["default"]);
        Y.DefaultNavigationPopTransition = G;
        cc._RF.pop();
      }
    }, Ts],
    'NoSoundAdapter': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "d85610Qhw9DzLM9jdvZsDKB", "NoSoundAdapter")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("Utils");
        var G = z("AudioAdapter");
        var q = {
          'load': function (b, H) {
            setTimeout(H, 0x0);
          },
          'unload': function () {}
        };
        var g = function (b) {
          function H(I) {
            var K = b.call(this) || this;
            K.Wa = false;
            K.U = 0x1;
            K.W = false;
            K.j = 0x1;
            K.xa = 0x2;
            K.Fa = 0x0;
            K.Va = 0x0;
            K.za = K.za.bind(K);
            K.Ja = K.Ja.bind(K);
            K.reset(I);
            return K;
          }
          __extends(H, b);
          H.prototype.reset = function (I) {
            this.Fa = 0x0;
            this.Va = 0x0;
            if (undefined !== I) {
              var K = I.loop;
              var E = I.volume;
              var Q = I.muted;
              var X = I.rate;
              var A = I.duration;
              if ("boolean" == typeof K) {
                this.W = K;
              }
              if ("number" == typeof E && E >= 0x0 && E <= 0x1) {
                this.U = E;
              }
              if ("boolean" == typeof Q) {
                this.Wa = Q;
              }
              if ("number" == typeof X && X > 0x0) {
                this.j = X;
              }
              if ("number" == typeof A && A > 0x0) {
                this.xa = A;
              }
            }
          };
          H.prototype.destroy = function () {
            this.reset();
            this.removeAll();
          };
          Object.defineProperty(H.prototype, "instantVolume", {
            'get': function () {
              return this.U;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "volume", {
            'get': function () {
              return this.U;
            },
            'set': function (I) {
              this.U = I;
              this.qa(undefined);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "loop", {
            'get': function () {
              return this.W;
            },
            'set': function (I) {
              if (I !== this.W) {
                this.W = I;
                if (I) {
                  this.Ka(undefined);
                } else {
                  this.Qa();
                }
              }
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "paused", {
            'get': function () {
              return this.Fa > 0x0 && this.Va > 0x0;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "playing", {
            'get': function () {
              return this.Fa > 0x0 && 0x0 === this.Va;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "stopped", {
            'get': function () {
              return 0x0 === this.Fa && 0x0 === this.Va;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "rate", {
            'get': function () {
              return this.j;
            },
            'set': function (I) {
              if ("number" == typeof I && I > 0x0 && I !== this.j) {
                this.j = I;
              }
            },
            'enumerable': false,
            'configurable': true
          });
          H.prototype.pause = function () {
            if (!this.paused) {
              this.Va = Date.now();
              this.qa(undefined);
              this.Ka(undefined);
            }
          };
          H.prototype.resume = function () {
            if (this.paused) {
              this.Fa += Date.now() - this.Va;
              this.Va = 0x0;
              if (!this.W) {
                this.Qa();
              }
            }
          };
          Object.defineProperty(H.prototype, "muted", {
            'get': function () {
              return this.Wa;
            },
            'set': function (I) {
              this.Wa = I;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "duration", {
            'get': function () {
              return this.xa;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "currentTime", {
            'get': function () {
              return this.Va > 0x0 ? (this.Va - this.Fa) / 0x3e8 % this.xa : (Date.now() - this.Fa) / 0x3e8 % this.xa;
            },
            'enumerable': false,
            'configurable': true
          });
          H.prototype.seek = function (I) {
            this.qa(undefined);
            if (I >= this.xa && !this.W) {
              this.Ka(undefined);
              this.Fa = 0x0;
              this.Va = 0x0;
              this.Ja();
              return void this.emit(shell.WebAudioEvent.ENDED);
            }
            if (this.paused) {
              this.resume();
            }
            this.Fa = Date.now() - 0x3e8 * I;
            if (!this.W) {
              this.Qa();
            }
            this.emit(shell.WebAudioEvent.SEEK);
          };
          H.prototype.play = function (I, K) {
            this.Fa = Date.now();
            this.xa = "number" == typeof K && K > 0x0 ? K : this.xa;
            if (!this.W) {
              this.Qa();
            }
          };
          H.prototype.za = function () {
            if (this.Ya) {
              this.qa(undefined);
              this.Ja();
            }
            this.Fa = 0x0;
            this.Va = 0x0;
            this.emit(shell.WebAudioEvent.ENDED);
          };
          H.prototype.stop = function () {
            this.qa(undefined);
            this.Ka(undefined);
            this.Fa = 0x0;
            this.Va = 0x0;
            this.emit(shell.WebAudioEvent.STOP);
          };
          H.prototype.fade = function (I, K, E) {
            this.U = K;
            this.qa(E);
          };
          H.prototype.Ja = function () {
            this.emit(shell.WebAudioEvent.FADED);
          };
          H.prototype.Qa = function () {
            var I = this.xa - this.currentTime;
            if (I >= 0x0) {
              this.Ka(I);
            } else {
              this.Ka(undefined);
            }
          };
          H.prototype.Ka = function (I) {
            var K = this.Xa;
            if (K) {
              K();
            }
            this.Xa = null == I ? undefined : v.delayCallback(I)(this.za);
          };
          H.prototype.qa = function (I) {
            var K = this.Ya;
            if (K) {
              K();
            }
            this.Ya = null == I ? undefined : v.delayCallback(I)(this.Ja);
          };
          return H;
        }(shell.CustomEventTarget);
        var Z = function (b) {
          function H(I) {
            var K = this;
            I.loader = q;
            (K = b.call(this, I) || this).Za = I.estimatedDuration || 0x2;
            return K;
          }
          __extends(H, b);
          H.prototype.getDuration = function (I) {
            return "number" == typeof I ? b.prototype.getDuration.call(this, I) : this.Za;
          };
          H.prototype.getAudioFromPool = function () {
            var I = this.factory.get();
            var K = {
              duration: this.Za
            };
            var E = {
              duration: this.Za
            };
            return I ? (I.reset(K), I) : new g(E);
          };
          return H;
        }(G["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, TZ],
    'NodePoolHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "b0ddew/TJxHpLx+HkJnRSBk", "NodePoolHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.nodePoolHandler = Y.NodePoolHandler = undefined;
        var r = cc._decorator.ccclass;
        var v = function (q) {
          function c() {
            var f = null !== q && q.apply(this, arguments) || this;
            f.ni = Object.create(null);
            f.$a = Object.create(null);
            f.tu = Object.create(null);
            return f;
          }
          __extends(c, q);
          c.prototype.registerReusableItem = function (f, g, Z, b) {
            if (f && g) {
              var H = this.$a;
              if (!H[f]) {
                H[f] = g;
                var I = this.ni;
                if (!I[f]) {
                  I[f] = Z ? new cc.NodePool(Z) : new cc.NodePool();
                  var K = this.tu;
                  if (!K[f]) {
                    K[f] = b;
                    for (var E = 0x0; E < b; E++) {
                      var Q = cc.instantiate(g);
                      this.enqueueReusableItem(Q, f);
                    }
                  }
                }
              }
            }
          };
          c.prototype.dequeueReusableItem = function (f) {
            var g = this.ni[f];
            if (g.size() > 0x0) {
              return g.get();
            }
            var Z = this.$a[f];
            return cc.instantiate(Z);
          };
          c.prototype.enqueueReusableItem = function (f, g) {
            var Z = this.ni[g];
            var b = this.tu[g];
            if (Z.size() < b) {
              Z.put(f);
            } else {
              f.destroy();
            }
          };
          c.prototype.getPool = function (f) {
            return this.ni[f];
          };
          c.prototype.destroy = function () {
            var f = this;
            Object.keys(this.ni).forEach(function (g) {
              f.ni[g].clear();
            });
            return q.prototype.destroy.call(this);
          };
          return __decorate([r], c);
        }(cc.Object);
        Y.NodePoolHandler = v;
        var G = new v();
        Y.nodePoolHandler = G;
        cc._RF.pop();
      }
    }, {}],
    'NormalPrizeDecorator': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "106e2xHvchPlqWVXmeFLDHr", "NormalPrizeDecorator")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("SlotGameConstants");
        var G = z("SlotAnalyticsEnum");
        var q = z("AutoSpinHandler");
        var f = z("ButtonHitTest");
        var g = z("JakeSlotGameTemplate");
        var Z = function () {
          function b(H, I) {
            this.name = "Normal Prize Decorator";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.dataSource = H;
            this.generalControllers = I.generalControllers;
          }
          b.prototype.destroy = function () {
            this.clearAvailableActions();
            this.dataSource = undefined;
            this.generalControllers = undefined;
          };
          b.prototype.setAvailableActions = function () {
            var H = this.generalControllers.spinButtonController;
            if (H.isAutoSpin()) {
              H.setOnClickCallback(this.iu.bind(this, G.SpinTrigger.CLICK));
              if (!g.JSGTConfig.spaceBarInterrupterEnabled) {
                cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
              }
            }
          };
          b.prototype.clearAvailableActions = function () {
            this.generalControllers.spinButtonController.clearOnClickCallback();
            if (!g.JSGTConfig.spaceBarInterrupterEnabled) {
              cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
            }
          };
          b.prototype.No = function (H) {
            if (!g.JSGTConfig.spaceBarInterrupterEnabled && f.buttonHitTest(this.generalControllers.spinButtonController.node)) {
              switch (H.keyCode) {
                case v.SPIN_BUTTON_TRIGGER_KEY:
                  this.iu(G.SpinTrigger.SPACEBAR);
              }
            }
          };
          b.prototype.iu = function () {
            var H = this.generalControllers;
            var I = H.spinButtonController;
            q.exitAutoSpin(H.spinButtonController);
            this.clearAvailableActions();
            I.disableButton();
          };
          return b;
        }();
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, Ti],
    'NormalResultDecorator': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "94e3b2snKRKspFrhelPCcrj", "NormalResultDecorator")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("SlotStateMachine");
        var G = z("SlotAnalyticsEnum");
        var q = z("AutoSpinHandler");
        var f = z("SlotGameConstants");
        var g = z("ButtonHitTest");
        var Z = z("JakeSlotGameTemplate");
        var b = z("SpinConfigHandler");
        var H = function () {
          function I(K, E) {
            this.triggerFastStop = undefined;
            this.name = "Normal Result Decorator";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.dataSource = K;
            this.generalControllers = E.generalControllers;
          }
          I.prototype.destroy = function () {
            this.clearAvailableActions();
            this.triggerFastStop = undefined;
            this.dataSource = undefined;
            this.generalControllers = undefined;
          };
          I.prototype.setAvailableActions = function () {
            var K = this.generalControllers.spinButtonController;
            if (K.isAutoSpin() || b.featureConfig.fastStopFeature && !this.su()) {
              K.setOnClickCallback(this.iu.bind(this, G.SpinTrigger.CLICK));
              if (!Z.JSGTConfig.spaceBarInterrupterEnabled) {
                cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
              }
            }
          };
          I.prototype.clearAvailableActions = function () {
            this.generalControllers.spinButtonController.clearOnClickCallback();
            if (!Z.JSGTConfig.spaceBarInterrupterEnabled) {
              cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
            }
          };
          I.prototype.renderFeature = function (K) {
            var E = this.generalControllers.spinButtonController;
            if (!E.isAutoSpin()) {
              this.clearAvailableActions();
            }
            E.stopSpin();
            if (K) {
              E.disableButton();
            }
          };
          I.prototype.fastStopTriggeredWhileSpinning = function () {
            this.eu();
          };
          I.prototype.triggerFastStopWhileStopping = function () {
            this.eu();
          };
          I.prototype.No = function (K) {
            if (!Z.JSGTConfig.spaceBarInterrupterEnabled && g.buttonHitTest(this.generalControllers.spinButtonController.node)) {
              switch (K.keyCode) {
                case f.SPIN_BUTTON_TRIGGER_KEY:
                  this.iu(G.SpinTrigger.SPACEBAR);
              }
            }
          };
          I.prototype.iu = function (K) {
            if (this.generalControllers.spinButtonController.isAutoSpin()) {
              this.vo();
            } else if (this.triggerFastStop && b.featureConfig.fastStopFeature && !this.su()) {
              var E = this.triggerFastStop;
              this.triggerFastStop = undefined;
              E(K);
            }
          };
          I.prototype.vo = function () {
            var K = this.generalControllers;
            var E = K.spinButtonController;
            q.exitAutoSpin(K.spinButtonController);
            if (!(b.featureConfig.fastStopFeature && !this.su())) {
              E.disableButton();
            }
          };
          I.prototype.eu = function () {
            this.clearAvailableActions();
            this.generalControllers.spinButtonController.disableButton();
          };
          I.prototype.su = function () {
            return this.generalControllers.slotController.getStopStyle() === v.StopStyle.FAST;
          };
          return I;
        }();
        Y["default"] = H;
        cc._RF.pop();
      }
    }, Tb],
    'NormalSlotHandler': [function (v, G, q) {
      'use strict';

      if (!cc._RF.push(G, "4e7ffkKWR9IMJQyzAP4dvoP", "NormalSlotHandler")) {
        var f = {
          value: true
        };
        Object.defineProperty(q, "__esModule", f);
        q.NormalSlotHandler = q.NORMAL_SLOT_SETUP_PROPERTIES = undefined;
        var g;
        var Z = v("SlotHandler");
        var b = v("SlotProperties");
        var H = v("GNormalStopScroller");
        var I = v("Utils");
        var K = v("AudioManager");
        var E = v("GeneralAudioConstant");
        var Q = {
          accelerateDuration: 0.1,
          accelerateFactor: 1.6,
          accelerateDistance: -0xe6,
          bounceDistance: 0x28,
          bounceDuration: 0.1,
          bounceFactor: 1.22
        };
        var X = {
          endSpeed: -0x740,
          bounceDistance: -0x28,
          bounceDuration: 0.4,
          bounceFactor: 0x1
        };
        var A = {
          accelerateDuration: 0.1,
          accelerateFactor: 1.68,
          accelerateDistance: -0xfc,
          bounceDistance: 0x28,
          bounceDuration: 0.1,
          bounceFactor: 1.22
        };
        var V = {
          endSpeed: 0x0,
          bounceDistance: 0x0,
          bounceDuration: 0x0,
          bounceFactor: 0x0
        };
        (function (J) {
          J[J.NORMAL = 0x0] = "NORMAL";
          J[J.RESPIN = 0x1] = "RESPIN";
        })(g || (g = {}));
        q.NORMAL_SLOT_SETUP_PROPERTIES = {
          'topExtraBufferRow': 0x0,
          'bottomExtraBufferRow': 0x0,
          'scrollInterval': 0.1,
          'stopScrollInterval': 0.3,
          'maxSpeed': -0x1110,
          'turboSpeedFactor': 1.67,
          'blurSpeedFactor': 0.4,
          'unblurSpeedFactor': 0.8,
          'slowDownSpeedDuration': 0.5,
          'slowDownSpeed': -0xd48,
          'startScrollerConfig': Object.freeze(Q),
          'stopScrollerConfig': Object.freeze(X),
          'turboStartScrollerConfig': Object.freeze(A),
          'interruptScrollStopScrollerConfig': Object.freeze(V)
        };
        var W = function (J) {
          function w() {
            var O = null !== J && J.apply(this, arguments) || this;
            O.nu = undefined;
            O.L = g.NORMAL;
            O.onReelStopCallback = undefined;
            O.ou = undefined;
            return O;
          }
          __extends(w, J);
          w.prototype.init = function (O) {
            O = __assign(__assign(__assign({}, O), q.NORMAL_SLOT_SETUP_PROPERTIES), {
              'getRandomSymbol': this.cu.bind(this),
              'stopScroller': H["default"]
            });
            J.prototype.init.call(this, O);
          };
          Object.defineProperty(w.prototype, "onReelStop", {
            'set': function (O) {
              this.onReelStopCallback = O;
            },
            'enumerable': false,
            'configurable': true
          });
          w.prototype.onReelStopCallbackWrapper = function (O) {
            if (this.onReelStopCallback) {
              this.onReelStopCallback(O, this.L === g.RESPIN);
            }
          };
          w.prototype.updateRespinSlotConfig = function () {
            this.stopScrollInterval = q.NORMAL_SLOT_SETUP_PROPERTIES.stopScrollInterval;
            this.slotHelper.setStopScrollerEndSpeed(0x2, q.NORMAL_SLOT_SETUP_PROPERTIES.stopScrollerConfig.endSpeed);
            this.slotHelper.updateRespinSlotHelperConfig();
            this.L = g.RESPIN;
          };
          w.prototype.updateNormalSpinSlotConfig = function () {
            this.stopScrollInterval = q.NORMAL_SLOT_SETUP_PROPERTIES.stopScrollInterval;
            this.slotHelper.setStopScrollerEndSpeed(0x2, q.NORMAL_SLOT_SETUP_PROPERTIES.stopScrollerConfig.endSpeed);
            this.slotHelper.updateNormalSpinSlotHelperConfig();
            this.L = g.NORMAL;
          };
          w.prototype.resetHiddenMiddleReel = function () {
            this.slotHelper.setReelData(this.orl);
            this.slotHelper.reloadSlot();
          };
          w.prototype.setOnReelReachesBouncePointCallback = function (O) {
            this.slotHelper.setOnScrollerReachesBouncePointCallback(O);
          };
          w.prototype.setOnReelReachesLowestPointCallback = function (O) {
            this.slotHelper.setOnScrollerReachesLowestPointCallback(O);
          };
          w.prototype.setOnReelReachesSlowDownPointCallback = function (O) {
            this.slotHelper.setOnScrollerReachesSlowDownPointCallback(O);
          };
          w.prototype.runStopScroller = function (O) {
            var F = this;
            if (this.isFastStop) {
              this.runInterrupt();
            } else {
              var D;
              D = function (S, R) {
                if (F.isFastStop) {
                  F.runInterrupt();
                } else {
                  O(S);
                  if (R) {
                    R();
                  }
                }
              };
              var U = this.scheduleIterator(D, this.stopScrollInterval, this.numberOfColumn);
              this.abortIterator = U;
            }
          };
          w.prototype.setReelData = function (O) {
            this.orl = O;
            this.slotHelper.setReelData(O);
          };
          w.prototype.cu = function () {
            if (this.L === g.RESPIN) {
              var O = Math.floor(0x6 * Math.random() + 0x1);
              return O >= 0x1 && O <= 0x2 ? -0x1 : O >= 0x3 && O <= 0x5 ? this.nu : b.SLOT_INDEX.WILD;
            }
            var F = b.getRandomSlotSymbol(0x1);
            if (F === b.SLOT_INDEX.WILD && Math.floor(0x2 * Math.random() + 0x1) > 0x1) {
              F = b.getRandomSlotSymbol(0x1, 0x2);
            }
            return F;
          };
          w.prototype.extraFastStopAction = function () {
            var O = E.GENERAL_AUDIO.spinStopQuick.key;
            K.stopAudioIfPlaying(O);
            K.playAudioIfNotPlaying(O);
            var F = E.GENERAL_AUDIO.spinActiveLoop.key;
            K.stopAudioIfPlaying(F);
          };
          w.prototype.extraSpinInitialization = function () {};
          w.prototype.onSpinStopCallbackWrapper = function () {
            this.abortIterator = undefined;
            var O = this.ou;
            this.ou = undefined;
            if (O) {
              O();
            }
            if (this.spinStopCallback) {
              this.spinStopCallback();
            }
          };
          w.prototype.hu = function () {
            var O = 1.2 * q.NORMAL_SLOT_SETUP_PROPERTIES.startScrollerConfig.bounceDuration;
            if (K.GeneralAudioPool.spin_active_loop.isPlaying()) {
              K.GeneralAudioPool.spin_active_loop.stop();
            }
            if (K.GeneralAudioPool.fs_reel_loop.isPlaying()) {
              K.GeneralAudioPool.fs_reel_loop.stop();
            }
            if (this.ou) {
              this.ou();
            }
            this.ou = undefined;
            this.ou = I.delayCallback(O)(function () {
              K.GeneralAudioPool.spin_active_loop.setVolume(0x1);
              K.GeneralAudioPool.spin_active_loop.play();
            });
          };
          w.prototype.setRespinSymbol = function (O) {
            this.nu = O;
          };
          w.prototype.disableAllSprite = function () {
            var O;
            (O = this.slotHelper.slotItemHandler).getSlotItems.apply(O, __spread([0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8])).forEach(function (F) {
              if (F) {
                F.disableSprite();
              }
            });
          };
          return w;
        }(Z.SlotHandler);
        q.NormalSlotHandler = W;
        cc._RF.pop();
      }
    }, TH],
    'NormalSpinDecorator': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "2e3a0I2XG9HlaoLlfg0FwUG", "NormalSpinDecorator")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("SlotStateMachine");
        var q = z("AutoSpinHandler");
        var f = z("SlotAnalyticsEnum");
        var g = z("SlotGameConstants");
        var Z = z("ButtonHitTest");
        var b = z("SettingMenuHelper");
        var H = z("JakeSlotGameTemplate");
        var I = z("SpinConfigHandler");
        var K = function () {
          function E(Q, X) {
            this.triggerFastStop = undefined;
            this.name = "Normal Spin Decorator";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.dataSource = Q;
            this.generalControllers = X.generalControllers;
          }
          E.prototype.destroy = function () {
            this.clearAvailableActions();
            this.triggerFastStop = undefined;
            this.dataSource = undefined;
            this.generalControllers = undefined;
          };
          E.prototype.stateWillStartSpin = function () {
            this.generalControllers.spinButtonController.spin();
          };
          E.prototype.setAvailableActions = function () {
            var Q = this.generalControllers.spinButtonController;
            if (Q.isAutoSpin() || I.featureConfig.fastStopFeature && !b.settingMenuHelper.turboSpinOn) {
              Q.setOnClickCallback(this.iu.bind(this, f.SpinTrigger.CLICK));
              if (!H.JSGTConfig.spaceBarInterrupterEnabled) {
                cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
              }
            } else {
              Q.disableButton();
            }
          };
          E.prototype.clearAvailableActions = function () {
            this.generalControllers.spinButtonController.clearOnClickCallback();
            if (!H.JSGTConfig.spaceBarInterrupterEnabled) {
              cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.No, this);
            }
          };
          E.prototype.slotFastStopTriggered = function () {
            this.clearAvailableActions();
            this.generalControllers.spinButtonController.disableButton();
          };
          E.prototype.startSlotController = function () {
            this.generalControllers.slotController.spin(b.settingMenuHelper.turboSpinOn);
          };
          E.prototype.No = function (Q) {
            if (!H.JSGTConfig.spaceBarInterrupterEnabled && Z.buttonHitTest(this.generalControllers.spinButtonController.node)) {
              switch (Q.keyCode) {
                case g.SPIN_BUTTON_TRIGGER_KEY:
                  this.iu(f.SpinTrigger.SPACEBAR);
              }
            }
          };
          E.prototype.iu = function (Q) {
            if (this.generalControllers.spinButtonController.isAutoSpin()) {
              this.vo();
            } else if (I.featureConfig.fastStopFeature && !this.su()) {
              var X = this.triggerFastStop;
              this.triggerFastStop = undefined;
              X(Q);
            }
          };
          E.prototype.vo = function () {
            var Q = this.generalControllers;
            var X = Q.spinButtonController;
            q.exitAutoSpin(Q.spinButtonController);
            if (!(I.featureConfig.fastStopFeature && !this.su())) {
              X.disableButton();
            }
          };
          E.prototype.su = function () {
            return this.generalControllers.slotController.getStopStyle() === G.StopStyle.FAST;
          };
          return E;
        }();
        Y["default"] = K;
        cc._RF.pop();
      }
    }, TI],
    'NormalUIHelper': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "8e1caArY3JI+JrliWQwAV70", "NormalUIHelper")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("SettingMenuHelper");
        var q = z("GSlotTransactionModel");
        var g = z("BaseUIHelper");
        var Z = z("SlotProperties");
        var b = z("Utils");
        var H = z("GConstants");
        var I = z("SlotStateMachine");
        var K = z("GeneralAudioConstant");
        var E = z("AudioManager");
        var Q = function (X) {
          function A(V, W) {
            var J = X.call(this, V, W) || this;
            J.name = "Normal UI Helper";
            return J;
          }
          __extends(A, X);
          A.prototype.extraPreSpinningCleanup = function (V) {
            var W = this.generalControllers;
            var J = W.paySelectEffectController;
            var w = W.slotController;
            var O = this.dataSource.transactionModel;
            var F = O.winLines;
            var D = O.accumulatedWinAmount;
            if (F || D > 0x0) {
              J.hide(function () {
                J.stopPaySelect();
                if (V) {
                  V();
                }
              });
            } else if (V) {
              V();
            }
            w.onSpinEffect();
          };
          A.prototype.renderBonusFeatureBeforeResult = function (V, W) {
            b.sequenceCallback(function (J) {
              if (V) {
                V();
              }
              if (J) {
                J();
              }
            }, this.ru.bind(this))(function () {
              if (W) {
                W();
              }
            });
          };
          A.prototype.renderFeatureDuringResult = function (V) {
            var W = this.dataSource.transactionModel;
            var J = W.isShowTease;
            var w = W.stateTransitionTo;
            var O = function () {
              if (V) {
                V();
              }
            };
            if (J && w !== q.SpinType.RESPIN) {
              this.au(O);
            } else {
              O();
            }
          };
          A.prototype.renderFeatureAfterResult = function (V) {
            var W = this.generalControllers;
            var J = W.trailParticleEffectController;
            var w = W.slotController;
            var O = W.tigerController;
            var F = this.dataSource.transactionModel;
            var D = F.reels;
            var U = F.isTriggerWild;
            var R = F.stateTransitionTo;
            var x = F.wildCount;
            var j = function () {
              if (V) {
                V();
              }
            };
            var P = G.settingMenuHelper.turboSpinOn;
            var M = Z.getSlotWilds(D);
            var B = w.getSlotItem(M);
            var y = O.getIngotWorldPos();
            if (U && R === q.SpinType.NORMAL) {
              J.playWildCollectEffect(B, y, P, function () {
                O.playIngot(x);
                var k = K.GENERAL_AUDIO.symWildReach.key;
                E.stopAudioIfPlaying(k);
                E.playAudioIfNotPlaying(k);
              }, j);
            } else {
              j();
            }
          };
          A.prototype.renderTeaseFeatureBeforeResult = function (V, W) {
            var J = this;
            b.sequenceCallback(function (w) {
              V();
              if (w) {
                w();
              }
            }, function (w) {
              J.uu(function () {
                if (w) {
                  w();
                }
              });
            })(function () {
              if (W) {
                W();
              }
            });
          };
          A.prototype.uu = function (V) {
            var W = this.generalControllers;
            var J = W.uiShiftController;
            var w = W.backgroundController;
            var O = W.tigerController;
            var F = W.slotController;
            var D = W.backgroundController2;
            b.sequenceCallback(b.spawnCallback(function (U) {
              J.teaseDown(H.TEASE_TIMING.ENTER_TEASE_DURATION, function () {
                if (U) {
                  U();
                }
              });
            }, function (U) {
              D.teaseZoomOut();
              F.teaseZoomOut();
              O.teaseZoomOut();
              w.teaseZoomOut(function () {
                if (U) {
                  U();
                }
              });
            }), b.delayCallback(0.1))(function () {
              if (V) {
                V();
              }
            });
          };
          A.prototype.au = function (V) {
            var W = this.generalControllers;
            var J = W.uiShiftController;
            var w = W.backgroundController;
            var O = W.backgroundController2;
            var F = W.slotController;
            var D = W.tigerController;
            var U = this.dataSource.transactionModel.wildCount;
            var S = F.getStopStyle() === I.StopStyle.FAST;
            var R = G.settingMenuHelper.turboSpinOn || S ? H.TEASE_TIMING.EXIT_TEASE_DURATION * (0x1 - H.TURBO_SPIN_SPEEDUP_FACTOR) : H.TEASE_TIMING.EXIT_TEASE_DURATION;
            b.spawnCallback(function (x) {
              J.teaseUp(R, function () {
                if (x) {
                  x();
                }
              });
            }, function (x) {
              O.teaseZoomIn();
              F.teaseZoomIn();
              D.teaseZoomIn(U);
              w.teaseZoomIn(function () {
                if (x) {
                  x();
                }
              });
            })(function () {
              if (V) {
                V();
              }
            });
          };
          A.prototype.ru = function (V) {
            var W = this.generalControllers;
            var J = W.uiShiftController;
            var w = W.backgroundController;
            var O = W.foregroundController;
            var F = W.tigerController;
            var D = W.infoboardController;
            var U = W.slotController;
            var S = W.backgroundController2;
            var R = W.stickyController;
            var x = W.angpaoController;
            var j = this.dataSource.transactionModel.featureWinSymbol;
            var P = H.FEATURE_TRANSITION_TIMING.UI_TRANSITION_INTO_BONUS_DURATION;
            var M = function (B) {
              O.playRespin(B);
              U.setupRespinSlotConfig();
              U.playRespin();
              var y = K.GENERAL_AUDIO.featureStart.key;
              E.stopAudioIfPlaying(y);
              E.playAudioIfNotPlaying(y);
            };
            b.sequenceCallback(b.deferCallback(true), b.spawnCallback(function (B) {
              J.shiftDown(P, B);
              D.playZoom();
              D.resumeInfoboard();
              R.resetAudioCount();
            }, b.sequenceCallback(function (B) {
              S.zoomOut();
              F.zoomOut();
              U.zoomOut();
              w.zoomOut();
              x.playRespin(j, M, B);
            }, function (B) {
              F.playRespin(B);
            })))(function () {
              if (V) {
                V();
              }
            });
          };
          A.prototype.extraSmallWinAction = function () {};
          A.prototype.extraMediumWinAction = function () {};
          return A;
        }(g["default"]);
        Y["default"] = Q;
        cc._RF.pop();
      }
    }, TK],
    'NotifyHelper': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "9dba9c1YjJGvYgyg8KnkuQD", "NotifyHelper")) {
        var L = System.get("bvframework").Notify;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'NumberCurvedController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "22ff3ETL9NJ6LV0gfCqckfH", "NumberCurvedController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("NumberDisplayController");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.curveness = 0.1;
            return b;
          }
          __extends(Z, g);
          Z.prototype.dequeueNumberContainer = function (b) {
            var H = this.numberContainer.children[b];
            if (!H) {
              (H = new cc.Node("container")).width = this.nodeNumberWidth;
              this.numberContainer.addChild(H);
              var I = new cc.Node("numberSprite");
              I.addComponent(cc.Sprite);
              H.addChild(I);
            }
            return H;
          };
          Z.prototype.displayNumber = function (b, H, I) {
            if (undefined === H) {
              H = true;
            }
            g.prototype.displayNumber.call(this, b, H, I);
            this.lu.updateLayout();
            var K = 0x0;
            this.numberContainer.children.forEach(function (J) {
              K += J.width;
            });
            for (var E = 0x0; E < this.numberContainer.children.length; E++) {
              var Q = this.dequeueNumberContainer(E);
              var X = K / 0x2;
              var A = (0x64 / Math.abs(this.curveness) + X) / this.numberContainer.scale;
              var V = undefined;
              var W = undefined;
              if (this.curveness > 0x0) {
                V = Math.sqrt(Math.pow(A, 0x2) - Math.pow(Q.x, 0x2));
                W = 0xb4 * Math.atan2(Math.abs(V), Q.x) / Math.PI;
                Q.angle = -(0x5a - W);
              } else if (this.curveness < 0x0) {
                V = Math.sqrt(Math.pow(A, 0x2) + Math.pow(Q.x, 0x2));
                W = 0xb4 * Math.atan2(Math.abs(V), Q.x) / Math.PI;
                Q.angle = 0x5a - W;
              } else {
                Q.angle = 0x0;
              }
              Q.y = V - A;
            }
          };
          __decorate([q({
            'min': -0xa,
            'max': 0xa,
            'slide': true,
            'tooltip': false,
            'type': cc.Float
          })], Z.prototype, "curveness", undefined);
          return __decorate([G], Z);
        }(r["default"]);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, TE],
    'NumberDisplayController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "e13cc9FLShL66GevrFVSv5p", "NumberDisplayController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("Utils");
        var G = z("NumberDisplayInterface");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var Q = null !== b && b.apply(this, arguments) || this;
            Q.numberSpriteAtlas = undefined;
            Q.numberBlurSpriteAtlas = undefined;
            Q.numberSprite = [];
            Q.numberBlurSprite = [];
            Q.kSprite = undefined;
            Q.srcBlendFactor = cc.macro.BlendFactor.SRC_ALPHA;
            Q.dstBlendFactor = cc.macro.BlendFactor.ONE_MINUS_SRC_ALPHA;
            Q.nodeNumberWidth = 0x8d;
            Q.nodeNumberY = 0x0;
            Q.nodeNumberScale = 0x1;
            Q.commaWidth = 0x32;
            Q.commaY = 0x0;
            Q.commaScale = 0x1;
            Q.decimalWidth = 0x3c;
            Q.decimalY = 0x0;
            Q.decimalScale = 0x1;
            Q.decimalNumberWidth = 0x79;
            Q.decimalNumberY = 0x1;
            Q.decimalNumberScale = 0.9;
            Q.multiplySpriteWidth = 0x32;
            Q.multiplySpriteY = 0x0;
            Q.multiplySpriteScale = 0x1;
            Q.layoutSpacingX = 0x0;
            Q.layoutSpacingY = 0x0;
            Q.blurScale = 0x1;
            Q.spriteColor = "FFFFFF";
            Q.disableFixedWidth = false;
            Q.enablePrefixNumber = false;
            Q.fu = false;
            Q.du = false;
            Q.vu = '0';
            Q._u = 0x0;
            Q.mu = 0x0;
            Q.attributesForNumberContainer = undefined;
            return Q;
          }
          var I = {
            tooltip: false
          };
          var K = {
            tooltip: false
          };
          var E = {
            tooltip: false
          };
          __extends(H, b);
          Object.defineProperty(H.prototype, "preview", {
            'get': function () {
              return this.du;
            },
            'set': function (Q) {
              this.du = Q;
              if (Q) {
                this.displayNumber(this.previewNumber);
              } else {
                this.clear();
              }
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "previewNumber", {
            'get': function () {
              return this.vu;
            },
            'set': function (Q) {
              this.vu = Q;
              this.displayNumber(Q);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "currentNumberBlurSprite", {
            'get': function () {
              return this.numberBlurSpriteAtlas ? this.numberBlurSpriteAtlas.getSpriteFrames() : this.numberBlurSprite;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "currentNumberSprite", {
            'get': function () {
              return this.numberSpriteAtlas ? this.numberSpriteAtlas.getSpriteFrames() : this.numberSprite;
            },
            'enumerable': false,
            'configurable': true
          });
          H.prototype.onLoad = function () {
            this._u = this.numberContainer.scaleX;
            this.mu = this.numberContainer.scaleY;
            this.numberContainer.on(cc.Node.EventType.SIZE_CHANGED, this.resizeNumberIfNeeded, this);
          };
          H.prototype.getNumberList = function (Q, X) {
            var A = /(?:\d+)(?:\.\d+)?/gm.exec(Q.toString());
            if (A) {
              var V = parseFloat(A[0x0]);
              var W = this.pu(V, X);
              var J = "number" == typeof Q ? W : Q.replace(A[0x0], W);
              var w = Array.from(J);
              if (this.enablePrefixNumber) {
                w.unshift('x');
              }
              return w;
            }
            return Array.from(Q.toString());
          };
          H.prototype.getSpriteConfig = function (Q) {
            switch (Q) {
              case ',':
                var X = {
                  width: this.commaWidth,
                  scale: this.commaScale,
                  'y': this.commaY,
                  spriteFrame: this.currentNumberSprite[0xa]
                };
                return X;
              case '.':
                var A = {
                  width: this.decimalWidth,
                  scale: this.decimalScale,
                  'y': this.decimalY,
                  spriteFrame: this.currentNumberSprite[0xb]
                };
                return A;
              case 'x':
                var V = {
                  width: this.multiplySpriteWidth,
                  scale: this.multiplySpriteScale,
                  'y': this.multiplySpriteY,
                  spriteFrame: this.currentNumberSprite[0xc]
                };
                return V;
              case 'k':
                var W = {
                  width: this.nodeNumberWidth,
                  scale: this.nodeNumberScale,
                  'y': this.nodeNumberY,
                  spriteFrame: this.kSprite
                };
                return W;
              case " ":
                var J = {
                  width: this.commaWidth,
                  scale: this.commaScale,
                  'y': this.commaY,
                  spriteFrame: undefined
                };
                return J;
              default:
                return;
            }
          };
          H.prototype.getNumberSpriteConfig = function (Q, X, A) {
            return A ? {
              'scale': X ? this.decimalNumberScale * this.blurScale : this.decimalNumberScale,
              'width': this.decimalNumberWidth,
              'y': this.decimalNumberY,
              'spriteFrame': X ? this.currentNumberBlurSprite[parseInt(Q, 0xa)] : this.currentNumberSprite[parseInt(Q, 0xa)]
            } : {
              'scale': this.nodeNumberScale,
              'width': this.nodeNumberWidth,
              'y': this.nodeNumberY,
              'spriteFrame': X ? this.currentNumberBlurSprite[parseInt(Q, 0xa)] : this.currentNumberSprite[parseInt(Q, 0xa)]
            };
          };
          H.prototype.displayNumber = function (Q, X, A) {
            if (undefined === X) {
              X = true;
            }
            this.bu();
            var V = this.getNumberList(Q, X);
            V = V.reverse();
            var W = false;
            this.Su(V.length);
            for (var J = 0x0; J < V.length; J++) {
              var w = this.dequeueNumberContainer(J);
              var O = w.getChildByName("numberSprite").getComponent(cc.Sprite);
              var F = this.getSpriteConfig(V[J]);
              if (F) {
                w.width = F.width;
                w.scaleX = w.scaleY = F.scale;
                O.node.y = F.y;
                O.spriteFrame = F.spriteFrame;
              } else {
                W = false;
                var D = v.getDefaultCurrencyFormat().decimalSeparator;
                var U = J < V.indexOf(D);
                if (U && -0x1 !== V.indexOf(D)) {
                  W = !X;
                }
                var S = this.getNumberSpriteConfig(V[J], W, U && -0x1 !== V.indexOf(D));
                w.scale = S.scale;
                w.width = S.width;
                O.node.y = S.y;
                O.spriteFrame = S.spriteFrame;
              }
              if (this.disableFixedWidth || -0x1 === w.width) {
                w.width = O.node.width;
              }
              this.gu(J, V[J], W, w);
            }
            if (A) {
              A();
            }
          };
          H.prototype.Su = function (Q) {
            var X = this.numberContainer.children.length;
            if (Q < X) {
              for (var A = X - Q; 0x0 !== A;) {
                var V = this.numberContainer.children[0x0];
                V.removeFromParent();
                V.destroy();
                A--;
              }
            }
          };
          H.prototype.clear = function () {
            this.numberContainer.removeAllChildren();
            this.Cu();
            this.numberContainer.width = 0x0;
          };
          H.prototype.Cu = function () {
            if (this._u && this.mu) {
              this.numberContainer.scaleX = this._u;
              this.numberContainer.scaleY = this.mu;
            }
          };
          H.prototype.pu = function (Q, X) {
            var A = Q;
            var V = '';
            var W = 0x1;
            if (this.enableShortenNumber && Q > 0x3e7) {
              W = 0x3e8;
              V = 'k';
            }
            var J = !v.getDefaultCurrencyFormat().hideDecimal && this.enableDecimal;
            A = J ? Math.floor(A / W) : Math.round(A / W);
            if (this.enableComma) {
              A = this.numberWithComma(A);
            }
            if (J) {
              A += this.yu(Q, X);
            }
            return A + V;
          };
          H.prototype.yu = function (Q, X) {
            var A;
            var V;
            var W;
            var J = v.getDefaultCurrencyFormat().decimalSeparator;
            if (this.enableShortenNumber && Q > 0x3e7) {
              A = Math.round(Q / 0x64) / 0xa;
              V = 0x2;
              W = X ? '' : J + '0';
            } else {
              A = Q;
              V = 0x3;
              W = J + '00';
            }
            var w = A.toString();
            if (-0x1 !== w.indexOf('.')) {
              for (W = J + (W = w.substring(w.indexOf('.') + 0x1, w.indexOf('.') + V)); W.length !== V;) {
                W += '0';
              }
            }
            return W;
          };
          H.prototype.gu = function (Q, X, A, V) {
            if (this.attributesForNumberContainer) {
              this.attributesForNumberContainer(Q, X, A, V);
            }
          };
          H.prototype.dequeueNumberContainer = function (Q) {
            var X = this.numberContainer.children[Q];
            if (!X) {
              (X = new cc.Node("container")).width = this.nodeNumberWidth;
              this.numberContainer.addChild(X);
              var A = new cc.Node("numberSprite");
              A.addComponent(cc.Sprite);
              var V = A.getComponent(cc.Sprite);
              V.srcBlendFactor = this.srcBlendFactor;
              V.dstBlendFactor = this.dstBlendFactor;
              X.addChild(A);
              A.color = new cc.Color().fromHEX(this.spriteColor);
            }
            return X;
          };
          H.prototype.resizeNumberIfNeeded = function () {
            var Q = this.numberContainer.width;
            var X = this.maxContainerSize / Q;
            var A = Q * this.numberContainer.scaleX;
            if (isFinite(X) && Math.round(A) > this.maxContainerSize) {
              this.numberContainer.scale = X;
            }
          };
          H.prototype.Mu = function (Q, X, A) {
            this.numberContainer.runAction(cc.sequence(cc.scaleTo(0.08, Q), cc.scaleTo(0.05, X), cc.callFunc(A, this)));
          };
          H.prototype.bu = function () {
            if (!this.lu) {
              var Q = this.lu = this.numberContainer.getComponent(cc.Layout);
              if (!Q) {
                Q = this.lu = this.numberContainer.addComponent(cc.Layout);
              }
              Q.resizeMode = cc.Layout.ResizeMode.CONTAINER;
              Q.horizontalDirection = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT;
              Q.type = cc.Layout.Type.HORIZONTAL;
              Q.spacingX = this.layoutSpacingX;
              Q.spacingY = this.layoutSpacingY;
            }
          };
          H.prototype.onDestroy = function () {
            this.attributesForNumberContainer = undefined;
          };
          __decorate([g({
            'type': cc.SpriteAtlas,
            'tooltip': false
          })], H.prototype, "numberSpriteAtlas", undefined);
          __decorate([g({
            'type': cc.SpriteAtlas,
            'tooltip': false
          })], H.prototype, "numberBlurSpriteAtlas", undefined);
          __decorate([g({
            'type': [cc.SpriteFrame],
            'tooltip': false
          })], H.prototype, "numberSprite", undefined);
          __decorate([g({
            'type': [cc.SpriteFrame]
          })], H.prototype, "numberBlurSprite", undefined);
          __decorate([g({
            'type': cc.SpriteFrame
          })], H.prototype, "kSprite", undefined);
          __decorate([g({
            'type': cc.macro.BlendFactor,
            'tooltip': false
          }), g({
            'type': cc.macro.BlendFactor,
            'tooltip': false
          })], H.prototype, "srcBlendFactor", undefined);
          __decorate([g({
            'type': cc.macro.BlendFactor,
            'tooltip': false
          })], H.prototype, "dstBlendFactor", undefined);
          __decorate([g({
            'type': cc.Integer,
            'tooltip': false
          })], H.prototype, "nodeNumberWidth", undefined);
          __decorate([g({
            'type': cc.Integer,
            'tooltip': false
          })], H.prototype, "nodeNumberY", undefined);
          __decorate([g({
            'type': cc.Float,
            'tooltip': false
          })], H.prototype, "nodeNumberScale", undefined);
          __decorate([g({
            'type': cc.Float,
            'tooltip': false
          })], H.prototype, "commaWidth", undefined);
          __decorate([g({
            'type': cc.Integer,
            'tooltip': false
          })], H.prototype, "commaY", undefined);
          __decorate([g({
            'type': cc.Float,
            'tooltip': false
          })], H.prototype, "commaScale", undefined);
          __decorate([g({
            'type': cc.Integer,
            'tooltip': false
          })], H.prototype, "decimalWidth", undefined);
          __decorate([g({
            'type': cc.Integer,
            'tooltip': false
          })], H.prototype, "decimalY", undefined);
          __decorate([g({
            'type': cc.Float,
            'tooltip': false
          })], H.prototype, "decimalScale", undefined);
          __decorate([g({
            'type': cc.Integer,
            'tooltip': false
          })], H.prototype, "decimalNumberWidth", undefined);
          __decorate([g({
            'type': cc.Integer,
            'tooltip': false
          })], H.prototype, "decimalNumberY", undefined);
          __decorate([g({
            'type': cc.Float,
            'tooltip': false
          })], H.prototype, "decimalNumberScale", undefined);
          __decorate([g({
            'type': cc.Integer,
            'tooltip': false
          })], H.prototype, "multiplySpriteWidth", undefined);
          __decorate([g({
            'type': cc.Integer,
            'tooltip': false
          })], H.prototype, "multiplySpriteY", undefined);
          __decorate([g({
            'type': cc.Float,
            'tooltip': false
          })], H.prototype, "multiplySpriteScale", undefined);
          __decorate([g({
            'type': cc.Float,
            'tooltip': false
          })], H.prototype, "layoutSpacingX", undefined);
          __decorate([g({
            'type': cc.Float,
            'tooltip': false
          })], H.prototype, "layoutSpacingY", undefined);
          __decorate([g({
            'type': cc.Float,
            'tooltip': false
          })], H.prototype, "blurScale", undefined);
          __decorate([g(I)], H.prototype, "spriteColor", undefined);
          __decorate([g(K)], H.prototype, "disableFixedWidth", undefined);
          __decorate([g(E)], H.prototype, "enablePrefixNumber", undefined);
          __decorate([g({
            'type': cc.Float,
            'visible': function () {
              return this.preview;
            }
          })], H.prototype, "previewNumber", null);
          return __decorate([f], H);
        }(G["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, TQ],
    'NumberDisplayInterface': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "6e9deOwoQZHDb/Mv4FAbr3R", "NumberDisplayInterface")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("Utils");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var K = null !== g && g.apply(this, arguments) || this;
            K.numberContainer = undefined;
            K.maxContainerSize = 0x476;
            K.enableComma = true;
            K.enableDecimal = true;
            K.enableShortenNumber = false;
            return K;
          }
          var b = {
            tooltip: false
          };
          var H = {
            tooltip: false
          };
          var I = {
            tooltip: false
          };
          __extends(Z, g);
          Z.prototype.numberWithComma = function (K) {
            var E = r.getDefaultCurrencyFormat().groupSeparator;
            return K.toString().replace(/\B(?=(\d{3})+(?!\d))/g, E);
          };
          Z.prototype.setResizeAnimation = function (K) {
            this.Au = K;
          };
          Z.prototype.displayNumber = function (K, E) {
            if (undefined === E) {
              E = true;
            }
            throw Error("NumberDisplayInterface: method must be overriden");
          };
          Z.prototype.clear = function () {
            throw Error("NumberDisplayInterface: method must be overriden");
          };
          Z.prototype.resizeNumberIfNeeded = function () {
            throw Error("NumberDisplayInterface: method must be overriden");
          };
          __decorate([q(cc.Node)], Z.prototype, "numberContainer", undefined);
          __decorate([q(cc.Float)], Z.prototype, "maxContainerSize", undefined);
          __decorate([q(b)], Z.prototype, "enableComma", undefined);
          __decorate([q(H)], Z.prototype, "enableDecimal", undefined);
          __decorate([q(I)], Z.prototype, "enableShortenNumber", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, TX],
    'NumberLabelControllerLite': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "88c0bvJUDVGt4Zbi3DnKpmf", "NumberLabelControllerLite")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("Utils");
        var G = cc.misc.lerp;
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.label = undefined;
            I.rollDuration = 0x2;
            I.maxWidth = 0x0;
            I.Iu = false;
            I.wu = 0x0;
            I.Ou = 0x0;
            I.Hu = 0x0;
            I.Bu = false;
            return I;
          }
          __extends(H, b);
          H.prototype.play = function (I, K) {
            if (this.Bu) {
              this.unschedule(this.Gu);
              this.Bu = false;
            }
            this.Ou = I;
            this.Hu = K;
            this.wu = 0x0;
            this.Bu = true;
            this.Iu = !(I > K);
            this.schedule(this.Gu, 0x0);
          };
          H.prototype.skip = function (I) {
            if (this.Bu) {
              this.unschedule(this.Gu);
              this.Bu = false;
            }
            this.label.string = v.formatCurrency(I);
          };
          H.prototype.Gu = function (I) {
            this.wu += I;
            var K = this.wu / this.rollDuration;
            K = K >= 0x1 ? 0x1 : 0x1 - Math.cos(K * Math.PI * 0.5);
            var E = G(this.Ou, this.Hu, K);
            if (this.Iu) {
              if (E >= this.Hu) {
                E = this.Hu;
                this.unschedule(this.Gu);
                this.Bu = false;
              }
            } else if (E <= this.Hu) {
              E = this.Hu;
              this.unschedule(this.Gu);
              this.Bu = false;
            }
            this.label.string = v.formatCurrency(E);
          };
          __decorate([g(cc.Label)], H.prototype, "label", undefined);
          __decorate([g(cc.Integer)], H.prototype, "rollDuration", undefined);
          __decorate([g(cc.Float)], H.prototype, "maxWidth", undefined);
          return __decorate([f], H);
        }(cc.Component);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, To],
    'NumberLabelController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "b6e176hgIFCvo12TMjQIRc7", "NumberLabelController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("NumberDisplayInterface");
        var v = z("Utils");
        var G = cc._decorator.ccclass;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.fu = false;
            Z._u = 0x0;
            Z.mu = 0x0;
            Z.Ac = undefined;
            return Z;
          }
          __extends(g, f);
          g.prototype.onLoad = function () {
            this._u = this.numberContainer.scaleX;
            this.mu = this.numberContainer.scaleY;
            this.bu();
            this.numberContainer.on(cc.Node.EventType.SIZE_CHANGED, this.resizeNumberIfNeeded, this);
          };
          g.prototype.setPrefix = function (Z) {
            this.Nu = Z;
          };
          g.prototype.displayNumber = function (Z, b, H) {
            if (undefined === b) {
              b = true;
            }
            this.Tu = H;
            var I = this.getNumberList(Z, b);
            this.Ac.string = this.Nu ? this.Nu + I : I;
            if (b) {
              var K = this.Tu;
              this.Tu = null;
              if (K) {
                K();
              }
            }
          };
          g.prototype.getNumberList = function (Z, b) {
            var H = /(?:\d+)(?:\.\d+)?/gm.exec(Z.toString());
            if (H) {
              var I = parseFloat(H[0x0]);
              var K = this.pu(I, b);
              return "number" == typeof Z ? K : Z.replace(H[0x0], K);
            }
            return Z.toString();
          };
          g.prototype.pu = function (Z, b) {
            var H = Z;
            var I = '';
            var K = 0x1;
            if (this.enableShortenNumber && Z > 0x3e7) {
              K = 0x3e8;
              I = 'k';
            }
            var E = !v.getDefaultCurrencyFormat().hideDecimal && this.enableDecimal;
            H = E ? Math.floor(H / K) : Math.round(H / K);
            if (this.enableComma) {
              H = this.numberWithComma(H);
            }
            if (E) {
              H += this.yu(Z, b);
            }
            return H + I;
          };
          g.prototype.yu = function (Z, b) {
            var H;
            var I;
            var K;
            var E = v.getDefaultCurrencyFormat().decimalSeparator;
            if (this.enableShortenNumber && Z > 0x3e7) {
              H = Math.round(Z / 0x64) / 0xa;
              I = 0x2;
              K = b ? '' : E + '0';
            } else {
              H = Z;
              I = 0x3;
              K = E + '00';
            }
            var Q = H.toString();
            if (-0x1 !== Q.indexOf(E)) {
              for (K = Q.substring(Q.indexOf(E), Q.indexOf(E) + I); K.length !== I;) {
                K += '0';
              }
            }
            return K;
          };
          g.prototype.clear = function () {
            this.Ac.string = '';
            this.Cu();
          };
          g.prototype.resizeNumberIfNeeded = function () {
            var Z = this;
            if (!this.fu) {
              var b = this.numberContainer.width;
              var H = this.maxContainerSize / b;
              var I = b * this.numberContainer.scaleX;
              var K = this.Tu;
              this.Tu = null;
              if (isFinite(H) && !this.fu && Math.round(I) > this.maxContainerSize) {
                this.fu = true;
                var E = H - 0.06;
                var Q = function () {
                  Z.fu = false;
                  if (K) {
                    K();
                  }
                };
                if (this.Au) {
                  this.Au(this.numberContainer, E, H, Q);
                } else {
                  this.Mu(E, H, Q);
                }
              } else {
                v.delayCallback(0x0)(function () {
                  if (K) {
                    K();
                  }
                });
              }
            }
          };
          g.prototype.Cu = function () {
            if (this._u && this.mu) {
              this.numberContainer.scaleX = this._u;
              this.numberContainer.scaleY = this.mu;
            }
          };
          g.prototype.Mu = function (Z, b, H) {
            this.numberContainer.runAction(cc.sequence(cc.scaleTo(0.08, Z), cc.scaleTo(0.05, b), cc.callFunc(H, this)));
          };
          g.prototype.bu = function () {
            this.Ac = this.numberContainer.getComponent(cc.Label);
            if (!this.Ac) {
              this.Ac = this.numberContainer.addComponent(cc.Label);
              this.Ac.fontSize = 0x2d;
              this.Ac.lineHeight = 0x3c;
              this.Ac.string = '';
            }
          };
          g.prototype.onDestroy = function () {
            this.Tu = null;
            this.Au = null;
          };
          return __decorate([G], g);
        }(r["default"]);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, TA],
    'NumberRollBaseController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "b940fHCDN9PkIykJo0EuNqR", "NumberRollBaseController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("NumberDisplayInterface");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.rollDuration = 0x2;
            b.displayController = undefined;
            b.Ou = 0x0;
            b.Pu = 0x0;
            b.xa = 0x0;
            b.wu = 0x0;
            return b;
          }
          __extends(Z, g);
          Z.prototype.onLoad = function () {
            this.enabled = false;
          };
          Z.prototype.play = function (b, H, I, K) {
            if (undefined === K) {
              K = true;
            }
            if (!(H < 0x0 || b < 0x0)) {
              if (b === H) {
                if (K) {
                  this.displayController.clear();
                }
                return void this.displayController.displayNumber(H, true, I);
              }
              this.Lu = I;
              this.Ou = b;
              this.Pu = H;
              this.xa = this.rollDuration;
              this.wu = 0x0;
              if (K) {
                this.displayController.clear();
              }
              this.displayController.displayNumber(b, false);
              this.enabled = true;
            }
          };
          Z.prototype.skip = function () {
            var b = this;
            if (this.enabled) {
              this.stop(false);
              this.displayController.displayNumber(this.Pu, true, function () {
                var H = b.Lu;
                b.Lu = undefined;
                if (H) {
                  H();
                }
              });
            }
          };
          Z.prototype.stop = function (b) {
            this.enabled = false;
            if (b) {
              this.displayController.clear();
              this.Lu = undefined;
            }
          };
          Z.prototype.update = function (b) {
            var H = this;
            this.wu += b;
            var I = this.wu / this.xa;
            if (I >= 0x1) {
              this.stop(false);
              this.displayController.displayNumber(this.Pu, true, function () {
                var E = H.Lu;
                H.Lu = undefined;
                if (E) {
                  E();
                }
              });
            } else {
              I = 0x1 - Math.cos(I * Math.PI * 0.5);
              var K = cc.misc.lerp(this.Ou, this.Pu, I);
              this.displayController.displayNumber(K, false);
            }
          };
          __decorate([q(cc.Integer)], Z.prototype, "rollDuration", undefined);
          __decorate([q({
            'override': true,
            'type': r["default"]
          })], Z.prototype, "displayController", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, TV],
    'NumberRollController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "6ce4aSiKeVGJZPyEX2VbsSD", "NumberRollController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("NumberDisplayController");
        var G = z("NumberRollBaseController");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function I() {
            var K = null !== b && b.apply(this, arguments) || this;
            K.displayController = undefined;
            return K;
          }
          var H = {
            type: v["default"],
            override: true
          };
          __extends(I, b);
          __decorate([g(H)], I.prototype, "displayController", undefined);
          return __decorate([f], I);
        }(G["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, TW],
    'NumberRollCurveController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "a0a6doEXuNKgJy7Sh2yc8T3", "NumberRollCurveController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("NumberCurvedController");
        var G = z("NumberRollBaseController");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function I() {
            var K = null !== b && b.apply(this, arguments) || this;
            K.displayController = undefined;
            return K;
          }
          var H = {
            type: v["default"],
            override: true
          };
          __extends(I, b);
          __decorate([g(H)], I.prototype, "displayController", undefined);
          return __decorate([f], I);
        }(G["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, TJ],
    'NumberRollLabelController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "9b7acp+xyJLMJ5gESfkIJHz", "NumberRollLabelController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("NumberLabelController");
        var G = z("NumberRollBaseController");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var K = null !== b && b.apply(this, arguments) || this;
            K.displayController = undefined;
            return K;
          }
          var I = {
            type: v["default"],
            override: true
          };
          __extends(H, b);
          __decorate([g(I)], H.prototype, "displayController", undefined);
          return __decorate([f], H);
        }(G["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, Tw],
    'OperatorJurisdictionModel': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "bcfa7PvQx1LKqzexGjCVrpW", "OperatorJurisdictionModel")) {
        var L = System.get("bvframework").OperatorJurisdictionModel;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'PageControlButton': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "49dd983G1VDGoSnw7stgTlI", "PageControlButton")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("Button");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.sprite = undefined;
            b.selectImg = undefined;
            b.normalImg = undefined;
            b.selectTintColor = undefined;
            b.normalTintColor = undefined;
            b.index = 0x0;
            b.Ru = false;
            return b;
          }
          __extends(Z, g);
          Z.prototype.init = function () {
            if (this.selectImg) {
              this.sprite.SpriteFrame = this.normalImg;
            }
            this.normalColor = this.normalTintColor;
            this.Ru = false;
          };
          Z.prototype.setSelect = function () {
            if (!this.Ru) {
              if (this.selectImg) {
                this.sprite.spriteFrame = this.selectImg;
              }
              this.normalColor = this.selectTintColor;
              this.Ru = true;
            }
          };
          Z.prototype.setUnselect = function () {
            if (this.Ru) {
              if (this.selectImg) {
                this.sprite.spriteFrame = this.normalImg;
              }
              this.normalColor = this.normalTintColor;
              this.Ru = false;
            }
          };
          Z.prototype.selectDot = function () {
            if (!(this.delegate && this.delegate.canChangePage && !this.delegate.canChangePage() || this.Ru)) {
              if (this.selectImg) {
                this.sprite.spriteFrame = this.selectImg;
              }
              this.normalColor = this.selectTintColor;
              this.Ru = true;
              if (this.delegate && this.delegate.didSelectDotAtIndex) {
                this.delegate.didSelectDotAtIndex(this.index);
              }
            }
          };
          __decorate([q(cc.Sprite)], Z.prototype, "sprite", undefined);
          __decorate([q(cc.SpriteFrame)], Z.prototype, "selectImg", undefined);
          __decorate([q(cc.SpriteFrame)], Z.prototype, "normalImg", undefined);
          __decorate([q(cc.Color)], Z.prototype, "selectTintColor", undefined);
          __decorate([q(cc.Color)], Z.prototype, "normalTintColor", undefined);
          __decorate([q(cc.Integer)], Z.prototype, "index", undefined);
          return __decorate([G], Z);
        }(r["default"]);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, TO],
    'PageControl': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "db0df9/6UZNW6sskb9QIFSg", "PageControl")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("PageControlButton");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.buttonPrefab = undefined;
            b.delegate = undefined;
            b.Eu = 0x0;
            b.ku = 0x0;
            b.Uu = [];
            return b;
          }
          __extends(Z, g);
          Z.prototype.init = function (b, H, I) {
            if (!(b >= H || b < 0x0)) {
              this.node.removeAllChildren();
              this.ku = H;
              this.delegate = I;
              var K = [];
              for (var E = 0x0; E < H; E++) {
                var Q = cc.instantiate(this.buttonPrefab);
                Q.parent = this.node;
                var X = Q.getComponent(r["default"]);
                X.index = E;
                X.delegate = this;
                X.init();
                K.push(X);
              }
              K[b].setSelect();
              this.Eu = b;
              this.Uu = K;
            }
          };
          Z.prototype.layoutContainer = function (b) {
            this.getComponent(cc.Layout).spacingX = b;
          };
          Z.prototype.changeCurrentPage = function (b) {
            var H = this.ku;
            if (!(b < 0x0 || b >= H)) {
              var I = this.Uu;
              I[this.Eu].setUnselect();
              I[b].setSelect();
              this.Eu = b;
            }
          };
          Z.prototype.getCurrentPage = function () {
            return this.Eu;
          };
          Z.prototype.didSelectDotAtIndex = function (b) {
            this.Uu[this.Eu].setUnselect();
            this.Eu = b;
            if (this.delegate && this.delegate.changePage) {
              this.delegate.changePage(b);
            }
          };
          Z.prototype.canChangePage = function () {
            var b = this.delegate;
            return !(b && b.enableChangePage && !b.enableChangePage());
          };
          __decorate([q(cc.Prefab)], Z.prototype, "buttonPrefab", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, Ta],
    'PayLineController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "c9f44ISS95Bv42TJHp3d0he", "PayLineController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.LINE_POINT_MAP = undefined;
        var v = z("SlotProperties");
        var G = z("Line");
        Y.LINE_POINT_MAP = [[cc.v2(-0x1db, 0x0), cc.v2(0x1db, 0x0)], [cc.v2(-0x1db, 0x104), cc.v2(0x1db, 0x104)], [cc.v2(-0x1db, -0x111), cc.v2(0x1db, -0x111)], [cc.v2(-0x1db, 0x16c), cc.v2(0x1db, -0x16d)], [cc.v2(-0x1db, -0x16d), cc.v2(0x1db, 0x16c)]];
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.circlePrefab = undefined;
            I.lineAnimation = undefined;
            I.circleAnimation = undefined;
            I.itemColumns = [];
            I.holder = undefined;
            I.lineHeaderPrefab = undefined;
            I.lineMediumPrefab = undefined;
            I.lineTailPrefab = undefined;
            I.ju = [undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined];
            I.Du = undefined;
            I.Wu = undefined;
            return I;
          }
          __extends(H, b);
          H.prototype.init = function () {
            var I = this;
            this.Du = this.lineAnimation.duration;
            this.Wu = this.circleAnimation.duration;
            var K = v.NORMAL_SLOT_ITEM_SIZE.height;
            var E = v.NORMAL_SLOT_ITEM_SIZE.width / 0x2;
            this.itemColumns.forEach(function (X, A) {
              X.position = cc.v2(E * (A - 0x2), 0x0);
            });
            this.ju.forEach(function (X, A) {
              var V = v.getColumnFromIndex(A);
              var W = v.getRowFromIndex(A);
              var J = cc.v2(0x0, -K * (W - 0x1));
              var w = v.NORMAL_SLOT_ROW - W;
              var O = I.itemColumns[0x2 * V];
              var F = cc.instantiate(I.circlePrefab);
              var D = F.getComponent("PayLineItemController");
              O.addChild(F, w);
              F.position = J;
              D.init();
              I.ju[A] = D;
            });
            G.Line.init(this.holder, 0x0, this.lineHeaderPrefab, this.lineMediumPrefab, this.lineTailPrefab);
            var Q = [];
            Y.LINE_POINT_MAP.forEach(function (X, A) {
              Q[A] = [];
              X.forEach(function (V, W) {
                Q[A][W] = cc.v2(V.x, V.y);
              });
            });
            G.Line.setLineMap(Q);
            G.Line.updateLineMargin(0x8, 8.5, 0x8);
            G.Line.updateLineAnimName("payline_header", "payline_medium", "payline_tail");
          };
          H.prototype.destroy = function () {
            this.ju.forEach(function (I) {
              I.stop();
              I.node.destroy();
            });
            this.ju = [];
            return b.prototype.destroy.call(this);
          };
          H.prototype.show = function (I, K, E) {
            var Q = this;
            var X = 0.4;
            if (E) {
              X *= 0.6;
            }
            I.forEach(function (A) {
              var V = Q.ju[A];
              V.node.active = true;
              V.play(0x0, E);
            });
            this.itemColumns.forEach(function (A) {
              A.runAction(cc.sequence(cc.delayTime(0x0), cc.fadeIn(X)));
            });
            if (K.length > 0x0) {
              G.Line.showLines(K);
              G.Line.startLineAnimation(true);
            }
          };
          H.prototype.showLine = function (I) {
            if (G.Line) {
              G.Line.hideAllLines();
            }
            if (I.length > 0x0) {
              G.Line.showLines(I);
              G.Line.startLineAnimation(true);
            }
          };
          H.prototype.hide = function () {
            if (G.Line) {
              G.Line.hideAllLines();
            }
            this.ju.forEach(function (I) {
              I.stop();
              I.node.active = false;
            });
            this.itemColumns.forEach(function (I) {
              I.stopAllActions();
              I.opacity = 0x0;
            });
          };
          __decorate([g(cc.Prefab)], H.prototype, "circlePrefab", undefined);
          __decorate([g(cc.AnimationClip)], H.prototype, "lineAnimation", undefined);
          __decorate([g(cc.AnimationClip)], H.prototype, "circleAnimation", undefined);
          __decorate([g([cc.Node])], H.prototype, "itemColumns", undefined);
          __decorate([g(cc.Node)], H.prototype, "holder", undefined);
          __decorate([g(cc.Prefab)], H.prototype, "lineHeaderPrefab", undefined);
          __decorate([g(cc.Prefab)], H.prototype, "lineMediumPrefab", undefined);
          __decorate([g(cc.Prefab)], H.prototype, "lineTailPrefab", undefined);
          return __decorate([f], H);
        }(cc.Component);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, TF],
    'PayLineItemController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "2147bFZHrVDQYbyCvZS/DhX", "PayLineItemController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("GConstants");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.animation = undefined;
            return b;
          }
          __extends(Z, g);
          Z.prototype.init = function () {
            this.node.active = false;
          };
          Z.prototype.play = function (b, H, I) {
            var K = this;
            if (this.xu) {
              throw Error("PayLineItemController: play - onPlayComplete callback from the previous iteration still exists!");
            }
            this.xu = function () {
              K.xu = undefined;
              if (I) {
                I();
              }
            };
            this.Fu();
            this.animation.stop();
            this.node.runAction(cc.sequence(cc.delayTime(b), cc.callFunc(function () {
              K.animation.defaultClip.speed = H ? 0x1 + r.TURBO_SPIN_SPEEDUP_FACTOR : 0x1;
              K.animation.setCurrentTime(0x0);
              K.animation.play();
              K.animation.on("finished", K.xu.bind(K));
            })));
          };
          Z.prototype.stop = function () {
            this.Vu();
            this.Fu();
            if (this.xu) {
              var b = this.xu;
              this.xu = undefined;
              if (b) {
                b();
              }
            }
          };
          Z.prototype.unuse = function () {
            this.stop();
          };
          Z.prototype.destroy = function () {
            this.stop();
            return g.prototype.destroy.call(this);
          };
          Z.prototype.Vu = function () {
            this.animation.off("finished");
            this.animation.stop();
            this.animation.setCurrentTime(0x0);
          };
          Z.prototype.Fu = function () {
            this.node.stopAllActions();
          };
          __decorate([q(cc.Animation)], Z.prototype, "animation", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, Th],
    'PayLineNumberController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "37901L1qc1MGaIbS5+1jIyr", "PayLineNumberController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("PayLineNumberItem");
        var G = cc._decorator;
        var q = G.ccclass;
        var f = G.property;
        var g = [cc.v2(-0x1fe, 0x1cc), cc.v2(0x1fe, 0x1cc), cc.v2(-0x1fe, 0x2bc), cc.v2(0x1fe, 0x2bc), cc.v2(-0x1fe, 0xc8), cc.v2(0x1fe, 0xc8), cc.v2(-0x1fe, 0x30c), cc.v2(0x1fe, 0x78), cc.v2(-0x1fe, 0x78), cc.v2(0x1fe, 0x30c)];
        var Z = [0x1, 0x1, 0x2, 0x2, 0x3, 0x3, 0x4, 0x4, 0x5, 0x5];
        var b = function (H) {
          function I() {
            var K = null !== H && H.apply(this, arguments) || this;
            K.payLineNumberItemPrefab = undefined;
            K.activeLines = [];
            K.map = [];
            return K;
          }
          __extends(I, H);
          I.prototype.init = function () {
            for (var K = 0x0; K < 0xa; K++) {
              var E = cc.instantiate(this.payLineNumberItemPrefab);
              var Q = E.getComponent(v["default"]);
              var X = Z[K];
              var A = {
                'payLineNumberItem': Q,
                'line': X
              };
              var V = g[K];
              Q.init(X);
              E.setPosition(V);
              this.node.addChild(E);
              this.map.push(A);
            }
          };
          I.prototype.destroy = function () {
            this.activeLines.length = 0x0;
            this.map.length = 0x0;
            this.node.destroyAllChildren();
            this.node.destroy();
            return H.prototype.destroy.call(this);
          };
          I.prototype.show = function (K) {
            var E = this;
            K.forEach(function (Q) {
              E.activeLines.push(Q);
            });
            this.map.forEach(function (Q) {
              var X = Q.payLineNumberItem;
              var A = Q.line;
              if (K.includes(A)) {
                X.play();
              }
            });
          };
          I.prototype.disable = function () {
            this.map.forEach(function (K) {
              K.payLineNumberItem.disable();
            });
            this.activeLines.length = 0x0;
          };
          I.prototype.idle = function () {
            this.map.forEach(function (K) {
              K.payLineNumberItem.idle();
            });
            this.activeLines.length = 0x0;
          };
          __decorate([f(cc.Prefab)], I.prototype, "payLineNumberItemPrefab", undefined);
          return __decorate([q], I);
        }(cc.Component);
        Y["default"] = b;
        cc._RF.pop();
      }
    }, TD],
    'PayLineNumberItem': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "0c976li/9BBQLbmNpe4DNk4", "PayLineNumberItem")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r;
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        (function (g) {
          g[g.NORMAL = 0x0] = "NORMAL";
          g[g.DARK = 0x1] = "DARK";
          g[g.GREY = 0x2] = "GREY";
          g[g.DARK_GREY = 0x3] = "DARK_GREY";
        })(r || (r = {}));
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.normalNumberDisplayNode = undefined;
            b.greyNumberDisplayNode = undefined;
            b.backgroundSprite = undefined;
            b.zu = undefined;
            b.Ju = undefined;
            return b;
          }
          __extends(Z, g);
          Z.prototype.init = function (b) {
            this.zu = this.normalNumberDisplayNode.getComponent("NumberDisplayController");
            this.zu.displayNumber(b, false);
            this.Ju = this.greyNumberDisplayNode.getComponent("NumberDisplayController");
            this.Ju.displayNumber(b, false);
            this.idle();
          };
          Z.prototype.play = function () {
            this.normalNumberDisplayNode.active = true;
            this.greyNumberDisplayNode.active = false;
            this.backgroundSprite.node.active = true;
            this.node.scale = 0x1;
            this.node.opacity = 0xff;
          };
          Z.prototype.disable = function () {
            this.normalNumberDisplayNode.active = false;
            this.greyNumberDisplayNode.active = true;
            this.backgroundSprite.node.active = false;
            this.node.scale = 0.8;
            this.node.opacity = 127.5;
          };
          Z.prototype.idle = function () {
            this.normalNumberDisplayNode.active = false;
            this.greyNumberDisplayNode.active = true;
            this.backgroundSprite.node.active = false;
            this.node.scale = 0.8;
            this.node.opacity = 127.5;
          };
          __decorate([q(cc.Node)], Z.prototype, "normalNumberDisplayNode", undefined);
          __decorate([q(cc.Node)], Z.prototype, "greyNumberDisplayNode", undefined);
          __decorate([q(cc.Sprite)], Z.prototype, "backgroundSprite", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, {}],
    'PayOutEffectController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "099ab3FAXlCS6JRUtR13wsh", "PayOutEffectController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.payOutItemNode = undefined;
            Z.qu = undefined;
            Z.Ku = undefined;
            return Z;
          }
          __extends(g, f);
          g.prototype.init = function (Z) {
            this.qu = Z;
            this.Ku = this.payOutItemNode.getComponent("PayOutItem");
            this.Ku.init();
          };
          g.prototype.destroy = function () {
            this.Ku = undefined;
            this.qu = undefined;
            return f.prototype.destroy.call(this);
          };
          g.prototype.play = function (Z, b, H) {
            var I = this.Qu(Z);
            var K = this.node.convertToNodeSpaceAR(I);
            this.payOutItemNode.setPosition(K);
            this.Ku.setup(b);
            this.Ku.play();
            if (H) {
              H();
            }
          };
          g.prototype.stop = function () {
            this.Ku.stop();
          };
          g.prototype.Qu = function (Z) {
            var b = Z[0x1];
            var H = this.qu.getSlotItemWorldPosition([b])[0x0];
            var I = cc.v2(H.x, H.y);
            if (0x5 === b) {
              I = cc.v2(H.x, H.y + 0x41);
            }
            return I;
          };
          __decorate([G(cc.Node)], g.prototype, "payOutItemNode", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'PayOutItem': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "2c10b5izwFC+pBQLe/G4U1m", "PayOutItem")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.winAmountDisplayNode = undefined;
            Z.winAmountBackgroundNode = undefined;
            Z.Yu = undefined;
            return Z;
          }
          __extends(g, f);
          g.prototype.init = function () {
            this.Yu = this.winAmountDisplayNode.getComponent("NumberDisplayController");
            this.node.active = false;
          };
          g.prototype.destroy = function () {
            this.Yu = undefined;
            return f.prototype.destroy.call(this);
          };
          g.prototype.setup = function (Z) {
            this.Yu.clear();
            this.Yu.displayNumber(Z);
            var b = Z.toFixed(0x2).length - 0x6;
            if (b > 0x0) {
              var H = 0.15 * b;
              this.winAmountBackgroundNode.scaleX = 0x1 + H;
            } else {
              this.winAmountBackgroundNode.scaleX = 0x1;
            }
          };
          g.prototype.play = function () {
            this.node.active = true;
          };
          g.prototype.stop = function () {
            this.node.active = false;
          };
          __decorate([G(cc.Node)], g.prototype, "winAmountDisplayNode", undefined);
          __decorate([G(cc.Node)], g.prototype, "winAmountBackgroundNode", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'PaySelectEffectController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "e2f7cLFCHFFprer2z6wff9/", "PaySelectEffectController")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("Utils");
        var q = z("SlotProperties");
        var g = z("GConstants");
        var Z = z("SpineConfigHandler");
        var b = z("AudioManager");
        var H = z("GeneralAudioConstant");
        var I = cc._decorator;
        var K = I.ccclass;
        var E = I.property;
        var Q = function (X) {
          function A() {
            var V = null !== X && X.apply(this, arguments) || this;
            V.paySelectItemPrefab = undefined;
            V.paySelectItemHolderNode = undefined;
            V.Xu = new cc.NodePool("PaySelectItem");
            V.Zu = [];
            V.$u = undefined;
            V.tl = undefined;
            V.il = undefined;
            V.qu = undefined;
            V.sl = undefined;
            V.el = undefined;
            V.nl = undefined;
            return V;
          }
          __extends(A, X);
          A.prototype.init = function (V, W, J, w) {
            this.qu = V;
            this.$u = W;
            this.il = J;
            this.tl = w;
            this.ol(q.NO_OF_SLOT_ITEMS);
          };
          A.prototype.destroy = function () {
            this.qu = undefined;
            this.$u = undefined;
            this.il = undefined;
            this.tl = undefined;
            this.Zu = undefined;
            this.Xu.clear();
            return X.prototype.destroy.call(this);
          };
          A.prototype.playAllLines = function (V, W, J, w) {
            this.node.opacity = 0xff;
            this.cl();
            this.hl();
            this.il.disable();
            var O = V.winPositions;
            O.forEach(function (R, d) {
              O[d] = parseInt(R, 0xa);
            });
            var F = q.getFilteredWinPositions(V);
            var D = W ? g.PAY_SELECT_TIMING.ALL_LINE_ONE_BY_ONE_INTERVAL : 0x0;
            var U = w;
            var S = g.PAY_SELECT_TIMING.PLAY_ALL_LINE_DURATION;
            if (S > 0x0) {
              U = undefined;
              G.delayCallback(S)(U);
            }
            this.al(O, F, W, D, J, U);
          };
          A.prototype.playAlternateLines = function (V, W) {
            var J = this;
            this.node.opacity = 0xff;
            var w = V.winPositions;
            var O = g.PAY_SELECT_TIMING.PLAY_ALTERNATE_LINE_DURATION;
            var F = g.PAY_SELECT_TIMING.ALTERNATE_LINE_ONE_BY_ONE_INTERVAL;
            var D = g.PAY_SELECT_TIMING.ALL_LINE_ONE_BY_ONE_INTERVAL;
            var U = 0x0;
            var S = function () {
              J.cl();
              J.hl();
              J.il.disable();
              var R;
              var x;
              var j;
              var P;
              var m = H.GENERAL_AUDIO.prizePayoutIdle.key;
              b.stopAudioIfPlaying(m);
              b.playAudioIfNotPlaying(m);
              if (U === w.length) {
                R = q.getFilteredWinPositions(V);
                x = true;
                j = D;
                P = w;
                U = 0x0;
              } else {
                R = V.getWinLinesByPosition(w[U]);
                x = true;
                j = F;
                var p = W.getWinValueByPosition(w[U]);
                J.$u.play(R, p);
                P = [w[U]];
                U++;
              }
              P.forEach(function (M, B) {
                P[B] = parseInt(M, 0xa);
              });
              J.al(P, R, x, j, false, undefined);
            };
            this.unscheduleDelayPlayAlternateLine = G.delayCallback(g.PAY_SELECT_TIMING.ALTERNATE_LINE_DELAY_TIME)(function () {
              J.unscheduleDelayPlayAlternateLine = undefined;
              S();
              J.schedule(S, O, undefined, 0x0);
            });
          };
          A.prototype.stopPaySelect = function (V) {
            if (undefined === V) {
              V = true;
            }
            this.cl();
            this.hl();
            if (V) {
              this.il.idle();
            }
            this.unscheduleAllCallbacks();
            var W = this.unscheduleDelayPlayAlternateLine;
            this.unscheduleDelayPlayAlternateLine = undefined;
            if (W) {
              W();
            }
          };
          A.prototype.show = function () {
            this.node.opacity = 0xff;
          };
          A.prototype.hide = function (V) {
            this.unscheduleAllCallbacks();
            var W = this.unscheduleDelayPlayAlternateLine;
            this.unscheduleDelayPlayAlternateLine = undefined;
            if (W) {
              W();
            }
            this.node.runAction(cc.sequence(cc.fadeOut(0.1), cc.callFunc(function () {
              if (V) {
                V();
              }
            })));
          };
          A.prototype.al = function (V, W, J, w, O, F) {
            var D = this;
            this.Zu = [];
            var U = q.sortReelIndex(W);
            var S = this.qu.getSlotItem(U);
            var R = 0x0;
            var d = function () {
              if (R === S.length - 0x1) {
                if (F) {
                  F();
                }
              } else {
                R++;
              }
            };
            this.tl.show(W, V, O);
            this.il.show(V);
            S.forEach(function (x, j) {
              var P = x.symbolIndex;
              var m = U[j];
              q.getColumnFromIndex(m);
              var p = x.worldPosition;
              var M = x.node.zIndex;
              var B = D.paySelectItemHolderNode.convertToNodeSpaceAR(p);
              var y = D.ul();
              var k = y.getComponent("PaySelectItem");
              var N0 = Z.spineConfigHandler.getNormalSymbolSpine(P);
              y.setPosition(B);
              y.zIndex = M;
              D.paySelectItemHolderNode.addChild(y);
              D.Zu.push(k);
              y.active = false;
              k.setup(N0, x);
              k.play(0x0, O, d);
            });
          };
          A.prototype.cl = function () {
            var V = this;
            if (this.el) {
              this.el();
            }
            this.el = undefined;
            this.Zu.forEach(function (W) {
              V.ll(W.node);
            });
          };
          A.prototype.hl = function () {
            this.$u.stop();
            this.tl.hide();
          };
          A.prototype.ol = function (V) {
            for (var W = 0x0; W < V; W++) {
              this.Xu.put(cc.instantiate(this.paySelectItemPrefab));
            }
          };
          A.prototype.ul = function () {
            return this.Xu.size() > 0x0 ? this.Xu.get() : cc.instantiate(this.paySelectItemPrefab);
          };
          A.prototype.ll = function (V) {
            this.Xu.put(V);
          };
          __decorate([E(cc.Prefab)], A.prototype, "paySelectItemPrefab", undefined);
          __decorate([E(cc.Node)], A.prototype, "paySelectItemHolderNode", undefined);
          return __decorate([K], A);
        }(cc.Component);
        Y["default"] = Q;
        cc._RF.pop();
      }
    }, TU],
    'PaySelectItem': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "9f6dfKNzXBHb5TYrbsh+sWw", "PaySelectItem")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("Utils");
        var G = z("GConstants");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.payoutSpine = undefined;
            I.particle = undefined;
            I.fl = undefined;
            I.dl = undefined;
            I.vl = undefined;
            return I;
          }
          __extends(H, b);
          H.prototype.unuse = function () {
            if (this.fl && this.vl) {
              this.fl.visible = true;
            }
            this.fl = undefined;
            if (this.dl) {
              this.dl();
            }
            this.payoutSpine.clearTracks();
            this.payoutSpine.setToSetupPose();
            this.node.active = false;
          };
          H.prototype.setup = function (I, K, E) {
            if (undefined === E) {
              E = true;
            }
            this.fl = K;
            this.vl = E;
            this.payoutSpine.skeletonData = I;
          };
          H.prototype.play = function (I, K, E) {
            var Q = this;
            this.particle.stop();
            this.particle.setCurrentTime(0x0);
            this.particle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            var X = function () {
              if (E) {
                E();
              }
            };
            var A = function () {
              if (Q.fl) {
                Q.fl.visible = false;
              }
              Q.node.active = true;
              Q.payoutSpine.clearTracks();
              Q.payoutSpine.setToSetupPose();
              Q.particle.play();
              Q.payoutSpine.timeScale = K ? 0x1 + G.TURBO_SPIN_SPEEDUP_FACTOR : 0x1;
              var V = Q.payoutSpine.setAnimation(0x0, "win", false);
              Q.payoutSpine.addAnimation(0x0, "idle", true);
              var W = K ? V.animation.duration * (0x1 - G.TURBO_SPIN_SPEEDUP_FACTOR) : V.animation.duration;
              Q.payoutSpine.addAnimation(0x0, "win_idle", true, 0x0);
              v.delayCallback(W)(X);
            };
            if (I > 0x0) {
              this.dl = v.delayCallback(I)(A);
            } else {
              A();
            }
          };
          H.prototype._l = function (I) {
            return {
              'pl': I,
              'easing': function (K) {
                return 0x0 === K || 0x1 === K ? K : Math.pow(0x2, -0x14 * K) * Math.sin((K - this.pl / 0x4) * Math.PI * 0x2 / this.pl) + 0x1;
              },
              'reverse': function () {
                return cc.easeElasticIn(this.pl);
              }
            };
          };
          H.prototype.destroy = function () {
            this.node.destroy();
            b.prototype.destroy.call(this);
          };
          __decorate([g(sp.Skeleton)], H.prototype, "payoutSpine", undefined);
          __decorate([g(cc.Animation)], H.prototype, "particle", undefined);
          return __decorate([f], H);
        }(cc.Component);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, Tu],
    'PlayerModel': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "a0229IKmbpNBb61dHEQilWX", "PlayerModel")) {
        var L = System.get("bvframework").PlayerModel;
        z.exports["default"] = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'PopOutItemHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "ed9375KsD1NcYjBhMUREze+", "PopOutItemHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator.ccclass;
        var v = function () {
          function G() {
            this.zi = undefined;
            this.bl = undefined;
            this.Sl = undefined;
            this.gl = undefined;
            this.Cl = undefined;
          }
          G.prototype.init = function (q, c) {
            var f = cc.instantiate(q);
            c.addChild(f);
            this.gl = f;
            this.Cl = f.getComponent("PopOutItem");
            this.bl = this.Cl.show.bind(this.Cl);
            this.Sl = this.Cl.hide.bind(this.Cl);
            f.active = false;
          };
          G.prototype.getPopoutItem = function () {
            return this.gl;
          };
          G.prototype.setCancelCallback = function (q) {
            this.zi = q;
          };
          G.prototype.yl = function () {
            var q = this.zi;
            if (q) {
              q();
            }
          };
          G.prototype.destroy = function () {
            this.node.destroy();
            _super.prototype.destroy.call(this);
          };
          G.prototype.setPopoutItemShowCallback = function (q) {
            this.bl = q;
          };
          G.prototype.runPopoutItemShowCallback = function (q, f, g, Z, b, H, I, K, E) {
            this.gl.active = true;
            this.gl.on(cc.Node.EventType.TOUCH_END, this.yl, this);
            this.Cl.setCancelCallback(this.yl.bind(this));
            if (this.bl) {
              this.bl(q, f, g, Z, b, H, I, K, E);
            }
          };
          G.prototype.setPopoutItemHideCallback = function (q) {
            this.Sl = q;
          };
          G.prototype.runPopoutItemHideCallback = function () {
            var q = this;
            if (this.Sl) {
              this.Sl(function () {
                q.gl.off(cc.Node.EventType.TOUCH_END, q.yl, q);
                q.gl.active = false;
              });
            }
          };
          return __decorate([r], G);
        }();
        Y["default"] = v;
        cc._RF.pop();
      }
    }, {}],
    'PopOutItem': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "5beaedmutZIkKPi8z2EJ82d", "PopOutItem")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        r.property;
        var G = function (q) {
          function c() {
            return null !== q && q.apply(this, arguments) || this;
          }
          __extends(c, q);
          c.prototype.show = function (f, g, Z, b, H, I, K, E, Q) {
            this.showItem(f, g, Z, b, H, I, K, E, Q);
          };
          c.prototype.hide = function () {
            this.hideItem();
          };
          c.prototype.showItem = function (f, g, Z, b, H) {
            this.setPayoutValue(b, g);
            this.node.active = true;
            this.node.setPosition(H);
            if (f) {
              f();
            }
          };
          c.prototype.hideItem = function () {
            this.node.active = false;
          };
          c.prototype.destroy = function () {
            this.node.destroy();
            q.prototype.destroy.call(this);
          };
          c.prototype.setPayoutValue = function (f, g) {
            var Z = g[f];
            Object.keys(Z).reverse();
          };
          c.prototype.setCancelCallback = function (f) {
            this.Ml = f;
          };
          c.prototype.cancalCallback = function () {
            if (this.Ml) {
              this.Ml();
            }
          };
          return __decorate([v], c);
        }(cc.Component);
        Y["default"] = G;
        cc._RF.pop();
      }
    }, {}],
    'PopOutTintController': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "58b31+llD1BAb9tUvY4+l2s", "PopOutTintController")) {
        var r = {
          value: true
        };
        Object.defineProperty(l, "__esModule", r);
        var v = {
          positionX: 0x0,
          positionY: 0x0,
          width: 0x438,
          height: 0x924,
          color: cc.Color.BLACK,
          opacityFadeTo: 0x96,
          defaultOpacity: 0x0,
          fadeInDuration: 0.2,
          fadeOutDuration: 0.2
        };
        var q = cc._decorator.ccclass;
        var c = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.Al = 0x0;
            Z.Il = 0.2;
            Z.wl = 0.2;
            return Z;
          }
          __extends(g, f);
          g.prototype.unuse = function () {
            this.node.opacity = 0x0;
          };
          g.prototype.reuse = function () {
            this.node.opacity = 0x0;
          };
          g.prototype.setup = function (Z) {
            var b = __assign(__assign({}, v), Z);
            this.node.setPosition(b.positionX, b.positionY);
            this.node.setContentSize(b.width, b.height);
            this.node.color = b.color;
            this.node.opacity = this.Ol = b.defaultOpacity;
            this.Al = b.opacityFadeTo;
            this.Il = b.fadeInDuration;
            this.wl = b.fadeOutDuration;
          };
          g.prototype.show = function (Z) {
            var b = this;
            if (this.Hl) {
              if (Z) {
                Z();
              }
            } else {
              this.node.stopAllActions();
              this.node.runAction(cc.sequence(cc.fadeTo(this.Il, this.Al), cc.callFunc(function () {
                b.Hl = true;
                if (Z) {
                  Z();
                }
              })));
            }
          };
          g.prototype.hide = function (Z) {
            this.Hl = false;
            this.node.stopAllActions();
            this.node.runAction(cc.sequence(cc.fadeTo(this.wl, this.Ol), cc.callFunc(function () {
              if (Z) {
                Z();
              }
            })));
          };
          g.prototype.destroy = function () {
            this.node.destroy();
            f.prototype.destroy.call(this);
          };
          return __decorate([q], g);
        }(cc.Component);
        l["default"] = c;
        cc._RF.pop();
      }
    }, {}],
    'Preference': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "f7e90cT1I9BDL45c7FgvgSo", "Preference")) {
        var L = System.get("common").Preference;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'Printer': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "75992e1c0JLNIAsOHARyF2L", "Printer")) {
        var L = System.get("bvframework").Printer;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'PrizeState': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "b8e16tOyU5GT4m5ZQseMAOn", "PrizeState")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        z("TweaksData");
        var r = z("SettingMenuHelper");
        var v = z("Utils");
        var G = z("GameEventHandler");
        var q = function () {
          function f(g, Z, b, H) {
            this.name = "Prize State";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.finalCallback = undefined;
            this.Bl = undefined;
            this.dataSource = g;
            this.generalControllers = Z.generalControllers;
            this.finalCallback = b;
            if (H) {
              this.Bl = H;
            }
          }
          f.prototype.setAvailableActions = function () {};
          f.prototype.clearAvailableActions = function () {};
          f.prototype.renderPrize = function () {
            v.spawnCallback(this.renderLines.bind(this), this.playPrize.bind(this))(this.exitState.bind(this));
          };
          f.prototype.renderLines = function (g) {
            if (this.dataSource.transactionModel.winLines) {
              this.playAllLines(g);
            } else if (g) {
              g();
            }
          };
          f.prototype.playAllLines = function (g) {
            var Z = this.dataSource.transactionModel;
            this.generalControllers.paySelectEffectController.playAllLines(Z.winLines, Z.reels, g, true);
          };
          f.prototype.playPrize = function (g) {
            var Z = this;
            var b = this.dataSource.transactionModel.totalWinAmount;
            var H = this.getWinThresholds();
            var K = {
              displayState: "Start",
              effectType: "BigWin"
            };
            if (H.bigWinThreshold && b >= H.bigWinThreshold) {
              G.emitGameEffectStateChangedEvent(K);
              this.runBigPrizeState(b, function () {
                var Q = {
                  displayState: "End",
                  effectType: "BigWin"
                };
                G.emitGameEffectStateChangedEvent(Q);
                Z.winAnnouncement("BigWin", g)();
              });
            } else if (H.mediumWinThreshold && b >= H.mediumWinThreshold) {
              this.runMediumPrizeState(b, this.winAnnouncement("MediumWin", g));
            } else if (b > 0x0) {
              this.runSmallPrizeState(b, this.winAnnouncement("SmallWin", g));
            } else {
              var E = this.dataSource.playerModel.balance;
              r.settingMenuHelper.setBalance(E);
              if (g) {
                g();
              }
            }
          };
          f.prototype.exitState = function () {
            if (this.Bl && this.Bl.clearAvailableActions) {
              this.Bl.clearAvailableActions();
            }
            this.clearAvailableActions();
            this.preExitStateCleanup();
            var g = this.finalCallback;
            this.finalCallback = undefined;
            this.destroy();
            v.deferCallback(true)(function () {
              v.deferCallback(true)(g);
            });
          };
          f.prototype.preExitStateCleanup = function () {};
          f.prototype.additionalDestroyCleanups = function () {};
          f.prototype.run = function () {
            if (this.Bl && this.Bl.setAvailableActions) {
              this.Bl.setAvailableActions();
            }
            this.setAvailableActions();
            this.renderPrize();
          };
          f.prototype.destroy = function () {
            this.dataSource = undefined;
            this.finalCallback = undefined;
            this.generalControllers = undefined;
            if (this.Bl) {
              this.Bl.destroy();
              this.Bl = undefined;
            }
            this.additionalDestroyCleanups();
          };
          f.prototype.winAnnouncement = function (g, Z) {
            return function () {
              if (Z) {
                Z();
              }
            };
          };
          f.prototype.getWinThresholds = function () {
            var g = this.dataSource.systemModel;
            var Z = g.maxLineNumber;
            var b = g.winThresholds;
            var H = this.dataSource.transactionModel;
            var I = H.betSizeValue;
            var K = H.betLevelValue;
            return b.getAllThresholds(I, K, Z);
          };
          f.prototype.runBigPrizeState = function (g, Z) {
            if (Z) {
              Z();
            }
          };
          f.prototype.runMediumPrizeState = function (g, Z) {
            if (Z) {
              Z();
            }
          };
          return f;
        }();
        Y["default"] = q;
        cc._RF.pop();
      }
    }, Tn],
    'QuitGameWithEvent': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "810d7ZWlFFHNJtnMN8hmalR", "QuitGameWithEvent")) {
        var L = System.get("bvframework").QuitGameWithEvent;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'QuitGame': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "d5fa8VRcgJD0a9wBWcZ0zoO", "QuitGame")) {
        var L = System.get("bvframework").QuitGame;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'RefreshWorldHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "0ba58fxYb1OnKR6fFDkRBO6", "RefreshWorldHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("WalletHelper");
        var v = z("SettingMenuHelper");
        var G = z("Utils");
        var q = z("RequestHandler");
        var f = function () {
          function g(Z, b, H) {
            if (undefined === H) {
              H = false;
            }
            this.ci = undefined;
            this.Gl = undefined;
            this.Nl = false;
            this.ci = Z;
            this.Gl = b;
            this.Nl = H;
          }
          g.prototype.refreshWorldByChangeWalletIdle = function (Z) {
            G.sequenceCallback(this.zs(), this.Js(), this.qs(), this.Ks(), this.Tl(), this.Qs(), this.Pl(), this.Ys())(function () {
              if (Z) {
                Z();
              }
            });
          };
          g.prototype.refreshWorldByBetOptionsIdle = function (Z) {
            G.sequenceCallback(this.zs(), this.Ll(), this.Tl(), this.Qs(), this.Rl(v.settingMenuHelper.betSizeValue, v.settingMenuHelper.betLevelValue), this.Js(), this.Ks(), this.Pl(), this.El(), this.Ys())(function () {
              if (Z) {
                Z();
              }
            });
          };
          g.prototype.refreshWorldByBetOptionsPreIdle = function (Z) {
            G.sequenceCallback(this.zs(), this.Ll(), this.Tl(), this.Qs(), this.Rl(v.settingMenuHelper.betSizeValue, v.settingMenuHelper.betLevelValue), this.Js(), this.Ks(), this.Pl(), this.El())(function () {
              if (Z) {
                Z();
              }
            });
          };
          g.prototype.refreshWorldByFeatureMode = function (Z) {
            G.sequenceCallback(this.zs(), this.Js(), this.Ks(), this.Tl(), this.Qs(), this.kl(), this.Ul(), this.Pl())(function () {
              if (Z) {
                Z();
              }
            });
          };
          g.prototype.Qs = function () {
            return G.deferCallback();
          };
          g.prototype.Ks = function () {
            var Z = this;
            return function (b) {
              var H = Z.ci.lastTransactionRawData;
              var I = Z.ci.transactionModel.accumulatedWinAmount;
              var K = Z.ci.playerModel.balance;
              r.walletHelper.setupWallet(H);
              v.settingMenuHelper.setBalance(K);
              v.settingMenuHelper.setWinAmount(I);
              if (b) {
                b();
              }
            };
          };
          g.prototype.qs = function () {
            var Z = this;
            return function (b) {
              if (v.settingMenuHelper.reevaluateBet()) {
                if (Z.Nl) {
                  Z.jl(b);
                } else {
                  v.settingMenuHelper.updateBetValues();
                  b();
                }
              } else {
                b();
              }
            };
          };
          g.prototype.Js = function () {
            var Z = this;
            return function (b) {
              var H = Z.ci.systemModel;
              var I = H.betSizeList;
              var K = H.betLevelList;
              var E = Z.ci.transactionModel;
              var Q = E.betLevelValue;
              var X = E.betSizeValue;
              v.settingMenuHelper.betSizeList = I;
              v.settingMenuHelper.betSizeValue = X;
              v.settingMenuHelper.betLevelList = K;
              v.settingMenuHelper.betLevelValue = Q;
              v.settingMenuHelper.updateBetValues();
              if (b) {
                b();
              }
            };
          };
          g.prototype.Rl = function (Z, b) {
            var H = this;
            return function (I) {
              var K = {
                'cs': Z,
                'ml': b
              };
              H.Dl(K, I);
            };
          };
          g.prototype.Tl = function () {
            var Z = this;
            return function (b) {
              Z.cleanup();
              if (b) {
                b();
              }
            };
          };
          g.prototype.Ys = function () {
            var Z = this;
            return function (b) {
              Z.enableSpinButton();
              if (b) {
                b();
              }
            };
          };
          g.prototype.zs = function () {
            var Z = this;
            return function (b) {
              Z.disableSpinButton();
              if (b) {
                b();
              }
            };
          };
          g.prototype.El = function () {
            var Z = this;
            return function (b) {
              Z.hideLoadingPage(b);
            };
          };
          g.prototype.Ll = function () {
            var Z = this;
            return function (b) {
              Z.showLoadingPage(b);
            };
          };
          g.prototype.Pl = function () {
            var Z = this;
            return function (b) {
              Z.setupNewWorld(b);
            };
          };
          g.prototype.kl = function () {
            var Z = this;
            return function (b) {
              Z.releaseResource(b);
            };
          };
          g.prototype.Ul = function () {
            var Z = this;
            return function (b) {
              Z.loadResource(b);
            };
          };
          g.prototype.Dl = function (Z, b) {
            q.doAPIRequest({
              'name': "Update Game Info",
              'apiRequest': this.Gl.updateGameInfo.bind(this.Gl),
              'apiRequestParam': Z
            }, function (H, I) {
              if (I && I.dt && b) {
                b();
              }
            });
          };
          g.prototype.jl = function (Z) {
            G.sequenceCallback(this.Rl(v.settingMenuHelper.betSizeValue, v.settingMenuHelper.betLevelValue), this.Js())(Z);
          };
          return g;
        }();
        Y["default"] = f;
        cc._RF.pop();
      }
    }, TS],
    'RegionUtils': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "478c5ZURp1N1Ide2QVm+Hgx", "RegionUtils")) {
        var L = System.get("bvframework").RegionUtils;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'ReplayModeHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "10cedajpphPS4PRVhRvT3S5", "ReplayModeHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.fmReplayModeHandler = undefined;
        var r = z("TransactionStateMachineHandler");
        var v = z("Utils");
        var G = z("SpaceBarInterrupter");
        var q = function () {
          function g() {
            this.Wl = false;
            this.xl = false;
          }
          g.prototype.startReplay = function () {
            r.cacheTransitionCallback();
            r.clearTransition();
            G.spaceBarInterrupter.pause();
            this.xl = true;
          };
          g.prototype.completeReplay = function () {
            this.Wl = true;
          };
          g.prototype.stopReplay = function (Z) {
            v.deferCallback(this)(function () {
              r.retrieveTransitionCallback();
              if (Z) {
                Z();
              }
            });
          };
          g.prototype.endReplay = function () {
            this.xl = false;
            this.Wl = false;
            G.spaceBarInterrupter.resume();
          };
          g.prototype.replayStarted = function () {
            return this.xl;
          };
          g.prototype.replayCompleted = function () {
            return this.Wl;
          };
          return g;
        }();
        Y["default"] = q;
        var f = new q();
        Y.fmReplayModeHandler = f;
        cc._RF.pop();
      }
    }, TR],
    'RequestHandler': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "d74abPCXkJA5YnU3Ax3A+KB", "RequestHandler")) {
        var L = System.get("bvframework").RequestHandler;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'ResRC': [function (z, L) {
      'use strict';

      if (!cc._RF.push(L, "741a8m7jWlDQowhgiMh2U/V", "ResRC")) {
        var Y = {
          unloadBundleAsset: "releaseBundleAsset",
          unload: "release",
          unloadBundle: "releaseBundle",
          deleteBundle: "removeBundle",
          loadByBundleAsset: "loadBundleAsset",
          loadRemoteBySingle: "loadRemoteSingle"
        };
        var l = function (v, G) {
          var q = {};
          for (var c in G) if (v.hasOwnProperty(c)) {
            q[v[c]] = G[c];
          } else {
            q[c] = G[c];
          }
          return q;
        }(Y, System.get("common").ResRC);
        for (var r in l) if (l.hasOwnProperty(r)) {
          L.exports[r] = l[r];
        }
        L.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'ResourceLoader': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "517d1jsi4lLyboQPLjM/Od/", "ResourceLoader")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.LoaderType = undefined;
        var r;
        var v = z("RetryHandler");
        var G = z("ResRC");
        var q = z("ResourceQualifierHelper");
        (function (g) {
          g[g.CUSTOM = -0x1] = "CUSTOM";
        })(r = Y.LoaderType || (Y.LoaderType = {}));
        var f = function () {
          function g() {
            this.Fl = new v["default"]();
          }
          g.prototype.loadAsset = function (Z) {
            return Z.type === r.CUSTOM ? this.Vl(Z) : this.zl(Z);
          };
          g.prototype.releaseAsset = function (Z) {
            return Z.type === r.CUSTOM ? this.Jl(Z) : this.ql(Z);
          };
          g.prototype.loadBundle = function (Z) {
            var b = this;
            var H = this.Fl;
            var I = Z.bundle;
            var K = Z.retryMessage;
            var E = Z.retryHandling;
            var Q = Z.retryingCallback;
            var X = Z.progressCallback;
            return new Promise(function (A) {
              var V = 0x0;
              var W = I.length;
              var J = I.slice();
              var w = I.slice();
              var O = [];
              var F = Object.create(null);
              H.init(K, function () {
                J = O.slice();
                w = O.slice();
                O = [];
                U();
              });
              var D = function () {
                if (0x0 === w.length) {
                  if (0x0 === O.length) {
                    return void A(F);
                  }
                  if (O.length > 0x0) {
                    if (H.canRetry()) {
                      Q(H.getRetryCount());
                      H.execute();
                    } else {
                      E(H.execute.bind(H), F, O, H.getRetryCount());
                    }
                  }
                }
              };
              var U = function () {
                J.forEach(function (S) {
                  b.loadAsset(S).then(function (R) {
                    V++;
                    var x = R.config.name;
                    F[x];
                    F[x] = R;
                    w.splice(w.indexOf(S), 0x1);
                    X(V, W);
                    D();
                  })["catch"](function () {
                    O.push(S);
                    w.splice(w.indexOf(S), 0x1);
                    D();
                  });
                });
              };
              U();
            });
          };
          g.prototype.releaseBundle = function (Z) {
            var b = this;
            var H = [];
            Z.forEach(function (I) {
              H.push(b.releaseAsset(I));
            });
            return new Promise(function (I) {
              Promise.all(H).then(function (K) {
                var E = Object.create(null);
                K.forEach(function (Q) {
                  E[Q.config.name] = Q;
                });
                I(E);
              });
            });
          };
          g.prototype.zl = function (Z) {
            return new Promise(function (b, H) {
              var I = Z.isLocalized ? q.getResourceURL(Z.url) : Z.url;
              G.load(I, Z.type, function (K, E) {
                var Q = {
                  config: Z,
                  result: E
                };
                if (K) {
                  H(K);
                } else {
                  b(Q);
                }
              });
            });
          };
          g.prototype.Vl = function (Z) {
            return new Promise(function (b, H) {
              Z.loadFunc(function (I) {
                var K = {
                  config: Z,
                  result: I
                };
                b(K);
              }, function (I) {
                H(I);
              });
            });
          };
          g.prototype.ql = function (Z) {
            return new Promise(function (b) {
              var H = Z.isLocalized ? q.getResourceURL(Z.url) : Z.url;
              G.release(H, Z.type);
              b({
                'config': Z
              });
            });
          };
          g.prototype.Jl = function (Z) {
            return new Promise(function (b) {
              if (Z.releaseFunc) {
                new Promise(Z.releaseFunc).then(function () {
                  var H = {
                    config: Z
                  };
                  b(H);
                });
              } else {
                b({
                  'config': Z
                });
              }
            });
          };
          return g;
        }();
        Y["default"] = f;
        cc._RF.pop();
      }
    }, Td],
    'ResourceQualifierHelper': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "95cabP+u+lNbIwBxruULrww", "ResourceQualifierHelper")) {
        var L = System.get("bvframework").ResourceQualifierHelper;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'RespinReelStatusHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "d93adui3bdMRqlY/gx8HH9d", "RespinReelStatusHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.respinReelStatusHandler = Y.RespinReelStatus = undefined;
        var r;
        var v = z("SlotProperties");
        (function (f) {
          f[f.NORMAL = 0x0] = "NORMAL";
          f[f.GOOD = 0x1] = "GOOD";
          f[f.GREAT = 0x2] = "GREAT";
        })(r = Y.RespinReelStatus || (Y.RespinReelStatus = {}));
        var G = function () {
          function f() {
            this.ci = undefined;
            this.Kl = undefined;
            this.Ql = undefined;
            this.Kl = 0x0;
            this.Ql = 0x0;
          }
          f.prototype.updateRespinReelStatus = function (g) {
            var Z = g.transactionModel;
            var b = Z.betLevelValue;
            var H = Z.betSizeValue;
            var I = Z.accumulatedWinAmount;
            var K = Z.reels;
            var E = I / (g.systemModel.maxLineNumber * b * H);
            if (K[0x0] === K[0x1] === K[0x2] === v.SLOT_INDEX.WILD) {
              this.Kl = r.GOOD;
              this.Ql = I > 0x0 && E >= 0x14 ? r.GREAT : r.NORMAL;
            } else if (K[0x0] === K[0x1] === K[0x2] === v.SLOT_INDEX.FU) {
              this.Kl = r.GOOD;
              this.Ql = I > 0x0 ? r.GREAT : r.NORMAL;
            } else {
              this.Kl = r.NORMAL;
              this.Ql = I > 0x0 && E >= 0x14 ? r.GOOD : r.NORMAL;
            }
          };
          Object.defineProperty(f.prototype, "leftReelStatus", {
            'get': function () {
              return this.Kl;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(f.prototype, "rightReelStatus", {
            'get': function () {
              return this.Ql;
            },
            'enumerable': false,
            'configurable': true
          });
          return f;
        }();
        Y["default"] = G;
        var q = new G();
        Y.respinReelStatusHandler = q;
        cc._RF.pop();
      }
    }, Tx],
    'RespinUIHelper': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "6078eW/s/VLPI6NLX3ti/oi", "RespinUIHelper")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("GSlotTransactionModel");
        var q = z("BaseUIHelper");
        var f = z("Utils");
        var g = z("AutomationDecorator");
        var Z = z("WinLine.spec");
        var b = z("BGMHandler");
        var H = z("GeneralAudioConstant");
        var I = z("AudioManager");
        var K = function (E) {
          function Q(X, A) {
            var V = E.call(this, X, A) || this;
            V.name = "Respin UI Helper";
            return V;
          }
          __extends(Q, E);
          Q.prototype.extraPreSpinningCleanup = function (X) {
            var A = this.dataSource.transactionModel.stateTransitionTo;
            var V = this.generalControllers.slotController;
            if (A === G.SpinType.RESPIN) {
              V.disableAllSprite();
            }
            if (X) {
              X();
            }
          };
          Q.prototype.playAllLines = function (X) {
            var A = this.dataSource.transactionModel;
            var V = A.reels;
            var W = A.featureWinSymbol;
            var J = A.winLines;
            A.stateTransitionTo;
            var w = this.generalControllers;
            var O = w.stickyController;
            var F = w.payLineNumberController;
            var D = w.payLineController;
            w.angpaoController;
            var U = function () {
              if (X) {
                X();
              }
            };
            if (W) {
              var S = J.winPositions;
              S.forEach(function (R, d) {
                S[d] = parseInt(R, 0xa);
              });
              F.show(S);
              D.showLine(S);
              O.playSticky(V, J, W, U);
            } else {
              U();
            }
          };
          Q.prototype.renderFeatureAfterResult = function (X) {
            var A = this.generalControllers.slotController;
            var V = this.dataSource.transactionModel;
            var W = V.stateTransitionFrom;
            var J = V.stateTransitionTo;
            if (W === G.SpinType.RESPIN && J === G.SpinType.NORMAL) {
              A.resetHiddenMiddleReel();
            }
            if (X) {
              X();
            }
          };
          Q.prototype.extraPlayAllLinesAction = function () {};
          Q.prototype.exitRespinTransition = function (X) {
            this.Yl(function () {
              if (X) {
                X();
              }
            });
          };
          Q.prototype.Yl = function (X) {
            var A = this.generalControllers;
            var V = A.uiShiftController;
            var W = A.backgroundController;
            var J = A.backgroundController2;
            var w = A.tigerController;
            var O = A.slotController;
            var F = A.angpaoController;
            b.crossFadePlayRespinBGMtoNormal();
            f.spawnCallback(function (D) {
              V.shiftUp(1.75, D);
            }, function (D) {
              f.delayCallback(0.2)(function () {
                var U = H.GENERAL_AUDIO.featureQuit.key;
                I.stopAudioIfPlaying(U);
                I.playAudioIfNotPlaying(U);
              });
              J.zoomIn();
              w.zoomIn();
              O.zoomIn();
              F.stopRespin();
              W.zoomIn(D);
            }, function (D) {
              w.playNormal(D);
            })(function () {
              if (X) {
                X();
              }
            });
          };
          __decorate([g.automationDec({
            'func': Z.winHighlightShown
          })], Q.prototype, "playAllLines", null);
          return Q;
        }(q["default"]);
        Y["default"] = K;
        cc._RF.pop();
      }
    }, Tj],
    'ResultState': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "08d5bAN5GxAf5RE9cTgDCu5", "ResultState")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("SlotStateMachine");
        var G = z("SlotAnalyticsHelper");
        var q = z("SlotAnalyticsEnum");
        var f = z("Utils");
        var g = z("SpinConfigHandler");
        var Z = function () {
          function b(H, I, K, E) {
            this.name = "Result State";
            this.process = q.SpinStateProcess.REEL_SPINNING;
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.finalCallback = undefined;
            this.hasFeature = undefined;
            this.Bl = undefined;
            this.dataSource = H;
            this.generalControllers = I.generalControllers;
            this.finalCallback = K;
            if (E) {
              this.Bl = E;
              E.triggerFastStop = this.handleSlotRegionFastStop.bind(this);
            }
          }
          b.prototype.setAvailableActions = function () {};
          b.prototype.resultDidStartRender = function (H) {
            if (H) {
              H();
            }
          };
          b.prototype.slotDidStartStopping = function (H) {
            if (H) {
              H();
            }
          };
          b.prototype.invokeSlotStop = function () {
            var H = this.generalControllers.slotController;
            if (H.getStopStyle() === v.StopStyle.FAST) {
              H.fastStop();
            } else {
              H.stopSpin();
            }
          };
          b.prototype.setupFeatureProperties = function () {
            this.hasFeature = false;
          };
          b.prototype.preExitStateCleanup = function () {};
          b.prototype.clearAvailableActions = function () {};
          b.prototype.additionalDestroyCleanups = function () {};
          b.prototype.setSlotData = function () {
            this.generalControllers.slotController.setReelData(this.dataSource.transactionModel.originalReels);
          };
          b.prototype.run = function () {
            this.Xl();
            this.Zl();
          };
          b.prototype.Xl = function () {
            this.$l();
            if (this.Bl && this.Bl.setAvailableActions) {
              this.Bl.setAvailableActions();
            }
            this.setAvailableActions();
          };
          b.prototype.Zl = function () {
            f.sequenceCallback(this.resultDidStartRender.bind(this), this.tf.bind(this), this['if'].bind(this), this.sf.bind(this))(this.Is.bind(this));
          };
          b.prototype.tf = function (H) {
            this.setSlotData();
            f.spawnCallback(this.ef.bind(this), this.slotDidStartStopping.bind(this))(H);
          };
          b.prototype.ef = function (H) {
            if (this.process === q.SpinStateProcess.REEL_SPINNING) {
              this.process = q.SpinStateProcess.REEL_STOPPING;
              this.generalControllers.slotController.setStopCompletedCallback(H);
              this.invokeSlotStop();
            } else if (H) {
              H();
            }
          };
          b.prototype['if'] = function (H) {
            this.setupFeatureProperties();
            if (H) {
              H();
            }
          };
          b.prototype.sf = function (H) {
            var I = this.dataSource.transactionModel.winLines;
            this.process = q.SpinStateProcess.REEL_STOPPED;
            if (this.Bl && this.Bl) {
              this.Bl.renderFeature(I || this.hasFeature);
            }
            this.renderFeature(H);
          };
          b.prototype.Is = function () {
            this.generalControllers.slotController.setOnClickCallback(undefined);
            this.preExitStateCleanup();
            var H = this.finalCallback;
            this.finalCallback = undefined;
            this.destroy();
            f.deferCallback(true)(H);
          };
          b.prototype.destroy = function () {
            this.generalControllers.slotController.setOnClickCallback(undefined);
            if (this.Bl && this.Bl.clearAvailableActions) {
              this.Bl.clearAvailableActions();
            }
            this.clearAvailableActions();
            this.dataSource = undefined;
            this.finalCallback = undefined;
            this.generalControllers = undefined;
            if (this.Bl) {
              this.Bl.destroy();
              this.Bl = undefined;
            }
            this.additionalDestroyCleanups();
          };
          b.prototype.$l = function () {
            var H = this.generalControllers.slotController;
            if (g.featureConfig.fastStopFeature && H.getStopStyle() !== v.StopStyle.FAST) {
              H.setOnClickCallback(this.handleSlotRegionFastStop.bind(this, q.SpinTrigger.CLICK));
            }
          };
          b.prototype.handleSlotRegionFastStop = function (H) {
            var I = this.generalControllers;
            var K = I.slotController;
            switch (this.process) {
              case q.SpinStateProcess.REEL_SPINNING:
                G.sendFastStopGA(H, I.spinButtonController.isAutoSpin());
                if (this.Bl && this.Bl.fastStopTriggeredWhileSpinning) {
                  this.Bl.fastStopTriggeredWhileSpinning();
                }
                this.fastStopTriggeredWhileSpinning();
                K.setOnClickCallback(undefined);
                K.markFastStop();
                break;
              case q.SpinStateProcess.REEL_STOPPING:
                G.sendFastStopGA(H, I.spinButtonController.isAutoSpin());
                if (this.Bl && this.Bl.triggerFastStopWhileStopping) {
                  this.Bl.triggerFastStopWhileStopping();
                }
                this.triggerFastStopWhileStopping();
                K.setOnClickCallback(undefined);
                K.fastStop();
            }
          };
          b.prototype.fastStopTriggeredWhileSpinning = function () {};
          b.prototype.triggerFastStopWhileStopping = function () {};
          return b;
        }();
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, TP],
    'RetryHandler': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "e77ca51GO5Az7liIm6SBn3P", "RetryHandler")) {
        var L = System.get("bvframework").RetryHandler;
        z.exports["default"] = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'RtConfig': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "7712dgg0/hBbbrh98akcuVw", "RtConfig")) {
        Y.__esModule = true;
        Y.cs_Config = undefined;
        var l = z("LaunchConfig");
        Y.cs_Launch = l.cs_Launch;
        var r = {
          gameId: 126,
          globalDomain: "com.pgsoft",
          bundleId: "com.pgsoft.slot.fortunetiger",
          loginMethod: window.LoginMethod,
          apiDomain: window.ApiDomain,
          version: "2.15.0.3",
          certifiedVersion: "1.0.0.0"
        };
        var v = Object.freeze(r);
        Y.cs_Config = v;
        cc._RF.pop();
      }
    }, Tm],
    'ScrollViewEx': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "4403eAPMfNGO4d5KWMoVrU7", "ScrollViewEx")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.speed = 0x1;
            Z.freeCells = [];
            Z.snapPause = false;
            Z.snapDone = false;
            Z.nextAppearTarget = undefined;
            Z.snapFinish = undefined;
            Z.clickPos = undefined;
            Z.clickTarget = undefined;
            Z.timer = undefined;
            return Z;
          }
          __extends(g, f);
          g.prototype.cellsInsertToParent = function () {
            if (this.freeCells.length) {
              for (var Z = 0x0; Z < this.content.children.length; Z++) {
                if (this.freeCells[Z]) {
                  this.freeCells[Z].cellNode.parent = this.content.children[Z];
                  this.freeCells[Z].cellNode.setPosition(cc.v2(0x0, 0x0));
                  this._i(this.freeCells[Z].cellNode);
                }
              }
              this.freeCells = [];
            }
            this.snapPause = false;
          };
          g.prototype.cellsPullOutFromParent = function (Z) {
            if (!this.freeCells.length) {
              this.snapPause = true;
              this.setSnapDone(true);
              for (var b = 0x0; b < this.content.children.length; b++) {
                var H = this.content.children[b].children[0x0];
                if (H) {
                  this.nf(H);
                  var I = H.parent.convertToWorldSpaceAR(H.getPosition());
                  var K = Z.convertToNodeSpaceAR(I);
                  this.freeCells[b] = {
                    'cellNode': H,
                    'position': K,
                    'index': b
                  };
                  this.freeCells[b].cellNode.setPosition(K);
                  this.freeCells[b].cellNode.parent = Z;
                }
              }
              return this.freeCells;
            }
          };
          g.prototype.setSnapPause = function (Z) {
            this.snapPause = Z;
          };
          g.prototype.setSnapDone = function (Z) {
            this.snapDone = Z;
          };
          g.prototype.isSnapDone = function () {
            return this.snapDone;
          };
          g.prototype.setNextAppearTarget = function (Z) {
            this.nextAppearTarget = Z;
          };
          g.prototype.setSnapFinish = function (Z) {
            this.snapFinish = Z;
          };
          g.prototype._i = function (Z) {
            Z.on(cc.Node.EventType.TOUCH_START, this.cf, this);
            Z.on(cc.Node.EventType.TOUCH_END, this.hf, this);
            Z.on(cc.Node.EventType.TOUCH_MOVE, this.rf, this);
            Z.on(cc.Node.EventType.TOUCH_CANCEL, this.af, this);
          };
          g.prototype.nf = function (Z) {
            Z.off(cc.Node.EventType.TOUCH_START, this.cf, this);
            Z.off(cc.Node.EventType.TOUCH_END, this.hf, this);
            Z.off(cc.Node.EventType.TOUCH_MOVE, this.rf, this);
            Z.off(cc.Node.EventType.TOUCH_CANCEL, this.af, this);
          };
          g.prototype.cf = function (Z) {
            var b = Z.touch.getLocation();
            this.clickPos = b;
            this.clickTarget = Z.currentTarget;
            this.timer = Date.now();
          };
          g.prototype.rf = function () {};
          g.prototype.hf = function (Z) {
            if (this.clickPos) {
              var b = Z.touch.getLocation();
              var H = this.clickPos;
              var I = this.timer;
              if (!(this.Mi(H.x, b.x) || this.Mi(H.y, b.y) || !I || Date.now() - I > 0x78)) {
                this.uf();
              }
            }
          };
          g.prototype.af = function (Z) {
            if (this.clickPos) {
              var b = Z.touch.getLocation();
              var H = this.clickPos;
              var I = this.timer;
              if (!(this.Mi(H.x, b.x) || this.Mi(H.y, b.y) || !I || Date.now() - I > 0x78)) {
                this.uf();
              }
            }
          };
          g.prototype.Mi = function (Z, b) {
            return Math.abs(b - Z) > 0x64;
          };
          g.prototype.bi = function (Z, b, H, I, K) {
            if (undefined === I) {
              I = 0x1;
            }
            E = cc.v2(Z, 0x0);
            Q = cc.v2(b, 0x0);
            if (E.sub(Q).mag() <= 0x1) {
              this.setSnapDone(true);
              if (K) {
                K();
              }
              return b;
            }
            var E;
            var Q;
            var X = Z + (H *= I) * (b - Z);
            if (Z >= b) {
              if (X <= b) {
                if (K) {
                  K();
                }
                X = b;
              }
            } else if (X >= b) {
              if (K) {
                K();
              }
              X = b;
            }
            return X;
          };
          g.prototype.uf = function () {
            this.clickTarget = undefined;
            this.timer = undefined;
          };
          __decorate([G(cc.Integer)], g.prototype, "speed", undefined);
          return __decorate([v], g);
        }(cc.ScrollView);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'Serializer': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "0e825vJtv1K6qUCtfPjN7c9", "Serializer")) {
        var L = System.get("common").Serialiser;
        z.exports.Serializer = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'SettingInfoFooterController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "06e65rpYzVNHbDR0e2vljl/", "SettingInfoFooterController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.SettingInfoFooterController = Y.ICON_FOOTER_TYPE = Y.WALLET_FOOTER_TYPE = undefined;
        var v;
        var G = z("Utils");
        var q = z("UIAppearanceHelper");
        var f = cc._decorator;
        var g = f.ccclass;
        var Z = f.property;
        (function (H) {
          H[H.CASH = 0x1] = "CASH";
          H[H.FREE_GAME = 0x2] = "FREE_GAME";
          H[H.BONUS = 0x3] = "BONUS";
          H[H.POINT = 0x4] = "POINT";
        })(v = Y.WALLET_FOOTER_TYPE || (Y.WALLET_FOOTER_TYPE = {}));
        (function (H) {
          H[H.SPIN = 0x2] = "SPIN";
          H[H.ROLL_OVER = 0x3] = "ROLL_OVER";
        })(Y.ICON_FOOTER_TYPE || (Y.ICON_FOOTER_TYPE = {}));
        var b = function (H) {
          function I() {
            var K = null !== H && H.apply(this, arguments) || this;
            K.background = undefined;
            K.balanceNode = undefined;
            K.customLeftFooterTitle = undefined;
            K.balanceValueNode = undefined;
            K.rightSlotNode = undefined;
            K.winValueNode = undefined;
            K.winHolderNode = undefined;
            K.winCashIconNode = undefined;
            K.winButton = undefined;
            K.totalWinNode = undefined;
            K.totalWinValueNode = undefined;
            K.freeGamesNode = undefined;
            K.specialIcon = undefined;
            K.freeSpinValue = undefined;
            K.walletButton = undefined;
            K.walletButtonSensor = undefined;
            K.walletNavigateIcon = undefined;
            K.walletNotificationIcon = undefined;
            K.betAmountLabel = undefined;
            K.betOptionsButton = undefined;
            K.betOptionsIcon = undefined;
            K.walletFooterTypeSFList = [];
            K.rewardFooterTypeSFList = [];
            K.maxBetButtonHolder = undefined;
            K.languageSensitiveLayoutList = [];
            K.lf = false;
            K.ff = false;
            K.currentBalance = 0x0;
            K.targetBalance = 0x0;
            K.winBalance = 0x0;
            K.walletNotify = false;
            K.lockWalletButton = false;
            K.lockBetOptionsButton = false;
            K.df = 0x0;
            K.vf = false;
            return K;
          }
          __extends(I, H);
          I.prototype.updateBetAmount = function (K, E) {
            var Q = this;
            if (undefined === E) {
              E = 0x0;
            }
            if (this._f) {
              this.betAmountLabel.string = this.mf = this._f;
              this.betAmountLabel.node.stopAllActions();
              var X = 0.5 * E + 1.2;
              this.betAmountLabel.node.runAction(cc.sequence(cc.scaleTo(0.1, X).easing(cc.easeOut(0.2)), cc.callFunc(function () {
                Q.betAmountLabel.string = K;
              }), cc.scaleTo(0.2, 0.9), cc.scaleTo(0.1, 1.05), cc.scaleTo(0.1, 0.95), cc.scaleTo(0.1, 0x1)));
              this._f = K;
            } else {
              this.betAmountLabel.string = this.mf = this._f = K;
            }
          };
          Object.defineProperty(I.prototype, "currentBetAmount", {
            'get': function () {
              if (undefined === this.mf || 0x0 === this.mf.length) {
                throw Error("SettingInfoFooterController :: currentBetAmount : Please set legit bet amount by calling updateBetAmount first!");
              }
              return parseFloat(this.mf);
            },
            'enumerable': false,
            'configurable': true
          });
          I.prototype.setOpenBetOptionsMenuCallback = function (K) {
            this.bf = K;
          };
          I.prototype.openBetOptionsMenu = function () {
            if (this.bf) {
              this.bf();
            }
          };
          I.prototype.setBetOptionsButtonLock = function (K) {
            if (undefined === K) {
              K = false;
            }
            this.lockBetOptionsButton = K;
          };
          I.prototype.interactableBetOptionsButton = function (K) {
            this.betOptionsButton.interactable = K;
            if (K) {
              if (undefined === this.Sf) {
                throw Error("SettingInfoFooter :: interactableBetOptionsButton : Please call boot() to setup default label color first!");
              }
              this.betAmountLabel.node.color = this.Sf;
            } else {
              this.betAmountLabel.node.color = cc.Color.WHITE;
            }
          };
          I.prototype.setOpenWinMenuCallback = function (K) {
            this.gf = K;
          };
          I.prototype.openWinMenu = function () {
            if (this.gf) {
              this.gf();
            }
          };
          I.prototype.interactableWinButton = function (K) {
            this.winButton.interactable = K;
            if (K) {
              if (undefined === this.Sf) {
                throw Error("SettingInfoFooter :: interactableWinButton : Please call boot() to setup default label color first!");
              }
              this.winValueNode.color = this.freeSpinValue.node.color = this.Sf;
            } else {
              this.winValueNode.color = this.freeSpinValue.node.color = cc.Color.WHITE;
            }
          };
          I.prototype.setWinIcon = function (K) {
            this.winCashIconNode.spriteFrame = K;
          };
          I.prototype.setWalletNavigateIcon = function (K) {
            switch (K) {
              case v.CASH:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = this.walletFooterTypeSFList[K - 0x1];
                break;
              case v.FREE_GAME:
              case v.BONUS:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = this.walletFooterTypeSFList[K - 0x1];
                this.specialIcon.spriteFrame = this.rewardFooterTypeSFList[K - 0x2];
                break;
              default:
                this.walletNavigateIcon.getComponent(cc.Sprite).spriteFrame = undefined;
            }
          };
          I.prototype.boot = function () {
            this.Cf = this.balanceValueNode.getComponent("NumberLabelControllerLite");
            this.yf = this.winValueNode.getComponent("NumberLabelControllerLite");
            this.Mf = this.totalWinValueNode.getComponent("NumberLabelControllerLite");
            this.betOptionsButton.normalColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.betOptionsButton.pressedColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.betOptionsButton.hoverColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.betOptionsButton.disabledColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.walletButton.normalColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.walletButton.pressedColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.walletButton.hoverColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.walletButton.disabledColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.winButton.normalColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.winButton.pressedColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.pressed");
            this.winButton.hoverColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.winButton.disabledColor = q.uiAppearanceHelper.v("setting.color_button_transition_a.normal");
            this.Sf = this.betAmountLabel.node.color;
            this.Cf.skip(0x0);
            this.yf.skip(0x0);
            this.Mf.skip(0x0);
          };
          I.prototype.changeWalletIconColor = function (K) {
            this.walletNavigateIcon.opacity = K ? q.uiAppearanceHelper.v("setting.color_button_transition_a.pressed").a : q.uiAppearanceHelper.v("setting.color_button_transition_a.normal").a;
          };
          I.prototype.showBackground = function (K, E) {
            if (undefined === E) {
              E = 0xe1;
            }
            this.background.active = K;
            this.background.opacity = E;
          };
          I.prototype.setOpenWalletMenuCallback = function (K) {
            this.Af = K;
          };
          I.prototype.setWalletButtonLock = function (K) {
            if (undefined === K) {
              K = false;
            }
            this.lockWalletButton = K;
          };
          I.prototype.interactableWalletButton = function (K) {
            this.walletButton.interactable = K;
            if (K) {
              if (undefined === this.Sf) {
                throw Error("SettingInfoFooter :: interactableWalletButton : Please call boot() to setup default label color first!");
              }
              this.balanceValueNode.color = this.Sf;
            } else {
              this.balanceValueNode.color = cc.Color.WHITE;
            }
          };
          I.prototype.changeWalletButtonColor = function (K) {
            this.walletNavigateIcon.opacity = K ? q.uiAppearanceHelper.v("setting.color_button_transition_a.pressed").a : q.uiAppearanceHelper.v("setting.color_button_transition_a.normal").a;
          };
          I.prototype.showBalanceNode = function (K) {
            this.balanceNode.active = K;
          };
          I.prototype.showTotalWinNode = function (K) {
            this.totalWinNode.active = K;
          };
          I.prototype.showFreeGamesNode = function (K) {
            this.freeGamesNode.active = K;
          };
          I.prototype.activateWalletNotify = function (K) {
            this.walletNotify = K;
            if (true === K) {
              this.walletNotificationIcon.active = K;
              this.walletNotificationIcon.stopAllActions();
              this.walletNotificationIcon.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.5, 1.2), cc.scaleTo(0.5, 0x1))));
            } else {
              this.walletNotificationIcon.stopAllActions();
              this.walletNotificationIcon.active = K;
            }
          };
          I.prototype.openWalletMenu = function () {
            if (this.Af) {
              this.Af();
            }
          };
          I.prototype.changeHolder = function (K) {
            if (!this.If) {
              this.If = K;
            }
            this.node.removeFromParent(false);
            K.addChild(this.node);
          };
          I.prototype.returnHolder = function () {
            if (!this.If) {
              throw Error("SettingInfoFooter :: returnHolder : Do not have parent to return");
            }
            this.node.removeFromParent(false);
            this.If.addChild(this.node);
          };
          I.prototype.showCustomInfoFooter = function () {
            this.lf = true;
            this.freeGamesNode.active = true;
            if (this.lf) {
              this.wf(true);
            }
          };
          I.prototype.hideCustomInfoFooter = function () {
            this.lf = false;
            this.freeGamesNode.active = false;
            this.winHolderNode.active = true;
            var K = this.Of;
            this.Of = undefined;
            if (K) {
              K();
            }
            var E = this.Hf;
            this.Hf = undefined;
            if (E) {
              E();
            }
            this.rightSlotNode.stopAllActions();
            this.rightSlotNode.scale = 0x1;
          };
          I.prototype.isCustomInfoFooter = function () {
            return this.lf;
          };
          I.prototype.updateBalance = function (K, E, Q) {
            if (undefined === this.Cf) {
              throw Error("SettingInfoFooter :: updateBalance : Please call boot() to setup balance label controller first!");
            }
            K = this.currentBalance ? this.currentBalance : this.currentBalance = G.isNumeric(E) ? E : 0x0;
            if (G.isNumeric(E)) {
              this.targetBalance = E;
            } else {
              E = this.targetBalance;
            }
            if (E <= K) {
              Q = false;
            }
            if (Q) {
              this.Cf.play(K, E);
            } else {
              this.Cf.skip(E);
            }
            this.currentBalance = this.targetBalance;
          };
          Object.defineProperty(I.prototype, "currentWinAmount", {
            'get': function () {
              return this.df;
            },
            'enumerable': false,
            'configurable': true
          });
          I.prototype.updateWinAmount = function (K, E, Q) {
            if (undefined === Q) {
              Q = true;
            }
            if (undefined === this.yf) {
              throw Error("SettingInfoFooter :: updateWinAmount : Please call boot() to setup win label controller first!");
            }
            var X = this.df;
            if (G.isNumeric(K)) {
              this.winBalance = K;
            } else {
              K = this.winBalance;
            }
            if (K <= X) {
              E = false;
            }
            if (E) {
              this.yf.play(X, K);
            } else {
              this.yf.skip(K);
            }
            if (this.lf && !this.ff) {
              this.wf(false, Q);
            }
            this.df = this.winBalance;
          };
          I.prototype.updateTotalWinAmount = function (K, E) {
            if (undefined === this.Mf) {
              throw Error("SettingInfoFooter :: updateTotalWinAmount : Please call boot() to setup total win label controller first!");
            }
            if (G.isNumeric(K)) {
              this.currentBalance = K;
            } else {
              K = this.currentBalance;
            }
            if (E) {
              this.Mf.play(0x0, K);
            } else {
              this.Mf.skip(K);
            }
          };
          I.prototype.setCustomMiddleInfoFooter = function (K, E) {
            if (undefined === E) {
              E = true;
            }
            this.freeSpinValue.string = K;
            this.ff = !E;
            if (this.lf) {
              this.wf(true, E);
            }
          };
          I.prototype.updateLayout = function (K) {
            this.languageSensitiveLayoutList.forEach(function (E) {
              return E.horizontalDirection = K ? cc.Layout.HorizontalDirection.RIGHT_TO_LEFT : cc.Layout.HorizontalDirection.LEFT_TO_RIGHT;
            });
          };
          I.prototype.wf = function (K, E) {
            if (undefined === E) {
              E = true;
            }
            var Q = 0x0;
            if (K) {
              this.winHolderNode.active = false;
              this.freeGamesNode.active = true;
              Q = 0x3;
              this.vf = true;
            } else {
              this.winHolderNode.active = true;
              this.freeGamesNode.active = false;
              Q = 0x5;
              this.vf = false;
            }
            this.Bf(Q, E);
          };
          I.prototype.Bf = function (K, E) {
            if (undefined === E) {
              E = true;
            }
            var Q = this.Of;
            this.Of = undefined;
            if (Q) {
              Q();
            }
            var X = this.Hf;
            this.Hf = undefined;
            if (X) {
              X();
            }
            this.rightSlotNode.stopAllActions();
            this.rightSlotNode.scale = 0x1;
            if (E) {
              this.Of = G.delayCallback(K)(this.Gf.bind(this));
            }
          };
          I.prototype.Gf = function () {
            var K = this;
            this.Of = undefined;
            var E = function () {
              if (K.vf) {
                K.winHolderNode.active = true;
                K.freeGamesNode.active = false;
                K.vf = false;
              } else {
                K.winHolderNode.active = false;
                K.freeGamesNode.active = true;
                K.vf = true;
              }
            };
            this.Hf = G.sequenceCallback(function (Q) {
              K.rightSlotNode.runAction(cc.sequence(cc.scaleTo(0.1, 0x1, 0x0), cc.callFunc(E), cc.scaleTo(0.1, 0x1, 0x1), cc.callFunc(function () {
                Q();
              })));
            })(function () {
              var Q;
              Q = K.vf ? 0x3 : 0x5;
              K.Hf = undefined;
              K.Bf(Q);
            });
          };
          __decorate([Z(cc.Node)], I.prototype, "background", undefined);
          __decorate([Z(cc.Node)], I.prototype, "balanceNode", undefined);
          __decorate([Z(cc.Label)], I.prototype, "customLeftFooterTitle", undefined);
          __decorate([Z(cc.Node)], I.prototype, "balanceValueNode", undefined);
          __decorate([Z(cc.Node)], I.prototype, "rightSlotNode", undefined);
          __decorate([Z(cc.Node)], I.prototype, "winValueNode", undefined);
          __decorate([Z(cc.Node)], I.prototype, "winHolderNode", undefined);
          __decorate([Z(cc.Sprite)], I.prototype, "winCashIconNode", undefined);
          __decorate([Z(cc.Button)], I.prototype, "winButton", undefined);
          __decorate([Z(cc.Node)], I.prototype, "totalWinNode", undefined);
          __decorate([Z(cc.Node)], I.prototype, "totalWinValueNode", undefined);
          __decorate([Z(cc.Node)], I.prototype, "freeGamesNode", undefined);
          __decorate([Z(cc.Sprite)], I.prototype, "specialIcon", undefined);
          __decorate([Z(cc.Label)], I.prototype, "freeSpinValue", undefined);
          __decorate([Z(cc.Button)], I.prototype, "walletButton", undefined);
          __decorate([Z(cc.Node)], I.prototype, "walletButtonSensor", undefined);
          __decorate([Z(cc.Node)], I.prototype, "walletNavigateIcon", undefined);
          __decorate([Z(cc.Node)], I.prototype, "walletNotificationIcon", undefined);
          __decorate([Z(cc.Label)], I.prototype, "betAmountLabel", undefined);
          __decorate([Z(cc.Button)], I.prototype, "betOptionsButton", undefined);
          __decorate([Z(cc.Node)], I.prototype, "betOptionsIcon", undefined);
          __decorate([Z([cc.SpriteFrame])], I.prototype, "walletFooterTypeSFList", undefined);
          __decorate([Z([cc.SpriteFrame])], I.prototype, "rewardFooterTypeSFList", undefined);
          __decorate([Z(cc.Node)], I.prototype, "maxBetButtonHolder", undefined);
          __decorate([Z([cc.Layout])], I.prototype, "languageSensitiveLayoutList", undefined);
          return __decorate([g], I);
        }(cc.Component);
        Y.SettingInfoFooterController = b;
        cc._RF.pop();
      }
    }, Tp],
    'SettingMenuButtonHelper': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "1ddf5VqGQ9OiqajxiLxeBVw", "SettingMenuButtonHelper")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator.ccclass;
        var v = function () {
          function G() {
            this.Nf = [];
            this.Tf = Object.create(null);
            this.Pf = Object.create(null);
            this.Lf = Object.create(null);
            this.Rf = Object.create(null);
            this.Ef = Object.create(null);
            this.kf = Object.create(null);
          }
          G.prototype.setButtonPrefab = function (q, c, f) {
            this.Tf[q] = c;
            this.kf[q] = f;
          };
          G.prototype.totalButtonsOccupied = function () {
            return this.Nf.length;
          };
          G.prototype.getButtonInList = function (q) {
            return cc.instantiate(this.Tf[q]).getComponent("GenericSettingButton");
          };
          G.prototype.setupSettingMenuButtonInList = function (q, c, f) {
            var g = cc.instantiate(this.Tf[q]);
            var Z = g.getComponent("GenericSettingButton");
            this.Nf.push(Z.button);
            Z.onClick = c;
            this.Lf[q] = false;
            this.Rf[q] = Z;
            if (f) {
              g.getComponent("ButtonTheme").colorKey = f;
            }
            return Z;
          };
          G.prototype.setupIndependentSettingMenuButton = function (q, c) {
            if (this.Tf[q]) {
              var f = cc.instantiate(this.Tf[q]).getComponent("GenericSettingButton");
              f.onClick = c;
              this.Lf[q] = false;
              this.Rf[q] = f;
              return f;
            }
          };
          G.prototype.setupOtherButtonInList = function (q, c) {
            var f = {
              isInteractable: c
            };
            this.Lf[q] = false;
            this.Ef[q] = f;
            this.kf[q] = false;
          };
          G.prototype.setButtonInteractableFlag = function (q, c) {
            if (undefined === c) {
              c = false;
            }
            this.Pf[q] = c;
          };
          G.prototype.setButtonInteractable = function (q) {
            if (!(this.kf[q] || false !== this.Lf[q])) {
              if (this.Ef[q]) {
                this.Ef[q].isInteractable(this.Pf[q]);
              } else {
                this.Rf[q].isInteractable = this.Pf[q];
              }
            }
          };
          G.prototype.setButtonLock = function (q, c) {
            if (undefined === c) {
              c = false;
            }
            this.Lf[q] = c;
          };
          G.prototype.isButtonLocked = function (q) {
            return this.Lf[q];
          };
          G.prototype.setAllButtonsInteractable = function (q) {
            var c = Object.keys(this.Rf);
            var f = 0x0;
            for (var g = c.length; f < g; f++) {
              this.setButtonInteractableFlag(parseInt(c[f]), q);
              this.setButtonInteractable(parseInt(c[f]));
            }
            var Z = Object.keys(this.Ef);
            f = 0x0;
            for (g = Z.length; f < g; f++) {
              this.setButtonInteractableFlag(parseInt(Z[f]), q);
              this.setButtonInteractable(parseInt(Z[f]));
            }
          };
          G.prototype.setButtonsLock = function (q) {
            var c = 0x0;
            for (var f = Object.keys(this.Rf).length; c < f; c++) {
              this.setButtonLock(c + 0x1, q);
            }
            c = 0x0;
            for (f = Object.keys(this.Ef).length; c < f; c++) {
              this.setButtonLock(c + 0x1, q);
            }
          };
          G.prototype.setLockAccess = function (q, c) {
            this.setButtonLock(q, c);
            if (c) {
              if (this.Ef[q]) {
                this.Ef[q].isInteractable(!c);
              } else {
                this.Rf[q].isInteractable = !c;
              }
            } else {
              this.setButtonInteractable(q);
            }
          };
          G.prototype.getButtonNode = function (q) {
            var c = this.Rf[q];
            return c ? c.node : undefined;
          };
          return __decorate([r("SettingMenuButtonHelper")], G);
        }();
        Y["default"] = v;
        cc._RF.pop();
      }
    }, {}],
    'SettingMenuController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "fba916JMWpJiL2n5fnfp4nN", "SettingMenuController")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        Y.SettingMenuController = undefined;
        var G = z("CanvasResizeBroadcaster");
        var q = z("HitPassThrough");
        var f = z("Utils");
        var g = z("UIAppearanceHelper");
        var Z = z("BVFramework");
        var b = cc._decorator;
        var H = b.ccclass;
        var I = b.property;
        var K = function (E) {
          function Q() {
            var X = null !== E && E.apply(this, arguments) || this;
            X.blackTintBackground = undefined;
            X.dimBackground = undefined;
            X.subControllerHolder = undefined;
            X.menusLayerHolder = undefined;
            X.defaultMenuLayerNode = undefined;
            X.moreMenuLayerNode = undefined;
            X.subControllerBG = undefined;
            X.settingInfoFooterFrontHolder = undefined;
            X.settingInfoFooterMiddleBottomHolder = undefined;
            X.settingInfoFooterBottomHolder = undefined;
            X.walletButtonSensor = undefined;
            X.hitPassThroughComponent = undefined;
            X.settingToast = undefined;
            X.settingToastBg = undefined;
            X.settingToastLayout = undefined;
            X.settingToastLabel = undefined;
            X.settingTurboSprite = undefined;
            X.settingTurboOnSprite = undefined;
            X.settingTurboOffSprite = undefined;
            X.featureBuyToast = undefined;
            X.featureBuyToastBg = undefined;
            X.featureBuyToastLayout = undefined;
            X.featureBuyToastLabel = undefined;
            X.featureBuyTurboSprite = undefined;
            X.reminderBoard = undefined;
            X.originalBetAmountLabel = undefined;
            X.reminderBoardLabel = undefined;
            X.holders = [];
            X.muteIcon = undefined;
            X.settingMenuUIBlock = undefined;
            X.Uf = false;
            X.xc = true;
            X.Wc = false;
            X.jf = [];
            X._h = [];
            X.Df = false;
            X.FRONT_MAX_HOLDER = 0x4;
            X.Wf = false;
            X.xf = false;
            X.Ff = 0.2;
            X.Vf = false;
            X.zf = 0x0;
            X.Jf = false;
            return X;
          }
          __extends(Q, E);
          Q.prototype.onLoad = function () {
            this.settingTurboSprite.node.color = g.uiAppearanceHelper.v("setting.theme_color");
            this.defaultMenuLayerNode.y = 0x0;
            this.settingToast.opacity = 0x0;
            this.featureBuyToast.opacity = 0x0;
            this.moreMenuLayerNode.y = -this.defaultMenuLayerNode.height;
            this.moreMenuLayerNode.opacity = 0x0;
            this.moreMenuLayerNode.active = false;
            this.reminderBoard.active = false;
            this.reminderBoard.opacity = 0x1;
            this.blackTintBackground.active = false;
            this.settingMenuUIBlock.active = false;
            this.subControllerHolder.height = this.jc = cc.view.getVisibleSize().height;
            var X = G["default"].subscribe(this.ui.bind(this));
            this.Dc = "function" == typeof X ? X : undefined;
            this.qf = Z.getGameContext();
          };
          Q.prototype.ui = function () {
            var X = this;
            var A = this.Kf;
            this.Kf = undefined;
            if (A) {
              A();
            }
            var V = [];
            if (this.Df) {
              V.push(function () {
                var W = cc.view.getVisibleSize().height;
                var J = X.Uc();
                X.subControllerHolder.height = W - J;
                X.subControllerBG.height = W;
              });
            } else {
              V.push(function () {
                if (undefined === X.jc) {
                  throw Error("SettingMenuController :: _onSizeChanged : Please update holder height using updateSubControllerHolderHeight first!");
                }
                var W = X.Uc();
                X.subControllerHolder.height = X.jc;
                X.subControllerBG.height = X.jc + W;
              });
            }
            this.Kf = f.sequenceCallback(f.delayCallback(0x0))(function () {
              X.Kf = undefined;
              for (var W = 0x0; W < V.length; W++) {
                V[W]();
              }
            });
          };
          Q.prototype.onDestroy = function () {
            var X = this.Dc;
            this.Dc = undefined;
            if (X) {
              X();
            }
          };
          Q.prototype.setBetChangeReminderLabel = function (X) {
            this.reminderBoardLabel.string = X;
          };
          Q.prototype.showBetReminderBoard = function (X) {
            if (!this.xf) {
              this.xf = true;
              this.reminderBoard.active = true;
              this.reminderBoard.stopAllActions();
              this.reminderBoard.runAction(cc.fadeIn(0.2));
              this.originalBetAmountLabel.string = X;
            }
          };
          Q.prototype.hideBetReminderBoard = function () {
            var X = this;
            if (this.xf) {
              this.xf = false;
              this.reminderBoard.stopAllActions();
              this.reminderBoard.runAction(cc.sequence(cc.fadeOut(0.2), cc.callFunc(function () {
                X.reminderBoard.active = false;
              })));
            }
          };
          Q.prototype.isSettingBetReminderBoardShowed = function () {
            return this.xf;
          };
          Q.prototype.cancelToChangeBetAmount = function () {
            if (this.Qf) {
              this.Qf();
            }
          };
          Q.prototype.confirmToChangeBetAmount = function () {
            if (this.Yf) {
              this.Yf();
            }
          };
          Q.prototype.setBetReminderCancelAndConfirmCallback = function (X, A) {
            this.Qf = X;
            this.Yf = A;
          };
          Q.prototype.showSettingTurboToast = function (X, A, V) {
            var W = this;
            if (undefined === V) {
              V = 0x2;
            }
            var J = this.Xf;
            this.Xf = undefined;
            if (J) {
              J();
            }
            this.settingToast.stopAllActions();
            if (!J) {
              this.settingToast.opacity = 0x1;
            }
            this.settingToastLabel.string = X;
            this.settingTurboSprite.node.active = true;
            this.settingTurboSprite.spriteFrame = A ? this.settingTurboOnSprite : this.settingTurboOffSprite;
            this.settingTurboSprite.node.stopAllActions();
            this.settingTurboSprite.node.opacity = 0x0;
            this.Xf = f.delayCallback(0x0)(function () {
              W.settingToastBg.width = W.settingToastLabel.node.width + 0x30 + W.settingTurboSprite.node.width;
              W.settingToastBg.height = W.settingToastLabel.node.height + 0x18;
              W.settingToast.opacity = 0xff;
              W.settingToast.runAction(cc.sequence(cc.scaleTo(0.1, 1.2), cc.spawn(cc.scaleTo(0.1, 0x1), cc.sequence(cc.delayTime(0.05), cc.callFunc(function () {
                W.settingTurboSprite.node.runAction(cc.fadeTo(0.05, 0xff));
              }))), cc.delayTime(V), cc.fadeOut(0.3), cc.callFunc(function () {
                W.Xf = undefined;
              })));
            });
          };
          Q.prototype.showSettingToast = function (X, A) {
            var V = this;
            if (undefined === A) {
              A = 0x2;
            }
            var W = this.Xf;
            this.Xf = undefined;
            if (W) {
              W();
            }
            this.settingToast.stopAllActions();
            this.settingTurboSprite.node.stopAllActions();
            this.settingTurboSprite.node.active = false;
            this.settingTurboSprite.node.opacity = 0x0;
            if (!W) {
              this.settingToast.opacity = 0x1;
            }
            this.settingToastLabel.string = X;
            this.Xf = f.delayCallback(0x0)(function () {
              V.settingToastBg.width = V.settingToastLabel.node.width + 0x30;
              V.settingToastBg.height = V.settingToastLabel.node.height + 0x18;
              V.settingToast.opacity = 0xff;
              V.settingToast.runAction(cc.sequence(cc.scaleTo(0.1, 1.2), cc.scaleTo(0.1, 0x1), cc.delayTime(A), cc.fadeOut(0.3), cc.callFunc(function () {
                V.Xf = undefined;
              })));
            });
          };
          Q.prototype.hideSettingToast = function () {
            var X = this;
            var A = this.Xf;
            this.Xf = undefined;
            if (A) {
              A();
            }
            this.settingToast.stopAllActions();
            this.settingToast.runAction(cc.sequence(cc.fadeOut(0.3), cc.callFunc(function () {
              X.Xf = undefined;
            })));
          };
          Q.prototype.showFeatureBuyToast = function (X, A) {
            var V = this;
            if (undefined === A) {
              A = 0x2;
            }
            var W = this.Zf;
            this.Zf = undefined;
            if (W) {
              W();
            }
            this.featureBuyToast.stopAllActions();
            this.featureBuyTurboSprite.node.stopAllActions();
            this.featureBuyTurboSprite.node.active = false;
            this.featureBuyTurboSprite.node.opacity = 0x0;
            if (!W) {
              this.featureBuyToast.opacity = 0x1;
            }
            this.featureBuyToastLabel.string = X;
            this.Zf = f.delayCallback(0x0)(function () {
              V.featureBuyToastBg.width = V.featureBuyToastLabel.node.width - 0x32;
              V.featureBuyToastBg.height = V.featureBuyToastLabel.node.height + 0x28;
              V.featureBuyToast.opacity = 0xff;
              V.featureBuyToast.runAction(cc.sequence(cc.scaleTo(0.1, 1.2), cc.scaleTo(0.1, 0x1), cc.delayTime(A), cc.fadeOut(0.3), cc.callFunc(function () {
                V.Zf = undefined;
              })));
            });
          };
          Q.prototype.hideFeatureBuyToast = function () {
            var X = this;
            var A = this.Zf;
            this.Zf = undefined;
            if (A) {
              A();
            }
            this.featureBuyToast.stopAllActions();
            this.featureBuyToast.runAction(cc.sequence(cc.fadeOut(0.3), cc.callFunc(function () {
              X.Zf = undefined;
            })));
          };
          Q.prototype.setFeatureBuyToastNodePosition = function (X, A, V) {
            this.featureBuyToast.setPosition(X, A, V);
          };
          Q.prototype.buttonsHolder = function () {
            return this.holders;
          };
          Q.prototype.addMenuItem = function (X) {
            this.holders[this.jf.length].addChild(X);
            this.jf.push(X);
            this.Fc();
            return this.holders[this.jf.length - 0x1];
          };
          Q.prototype.addEmptyItem = function () {
            this.jf.push(null);
            this.Fc();
            return this.holders[this.jf.length - 0x1];
          };
          Q.prototype.replaceMenuItems = function (X) {
            this.jf.length = 0x0;
            var A = 0x0;
            for (var V = X.length; A < V; A++) {
              this.jf.push(X[A]);
            }
            this.Fc();
          };
          Q.prototype.Fc = function () {
            this._h.length = 0x0;
            var X = 0x0;
            for (var A = this.jf.length; X < A; X++) {
              if (this.xc) {
                if (X >= this.FRONT_MAX_HOLDER) {
                  break;
                }
                this._h.push(this.jf[X]);
              } else if (X >= this.FRONT_MAX_HOLDER) {
                this._h.push(this.jf[X]);
              }
            }
          };
          Q.prototype.isItemVisible = function (X) {
            return -0x1 !== this._h.indexOf(X);
          };
          Q.prototype.visibleItems = function () {
            return this._h.slice();
          };
          Q.prototype.getTotalItems = function () {
            return this.jf.slice();
          };
          Q.prototype.isIdle = function () {
            return !this.Uf && this.xc;
          };
          Q.prototype.isShowingDefaultMenu = function () {
            return this.xc;
          };
          Q.prototype.setHitPassThroughPosAndSize = function (X, A, V, W) {
            var J = this.walletButtonSensor.convertToNodeSpaceAR(cc.v2(X, A));
            this.hitPassThroughComponent.passPoint = cc.v2(J.x, J.y);
            this.hitPassThroughComponent.passSize = cc.size(V, W);
          };
          Q.prototype.setHidden = function (X) {
            this.node.active = !X;
          };
          Q.prototype.getSettingInfoFooterFrontHolder = function () {
            return this.settingInfoFooterFrontHolder;
          };
          Q.prototype.getSettingInfoFooterBottomHolder = function () {
            return this.settingInfoFooterBottomHolder;
          };
          Q.prototype.getSettingInfoFooterMiddleBottomHolder = function () {
            return this.settingInfoFooterMiddleBottomHolder;
          };
          Q.prototype.setMenusLayerHolderOffsetPosition = function (X, A) {
            var V = this.menusLayerHolder;
            V.setPosition(V.x + X, V.y + A);
          };
          Q.prototype.isSwitchingMenuLayer = function () {
            return this.Wc;
          };
          Q.prototype.showMoreMenuLayer = function (X) {
            var A = this;
            if (undefined === X) {
              X = false;
            }
            if (!this.Wc) {
              this.Wc = true;
              this.xc = false;
              this.Fc();
              this.defaultMenuLayerNode.runAction(cc.sequence(cc.spawn(cc.moveTo(0.2, 0x0, -this.defaultMenuLayerNode.height).easing(cc.easeQuadraticActionOut()), cc.fadeOut(0.2)), cc.callFunc(function () {
                A.defaultMenuLayerNode.active = false;
                A.Wc = false;
                if (A.onMenuEndChanged) {
                  A.onMenuEndChanged();
                }
              })));
              this.moreMenuLayerNode.active = true;
              this.moreMenuLayerNode.runAction(cc.spawn(cc.moveTo(0.2, 0x0, 0x0).easing(cc.easeQuadraticActionOut()), cc.fadeIn(0.2).easing(cc.easeQuadraticActionOut())));
              if (X) {
                this.blackTintBackground.active = true;
                this.blackTintBackground.runAction(cc.fadeTo(0.2, 127.5));
              }
              var V = this.onMenuStartChanged;
              if (V) {
                V(true, true);
              }
            }
          };
          Q.prototype.hideMoreMenuLayer = function () {
            var X = this;
            if (!this.Wc) {
              this.Wc = true;
              this.xc = true;
              this.Fc();
              this.defaultMenuLayerNode.active = true;
              this.defaultMenuLayerNode.runAction(cc.sequence(cc.spawn(cc.moveTo(0.2, 0x0, 0x0).easing(cc.easeQuadraticActionOut()), cc.fadeIn(0.2)), cc.callFunc(function () {
                X.Wc = false;
                if (X.onMenuEndChanged) {
                  X.onMenuEndChanged();
                }
              })));
              this.moreMenuLayerNode.runAction(cc.sequence(cc.spawn(cc.moveTo(0.2, 0x0, -this.defaultMenuLayerNode.height).easing(cc.easeQuadraticActionOut()), cc.fadeOut(0.2).easing(cc.easeQuadraticActionOut())), cc.callFunc(function () {
                X.moreMenuLayerNode.active = false;
              })));
              if (true === this.blackTintBackground.active) {
                this.blackTintBackground.runAction(cc.sequence(cc.fadeOut(0.2), cc.callFunc(function () {
                  X.blackTintBackground.active = false;
                })));
              }
              var A = this.onMenuStartChanged;
              if (A) {
                A(false, true);
              }
            }
          };
          Q.prototype.isControllerPresenting = function () {
            return this.Uf;
          };
          Q.prototype.setIsControllerPresenting = function (X) {
            this.Uf = X;
          };
          Q.prototype.setSubControllerHolderMoveDuration = function (X) {
            this.Ff = X;
          };
          Q.prototype.Uc = function () {
            return this.node.parent.convertToWorldSpaceAR(cc.v2(this.node.x, this.node.y)).y;
          };
          Q.prototype.getGapBetweenBottomScreenValue = function () {
            return this.Uc();
          };
          Q.prototype.updateSubControllerHolderHeight = function (X) {
            this.subControllerHolder.height = this.jc = X;
          };
          Q.prototype.isPanelTouchMoving = function () {
            return this.Wf;
          };
          Q.prototype.startMovePanel = function (X, A) {
            if (!this.Uf) {
              this.Wf = false;
              this.Vf = false;
              this.subControllerHolder.height = A;
              this.subControllerHolder.y = -A;
              this.zf = X;
              this.subControllerBG.height = this.Uc() + A;
            }
          };
          Q.prototype.movePanel = function (X) {
            if (!this.Uf) {
              this.Wf = true;
              var A = this.subControllerHolder;
              var V = this.subControllerHolder.height;
              var W = A.parent.convertToNodeSpaceAR(cc.v2(0x0, X)).y;
              var J = Math.abs(this.zf - X);
              if (this.Vf) {
                A.y = W - V;
                if (A.y >= 0x0) {
                  A.y = 0x0;
                }
              } else if (J > 0x3c) {
                if (X > this.zf) {
                  this.Vf = true;
                  this.subControllerBG.opacity = 0xff;
                  if (this.$f) {
                    this.$f();
                  }
                }
              } else {
                A.y = W - V;
              }
            }
          };
          Q.prototype.closePanel = function () {
            var X = this;
            if (!this.Uf) {
              this.Uf = true;
              var A = this.subControllerHolder.height + this.Uc();
              this.subControllerHolder.runAction(cc.sequence(cc.moveTo(this.Ff, 0x0, -A), cc.callFunc(function () {
                X.Uf = false;
                X.Wf = false;
                X.subControllerBG.opacity = 0x0;
              })));
            }
          };
          Q.prototype.getCurrentPanelTopPositionY = function () {
            var X = this.subControllerHolder;
            return X.y + X.height;
          };
          Q.prototype.setWalletButtonLock = function (X) {
            if (undefined === X) {
              X = false;
            }
            this.Jf = X;
          };
          Q.prototype.interactableWalletButton = function (X, A) {
            if (false === this.Jf && !X && A) {
              this.closePanel();
            }
          };
          Q.prototype.setMenuUIBlock = function (X) {
            this.settingMenuUIBlock.active = X;
          };
          Q.prototype.updateLayout = function (X) {
            if (X) {
              this.settingToastLayout.horizontalDirection = cc.Layout.HorizontalDirection.RIGHT_TO_LEFT;
            }
          };
          __decorate([I(cc.Node)], Q.prototype, "blackTintBackground", undefined);
          __decorate([I(cc.Node)], Q.prototype, "dimBackground", undefined);
          __decorate([I(cc.Node)], Q.prototype, "subControllerHolder", undefined);
          __decorate([I(cc.Node)], Q.prototype, "menusLayerHolder", undefined);
          __decorate([I(cc.Node)], Q.prototype, "defaultMenuLayerNode", undefined);
          __decorate([I(cc.Node)], Q.prototype, "moreMenuLayerNode", undefined);
          __decorate([I(cc.Node)], Q.prototype, "subControllerBG", undefined);
          __decorate([I(cc.Node)], Q.prototype, "settingInfoFooterFrontHolder", undefined);
          __decorate([I(cc.Node)], Q.prototype, "settingInfoFooterMiddleBottomHolder", undefined);
          __decorate([I(cc.Node)], Q.prototype, "settingInfoFooterBottomHolder", undefined);
          __decorate([I(cc.Node)], Q.prototype, "walletButtonSensor", undefined);
          __decorate([I(q["default"])], Q.prototype, "hitPassThroughComponent", undefined);
          __decorate([I(cc.Node)], Q.prototype, "settingToast", undefined);
          __decorate([I(cc.Node)], Q.prototype, "settingToastBg", undefined);
          __decorate([I(cc.Layout)], Q.prototype, "settingToastLayout", undefined);
          __decorate([I(cc.Label)], Q.prototype, "settingToastLabel", undefined);
          __decorate([I(cc.Sprite)], Q.prototype, "settingTurboSprite", undefined);
          __decorate([I(cc.SpriteFrame)], Q.prototype, "settingTurboOnSprite", undefined);
          __decorate([I(cc.SpriteFrame)], Q.prototype, "settingTurboOffSprite", undefined);
          __decorate([I(cc.Node)], Q.prototype, "featureBuyToast", undefined);
          __decorate([I(cc.Node)], Q.prototype, "featureBuyToastBg", undefined);
          __decorate([I(cc.Layout)], Q.prototype, "featureBuyToastLayout", undefined);
          __decorate([I(cc.RichText)], Q.prototype, "featureBuyToastLabel", undefined);
          __decorate([I(cc.Sprite)], Q.prototype, "featureBuyTurboSprite", undefined);
          __decorate([I(cc.Node)], Q.prototype, "reminderBoard", undefined);
          __decorate([I(cc.Label)], Q.prototype, "originalBetAmountLabel", undefined);
          __decorate([I(cc.Label)], Q.prototype, "reminderBoardLabel", undefined);
          __decorate([I([cc.Node])], Q.prototype, "holders", undefined);
          __decorate([I(cc.Node)], Q.prototype, "muteIcon", undefined);
          __decorate([I(cc.Node)], Q.prototype, "settingMenuUIBlock", undefined);
          return __decorate([H], Q);
        }(cc.Component);
        Y.SettingMenuController = K;
        cc._RF.pop();
      }
    }, TM],
    'SettingMenuHandlers': [function (L, Y, v) {
      'use strict';

      if (!cc._RF.push(Y, "e4a87/dIGtMT5oq5NQEGbT5", "SettingMenuHandlers")) {
        var G = {
          value: true
        };
        Object.defineProperty(v, "__esModule", G);
        v.handleSettingMenuMusicChange = v.handleSettingMenuFlipped = v.additionalBetCalculation = v.updateDataSourceBetValue = v.getBetChangeCallback = v.updateBetChangesCallback = v.initializeSettingMenu = v.setupSettingMenu = undefined;
        var q = {
          settingMenuLibPath: "lib/setting_menu/"
        };
        var g = L("LaunchConfig");
        var Z = L("AnalyticsHelper");
        var b = L("QuitGameWithEvent");
        v.setupSettingMenu = function (V) {
          var W = Object.assign({}, q, V.settingMenuDependenciesPath);
          var J = V.settingMenuHelper;
          var w = V.dataSource;
          var O = V.callback;
          J.path = W.settingMenuLibPath;
          J.showChangeBetReminder = V.isProgressiveGame;
          J.manualUpdateBetFactorCallBack = K(w, J, V.betChangeCallback);
          J.betModifierUpdateCallback = I(w, J, V.betChangeCallback);
          J.reevaluateBetCallback = E(w, V.reevaluateBetCallback);
          J.additionalBetCalculationCallback = V.additionalBetCalculation ? V.additionalBetCalculation : Q;
          J.changeSoundVolume = A(V.toggleEffectMuted, V.toggleMusicMuted);
          var F = '1' !== g.cs_Launch.noAudio;
          J.audioConfigure = F;
          if (O) {
            O();
          }
        };
        v.initializeSettingMenu = function (V) {
          var W = V.settingMenuHelper;
          var J = V.dataSource;
          var w = V.callback;
          W.setSettingMenuController(V.settingController);
          W.addSettingInfoFooter(V.settingWalletPanelController);
          W.setOnClickReturnButtonCallback(function () {
            b.quitGameWithEvent("Setting Quit")();
          });
          W.setupSettingMenuButtons();
          W.menuChangedCallBack = V.settingMenuChangedHandling ? V.settingMenuChangedHandling : X(V.spinButtonController);
          var O = J.playerModel.balance;
          W.setBalance(O);
          W.updateBetValues();
          W.setAllButtonsInteractable(false);
          if (w) {
            w();
          }
        };
        v.updateBetChangesCallback = I;
        v.getBetChangeCallback = K;
        v.updateDataSourceBetValue = E;
        v.additionalBetCalculation = Q;
        v.handleSettingMenuFlipped = X;
        v.handleSettingMenuMusicChange = A;
        cc._RF.pop();
      }
      function I(V, W, J) {
        return function (w, O) {
          var F = V.systemModel.maxLineNumber;
          W.betSizeValue = w;
          W.betLevelValue = O;
          E(V)(w, O);
          Z.sendEvent(shell.ga.CATEGORY_GAME, shell.ga.EVENT_SLOT_CHANGE_BET, {
            'amount': w * O * F
          });
          if (J) {
            J();
          }
        };
      }
      function K(V, W, J) {
        return function (w, O) {
          I(V, W)(w, O);
          W.updateBetValues();
          if (J) {
            J();
          }
        };
      }
      function E(V, W) {
        return function (J, w) {
          V.transactionModel.betSizeValue = J;
          V.transactionModel.betLevelValue = w;
          if (W) {
            W();
          }
        };
      }
      function Q(V, W, J) {
        return V * W * J;
      }
      function X(V) {
        return function (W) {
          if (W) {
            V.hide();
          } else {
            V.show();
          }
        };
      }
      function A(V, W) {
        return function (J) {
          V(!J);
          W(!J);
        };
      }
    }, TB],
    'SettingMenuHelper': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "35d29M3VudMFqjm4gRoo2G6", "SettingMenuHelper")) {
        var G = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", G);
        Y.BackButtonType = Y.settingMenuHelper = Y.SettingMenuType = Y.ButtonPrefabType = Y.SubControllers = undefined;
        var q;
        var Z;
        var H;
        var I = z("Utils");
        var K = z("SettingMenuButtonHelper");
        var E = z("NotifyHelper");
        var Q = z("Preference");
        var X = z("BVFramework");
        var A = z("GameEventHandler");
        var V = System.get("wallet");
        var W = System.get("slot-menu");
        var J = System.get("game-history");
        var w = System.get("paytable-rules");
        var O = cc._decorator.ccclass;
        var F = Q.getPreference("setting_menu");
        F.defineItem("soundOn", true);
        (function (j) {
          j[j.SPIN_OPTIONS = 0x0] = "SPIN_OPTIONS";
          j[j.BET_OPTIONS = 0x1] = "BET_OPTIONS";
          j[j.SOUND = 0x2] = "SOUND";
          j[j.HISTORY = 0x3] = "HISTORY";
          j[j.PAYTABLE = 0x4] = "PAYTABLE";
          j[j.RULE = 0x5] = "RULE";
          j[j.WALLET = 0x6] = "WALLET";
        })(Y.SubControllers || (Y.SubControllers = {}));
        (function (j) {
          j[j.SPIN_OPTIONS = 0x2] = "SPIN_OPTIONS";
          j[j.BET_OPTIONS = 0x3] = "BET_OPTIONS";
          j[j.MORE_MENU = 0x4] = "MORE_MENU";
          j[j.SOUND = 0x5] = "SOUND";
          j[j.PAYTABLE = 0x6] = "PAYTABLE";
          j[j.RULE = 0x7] = "RULE";
          j[j.HISTORY = 0x8] = "HISTORY";
          j[j.HIDE_MORE = 0x9] = "HIDE_MORE";
          j[j.MINUS_BET = 0xa] = "MINUS_BET";
          j[j.PLUS_BET = 0xb] = "PLUS_BET";
          j[j.WALLET = 0xc] = "WALLET";
          j[j.WIN = 0xd] = "WIN";
          j[j.TURBO_SPIN = 0xe] = "TURBO_SPIN";
          j[j.QUIT = 0xf] = "QUIT";
          j[j.MAX_BET = 0x10] = "MAX_BET";
        })(q = Y.ButtonPrefabType || (Y.ButtonPrefabType = {}));
        (function (j) {
          j[j.HIDDEN = 0x0] = "HIDDEN";
          j[j.NORMAL_BACK_FUNC = 0x1] = "NORMAL_BACK_FUNC";
        })(Z || (Z = {}));
        Y.BackButtonType = Z;
        (function (j) {
          j[j.LEGACY = 0x0] = "LEGACY";
          j[j.NEW = 0x1] = "NEW";
        })(H = Y.SettingMenuType || (Y.SettingMenuType = {}));
        var D = new (function (j) {
          function P() {
            var M = j.call(this) || this;
            var B = {
              sliderEffect: "audio/slider_effect",
              listItemClick: "audio/list_item_click",
              menuIconPress: "audio/menu_icon_press",
              walletCountingAbove: "audio/wallet_counting_above"
            };
            var y = {
              sliderEffect: false,
              listItemClick: false,
              menuIconPress: false,
              walletCountingAbove: false
            };
            M.soundOn = F.soundOn;
            M.turboSpinOn = false;
            M.isFreeGameMode = false;
            M.td = false;
            M.sd = true;
            M.ed = Z.HIDDEN;
            M.nd = 0x0;
            M.od = '';
            M.hd = 0x0;
            M.rd = [];
            M.ad = [];
            M.lt = 0x0;
            M.ut = 0x0;
            M.ud = '';
            M.ld = B;
            M.fd = y;
            M.dd = 0x0;
            M.balanceAmountLessThan = 0x0;
            M.autoSpinCount = 0x0;
            M.balanceAmountMoreThan = 0x0;
            M.singleWinAmount = 0x0;
            M.vd = false;
            M._d = false;
            M.md = false;
            M.pd = new K["default"]();
            M.qf = X.getGameContext();
            M.bd = false;
            M.Sd();
            M.gd();
            M.qf.on("Game.Initialized", M.Cd.bind(M));
            return M;
          }
          __extends(P, j);
          Object.defineProperty(P.prototype, "path", {
            'get': function () {
              return this.od;
            },
            'set': function (M) {
              this.od = M;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.setSettingMenuController = function (M) {
            this.yd = M;
          };
          Object.defineProperty(P.prototype, "settingMenuController", {
            'get': function () {
              if (!this.yd) {
                throw Error("SettingMenuHelper :: settingMenuController : Cannot find settingMenuController. Please setup using setSettingMenuController first!");
              }
              return this.yd;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.initAudio = function (M) {
            this.Md(M);
          };
          P.prototype.loadAudio = function (M) {
            this.Ad(M);
          };
          P.prototype.setButtonPrefab = function (M, B, y) {
            if (undefined === y) {
              y = false;
            }
            this.pd.setButtonPrefab(M, B, y);
          };
          Object.defineProperty(P.prototype, "autoSpinButtonLocaleIcon", {
            'get': function () {
              if (!this.Id) {
                throw Error("SettingMenuHelper :: autoSpinButtonLocaleIcon : Cannot find autoSpinButtonLocaleIcon. Please setup using settingMenuLocaleIcons setter first!");
              }
              return this.Id;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "historyButtonLocaleIcon", {
            'get': function () {
              if (!this.wd) {
                throw Error("SettingMenuHelper :: historyButtonLocaleIcon : Cannot find historyButtonLocaleIcon. Please setup using settingMenuLocaleIcons setter first!");
              }
              return this.wd;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "settingInfoFooterLocaleWinIcon", {
            'get': function () {
              if (!this.Od) {
                throw Error("SettingMenuHelper :: settingInfoFooterLocaleWinIcon : Cannot find settingInfoFooterLocaleWinIcon. Please setup using settingMenuLocaleIcons setter first!");
              }
              return this.Od;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "turboOnButtonLocaleIcon", {
            'get': function () {
              if (!this.Hd) {
                throw Error("SettingMenuHelper :: turboOnButtonLocaleIcon : Cannot find turboOnButtonLocaleIcon. Please setup using settingMenuLocaleIcons setter first!");
              }
              return this.Hd;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "turboOffButtonLocaleIcon", {
            'get': function () {
              if (!this.Bd) {
                throw Error("SettingMenuHelper :: turboOffButtonLocaleIcon : Cannot find turboOffButtonLocaleIcon. Please setup using settingMenuLocaleIcons setter first!");
              }
              return this.Bd;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "settingMenuLocaleIcons", {
            'set': function (M) {
              this.Id = M.getSpriteFrame("txt_auto");
              this.wd = M.getSpriteFrame("ic_hist");
              if (this.Gd) {
                this.Gd.setIconSprite(this.wd);
              }
              this.Od = M.getSpriteFrame("ic_win");
              if (this.Nd) {
                this.Nd.setWinIcon(this.Od);
              }
              this.Hd = M.getSpriteFrame("txt_turbo_on");
              this.Bd = M.getSpriteFrame("txt_turbo_off");
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.Td = function () {
            var M = this;
            var B = this.settingMenuController;
            var y = this.pd.setupSettingMenuButtonInList(q.TURBO_SPIN, function () {
              if (!B.isSwitchingMenuLayer()) {
                M.setTurboSpinButtonState(!M.turboSpinOn);
                M.playMenuIconPressSound();
                if ("land" === shell.environment.getOrientationMode()) {
                  B.hideMoreMenuLayer();
                }
              }
            });
            y.setTurboSprites(this.turboOnButtonLocaleIcon, this.turboOffButtonLocaleIcon);
            y.getTurboSpinCallback = function () {
              return this.turboSpinOn;
            }.bind(this);
            y.setButtonOnColor("setting", "color_button_transition_a");
            y.setButtonOffColor("setting", "white_button_transition_a");
            y.sprite.spriteFrame = y.turboSpinOn;
            y.spriteEffect.spriteFrame = y.turboSpinEffectOn;
            y.changeButtonColor(true);
            y.changeSpriteEffectColor();
            var k = this;
            this.Pd = function () {
              this.stopTurboLighting();
              if (k.turboSpinOn) {
                this.playTurboLighting();
              } else {
                this.sprite.spriteFrame = this.turboSpinOff;
                this.spriteEffect.spriteFrame = y.turboSpinEffectOff;
              }
              this.changeButtonColor(true);
              B.showSettingTurboToast(k.turboSpinOn ? shell.I18n.t("SettingMenu.TurboSpinEnable") : shell.I18n.t("SettingMenu.TurboSpinDisable"), k.turboSpinOn, 0x2);
              k.sendEventToGoogleAnalytic(k.turboSpinOn);
            }.bind(y);
            this.Ld = I.observeCallback(this, "turboSpinOn")(this.Pd);
            B.addMenuItem(y.node);
            this.qf.on("Game.OnTurboSpin", function () {
              M.setTurboSpinButtonState(true);
            });
            this.qf.on("Game.OffTurboSpin", function () {
              M.setTurboSpinButtonState(false);
            });
          };
          P.prototype.setTurboSpinButtonState = function (M) {
            this.turboSpinOn = M;
            this.qf.emit("Game.TurboSpinStateChanged", this.turboSpinOn);
          };
          P.prototype.sendEventToGoogleAnalytic = function (M) {
            var B = {
              name: "Turbo Spin",
              index: M
            };
            if (cc.sys.isBrowser) {
              shell.ga.sendEvent(shell.ga.CATEGORY_GENERAL, shell.ga.EVENT_CHANGE_SETTING, B);
            }
          };
          P.prototype.setupSettingMenuButtons = function () {
            var M = this;
            var B = this.settingMenuController;
            var y = this.pd;
            var k = this;
            this.Rd = function () {
              if ("land" === shell.environment.getOrientationMode()) {
                B.muteIcon.active = false;
              } else if (B.isIdle()) {
                B.muteIcon.active = !M.soundOn;
              }
            };
            this.Rd();
            this.Ed = I.observeCallback(this, "soundOn")(this.Rd);
            var N0;
            var N1 = function (N2) {
              var N3 = y.setupSettingMenuButtonInList(q.SOUND, function () {
                M.kd();
                if ("land" === shell.environment.getOrientationMode()) {
                  B.hideMoreMenuLayer();
                }
              });
              N3.setTitle(shell.I18n.t("SettingMenu.SettingSoundWord"));
              var N4 = B.addMenuItem(N3.node);
              M.Ud = function () {
                this.sprite.spriteFrame = k.soundOn ? this.soundOn : this.soundOff;
                if (this.largeSprite) {
                  this.largeSprite.spriteFrame = k.soundOn ? this.largeSoundOnIcon : this.largeSoundOffIcon;
                }
              }.bind(N3);
              M.jd = N3.node;
              M.Dd = N4;
              if (!M.sd) {
                M.soundEnable = M.sd;
                M.setLockAccess(q.SOUND, true);
              }
              M.Ud();
              M.Wd = I.observeCallback(M, "soundOn")(M.Ud);
              if (N2) {
                N3.sprite.node.y = 0x0;
                N3.title.node.active = false;
              }
            };
            if (this.xd) {
              this.Td();
              if ("land" === shell.environment.getOrientationMode()) {
                (function () {
                  var N2 = y.setupIndependentSettingMenuButton(q.SOUND, function () {
                    M.kd();
                    B.hideMoreMenuLayer();
                  });
                  if (!N2) {
                    throw Error("SettingMenuHelper :: setupSettingMenuButtons : fail to setupIndependentSettingMenuButton when creating landscape sound button");
                  }
                  N2.setTitle(shell.I18n.t("SettingMenu.SettingSoundWord"));
                  B.landscapeSoundButtonHolder.addChild(N2.node);
                  M.Ud = function () {
                    this.sprite.spriteFrame = k.soundOn ? this.soundOn : this.soundOff;
                    if (this.largeSprite) {
                      this.largeSprite.spriteFrame = k.soundOn ? this.largeSoundOnIcon : this.largeSoundOffIcon;
                    }
                  }.bind(N2);
                  M.jd = N2.node;
                  M.Dd = B.landscapeSoundButtonHolder;
                  if (!M.sd) {
                    M.soundEnable = M.sd;
                    M.setLockAccess(q.SOUND, true);
                  }
                  M.Ud();
                  M.Wd = I.observeCallback(M, "soundOn")(M.Ud);
                  N2.sprite.node.y = 0x0;
                  N2.title.node.active = false;
                })();
              }
            } else {
              N1(true);
            }
            (N0 = this.Fd = y.setupSettingMenuButtonInList(q.MINUS_BET, this.decreaseBet.bind(this))).setShowSettingToastCallback(B.showSettingToast.bind(B));
            N0.setHideSettingToastCallback(B.hideSettingToast.bind(B));
            B.addMenuItem(N0.node);
            (N0 = this.Vd = y.setupSettingMenuButtonInList(q.PLUS_BET, this.increaseBet.bind(this))).setShowSettingToastCallback(B.showSettingToast.bind(B));
            N0.setHideSettingToastCallback(B.hideSettingToast.bind(B));
            B.addMenuItem(N0.node);
            if (this.zd) {
              (N0 = this.Jd = y.setupSettingMenuButtonInList(q.SPIN_OPTIONS, this.qd.bind(this))).setAutoSpinSprite(this.autoSpinButtonLocaleIcon);
              B.addMenuItem(N0.node);
            }
            N0 = y.setupSettingMenuButtonInList(q.MORE_MENU, this.showMoreMenuLayer.bind(this), this.zd ? "white_button_transition_a" : "color_button_transition_a");
            B.addMenuItem(N0.node);
            if (!this.zd) {
              B.addEmptyItem();
              this.nd += 0x1;
            }
            if (this.ed === Z.NORMAL_BACK_FUNC) {
              N0 = y.setupSettingMenuButtonInList(q.QUIT, this.onClickQuitButton.bind(this));
              B.addMenuItem(N0.node);
            }
            if (this.xd && !("land" === shell.environment.getOrientationMode())) {
              N1(false);
            }
            N0 = y.setupSettingMenuButtonInList(q.PAYTABLE, this.Kd.bind(this));
            B.addMenuItem(N0.node);
            N0 = y.setupSettingMenuButtonInList(q.RULE, this.Qd.bind(this));
            B.addMenuItem(N0.node);
            (N0 = this.Gd = y.setupSettingMenuButtonInList(q.HISTORY, this.Yd.bind(this))).setIconSprite(this.historyButtonLocaleIcon);
            B.addMenuItem(N0.node);
            N0 = y.setupSettingMenuButtonInList(q.HIDE_MORE, this.Xd.bind(this));
            B.addMenuItem(N0.node);
            if (N0 = this.Zd = this.pd.setupIndependentSettingMenuButton(q.MAX_BET, this.maxBet.bind(this))) {
              this.settingInfoFooter.maxBetButtonHolder.addChild(N0.node);
              N0.setShowSettingToastCallback(B.showSettingToast.bind(B));
              N0.setHideSettingToastCallback(B.hideSettingToast.bind(B));
            }
            this.$d();
            B.updateLayout(shell.isRTLLanguage && shell.isRTLLanguage());
          };
          P.prototype.$d = function () {
            var M = this.settingMenuController.buttonsHolder();
            var B = this.pd.totalButtonsOccupied();
            var y = M.length - B - this.nd;
            for (var k = M.length - 0x1; k >= 0x0 && !(y <= 0x0); k--) {
              M[k].active = false;
              y--;
            }
          };
          P.prototype.setFeatureBuyToastNodePosition = function (M, B, y) {
            this.settingMenuController.setFeatureBuyToastNodePosition(M, B, y);
          };
          Object.defineProperty(P.prototype, "menuChangedCallBack", {
            'set': function (M) {
              this.tv = M;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "backButtonType", {
            'get': function () {
              return this.ed;
            },
            'set': function (M) {
              this.ed = M;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.setOnClickReturnButtonCallback = function (M) {
            this.iv = M;
          };
          P.prototype.setIsControllerPresenting = function (M) {
            this.settingMenuController.setIsControllerPresenting(M);
          };
          P.prototype.qd = function () {
            this.playMenuIconPressSound();
            if (!this.settingMenuController.isPanelTouchMoving()) {
              this.openAutoSpinMenu();
            }
          };
          P.prototype.sv = function () {
            this.playMenuIconPressSound();
            if (!this.settingMenuController.isPanelTouchMoving()) {
              this.openBetMenu();
            }
          };
          P.prototype.kd = function () {
            this.playMenuIconPressSound();
            this.toggleSound();
          };
          P.prototype.Yd = function (M) {
            if (undefined === M) {
              M = false;
            }
            this.playMenuIconPressSound();
            if (!this.settingMenuController.isPanelTouchMoving()) {
              this.openHistoryMenu(M);
            }
          };
          P.prototype.Kd = function () {
            this.playMenuIconPressSound();
            if (!this.settingMenuController.isPanelTouchMoving()) {
              this.openPayoutMenu();
            }
          };
          P.prototype.Qd = function () {
            this.playMenuIconPressSound();
            if (!this.settingMenuController.isPanelTouchMoving()) {
              this.openRulesMenu();
            }
          };
          P.prototype.ev = function () {
            this.playMenuIconPressSound();
            this.openWalletMenu();
          };
          P.prototype.Xd = function () {
            this.playMenuIconPressSound();
            this.hideMoreMenuLayer();
          };
          P.prototype.openAutoSpinMenu = function () {
            var M = this.settingMenuController;
            if (!(M.isControllerPresenting() || M.isSwitchingMenuLayer())) {
              this.nv();
              if ("land" === shell.environment.getOrientationMode()) {
                M.hideMoreMenuLayer();
              }
              M.setIsControllerPresenting(true);
              this.qf.emit("SlotMenu.ShowSpinOptions", undefined);
            }
          };
          P.prototype.openBetMenu = function () {
            var M = this.settingMenuController;
            if (!(M.isControllerPresenting() || M.isSwitchingMenuLayer())) {
              this.nv();
              this.hideMoreMenuLayer();
              M.setIsControllerPresenting(true);
              this.ov(true);
              this.qf.emit("SlotMenu.ShowBetOptions", undefined);
            }
          };
          P.prototype.toggleSound = function () {
            var M = this.settingMenuController;
            if (!M.isControllerPresenting() && !M.isSwitchingMenuLayer()) {
              this.soundEnable = !this.soundEnable;
              var B = true === this.soundEnable ? "OnGameSound" : "OffGameSound";
              this.cv(B);
              this.playMenuIconPressSound();
            }
          };
          P.prototype.openHistoryMenu = function (M) {
            if (undefined === M) {
              M = false;
            }
            var B = this.settingMenuController;
            if (!(B.isControllerPresenting() || B.isSwitchingMenuLayer())) {
              if (M) {
                this.hideMoreMenuLayer();
              }
              B.setIsControllerPresenting(true);
              this.qf.emit("History.ShowGame");
              this.nv();
            }
          };
          P.prototype.openPayoutMenu = function () {
            var M = this.settingMenuController;
            if (!(M.isControllerPresenting() || M.isSwitchingMenuLayer())) {
              if ("land" === shell.environment.getOrientationMode()) {
                M.hideMoreMenuLayer();
              }
              M.setIsControllerPresenting(true);
              this.qf.emit("Paytable.Show");
            }
          };
          P.prototype.openRulesMenu = function () {
            var M = this.settingMenuController;
            if (!(M.isControllerPresenting() || M.isSwitchingMenuLayer())) {
              if ("land" === shell.environment.getOrientationMode()) {
                M.hideMoreMenuLayer();
              }
              M.setIsControllerPresenting(true);
              this.qf.emit("GameRules.Show");
            }
          };
          P.prototype.openWalletMenu = function () {
            var M = this.settingMenuController;
            if (!(M.isControllerPresenting() || M.isSwitchingMenuLayer())) {
              if (V) {
                this.activateWalletNotify(false);
                this.hv(V.WalletEventEnum.EN_WALLET_LIST_ANIM);
              }
            }
          };
          P.prototype.showMoreMenuLayer = function () {
            var M = this.settingMenuController;
            this.playMenuIconPressSound();
            if ("port" === shell.environment.getOrientationMode()) {
              M.muteIcon.active = false;
            }
            if (!M.isControllerPresenting() && !M.isSwitchingMenuLayer()) {
              this.nv();
              M.showMoreMenuLayer(this.md);
              var B = this.tv;
              if (B) {
                B(true, true);
              }
            }
          };
          P.prototype.hideMoreMenuLayer = function () {
            var M = this.settingMenuController;
            if ("land" === shell.environment.getOrientationMode()) {
              M.muteIcon.active = false;
            } else if (this.soundOn) {
              M.muteIcon.active = false;
            } else {
              M.muteIcon.active = true;
            }
            if (!M.isControllerPresenting() && !M.isSwitchingMenuLayer()) {
              this.settingInfoFooter.changeHolder(M.getSettingInfoFooterFrontHolder());
              M.hideMoreMenuLayer();
              var B = this.tv;
              if (B) {
                B(false, true);
              }
            }
          };
          P.prototype.onClickQuitButton = function () {
            var M = this;
            var B = this.settingMenuController;
            if (!B.isSwitchingMenuLayer() && !B.isControllerPresenting()) {
              var y = {
                'title_message': shell.I18n.t("SettingMenuHelper.QuitGameTitle"),
                'content_message': shell.I18n.t("SettingMenuHelper.QuitGameMessage"),
                'actions': [{
                  'title': shell.I18n.t("SettingMenuHelper.Cancel"),
                  'handler': function () {
                    B.setIsControllerPresenting(false);
                  }
                }, {
                  'title': shell.I18n.t("SettingMenuHelper.Quit"),
                  'handler': function () {
                    B.setIsControllerPresenting(false);
                    if (M.iv) {
                      M.iv();
                    }
                  },
                  'auto_dismiss': false
                }]
              };
              B.setIsControllerPresenting(true);
              E.showDialog(y);
              this.playMenuIconPressSound();
            }
          };
          P.prototype.isBalanceHitTargetInAutoSpinMode = function (M, B) {
            var y = false;
            var k = this.singleWinAmount;
            var N0 = this.balanceAmountMoreThan;
            var N1 = this.balanceAmountLessThan;
            var N2 = this.dd;
            if (k && M > k) {
              y = true;
            }
            if (N0 && B >= N2 + N0) {
              y = true;
            }
            if (N1 && B <= N2 - N1) {
              y = true;
            }
            return y;
          };
          P.prototype.stopSpinOptionButtonAnim = function () {
            if (this.Jd) {
              this.Jd.stopAutoSpinAnim();
            }
          };
          P.prototype.playSpinOptionButtonAnim = function () {
            if (this.Jd) {
              this.Jd.playAutoSpinAnim();
            }
          };
          Object.defineProperty(P.prototype, "autoSpinCallback", {
            'set': function (M) {
              var B = this;
              this.rv = function (y) {
                var k = y.payload;
                B.autoSpinCount = k.autoSpinCount;
                B.singleWinAmount = k.singleWinAmount;
                B.balanceAmountMoreThan = k.balanceAmountMoreThan;
                B.balanceAmountLessThan = k.balanceAmountLessThan;
                B.dd = k.autoSpinStartBalance;
                if (B.autoSpinCount > 0x0) {
                  B.playSpinOptionButtonAnim();
                }
                if (M) {
                  M();
                }
              };
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "turboSpinCallback", {
            'set': function (M) {
              if (this.av) {
                if (this.uv) {
                  this.uv();
                }
                this.av = undefined;
              }
              this.av = function () {
                if (M) {
                  M();
                }
              };
              this.uv = I.observeCallback(this, "turboSpinOn")(this.av);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "additionalBetCalculationCallback", {
            'set': function (M) {
              this.qf.emit("SlotMenu.UpdateAdditionalBetCalculation", M);
              this.lv = M;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "audioConfigure", {
            'get': function () {
              return this.sd;
            },
            'set': function (M) {
              this.sd = M;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "showChangeBetReminder", {
            'set': function (M) {
              this.vd = M;
              this.qf.emit("SlotMenu.SetShowChangeBetReminder", M);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "showForfeitProgressReminder", {
            'set': function (M) {
              this._d = M;
              this.qf.emit("SlotMenu.SetShowForfeitProgressReminder", M);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "manualUpdateBetFactorCallBack", {
            'set': function (M) {
              var B = this;
              this.fv = function (y, k) {
                B.checkSelectedValue(I.toDecimalWithExp(y * k * B.betLineValue, 0x2));
                M(y, k);
              };
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "finishBetPickCallback", {
            'set': function (M) {
              this.dv = M;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "cancelBetPanelCallback", {
            'set': function (M) {
              this.vv = M;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.updateBetLabelCallback = function (M) {
            this._v = M;
          };
          P.prototype.updateBetValues = function (M) {
            if (undefined === M) {
              M = 0x0;
            }
            if (!this.lv) {
              this.lv = function (k, N0, N1) {
                return k * N0 * N1;
              };
              this.qf.emit("SlotMenu.UpdateAdditionalBetCalculation", this.lv);
            }
            this.mv = I.toFixed(this.betLineValue * this.betLevelValue * this.betSizeValue, 0x2);
            var B = this.lv(this.betLineValue, this.betLevelValue, this.betSizeValue);
            var y = I.formatCurrency(B);
            if (this._v) {
              this._v(y, M);
            }
            this.pv({
              'totalBet': I.toDecimalWithExp(B, 0x2)
            });
          };
          P.prototype.bv = function () {
            var M = this.betSizeList;
            var B = this.betSizeValue;
            return !(!M || !cc.js.isNumber(B)) && -0x1 !== M.indexOf(B);
          };
          P.prototype.Sv = function () {
            var M = this.betLevelList;
            var B = this.betLevelValue;
            return !(!M || !cc.js.isNumber(B)) && -0x1 !== M.indexOf(B);
          };
          P.prototype.reevaluateBet = function () {
            var M = this.betLineValue * this.betLevelValue * this.betSizeValue;
            return !(this.bv() && this.Sv() && !(this.gv && M < this.gv && (!this.Cv || M > this.Cv)) || (this.betSizeValue = this.betSizeList[0x0], this.betLevelValue = this.betLevelList[0x0], this.preCalculateCombination(), this.checkSelectedValue(I.toDecimalWithExp(this.betSizeValue * this.betLevelValue * this.betLineValue, 0x2)), this.yv && this.yv(this.betSizeValue, this.betLevelValue), 0x0));
          };
          P.prototype.showInvalidBetDialog = function () {
            var M = this;
            var B = {
              'title_message': undefined,
              'content_message': shell.I18n.t("SettingMenuHelper.ReevaluateBet"),
              'actions': [{
                'title': shell.I18n.t("SettingMenuHelper.Select"),
                'handler': function () {
                  M.openBetMenu();
                }
              }]
            };
            E.showDialog(B);
          };
          Object.defineProperty(P.prototype, "betModifierUpdateCallback", {
            'get': function () {
              return this.Mv;
            },
            'set': function (M) {
              this.Mv = M;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "reevaluateBetCallback", {
            'set': function (M) {
              this.yv = M;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.nv = function () {
            var M = this.settingMenuController;
            if (M.isSettingBetReminderBoardShowed()) {
              this.mv = this.Av;
              this.betSizeValue = this.Iv;
              this.betLevelValue = this.wv;
              this.Ov = this.Hv;
              this.updateBetValues();
              this.checkSelectedValue(this.Av);
              M.hideBetReminderBoard();
              if (this.Bv) {
                this.Bv();
              }
            }
          };
          P.prototype.setBetReminderCancelAndConfirmCallback = function (M, B) {
            var y = this;
            var k = this.settingMenuController;
            this.Bv = M;
            k.setBetReminderCancelAndConfirmCallback(this.nv.bind(this), function () {
              if (y.Iv !== y.betSizeValue || y.wv !== y.betLevelValue) {
                k.hideBetReminderBoard();
                if (B) {
                  B(y.betSizeValue, y.betLevelValue);
                }
                y.qf.emit("SlotMenu.ChangeBet", y.mv);
              } else {
                y.nv();
              }
            });
          };
          P.prototype.setBetReminderTriggerCallback = function (M) {
            this.Gv = M;
          };
          P.prototype.preCalculateCombination = function () {
            var M = this.betSizeList || [];
            var B = this.betLevelList || [];
            var y = this.betLineValue || 0x0;
            if (0x0 !== M.length && 0x0 !== B.length && 0x0 !== y) {
              var k;
              var N0 = this.gv;
              var N1 = this.Cv;
              var N2 = [];
              if (N0) {
                if (N1) {
                  k = [];
                }
                N7 = 0x0;
                for (var N3 = M.length; N7 < N3; N7++) {
                  var N4 = 0x0;
                  for (var N5 = B.length; N4 < N5; N4++) {
                    var N6 = I.toDecimalWithExp(M[N7] * B[N4] * y, 0x2);
                    if (N6 >= N0) {
                      N2[N7] = B.slice(N4);
                      break;
                    }
                    if (N1 && (N1 < N0 && N6 <= N1 || N1 >= N0 && N6 < N0)) {
                      if (!k[N7]) {
                        k[N7] = [];
                      }
                      k[N7].push(B[N4]);
                    }
                    if (N4 === N5 - 0x1) {
                      N2[N7] = [];
                    }
                  }
                }
              } else {
                for (var N7 = 0x0; N7 < M.length; N7++) {
                  N2[N7] = B;
                }
              }
              var N8 = 0x0;
              var N9 = function (NL, NY) {
                var Nl = NY.length;
                var Nr = (NL > 0x1 ? 0x3 : 0x5 - NL) + N8;
                N8 = 0x0;
                if (Nr > 0x5) {
                  N8 += Nr - 0x5;
                  Nr = 0x5;
                }
                if (Nl < Nr) {
                  N8 += Nr - Nl;
                  return NY.slice();
                }
                var Nt = NY[NY.length - 0x1];
                var Nv = [Nt];
                if (Nr > 0x1) {
                  Nr--;
                  var NG = [Math.floor(Nl / 0x2) || 0x1, Math.round(Nl / 0x5) || 0x1, Math.round(Nl / 0xa) || 0x1];
                  for (var Nq = 0x0; Nq < Nr - 0x1; Nq++) {
                    var Nc = Nv[0x0] - NG[Nq];
                    Nv.unshift(Nc);
                  }
                  var Nf = NY[0x0];
                  var Ne = Nv[0x0] !== Nf ? Nf : Nt - (Math.floor(Nl / 0x3) || 0x1);
                  Nv.unshift(Ne);
                }
                return Nv;
              };
              var NN = Object.create(null);
              N7 = 0x0;
              for (N3 = M.length; N7 < N3; N7++) {
                var Nz = N9(N7, N2[N7]);
                if (k && k[N7]) {
                  Nz = Nz.concat(k[N7]);
                }
                if (0x0 !== Nz.length) {
                  N4 = 0x0;
                  for (N5 = B.length; N4 < N5; N4++) {
                    if (Nz.includes(B[N4])) {
                      var NC = I.toFixed(M[N7] * B[N4] * y, 0x2);
                      var NT = {
                        betSize: M[N7],
                        betLevel: B[N4]
                      };
                      if (!NN[NC]) {
                        NN[NC] = NT;
                      }
                    }
                  }
                }
              }
              this.Nv = NN;
            }
          };
          P.prototype.checkSelectedValue = function (M) {
            var B;
            var y;
            var k = +M;
            if (this.gv && k < this.gv && (!this.Cv || k > this.Cv)) {
              k = this.gv;
            }
            M = I.toFixed(k, 0x2);
            if (!this.Nv) {
              throw Error("SettingMenuHelper :: checkSelectedValue : bet combination did not generate due to size or level empty");
            }
            var N0 = Object.keys(this.Nv).sort(function (N2, N3) {
              var N4 = parseFloat(N2);
              var N5 = parseFloat(N3);
              return N4 < N5 ? -0x1 : N4 > N5 ? 0x1 : 0x0;
            });
            var N1 = N0.indexOf(M);
            if (-0x1 === N1) {
              this.mv = M;
              this.Ov = undefined;
              this.Fd.updateBetModifierColor(0x1);
              this.Vd.updateBetModifierColor(0x1, N0.length - 0x1);
              if (!(null === (B = this.Zd) || undefined === B)) {
                B.updateBetModifierColor(0x1, N0.length - 0x1);
              }
            } else {
              this.Ov = N1;
              this.Fd.updateBetModifierColor(N1);
              this.Vd.updateBetModifierColor(N1, N0.length - 0x1);
              if (!(null === (y = this.Zd) || undefined === y)) {
                y.updateBetModifierColor(N1, N0.length - 0x1);
              }
            }
          };
          P.prototype.Tv = function (M) {
            var B;
            var y = this;
            var k = this.settingMenuController;
            if (this.vd || this._d) {
              if (!k.isSettingBetReminderBoardShowed()) {
                this.Av = this.mv;
                this.Iv = this.betSizeValue;
                this.wv = this.betLevelValue;
                this.Hv = this.Ov;
                if (M.selectedBet !== this.Hv) {
                  if (!(null === (B = this.qf) || undefined === B)) {
                    B.emit("SlotMenu.GetShowChangeBetReminder", undefined, function (N0) {
                      var N1;
                      var N2 = '';
                      if (N0.response) {
                        N2 = shell.I18n.t("BetOptions.BetChangeProgressRemind");
                        k.setBetChangeReminderLabel(N2);
                      } else if (!(null === (N1 = y.qf) || undefined === N1)) {
                        N1.emit("SlotMenu.GetShowForfeitProgressReminder", undefined, function (N3) {
                          if (N3.response) {
                            N2 = shell.I18n.t("BetOptions.BetChangeForfeitProgressRemind");
                            k.setBetChangeReminderLabel(N2);
                          }
                        });
                      }
                      k.showBetReminderBoard(I.formatCurrency(parseFloat(y.Av)));
                    });
                  }
                  if (this.Gv) {
                    this.Gv();
                  }
                }
              }
            } else {
              this.Pv(parseFloat(M.selectedBetAmount));
            }
          };
          P.prototype.Lv = function (M, B) {
            var y = RegExp('<' + M + " style=['\"]color:\\s*([^'\"]+)['\"]>", 'gi');
            return B.replace(y, "<color=$1>").replace('</' + M + '>', "</color>");
          };
          P.prototype.Rv = function (M) {
            if (M < this.minimumBetAmount && M <= this.featureBuyThreshold) {
              var B = this.Lv("span", shell.I18n.t("FeatureBuy.BetForFeatureBuyOnly"));
              var y = this.Lv("span", shell.I18n.t("FeatureBuy.BetSuggestion", {
                'amount': I.formatCurrency(this.minimumBetAmount)
              }));
              this.settingMenuController.showFeatureBuyToast(B + "\n" + y, 0x2);
            } else {
              this.settingMenuController.hideFeatureBuyToast();
            }
          };
          P.prototype.increaseBet = function () {
            var M;
            var B = this.settingMenuController;
            if (!B.isSwitchingMenuLayer()) {
              if (!this.Nv) {
                throw Error("SettingMenuHelper :: increaseBet : bet combination did not generate");
              }
              var y = Object.keys(this.Nv).sort(function (N1, N2) {
                var N3 = parseFloat(N1);
                var N4 = parseFloat(N2);
                return N3 < N4 ? -0x1 : N3 > N4 ? 0x1 : 0x0;
              });
              var k = this.Vd.increaseBet(y, this.Ov, this.mv);
              this.Tv(k);
              this.Rv(+k.selectedBetAmount);
              this.Fd.updateBetModifierColor(k.selectedBet);
              this.Vd.updateBetModifierColor(k.selectedBet, y.length - 0x1);
              if (!(null === (M = this.Zd) || undefined === M)) {
                M.updateBetModifierColor(k.selectedBet, y.length - 0x1);
              }
              var N0 = this.Ov = k.selectedBet;
              this.mv = k.selectedBetAmount;
              this.betSizeValue = this.Nv[y[N0]].betSize;
              this.betLevelValue = this.Nv[y[N0]].betLevel;
              this.updateBetValues((N0 + 0x1) / Object.keys(this.Nv).length);
              if (!(this.vd || this._d)) {
                if (this.Mv) {
                  this.Mv(this.betSizeValue, this.betLevelValue);
                }
              }
              if ("land" === shell.environment.getOrientationMode()) {
                B.hideMoreMenuLayer();
              }
            }
          };
          P.prototype.decreaseBet = function () {
            var M;
            var B = this.settingMenuController;
            if (!B.isSwitchingMenuLayer()) {
              if (!this.Nv) {
                throw Error("SettingMenuHelper :: decreaseBet : bet combination did not generate");
              }
              var y = Object.keys(this.Nv).sort(function (N1, N2) {
                var N3 = parseFloat(N1);
                var N4 = parseFloat(N2);
                return N3 < N4 ? -0x1 : N3 > N4 ? 0x1 : 0x0;
              });
              var k = this.Fd.decreaseBet(y, this.Ov, this.mv);
              this.Tv(k);
              this.Rv(+k.selectedBetAmount);
              this.Fd.updateBetModifierColor(k.selectedBet);
              this.Vd.updateBetModifierColor(k.selectedBet, y.length - 0x1);
              if (!(null === (M = this.Zd) || undefined === M)) {
                M.updateBetModifierColor(k.selectedBet, y.length - 0x1);
              }
              var N0 = this.Ov = k.selectedBet;
              this.mv = k.selectedBetAmount;
              this.betSizeValue = this.Nv[y[N0]].betSize;
              this.betLevelValue = this.Nv[y[N0]].betLevel;
              this.updateBetValues((N0 + 0x1) / Object.keys(this.Nv).length);
              if (!(this.vd || this._d)) {
                if (this.Mv) {
                  this.Mv(this.betSizeValue, this.betLevelValue);
                }
              }
              if ("land" === shell.environment.getOrientationMode()) {
                B.hideMoreMenuLayer();
              }
            }
          };
          P.prototype.maxBet = function () {
            var M = this.settingMenuController;
            if (!M.isSwitchingMenuLayer()) {
              if (!this.Nv) {
                throw Error("SettingMenuHelper :: maxBet : bet combination did not generate");
              }
              if (!this.Zd) {
                throw Error("SettingMenuHelper :: maxBet : max bet button cannot be found");
              }
              var B = Object.keys(this.Nv).sort(function (N0, N1) {
                var N2 = parseFloat(N0);
                var N3 = parseFloat(N1);
                return N2 < N3 ? -0x1 : N2 > N3 ? 0x1 : 0x0;
              });
              var y = this.Zd.maxBet(B);
              this.Tv(y);
              this.Fd.updateBetModifierColor(y.selectedBet);
              this.Vd.updateBetModifierColor(y.selectedBet, B.length - 0x1);
              this.Zd.updateBetModifierColor(y.selectedBet, B.length - 0x1);
              var k = this.Ov = y.selectedBet;
              this.mv = y.selectedBetAmount;
              this.betSizeValue = this.Nv[B[k]].betSize;
              this.betLevelValue = this.Nv[B[k]].betLevel;
              this.updateBetValues((k + 0x1) / Object.keys(this.Nv).length);
              if (!(this.vd || this._d)) {
                if (this.Mv) {
                  this.Mv(this.betSizeValue, this.betLevelValue);
                }
              }
              if ("land" === shell.environment.getOrientationMode()) {
                M.hideMoreMenuLayer();
              }
            }
          };
          Object.defineProperty(P.prototype, "changeSoundVolume", {
            'set': function (M) {
              var B = this;
              if (this.Ev) {
                if (this.kv) {
                  this.kv();
                }
                this.Ev = undefined;
              }
              this.Ev = function () {
                B.Uv(B.soundOn);
                if (M) {
                  M(B.soundOn);
                }
              };
              this.kv = I.observeCallback(this, "soundOn")(this.Ev);
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.setBalance = function (M, B) {
            var y = this;
            if (undefined === B) {
              B = true;
            }
            var k = this.jv(M);
            this.Dv(function (N0) {
              if (k) {
                y.playWalletCountingAboveSfx();
              }
              var N1 = I.toDecimalWithExp(N0 && N0.balance || M, 0x2);
              y.settingInfoFooter.updateBalance(undefined, N1, B);
              y.pv({
                'balance': N1
              });
            });
          };
          P.prototype.setWinAmount = function (M, B, y) {
            if (undefined === B) {
              B = true;
            }
            if (undefined === y) {
              y = true;
            }
            this.settingInfoFooter.updateWinAmount(M, B, y);
            this.qf.emit("SlotMenu.UpdateWinAmount", M);
            this.pv({
              'totalWin': I.toDecimalWithExp(M, 0x2)
            });
          };
          P.prototype.setAllButtonsInteractable = function (M, B) {
            if (undefined === B) {
              B = true;
            }
            this.pd.setAllButtonsInteractable(M);
            if (M) {
              this.checkSelectedValue(I.toDecimalWithExp(this.betSizeValue * this.betLevelValue * this.betLineValue, 0x2));
            }
          };
          P.prototype.setLockAccess = function (M, B) {
            this.pd.setLockAccess(M, B);
          };
          P.prototype.isButtonLocked = function (M) {
            return this.pd.isButtonLocked(M);
          };
          P.prototype.setButtonInteractableFlag = function (M, B) {
            if (undefined === B) {
              B = false;
            }
            this.pd.setButtonInteractableFlag(M, B);
          };
          P.prototype.setButtonInteractable = function (M) {
            this.pd.setButtonInteractable(M);
          };
          P.prototype.setLockAccessAutoSpinPanel = function (M) {
            this.setLockAccess(q.SPIN_OPTIONS, M);
          };
          P.prototype.setLockAccessBetPanel = function (M) {
            this.setLockAccess(q.BET_OPTIONS, M);
          };
          P.prototype.setLockMoreMenuButton = function (M) {
            this.setLockAccess(q.MORE_MENU, M);
          };
          P.prototype.setHidden = function (M) {
            this.td = M;
            this.settingMenuController.setHidden(M);
          };
          P.prototype.isIdle = function () {
            return this.settingMenuController.isIdle();
          };
          Object.defineProperty(P.prototype, "isShowBlackTintBg", {
            'set': function (M) {
              this.md = M;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.activateWalletNotify = function (M) {
            this.settingInfoFooter.activateWalletNotify(M);
          };
          P.prototype.addSettingInfoFooter = function (M) {
            this.Nd = M;
            this.pd.setupOtherButtonInList(q.WALLET, M.interactableWalletButton.bind(M));
            M.updateLayout(shell.isRTLLanguage && shell.isRTLLanguage());
            M.setWinIcon(this.settingInfoFooterLocaleWinIcon);
            M.setOpenWalletMenuCallback(this.ev.bind(this));
            M.showBackground(false);
            M.changeHolder(this.settingMenuController.getSettingInfoFooterFrontHolder());
            this.pd.setupOtherButtonInList(q.BET_OPTIONS, M.interactableBetOptionsButton.bind(M));
            M.setOpenBetOptionsMenuCallback(this.sv.bind(this));
            this.updateBetLabelCallback(M.updateBetAmount.bind(M));
            this.pd.setupOtherButtonInList(q.WIN, M.interactableWinButton.bind(M));
            M.setOpenWinMenuCallback(this.Yd.bind(this, true));
            M.boot();
          };
          P.prototype.getSettingInfoFooter = function () {
            return this.settingInfoFooter;
          };
          Object.defineProperty(P.prototype, "settingInfoFooter", {
            'get': function () {
              if (!this.Nd) {
                throw Error("SettingMenuHelper :: settingInfoFooter : Cannot find settingInfoFooter. Please setup setting info footer first! (addSettingInfoFooter)");
              }
              return this.Nd;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.showSettingInfoFooterBackground = function (M) {
            this.settingInfoFooter.showBackground(M);
          };
          P.prototype.setFreeGameMode = function (M) {
            var B;
            var y;
            this.isFreeGameMode = M;
            if (M) {
              this.setLockAccess(q.BET_OPTIONS, true);
              this.Vd.buttonActivate(false);
              this.Fd.buttonActivate(false);
              if (!(null === (B = this.Zd) || undefined === B)) {
                B.buttonActivate(false);
              }
            } else {
              this.setLockAccess(q.BET_OPTIONS, false);
              this.Vd.buttonActivate(true);
              this.Fd.buttonActivate(true);
              if (!(null === (y = this.Zd) || undefined === y)) {
                y.buttonActivate(true);
              }
              this.checkSelectedValue(I.toDecimalWithExp(this.betSizeValue * this.betLevelValue * this.betLineValue, 0x2));
            }
          };
          P.prototype.getCurrentBalance = function () {
            return this.settingInfoFooter.currentBalance;
          };
          P.prototype.additionalBetCalculation = function () {
            if (!this.lv) {
              throw Error("SettingMenuHelper :: additionalBetCalculation : Please set calculation callback via additionalBetCalculationCallback setter first!");
            }
            return this.lv(this.betLineValue, this.betLevelValue, this.betSizeValue);
          };
          Object.defineProperty(P.prototype, "betLineValue", {
            'get': function () {
              return this.hd;
            },
            'set': function (M) {
              this.qf.emit("SlotMenu.SetBetLineValue", M);
              this.hd = M;
              this.preCalculateCombination();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "betSizeList", {
            'get': function () {
              return this.rd;
            },
            'set': function (M) {
              this.qf.emit("SlotMenu.SetBetSizeList", M);
              this.rd = M;
              this.preCalculateCombination();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "betSizeValue", {
            'get': function () {
              return this.lt;
            },
            'set': function (M) {
              this.qf.emit("SlotMenu.SetBetSizeValue", M);
              this.lt = M;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "minimumBetAmount", {
            'get': function () {
              return this.gv;
            },
            'set': function (M) {
              this.qf.emit("SlotMenu.SetMinimumBetAmount", M);
              this.gv = M;
              this.preCalculateCombination();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "featureBuyThreshold", {
            'get': function () {
              return this.Cv;
            },
            'set': function (M) {
              this.qf.emit("SlotMenu.SetFeatureBuyThreshold", M);
              this.Cv = M;
              this.preCalculateCombination();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "betLevelList", {
            'get': function () {
              return this.ad;
            },
            'set': function (M) {
              this.qf.emit("SlotMenu.SetBetLevelList", M);
              this.ad = M;
              this.preCalculateCombination();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "betLevelValue", {
            'get': function () {
              return this.ut;
            },
            'set': function (M) {
              this.qf.emit("SlotMenu.SetBetLevelValue", M);
              this.ut = M;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "baseBet", {
            'get': function () {
              return this.ud;
            },
            'set': function (M) {
              this.ud = M;
              this.qf.emit("SlotMenu.SetBaseBet", M);
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(P.prototype, "soundEnable", {
            'get': function () {
              return F.soundOn;
            },
            'set': function (M) {
              this.soundOn = M;
              F.soundOn = M;
            },
            'enumerable': false,
            'configurable': true
          });
          P.prototype.playWalletCountingAboveSfx = function () {
            var M = this.walletCountingAbove;
            if (M) {
              M.play();
            }
          };
          P.prototype.playMenuIconPressSound = function () {
            var M = this.menuIconPress;
            if (M) {
              M.play();
            }
          };
          P.prototype.playListItemClickSound = function () {
            var M = this.listItemClick;
            if (M) {
              M.play();
            }
          };
          P.prototype.playSliderEffectSound = function () {
            var M = this.sliderEffect;
            if (M) {
              M.play();
            }
          };
          P.prototype.Md = function (M) {
            for (var B in this.ld) this[B] = new M({
              'preload': false,
              'src': I.getCocosMajor() >= 0x4 ? "/lib/setting_menu/" + this.ld[B] : cc.url.raw("/resources/lib/setting_menu/" + this.ld[B] + ".mp3")
            });
          };
          P.prototype.Ad = function (M) {
            var B = this;
            if (this.Wv) {
              var y = this.Wv;
              this.Wv = undefined;
              if (y) {
                y();
              }
            }
            this.Wv = I.sequenceCallback(function (k) {
              B.xv("menuIconPress", function (N0) {
                if (N0) {
                  M(N0);
                } else {
                  k();
                }
              });
            }, function (k) {
              B.xv("listItemClick", function (N0) {
                if (N0) {
                  M(N0);
                } else {
                  k();
                }
              });
            }, function (k) {
              B.xv("sliderEffect", function (N0) {
                if (N0) {
                  M(N0);
                } else {
                  k();
                }
              });
            }, function (k) {
              B.xv("walletCountingAbove", function (N0) {
                if (N0) {
                  M(N0);
                } else {
                  k();
                }
              });
            })(M);
          };
          P.prototype.xv = function (M, B) {
            var y = this;
            if (this.fd[M]) {
              if (B) {
                B();
              }
            } else {
              var k = this[M];
              var N0 = function () {
                k.off("loaderror", N1);
                y.fd[M] = true;
                if (B) {
                  B();
                }
              };
              var N1 = function (N2, N3) {
                k.off("load", N0);
                if (B) {
                  B(N3);
                }
              };
              k.once("load", N0);
              k.once("loaderror", N1);
              k.load();
            }
          };
          P.prototype.reset = function () {
            var M = {
              sliderEffect: false,
              listItemClick: false,
              menuIconPress: false
            };
            if (this.Ld) {
              this.Ld();
            }
            if (this.uv) {
              this.uv();
            }
            if (this.Wd) {
              this.Wd();
            }
            if (this.kv) {
              this.kv();
            }
            if (this.Ed) {
              this.Ed();
            }
            this._v = undefined;
            this.rv = undefined;
            this.av = undefined;
            this.Ev = undefined;
            this.tv = undefined;
            this.Ud = undefined;
            this.Pd = undefined;
            this.pd = new K["default"]();
            this.Wv = undefined;
            this.fd = M;
          };
          P.prototype.hv = function (M) {
            this.qf.emit("Wallet.ShowWalletList", M);
          };
          P.prototype.pv = function (M) {
            this.qf.emit("Game.TransactionInfoChanged", M);
          };
          P.prototype.Uv = function (M) {
            var B = M ? 'On' : "Off";
            this.qf.emit("Game.AudioStateChanged", B);
          };
          P.prototype.Sd = function () {
            var M = this;
            A.setGamePlayUIBlockEventCallback("settingmenu", function (B) {
              M.settingMenuController.setMenuUIBlock(B);
            });
            if (V) {
              this.qf.on("Wallet.Hidden", function () {
                M.settingMenuController.setIsControllerPresenting(false);
              });
              this.qf.on("Wallet.Shown", function () {
                M.nv();
                M.hideMoreMenuLayer();
                M.settingMenuController.setIsControllerPresenting(true);
                M.activateWalletNotify(false);
              });
              this.qf.on("SlotMenu.StartAutoSpin", function (B) {
                if (M.rv) {
                  M.rv(B);
                }
              }, this);
            }
            if (W) {
              this.qf.on("SlotMenu.HiddenBetOptions", function () {
                M.settingMenuController.setIsControllerPresenting(false);
              });
              this.qf.on("SlotMenu.HiddenSpinOptions", function () {
                M.settingMenuController.setIsControllerPresenting(false);
              });
              this.qf.on("Game.ShowOptions", this.openBetMenu, this);
              this.qf.on("Game.HideOptions", this.Fv, this);
              this.qf.on("SlotMenu.ManualUpdateBetFactorCallback", function (B) {
                var y = B.payload;
                var k = y.betSize;
                var N0 = y.betLevel;
                if (M.fv) {
                  M.fv(k, N0);
                }
              }, this);
              this.qf.on("SlotMenu.CancelBetPanelCallback", function () {
                if (M.vv) {
                  M.vv();
                }
              }, this);
              this.qf.on("SlotMenu.FinishBetPickCallback", function (B) {
                var y = B.payload;
                var k = y.betSize;
                var N0 = y.betLevel;
                if (M.dv) {
                  M.dv(k, N0);
                }
              }, this);
            }
            if (w) {
              this.qf.on("Paytable.Hide", function () {
                M.settingMenuController.setIsControllerPresenting(false);
              });
              this.qf.on("GameRules.Hide", function () {
                M.settingMenuController.setIsControllerPresenting(false);
              });
            }
            if (J) {
              this.qf.on("History.Close", function () {
                M.settingMenuController.setIsControllerPresenting(false);
              });
            }
            this.qf.on("Game.OnAudio", function () {
              M.soundEnable = true;
            });
            this.qf.on("Game.OffAudio", function () {
              M.soundEnable = false;
            });
            this.qf.on("Game.RequestAudioState", function (B) {
              if (true === M.soundEnable) {
                B.response = 'On';
              } else {
                B.response = "Off";
              }
            });
            this.qf.on("SettingMenuHelper.GetSettingMenuType", function (B) {
              B.response = H.NEW;
            });
            this.qf.on("Game.GetSettingMenuType", function (B) {
              B.response = H.NEW;
            });
            this.qf.on("Game.ReplayInitiated", function () {
              var B = M.settingMenuController;
              if ("land" === shell.environment.getOrientationMode()) {
                B.muteIcon.active = false;
              } else if (M.soundOn) {
                B.muteIcon.active = false;
              } else {
                B.muteIcon.active = true;
              }
              if (!B.isControllerPresenting() && !B.isSwitchingMenuLayer()) {
                B.hideMoreMenuLayer();
                var y = M.tv;
                if (y) {
                  y(M.td, true);
                }
              }
            });
          };
          P.prototype.gd = function () {
            var M = this;
            this.qf.on("Game.TransactionStateComplete", function (B) {
              if (M.Vv) {
                var y = B.payload.to;
                if ("setup" === y && M.bd) {
                  M.bd = false;
                }
                if (!("action" !== y || M.bd)) {
                  M.bd = true;
                }
              }
            });
            this.qf.on("Game.TransactionInfoUpdated", function (B) {
              if (M.Vv) {
                M.zv = B.payload.tbb;
              }
            });
          };
          P.prototype.Cd = function () {
            var M = this;
            this.qf.emit("Game.RequestSession", undefined, function (B) {
              var y = B.response;
              if (!y || !y.gameId) {
                throw Error("SettingMenuHelper:: Game.RequestSession return invalid data");
              }
              M.xd = y.operatorJurisdictionConfig.turboSpinEnable;
              M.zd = y.operatorJurisdictionConfig.autoPlayConfig;
              M.Vv = y.operatorJurisdictionConfig.hideNonProfitEffect;
              M.ed = y.operatorJurisdictionConfig.backButton;
            });
            this.qf.off("Game.Initialized", this.Cd.bind(this));
          };
          P.prototype.ov = function (M) {
            if (M) {
              this.qf.on("Game.HideOptions", this.Fv, this);
            } else {
              this.qf.off("Game.HideOptions", this.Fv, this);
            }
          };
          P.prototype.Fv = function () {
            this.ov(false);
            this.qf.emit("SlotMenu.HideBetOptions");
          };
          P.prototype.Dv = function (M) {
            if (M) {
              this.qf.emit("Game.RequestTransactionInfo", undefined, function (B) {
                M(B.response);
              });
            }
          };
          P.prototype.cv = function (M) {
            var B = {
              actionName: M
            };
            this.qf.emit("Analytics.Event", B);
          };
          P.prototype.Pv = function (M) {
            var B = this;
            if (this.Jv) {
              this.Jv();
            } else {
              this.qv = parseFloat(this.mv);
            }
            this.Jv = I.delayCallback(0.6)(function () {
              if (M !== B.qv) {
                B.qf.emit("SlotMenu.ChangeBet", M);
              }
              B.Jv = undefined;
              B.qv = undefined;
            });
          };
          P.prototype.changeSoundButtonHolder = function () {
            if ("land" === shell.environment.getOrientationMode()) {
              var M = this.settingInfoFooter;
              if (M.landscapeSoundButtonHolder && this.jd) {
                this.jd.parent = M.landscapeSoundButtonHolder;
                if (!this.xd) {
                  this.jd.getComponent("GenericSettingButton").sprite.node.active = true;
                  this.jd.getComponent("GenericSettingButton").largeSprite.node.active = false;
                }
              }
            }
          };
          P.prototype.returnSoundButtonHolder = function () {
            if ("land" === shell.environment.getOrientationMode() && this.Dd && this.jd) {
              this.jd.parent = this.Dd;
              if (!this.xd) {
                this.jd.getComponent("GenericSettingButton").largeSprite.node.active = true;
                this.jd.getComponent("GenericSettingButton").sprite.node.active = false;
              }
            }
          };
          P.prototype.getSettingMenuButtonNode = function (M) {
            return this.pd.getButtonNode(M);
          };
          P.prototype.jv = function (M) {
            var B = this.settingInfoFooter;
            if (this.bd && this.Vv) {
              var y = B.currentBalance;
              var k = +I.toFixed(M - B.currentBalance, 0x2);
              if (this.zv && M > y && k > this.zv) {
                return true;
              }
            }
            return false;
          };
          return __decorate([O("SettingMenuHelper")], P);
        }(cc.Object))();
        Y.settingMenuHelper = D;
        cc._RF.pop();
      }
    }, Ty],
    'SettingSliderNum': [function (N, z, L) {
      'use strict';

      if (!cc._RF.push(z, "89028I5vilAgJwUYY+0IKoT", "SettingSliderNum")) {
        L.__esModule = true;
        L["default"] = undefined;
        var Y = N("Utils");
        var l = cc.Class({
          'extends': cc.Component,
          'properties': {
            'numberLabel': cc.Label,
            'numSprites': [cc.Sprite],
            'pixelSprites': [cc.SpriteFrame],
            'num': 0xa,
            'shortLine': cc.Node,
            'onColor': cc.Color,
            'offColor': cc.Color,
            'isMin': false
          },
          'setColor': function (r, v) {
            this.onColor = r;
            this.offColor = v;
          },
          'setDisplayValue': function (r, v) {
            this.numberLabel.string = v;
            this.numberLabel.node.active = r;
          },
          'onLoad': function () {
            if (this.isMin) {
              this.shortLine.active = false;
            }
          },
          'setLight': function (r) {
            if (r) {
              0x0;
              Y.setNodeColorWithOpacity(this.numberLabel.node, this.onColor);
            } else {
              0x0;
              Y.setNodeColorWithOpacity(this.numberLabel.node, this.offColor);
            }
          }
        });
        L["default"] = l;
        z.exports = L["default"];
        cc._RF.pop();
      }
    }, Tk],
    'SettingSliderSingleNum': [function (N, z, L) {
      'use strict';

      if (!cc._RF.push(z, "449bftyQ69GBqYbHra7PRW2", "SettingSliderSingleNum")) {
        L.__esModule = true;
        L["default"] = undefined;
        var Y = N("Utils");
        var l = cc.Class({
          'extends': cc.Component,
          'properties': {
            'numberLabel': cc.Label,
            'num': 0xa,
            'onColor': cc.Color,
            'offColor': cc.Color
          },
          'onLoad': function () {
            this.numberLabel.string = this.num;
          },
          'setColor': function (r, v) {
            this.onColor = r;
            this.offColor = v;
          },
          'setLight': function (r) {
            if (r) {
              0x0;
              Y.setNodeColorWithOpacity(this.numberLabel.node, this.onColor);
            } else {
              0x0;
              Y.setNodeColorWithOpacity(this.numberLabel.node, this.offColor);
            }
          }
        });
        L["default"] = l;
        z.exports = L["default"];
        cc._RF.pop();
      }
    }, L0],
    'SettingSliderSingle': [function (N, z, L) {
      'use strict';

      if (!cc._RF.push(z, "41cdfy0E9FKC7KilcTyf7iZ", "SettingSliderSingle")) {
        L.__esModule = true;
        L["default"] = undefined;
        var Y = cc.Class({
          'extends': cc.Component,
          'properties': {
            'settingSliderNum': cc.Prefab,
            'numbers': [cc.Float],
            'content': cc.Node,
            'valueLabel': cc.Label,
            'alwaysShow': false
          },
          'onEnable': function () {
            this.Kv();
            this.node.on("size-changed", this.Kv, this);
          },
          'onDisable': function () {
            this.node.off("size-changed", this.Kv, this);
          },
          'Kv': function () {
            this.Qv = cc.Canvas.instance.node.width / 0x2;
            if (this.Yv) {
              var l = this.Xv;
              var r = 0x0;
              for (var v = l.length; r < v; r++) {
                l[r].node.x = this.Qv + 0xb7 * r;
              }
              this.updateSlider();
            }
          },
          'setBiggestValue': function () {
            var l = this.numbers.length - 0x1;
            this.setLight(l);
            this.content.x = -this.Qv - 0xb7 * l;
          },
          'setNumberList': function (l) {
            this.numbers = l;
          },
          'setValueColor': function (l, r) {
            this.Zv = l;
            this.$v = r;
          },
          'setPlaySound': function (l) {
            this.t_ = l;
          },
          'init': function () {
            var v = this;
            this.Yv = false;
            var G = this.Xv = [];
            var q = this.numbers;
            var g = this.numbers.length - 0x1;
            var Z = this.content;
            var b = 0x0;
            for (var H = this.numbers.length; b < H; b++) {
              var I = cc.instantiate(this.settingSliderNum);
              var K = G[b] = I.getComponent("SettingSliderSingleNum");
              K.setColor(this.Zv, this.$v);
              K.num = q[b];
              I.x = this.Qv + 0xb7 * b;
              I.parent = this.content;
            }
            var E = -this.Qv - 0xb7 * g;
            var Q = -this.Qv;
            var X = this.node;
            X.on(cc.Node.EventType.TOUCH_START, function (V) {
              if (X.active) {
                V.stopPropagation();
                v.i_ = V.getLocation().x;
                v.s_ = Z.x;
              }
            });
            X.on(cc.Node.EventType.TOUCH_MOVE, function (V) {
              if (X.active) {
                V.stopPropagation();
                var W = V.getLocation().x - v.i_;
                var J = v.s_ + W;
                if (J < E) {
                  Z.x = E;
                  v.setLight(g);
                } else if (J > Q) {
                  Z.x = Q;
                  v.setLight(0x0);
                } else {
                  var w = Math.round(W / 0xb7);
                  var O = 0xb7 * w;
                  var F = v.s_ + O;
                  Z.x = F;
                  v.setLight(-((v.Qv + v.s_) / 0xb7 + w));
                }
              }
            });
            X.on(cc.Node.EventType.TOUCH_CANCEL, function (V) {
              if (X.active) {
                V.stopPropagation();
                if (v.updateValue) {
                  v.updateValue(v.e_);
                }
              }
            });
            X.on(cc.Node.EventType.TOUCH_END, function (V) {
              if (X.active) {
                V.stopPropagation();
                if (v.updateValue) {
                  v.updateValue(v.e_);
                }
              }
            });
            if (this.alwaysShow) {
              var A = this.e_ || 0x0;
              this.setDefaultFirstSliderNum(A);
            } else {
              X.active = false;
            }
            this.Yv = true;
          },
          'setLight': function (l, r) {
            if (undefined === r) {
              r = false;
            }
            l = Math.round(l);
            var v = this.e_;
            if (this.valueLabel) {
              this.e_ = this.valueLabel.string = this.numbers[l];
            } else {
              this.e_ = this.numbers[l];
            }
            if (!(r || v == this.e_)) {
              this.t_();
            }
            if (l % 0x1 == 0x0) {
              var G = this.Xv[l];
              if (G == this.n_) {
                return;
              }
              G.setLight(true);
              if (this.n_) {
                this.n_.setLight(false);
              }
              this.n_ = G;
            } else if (this.n_) {
              this.n_.setLight(false);
              this.n_ = null;
            }
            if (this.saveValue) {
              this.saveValue(this.e_);
            }
          },
          'setDefaultFirstSliderNum': function (l) {
            var r = this.numbers.indexOf(l);
            if (-0x1 === r) {
              r = 0x0;
            }
            var v = 0xb7 * r;
            var G = -this.Qv - v;
            this.content.x = G;
            this.setLight(r, true);
          },
          'setValue': function (l) {
            this.e_ = l;
          },
          'getValue': function () {
            return this.e_;
          },
          'updateSlider': function () {
            this.setDefaultFirstSliderNum(this.e_);
          },
          'testSetSliderNum': function () {
            this.setDefaultFirstSliderNum(0x5 * Math.floor(0x15 * Math.random()));
          },
          't_': function () {}
        });
        L["default"] = Y;
        z.exports = L["default"];
        cc._RF.pop();
      }
    }, {}],
    'SettingSlider': [function (N, z, L) {
      'use strict';

      if (!cc._RF.push(z, "357638pYQ9Eibsf8KFNqaZK", "SettingSlider")) {
        L.__esModule = true;
        L["default"] = undefined;
        var Y = cc.Class({
          'extends': cc.Component,
          'properties': {
            'settingSliderNum': cc.Prefab,
            'numInterval': 0xa,
            'maxUnit': 0xa,
            'minNum': 0x0,
            'content': cc.Node,
            'alwaysShow': false,
            'isPositive': false,
            'showValue': false
          },
          'setValueColor': function (l, r) {
            this.Zv = l;
            this.$v = r;
          },
          'init': function () {
            var v = this;
            var G = this.Xv = [];
            var q = this.numInterval;
            var f = this.minNum;
            var g = this.maxUnit;
            var Z = this.content;
            for (var b = 0x0; b <= g; b++) {
              var H = cc.instantiate(this.settingSliderNum);
              var I = G[b] = H.getComponent("SettingSliderNum");
              I.setColor(this.Zv, this.$v);
              I.num = f + b * q;
              H.x = 0x26d + 0xd2 * b;
              if (0x0 == b) {
                I.isMin = true;
              } else {
                I.setDisplayValue(this.showValue, I.num);
              }
              H.parent = Z;
            }
            var K = -0x26d - 0xd2 * g;
            var E = this.node;
            E.on(cc.Node.EventType.TOUCH_START, function (X) {
              if (E.active) {
                X.stopPropagation();
                v.i_ = X.getLocation().x;
                v.s_ = Z.x;
              }
            });
            E.on(cc.Node.EventType.TOUCH_MOVE, function (X) {
              if (E.active) {
                X.stopPropagation();
                var A = X.getLocation().x - v.i_;
                var V = v.s_ + A;
                if (V < K) {
                  Z.x = K;
                  v.setLight(g);
                } else if (V > -0x26d) {
                  Z.x = -0x26d;
                  v.setLight(0x0);
                } else {
                  var W = Math.round(A / 0x69);
                  var J = 0x69 * W;
                  var w = v.s_ + J;
                  Z.x = w;
                  v.setLight(-((0x26d + v.s_) / 0x69 + W) / 0x2);
                }
              }
            });
            E.on(cc.Node.EventType.TOUCH_CANCEL, function (X) {
              if (E.active) {
                X.stopPropagation();
                if (v.saveValue) {
                  v.saveValue(v.e_);
                }
              }
            });
            E.on(cc.Node.EventType.TOUCH_END, function (X) {
              if (E.active) {
                X.stopPropagation();
                if (v.saveValue) {
                  v.saveValue(v.e_);
                }
              }
            });
            if (this.alwaysShow) {
              var Q = this.e_ || 0x0;
              this.setDefaultFirstSliderNum(Q);
            } else {
              E.active = false;
            }
          },
          'setLight': function (l, r) {
            if (undefined === r) {
              r = false;
            }
            this.e_;
            if (!r) {
              this.e_;
            }
            if (l % 0x1 == 0x0) {
              var v = this.Xv[l];
              if (v == this.n_) {
                return void (this.saveValue && this.saveValue(this.e_));
              }
              v.setLight(true);
              if (this.n_) {
                this.n_.setLight(false);
              }
              this.n_ = v;
            } else if (this.n_) {
              this.n_.setLight(false);
              this.n_ = null;
            }
            if (this.saveValue) {
              this.saveValue(this.e_);
            }
          },
          'setDefaultFirstSliderNum': function (l) {
            var r = (l - this.minNum) / 0x5;
            var v = -0x26d - 0x69 * r;
            this.content.x = v;
            this.setLight(r / 0x2, true);
          },
          'setValue': function (l) {
            this.e_ = l;
          },
          'getValue': function () {
            return this.e_;
          },
          'updateSlider': function () {
            this.setDefaultFirstSliderNum(this.e_);
          },
          'testSetSliderNum': function () {
            this.setDefaultFirstSliderNum(0x5 * Math.floor(0x15 * Math.random()));
          }
        });
        L["default"] = Y;
        z.exports = L["default"];
        cc._RF.pop();
      }
    }, {}],
    'SettingTurboSpinButton': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "eaed475bBBLf69c2AHexgPy", "SettingTurboSpinButton")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("GenericSettingButton");
        var q = z("UIAppearanceHelper");
        var f = z("Utils");
        var g = z("TurboButtonEffect");
        var Z = cc._decorator;
        var b = Z.ccclass;
        var H = Z.property;
        var K = function (E) {
          function Q() {
            var X = null !== E && E.apply(this, arguments) || this;
            X.sprite = undefined;
            X.spriteEffect = undefined;
            X.titleLabel = undefined;
            X.turboSpinOn = undefined;
            X.turboSpinOff = undefined;
            X.turboSpinEffectOn = undefined;
            X.turboSpinEffectOff = undefined;
            X.turboSpinEffectAnim = undefined;
            X.lightingEffectAnim = undefined;
            X.spriteLightEffectNode = undefined;
            X.spriteLightShadowEffectNode = undefined;
            X.turboButtonEffect = undefined;
            X.Gr = true;
            X.o_ = undefined;
            X.c_ = undefined;
            X.h_ = [{
              'animName': "turbo_lighting_style_1",
              'positionOffsetXLeft': 0x0,
              'positionOffsetXRight': Math.floor(Math.random() * 3) + 0x1,
              'positionOffsetYLeft': Math.floor(Math.random() * 4) + 0x0,
              'positionOffsetYRight': Math.floor(Math.random() * 7) + 0x0,
              'scaleX': 1.2,
              'scaleY': 1.2,
              'rotation': 0x0
            }, {
              'animName': "turbo_lighting_style_2",
              'positionOffsetXLeft': Math.floor(Math.random() * 5) + 0x0,
              'positionOffsetXRight': Math.floor(Math.random() * 11) + 0x0,
              'positionOffsetYLeft': Math.floor(Math.random() * 23) + 0x0,
              'positionOffsetYRight': Math.floor(Math.random() * 9) + 0x0,
              'scaleX': 1.4,
              'scaleY': 1.2,
              'rotation': 0x0
            }, {
              'animName': "turbo_lighting_style_3",
              'positionOffsetXLeft': Math.floor(Math.random() * 12) + 0x0,
              'positionOffsetXRight': Math.floor(Math.random() * 23) + 0x0,
              'positionOffsetYLeft': Math.floor(Math.random() * 6) + 0x0,
              'positionOffsetYRight': Math.floor(Math.random() * 21) + 0x0,
              'scaleX': 1.2,
              'scaleY': 1.2,
              'rotation': Math.floor(Math.random() * 21) + -0xa
            }];
            return X;
          }
          __extends(Q, E);
          Q.prototype.onLoad = function () {
            E.prototype.onLoad.call(this);
            this.turboButtonEffect.getComponent(g["default"]).setUpdateTurboMiddleIconCallback(this.changeTurboSprite.bind(this));
          };
          Q.prototype.setTurboSprites = function (X, A) {
            this.turboSpinOn = X;
            this.turboSpinOff = A;
          };
          Q.prototype.playTurboLighting = function () {
            this.spriteEffect.spriteFrame = undefined;
            this.turboSpinEffectAnim.once("finished", this.r_, this);
            if (this.Gr) {
              this.turboSpinEffectAnim.play("turbo_icon_1st_up");
              this.Gr = undefined;
            } else {
              this.turboSpinEffectAnim.play("turbo_icon_up");
            }
          };
          Q.prototype.stopTurboLighting = function () {
            var X = this.o_;
            this.o_ = undefined;
            if (X) {
              X();
            }
            var A = this.c_;
            this.c_ = undefined;
            if (A) {
              A();
            }
            this.turboSpinEffectAnim.stop();
            this.lightingEffectAnim.stop();
            this.spriteLightShadowEffectNode.opacity = 0x0;
            this.spriteLightEffectNode.getComponent(cc.Sprite).spriteFrame = undefined;
            this.spriteLightEffectNode.x = 0x0;
            this.spriteLightEffectNode.y = 0x0;
            this.spriteEffect.node.opacity = 0xff;
          };
          Q.prototype.changeTurboSprite = function () {
            var X = this.getTurboSpinCallback && this.getTurboSpinCallback();
            this.sprite.spriteFrame = X ? this.turboSpinOn : this.turboSpinOff;
          };
          Q.prototype.r_ = function () {
            this.a_();
            this.u_();
          };
          Q.prototype.a_ = function () {
            var X = this;
            this.c_ = f.delayCallback(0x1)(function () {
              var A = X.h_[Math.floor(Math.random() * 3) + 0x0];
              var V = Math.floor(Math.random() * 2) + 0x0;
              var W = Math.floor(Math.random() * 2) + 0x0;
              X.spriteLightEffectNode.x = V ? A.positionOffsetXRight : -A.positionOffsetXLeft;
              X.spriteLightEffectNode.y = W ? A.positionOffsetYRight : -A.positionOffsetYLeft;
              X.spriteLightEffectNode.scaleX = A.scaleX;
              X.spriteLightEffectNode.scaleY = A.scaleY;
              X.spriteLightEffectNode.angle = -A.rotation;
              X.lightingEffectAnim.once("finished", X.a_, X);
              X.lightingEffectAnim.play(A.animName);
            });
          };
          Q.prototype.u_ = function () {
            var X = this;
            this.o_ = f.delayCallback(0x3)(function () {
              X.turboSpinEffectAnim.once("finished", X.u_, X);
              X.turboSpinEffectAnim.play("turbo_icon_loop");
            });
          };
          Q.prototype.setSpriteScaleSize = function (X) {
            this.sprite.node.setScale(cc.v2(X, X));
          };
          Q.prototype.setTitle = function (X) {
            this.titleLabel.string = X;
          };
          Q.prototype.setButtonOnColor = function (X, A) {
            this.l_ = X;
            this.f_ = A;
          };
          Q.prototype.setButtonOffColor = function (X, A) {
            this.d_ = X;
            this.v_ = A;
          };
          Q.prototype.changeButtonColor = function (X) {
            this.buttonTheme.domainKey = X ? this.l_ : this.d_;
            this.buttonTheme.colorKey = X ? this.f_ : this.v_;
            E.prototype.changeButtonColor.call(this, false);
          };
          Q.prototype.changeButtonPressedColor = function (X) {
            if (X) {
              this.node.runAction(cc.scaleTo(0.05, 0.9));
            } else {
              this.node.runAction(cc.sequence(cc.scaleTo(0.05, 1.1), cc.scaleTo(0.05, 1.05), cc.scaleTo(0.05, 0x1)));
            }
          };
          Q.prototype.interactableButtonColor = function (X) {
            if (this.buttonTheme) {
              var A = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var V = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              var W = X ? A : V;
              this.turboSpinEffectAnim.node.opacity = W.a;
              f.setNodeColorWithOpacity(this.iconSprite, W);
              f.setNodeColorWithOpacity(this.spriteEffect.node, W);
              f.setNodeColorWithOpacity(this.spriteLightEffectNode, W);
              f.setNodeColorWithOpacity(this.spriteLightShadowEffectNode, W);
              f.setNodeColorWithOpacity(this.sprite.node, W);
            }
          };
          Q.prototype.changeSpriteEffectColor = function () {
            if (this.buttonTheme) {
              var X = q.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              f.setNodeColorWithOpacity(this.spriteEffect.node, X);
              f.setNodeColorWithOpacity(this.spriteLightEffectNode, X);
              f.setNodeColorWithOpacity(this.iconSprite, X);
              f.setNodeColorWithOpacity(this.spriteLightShadowEffectNode, X);
            }
          };
          Q.prototype.destroy = function () {
            this.stopTurboLighting();
            return E.prototype.destroy.call(this);
          };
          __decorate([H(cc.Sprite)], Q.prototype, "sprite", undefined);
          __decorate([H(cc.Sprite)], Q.prototype, "spriteEffect", undefined);
          __decorate([H(cc.Label)], Q.prototype, "titleLabel", undefined);
          __decorate([H(cc.SpriteFrame)], Q.prototype, "turboSpinOn", undefined);
          __decorate([H(cc.SpriteFrame)], Q.prototype, "turboSpinOff", undefined);
          __decorate([H(cc.SpriteFrame)], Q.prototype, "turboSpinEffectOn", undefined);
          __decorate([H(cc.SpriteFrame)], Q.prototype, "turboSpinEffectOff", undefined);
          __decorate([H(cc.Animation)], Q.prototype, "turboSpinEffectAnim", undefined);
          __decorate([H(cc.Animation)], Q.prototype, "lightingEffectAnim", undefined);
          __decorate([H(cc.Node)], Q.prototype, "spriteLightEffectNode", undefined);
          __decorate([H(cc.Node)], Q.prototype, "spriteLightShadowEffectNode", undefined);
          __decorate([H(g["default"])], Q.prototype, "turboButtonEffect", undefined);
          return __decorate([b], Q);
        }(G["default"]);
        Y["default"] = K;
        cc._RF.pop();
      }
    }, L1],
    'SinglePayoutModel': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "029b1Bdw8RM4ZEeOX8HEoFh", "SinglePayoutModel")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = function () {
          function v() {
            this.__ = [];
          }
          Object.defineProperty(v.prototype, "reelData", {
            'get': function () {
              return this.__;
            },
            'set': function (G) {
              this.__ = G;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(v.prototype, "payoutData", {
            'get': function () {
              return this.m_;
            },
            'set': function (G) {
              this.m_ = G;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(v.prototype, "extendSymbolData", {
            'get': function () {
              return this.p_;
            },
            'set': function (G) {
              this.p_ = G;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(v.prototype, "extendBlockData", {
            'get': function () {
              return this.b_;
            },
            'set': function (G) {
              this.b_ = G;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(v.prototype, "positionArray", {
            'get': function () {
              return this.S_;
            },
            'set': function (G) {
              this.S_ = G;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(v.prototype, "additionalData", {
            'get': function () {
              return this.g_;
            },
            'set': function (G) {
              this.g_ = G;
            },
            'enumerable': false,
            'configurable': true
          });
          return v;
        }();
        Y["default"] = r;
        cc._RF.pop();
      }
    }, {}],
    'SkipHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "eee58Gk/h5Ii6sEAYgH+CZ6", "SkipHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator.ccclass;
        var v = new (function (G) {
          function q() {
            var c = null !== G && G.apply(this, arguments) || this;
            c.clickEffectController = null;
            c.notifyStack = [];
            return c;
          }
          __extends(q, G);
          q.prototype.init = function (c, f) {
            this.clickEffectController = f;
            c.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this, false);
          };
          q.prototype.subscribeOnce = function (c) {
            var f = this;
            this.notifyStack.push(c);
            return function () {
              var g = f.notifyStack.indexOf(c);
              if (g > -0x1) {
                f.notifyStack.splice(g, 0x1);
              }
            };
          };
          q.prototype.onTouchStart = function (c) {
            if (this.clickEffectController && !(this.notifyStack.length < 0x1)) {
              this.clickEffectController.showClickEffect(c.getLocation());
              var f = this.notifyStack.shift();
              if (f) {
                f();
              }
            }
          };
          q.prototype.removeEvent = function (c) {
            c.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this, false);
          };
          return __decorate([r], q);
        }(cc.Object))();
        Y["default"] = v;
        cc._RF.pop();
      }
    }, {}],
    'SliderEx': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "dbb33H+Xs1Dw7xtUJLC1l6D", "SliderEx")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.content = undefined;
            Z.contentHeight = 0x0;
            return Z;
          }
          __extends(g, f);
          g.prototype.onEnable = function () {
            this.node.on(cc.Node.EventType.TOUCH_START, this.Si, this);
            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
            this.node.on(cc.Node.EventType.TOUCH_END, this.yi, this);
            this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.Ii, this);
            if (this.handle && this.handle.isValid) {
              this.handle.node.on(cc.Node.EventType.TOUCH_START, this.C_, this);
              this.handle.node.on(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
              this.handle.node.on(cc.Node.EventType.TOUCH_END, this.yi, this);
            }
            this.y_();
          };
          g.prototype.onDisable = function () {
            this.node.off(cc.Node.EventType.TOUCH_START, this.Si, this);
            this.node.off(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
            this.node.off(cc.Node.EventType.TOUCH_END, this.yi, this);
            this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.Ii, this);
            if (this.handle && this.handle.isValid) {
              this.handle.node.off(cc.Node.EventType.TOUCH_START, this.C_, this);
              this.handle.node.off(cc.Node.EventType.TOUCH_MOVE, this.tt, this);
              this.handle.node.off(cc.Node.EventType.TOUCH_END, this.yi, this);
            }
            this.M_();
          };
          g.prototype.A_ = function (Z) {
            this.I_(Z);
            this.ho();
            this.w_();
          };
          g.prototype.ki = function (Z) {
            var b = -cc.view._scaleY;
            var H = cc.v2(0x0, Z.getScrollY() * b);
            var I = this.node.convertToWorldSpace(this.handle.node.position).x;
            var K = I + H.y / 0xa;
            this.progress = cc.misc.clamp01(this.progress + (K - I) / this.node.width);
            this.O_();
            this.ho();
            this.w_();
          };
          g.prototype.y_ = function () {
            if (this.content) {
              this.content.parent.on(cc.Node.EventType.MOUSE_WHEEL, this.ki, this, true);
            }
          };
          g.prototype.M_ = function () {
            if (this.content) {
              this.content.parent.off(cc.Node.EventType.MOUSE_WHEEL, this.ki, this, true);
            }
          };
          g.prototype.ho = function () {
            if (this.content) {
              this.content.y = this.progress * (this.content.height - cc.view.getVisibleSize().height);
            }
          };
          __decorate([G(cc.Node)], g.prototype, "content", undefined);
          return __decorate([v], g);
        }(cc.Slider);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'SlotAnalyticsEnum': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "c270fgpIPxIwJGIYJlAbqmn", "SlotAnalyticsEnum")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.SpinStateProcess = Y.SpinCredits = Y.SpinTrigger = undefined;
        (function (r) {
          r[r.CLICK = 0x0] = "CLICK";
          r[r.SPACEBAR = 0x1] = "SPACEBAR";
          r[r.AUTOSPIN = 0x2] = "AUTOSPIN";
        })(Y.SpinTrigger || (Y.SpinTrigger = {}));
        (function (r) {
          r[r.FREE_GAME = 0x0] = "FREE_GAME";
          r[r.CASH = 0x1] = "CASH";
          r[r.BONUS = 0x2] = "BONUS";
          r[r.INSUFFICIENT = 0x3] = "INSUFFICIENT";
        })(Y.SpinCredits || (Y.SpinCredits = {}));
        (function (r) {
          r[r.REEL_SPINNING = 0x0] = "REEL_SPINNING";
          r[r.REEL_STOPPING = 0x1] = "REEL_STOPPING";
          r[r.REEL_STOPPED = 0x2] = "REEL_STOPPED";
        })(Y.SpinStateProcess || (Y.SpinStateProcess = {}));
        cc._RF.pop();
      }
    }, {}],
    'SlotAnalyticsHelper': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "4d769Qc8epMlozoEYpeBTit", "SlotAnalyticsHelper")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.sendFastStopGA = undefined;
        var r = z("AnalyticsHelper");
        Y.sendFastStopGA = function (v, G) {
          var q = {
            type: v,
            is_auto: G
          };
          r.sendEvent(shell.ga.CATEGORY_GAME, shell.ga.EVENT_SLOT_STOP_SPIN, q);
        };
        cc._RF.pop();
      }
    }, L2],
    'SlotController.spec': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "a3e43/zCkNOHLpHC2GOChmq", "SlotController.spec")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.initSlotControllerNodes = undefined;
        Y.initSlotControllerNodes = function (r) {
          var v = System.get("automation") && System.get("automation").GameConfigs;
          if (v) {
            v.initNodeConfig(r.reelNode, "reel_area");
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'SlotController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "b51b3D3XN5Phpw2GjwMG4k+", "SlotController")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("SlotStateMachine");
        var q = z("NodePoolHandler");
        var g = z("SlotProperties");
        var Z = z("NormalSlotHandler");
        var b = z("GeneralAudioConstant");
        var H = z("AudioManager");
        var I = cc._decorator;
        var K = I.ccclass;
        var E = I.property;
        var Q = function (X) {
          function A() {
            var V = null !== X && X.apply(this, arguments) || this;
            V.slotItemPrefab = undefined;
            V.wildItemPrefab = undefined;
            V.slotHolder = undefined;
            V.fallingAnim = undefined;
            V.backGold = undefined;
            V.frontGold = undefined;
            V.reelShine = undefined;
            V.H_ = new Z.NormalSlotHandler();
            V.B_ = new G["default"]();
            V.G_ = undefined;
            V.zi = undefined;
            V.N_ = undefined;
            V.T_ = undefined;
            V.P_ = undefined;
            V.L_ = undefined;
            V.R_ = undefined;
            V.E_ = undefined;
            V.k_ = undefined;
            V.ou = undefined;
            return V;
          }
          __extends(A, X);
          A.prototype.setOnClickCallback = function (V) {
            this.zi = V;
          };
          A.prototype.setStopCompletedCallback = function (V) {
            this.N_ = V;
          };
          A.prototype.setDoneReloadDataCallback = function (V) {
            this.T_ = V;
          };
          A.prototype.setReelStopCallback = function (V) {
            this.P_ = V;
          };
          A.prototype.setSlotHandlerReelStopCallback = function (V) {
            this.H_.onReelStop = V;
          };
          A.prototype.setOnSlotBeginInterruptCallback = function (V) {
            this.L_ = V;
          };
          A.prototype.setOnSlotInterruptCallback = function (V) {
            this.R_ = V;
          };
          A.prototype.setOnReelReachesBouncePointCallback = function (V) {
            this.H_.setOnReelReachesBouncePointCallback(V);
          };
          A.prototype.setOnReelReachesLowestPointCallback = function (V) {
            this.H_.setOnReelReachesLowestPointCallback(V);
          };
          A.prototype.setOnReelReachesSlowDownPointCallback = function (V) {
            this.H_.setOnReelReachesSlowDownPointCallback(V);
          };
          A.prototype.setSymbolImageHandler = function (V) {
            this.U_ = V;
          };
          A.prototype.setSpinTiming = function (V, W) {
            this.E_ = V;
            this.k_ = W;
          };
          A.prototype.setClickEffectController = function (V) {
            this.j_ = V;
          };
          A.prototype.setSlotItemsVisible = function (V, W) {
            if (W && 0x0 !== W.length) {
              this.H_.setSlotItemsVisible(V, W);
            }
          };
          A.prototype.disableAllSprite = function () {
            this.H_.disableAllSprite();
          };
          A.prototype.getStopStyle = function () {
            return this.B_.getStopStyle();
          };
          A.prototype.getSlotItem = function (V) {
            if (V) {
              return 0x0 === V.length ? [] : this.H_.getSlotItemByIndices(V);
            }
          };
          A.prototype.getSlotItemWorldPosition = function (V) {
            if (V) {
              return 0x0 === V.length ? [] : this.H_.getSlotItemsWorldPosition(V);
            }
          };
          A.prototype.getIsFastStopped = function () {
            return this.H_.getFastStop();
          };
          Object.defineProperty(A.prototype, "mask", {
            'get': function () {
              return this.H_.mask;
            },
            'enumerable': false,
            'configurable': true
          });
          A.prototype.init = function (V, W, J) {
            var w = {
              'up': -0x5,
              down: -0xa,
              left: -0xa,
              right: -0xf
            };
            q.nodePoolHandler.registerReusableItem("slotItem", this.slotItemPrefab, "GSlotItem", 0xf);
            q.nodePoolHandler.registerReusableItem("wildItem", this.wildItemPrefab, "WildItemController", 0x9);
            this.H_.init({
              'reelData': V,
              'containerNode': this.slotHolder,
              'row': g.NORMAL_SLOT_ROW,
              'column': g.NORMAL_SLOT_COLUMN,
              'slotItemSize': {
                'height': g.NORMAL_SLOT_ITEM_SIZE.height,
                'width': g.NORMAL_SLOT_ITEM_SIZE.width
              },
              'symbolNormalScale': g.NORMAL_SYMBOL_SCALE,
              'symbolBlurScale': g.BLUR_SCALE,
              'normalSymbolSpriteFrame': this.U_.symbolImages,
              'blurSymbolSpriteFrame': this.U_.blurredSymbolImages,
              'maskMargin': w,
              'onReelStopCallbackWrapper': this.D_.bind(this),
              'onSpinStopCallbackWrapper': this.W_.bind(this)
            });
            if (J) {
              J();
            }
          };
          A.prototype.setReelData = function (V) {
            this.H_.setReelData(V);
          };
          A.prototype.reloadData = function (V) {
            this.H_.reloadData(V);
          };
          A.prototype.setupRespinSlotConfig = function () {
            this.H_.updateRespinSlotConfig();
          };
          A.prototype.setupNormalSpinSlotConfig = function () {
            this.H_.updateNormalSpinSlotConfig();
          };
          A.prototype.resetHiddenMiddleReel = function () {
            this.H_.resetHiddenMiddleReel();
          };
          A.prototype.show = function () {
            this.node.active = true;
          };
          A.prototype.hide = function () {
            this.node.active = false;
          };
          A.prototype.spin = function (V, W) {
            if (undefined === W) {
              W = false;
            }
            var J = W ? 0.5 : 0x0;
            var w = V ? this.E_ : this.E_ + this.H_.scrollInterval * g.NORMAL_SLOT_COLUMN + J;
            var O = this.k_ - 0.25 + J;
            this.L_ = undefined;
            this.B_.spin(w, O);
            this.H_.spin(V);
            var F = b.GENERAL_AUDIO.spinActiveLoop.key;
            H.stopAudioIfPlaying(F);
            H.playAudioIfNotPlaying(F, false, 0x0, true);
            if (V) {
              this.markFastStop();
            } else {
              this.x_();
            }
          };
          A.prototype.stopSpin = function () {
            var V = this;
            this.B_.stop(function () {
              V.H_.stopSpin();
            });
          };
          A.prototype.fastStop = function () {
            var V = this;
            this.B_.fastStop(function () {
              var W = V.L_;
              V.L_ = undefined;
              if (W) {
                W();
              }
              V.H_.fastStop();
              if (V.R_) {
                V.R_();
              }
            });
          };
          A.prototype.markFastStop = function () {
            this.B_.markFastStop();
          };
          A.prototype.unmarkFastStop = function () {
            this.B_.unmarkFastStop();
            this.H_.unsetFastStop();
          };
          A.prototype.enableTouchEvent = function () {
            this.x_();
          };
          A.prototype.disableTouchEvent = function () {
            this.F_();
          };
          A.prototype.D_ = function (V) {
            var W = this.P_;
            if (W) {
              W(V);
            }
          };
          A.prototype.W_ = function () {
            this.B_.stopped();
            this.L_ = undefined;
            var V = this.N_;
            this.N_ = undefined;
            if (V) {
              V();
            }
            var W = b.GENERAL_AUDIO.spinActiveLoop.key;
            H.stopAudioIfPlaying(W);
          };
          A.prototype.V_ = function (V) {
            var W = V + 0x1;
            var J = this.z_;
            if (J) {
              J(W);
            }
          };
          A.prototype.x_ = function () {
            this.node.on(cc.Node.EventType.TOUCH_START, this.J_, this);
          };
          A.prototype.F_ = function () {
            this.node.off(cc.Node.EventType.TOUCH_START, this.J_, this);
          };
          A.prototype.J_ = function (V) {
            if (this.zi) {
              this.F_();
              this.j_.showClickEffect(V.getLocation());
              this.j_.showFlash();
              var W = this.zi;
              this.zi = undefined;
              if (W) {
                W();
              }
            }
          };
          A.prototype.onKeyBoardDownClicked = function () {
            if (this.zi) {
              var V = this.zi;
              this.zi = undefined;
              if (V) {
                V();
              }
            }
          };
          A.prototype.setRespinSymbol = function (V) {
            this.H_.setRespinSymbol(V);
          };
          A.prototype.playRespin = function () {
            this.fallingAnim.node.opacity = 0x0;
            this.fallingAnim.node.runAction(cc.fadeIn(0.5));
            this.fallingAnim.play();
          };
          A.prototype.stopRespin = function () {
            this.fallingAnim.stop();
            this.fallingAnim.setCurrentTime(0x0);
            this.fallingAnim.node.getComponent(cc.Sprite).spriteFrame = undefined;
          };
          A.prototype.zoomOut = function () {
            this.backGold.stopAllActions();
            this.frontGold.stopAllActions();
            this.backGold.scale = 1.62;
            this.backGold.runAction(cc.sequence(cc.delayTime(0.5), cc.scaleTo(2.1, 1.58).easing(cc.easeCubicActionInOut())));
            this.frontGold.scale = 1.6;
            this.frontGold.runAction(cc.scaleTo(2.1, 1.55).easing(cc.easeCubicActionInOut()));
          };
          A.prototype.zoomIn = function () {
            this.backGold.stopAllActions();
            this.frontGold.stopAllActions();
            this.backGold.scale = 1.58;
            this.backGold.runAction(cc.scaleTo(2.5, 1.6).easing(cc.easeCubicActionInOut()));
            this.frontGold.scale = 1.55;
            this.frontGold.runAction(cc.scaleTo(2.1, 1.6).easing(cc.easeCubicActionInOut()));
          };
          A.prototype.teaseZoomOut = function () {
            this.backGold.stopAllActions();
            this.frontGold.stopAllActions();
            this.backGold.scale = 1.62;
            this.backGold.runAction(cc.sequence(cc.delayTime(0.5), cc.scaleTo(0x1, 1.6).easing(cc.easeCubicActionInOut())));
            this.frontGold.scale = 1.6;
            this.frontGold.runAction(cc.scaleTo(0x1, 1.575).easing(cc.easeCubicActionInOut()));
          };
          A.prototype.teaseZoomIn = function () {
            this.backGold.stopAllActions();
            this.frontGold.stopAllActions();
            this.backGold.scale = 1.6;
            this.backGold.runAction(cc.scaleTo(0x1, 1.6).easing(cc.easeCubicActionInOut()));
            this.frontGold.scale = 1.575;
            this.frontGold.runAction(cc.scaleTo(0x1, 1.6).easing(cc.easeCubicActionInOut()));
          };
          A.prototype.onSpinEffect = function () {
            this.reelShine.stop();
            this.reelShine.setCurrentTime(0x0);
            this.reelShine.play();
          };
          A.prototype.setupToNormalState = function () {
            this.backGold.scale = 1.62;
            this.frontGold.scale = 1.6;
          };
          A.prototype.setupToRespinState = function () {
            this.backGold.scale = 1.58;
            this.frontGold.scale = 1.55;
          };
          __decorate([E(cc.Prefab)], A.prototype, "slotItemPrefab", undefined);
          __decorate([E(cc.Prefab)], A.prototype, "wildItemPrefab", undefined);
          __decorate([E(cc.Node)], A.prototype, "slotHolder", undefined);
          __decorate([E(cc.Animation)], A.prototype, "fallingAnim", undefined);
          __decorate([E(cc.Node)], A.prototype, "backGold", undefined);
          __decorate([E(cc.Node)], A.prototype, "frontGold", undefined);
          __decorate([E(cc.Animation)], A.prototype, "reelShine", undefined);
          return __decorate([K], A);
        }(cc.Component);
        Y["default"] = Q;
        cc._RF.pop();
      }
    }, L3],
    'SlotDataHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "c92e6Vflr1IcZlyJUaCowMg", "SlotDataHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = function () {
          function v() {
            this.slotViews = undefined;
            this.spinType = undefined;
            this.topBufferRow = undefined;
            this.bottomBufferRow = undefined;
            this.numberOfRow = undefined;
            this.numberOfColumn = undefined;
            this.getSymbolSize = undefined;
            this.getRandomSymbol = undefined;
            this.isStopping = undefined;
            this.formattedReelData = undefined;
            this.backupBufferedSymbol = undefined;
            this.bufferedEmptyItemInfo = undefined;
            this.formattedDataPositions = undefined;
          }
          v.prototype.init = function (G) {
            this.slotViews = G.slotViews;
            this.topBufferRow = G.topBufferRow ? G.topBufferRow : 0x0;
            this.bottomBufferRow = G.bottomBufferRow ? G.bottomBufferRow : 0x0;
            this.numberOfRow = G.numberOfRow;
            this.numberOfColumn = G.numberOfColumn;
            this.getSymbolSize = G.getSymbolSize;
            this.getRandomSymbol = G.getRandomSymbol;
            this.formattedDataPositions = [];
            this.bufferedEmptyItemInfo = [];
            for (var q = 0x0; q < G.numberOfColumn; q++) {
              this.formattedDataPositions[q] = -this.bottomBufferRow;
            }
            this.setSpinType(G.spinType);
            this.setReelData(G.reelData, G.largeSymbolDatas);
          };
          v.prototype.reset = function () {
            this.isStopping = false;
            this.bufferedEmptyItemInfo.length = 0x0;
            for (var G = 0x0; G < this.formattedDataPositions.length; G++) {
              this.formattedDataPositions[G] = -this.bottomBufferRow;
            }
          };
          v.prototype.setSpinType = function (G) {
            this.spinType = G;
          };
          v.prototype.setReelDataPosition = function (G, q) {
            this.isStopping = true;
            this.formattedDataPositions[G] = q - this.bottomBufferRow;
          };
          v.prototype.getReelDataPosition = function (G) {
            return this.formattedDataPositions[G] + this.bottomBufferRow;
          };
          v.prototype.getItemInfo = function (G, q) {
            var f = this.slotViews.indexOf(G);
            var g = this.bufferedEmptyItemInfo[f];
            if (g) {
              this.bufferedEmptyItemInfo[f] = undefined;
              return g;
            }
            var Z = q;
            for (var b = this.getSymbol(f, Z); undefined === b;) {
              Z--;
              b = this.getSymbol(f, Z);
            }
            if (b < 0x0) {
              return this.createEmptyItemInfo(-b, Z);
            }
            var H = this.getSymbolSize;
            var I = H ? H(b) : cc.size(0x1, 0x1);
            var K = {
              positionIndex: Z,
              symbolColumn: I.width,
              symbolRow: I.height,
              symbolIndex: b
            };
            return K;
          };
          v.prototype.setReelData = function (G, q) {
            var g = this.numberOfColumn;
            var Z = this.numberOfRow;
            var b = this.topBufferRow;
            var H = this.bottomBufferRow;
            var I = this.spinType;
            var K = this.getRandomSymbol;
            var E = H + Z;
            var Q = E + b;
            var X = this.backupBufferedSymbol = [];
            for (var A = 0x0; A < g; A++) {
              var V = X[A] = [];
              for (var W = 0x0; W < H; W++) {
                V[W] = K(A, I, W, false, true, 0x1);
              }
              for (W = E; W < Q; W++) {
                V[W] = K(A, I, W, false, true, 0x1);
              }
            }
            this.updateReelData(G, q);
          };
          v.prototype.updateReelData = function (G, q) {
            var f = this.numberOfColumn;
            var g = this.numberOfRow;
            var Z = this.bottomBufferRow;
            var b = this.backupBufferedSymbol;
            var H = this.getSymbolSize;
            var I = this.formattedReelData = [];
            for (var K = 0x0; K < f; K++) {
              var E = K * g;
              var Q = __spread(b[K]);
              Q.splice.apply(Q, __spread([Z, g], G.slice(E, E + g).reverse()));
              I.push(Q);
            }
            if (H && q) {
              q.forEach(function (X) {
                X.sort(function (S, R) {
                  return S - R;
                });
                var A;
                var V;
                var W = G[X[0x0]];
                var J = H(W);
                var w = Math.floor(X[0x0] / g);
                var O = X[0x0] % g;
                for (var F = 0x1; F < X.length; F++) {
                  if (Math.floor(X[F] / g) !== w) {
                    A = X[F - 0x1] % g;
                    break;
                  }
                }
                V = 0x0 === O ? g - A - 0x1 + Z : g - O + Z - J.height;
                for (F = 0x0; F < J.width; F++) {
                  var D = I[F + w];
                  D[V] = F ? -J.height : W;
                  for (var U = 0x1; U < J.height; U++) {
                    D[U + V] = undefined;
                  }
                }
              });
            }
          };
          v.prototype.getFormattedData = function (G) {
            return __spread(this.formattedReelData[G]);
          };
          v.prototype.overwriteFormattedData = function (G, q, c) {
            this.formattedReelData[G][q] = c;
          };
          v.prototype.getSymbol = function (G, q) {
            var f = this.formattedDataPositions[G];
            if (undefined !== f) {
              var g = this.formattedReelData[G];
              if (q >= f && q <= f + g.length - 0x1) {
                return g[q - f];
              }
            }
            var Z = this.getSymbolSize;
            var b = 0x1;
            if (Z) {
              for (var H = G + 0x1; H < this.numberOfColumn && !this.slotViews[H].isIndexVisible(q); H++) {
                b++;
              }
            }
            var I = this.getRandomSymbol(G, this.spinType, q, this.isStopping, false, b);
            if (Z) {
              var K = Z(I);
              for (H = 0x1; H < K.width; H++) {
                this.bufferedEmptyItemInfo[G + H] = this.createEmptyItemInfo(K.height, q);
              }
            }
            return I;
          };
          v.prototype.createEmptyItemInfo = function (G, q) {
            var c = {
              positionIndex: q,
              symbolColumn: 0x1,
              symbolRow: G,
              symbolIndex: -0x1
            };
            return c;
          };
          return v;
        }();
        Y["default"] = r;
        cc._RF.pop();
      }
    }, {}],
    'SlotGameConstants': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "d7af7yj0OxMqZa0P2+9ESqP", "SlotGameConstants")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.DEFAULT_AUTO_SPIN_DELAY_TIME = Y.SPIN_BUTTON_TRIGGER_KEY = Y.TOTAL_WIN_DISMISS_TIME = Y.BIG_WIN_DISMISS_TIME = undefined;
        Y.BIG_WIN_DISMISS_TIME = 0x6;
        Y.TOTAL_WIN_DISMISS_TIME = 0x6;
        Y.SPIN_BUTTON_TRIGGER_KEY = cc.macro.KEY.space;
        Y.DEFAULT_AUTO_SPIN_DELAY_TIME = 0.3;
        cc._RF.pop();
      }
    }, {}],
    'SlotGenerator': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "213874uZn5HSqZznN5luzQQ", "SlotGenerator")) {
        var r = {
          value: true
        };
        Object.defineProperty(l, "__esModule", r);
        l.generateSlot = undefined;
        var v = {
          'up': 0x0,
          down: 0x0,
          left: 0x0,
          right: 0x0
        };
        var G = L("SlotView");
        var q = L("SlotScrollerController");
        var g = {
          'containerNode': undefined,
          'numberOfColumn': undefined,
          'slotView': G["default"],
          'slotScrollerController': q["default"]
        };
        l.generateSlot = function (Z) {
          var b;
          var H = (Z = __assign(__assign({}, g), Z)).containerNode;
          var I = Z.slotSize ? Z.slotSize : H.getContentSize();
          var K = I.width;
          var E = I.height;
          var Q = new cc.Node("slot_scroller");
          if (Z.dontGenerateMask) {
            Q.parent = H;
            Q.width = K;
            Q.height = E;
          } else {
            var X = __assign(__assign({}, v), Z.maskMargin);
            var A = new cc.Node("slot_mask");
            A.parent = H;
            A.width = K + X.left + X.right;
            A.height = E + X.up + X.down;
            A.x = (X.right - X.left) / 0x2;
            A.y = (X.up - X.down) / 0x2;
            (b = A.addComponent(cc.Mask)).type = cc.Mask.Type.RECT;
            b.inverted = false;
            Q.parent = A;
            Q.width = K;
            Q.height = E;
            Q.x = -A.x;
            Q.y = -A.y;
          }
          var V = Z.numberOfColumn;
          var W = K / V;
          var J = (W - K) / 0x2;
          var w = [];
          for (var O = 0x0; O < V; O++) {
            w[O] = new Z.slotView(Q, J + W * O);
          }
          return {
            'mask': b,
            'slotScrollerController': Q.addComponent(Z.slotScrollerController),
            'slotViews': w
          };
        };
        cc._RF.pop();
      }
    }, L4],
    'SlotHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "c4b3eXoiTVPErUy7lNx9598", "SlotHandler")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        Y.SlotHandler = undefined;
        var G = z("SlotDataHandler");
        var q = z("SlotView");
        var g = z("SlotScrollerController");
        var Z = z("SlotGenerator");
        var b = z("SlotHelper");
        var H = z("GSlotItem");
        var I = z("GSlotHelper");
        var K = z("GSlotItemPool");
        var E = z("SlotProperties");
        var Q = z("Utils");
        var X = function () {
          function A() {
            this.slotHelper = undefined;
            this.onReelStartCallback = undefined;
            this.spinStopCallback = undefined;
            this.onFastScrollEffectStartCallback = undefined;
            this.onFastScrollEffectStopCallback = undefined;
            this.isFastStop = false;
            this.isTurbo = false;
            this.isInterrupt = false;
            this.abortIterator = undefined;
            this.numberOfRow = undefined;
            this.numberOfColumn = undefined;
            this.slot = undefined;
            this.maxSpeed = undefined;
            this.startScrollerConfig = undefined;
            this.turboSpeedFactor = undefined;
            this.turboStartScrollerConfig = undefined;
            this.scrollInterval = undefined;
            this.stopScrollInterval = undefined;
            this.interruptScrollStopScrollerConfig = undefined;
            this.orl = [];
            this.allSymbolIndexList = undefined;
          }
          A.prototype.init = function (V) {
            var W = this;
            var J = this.numberOfColumn = V.column;
            var w = this.numberOfRow = V.row;
            var O = V.slotItemSize.height;
            var F = V.slotItemSize.width;
            var D = this.maxSpeed = V.maxSpeed;
            var U = cc.size(F, O);
            var R = this.startScrollerConfig = __assign(__assign({}, V.startScrollerConfig), {
              'maxSpeed': D
            });
            var x = __assign(__assign({}, V.stopScrollerConfig), {
              'maxSpeed': D
            });
            this.turboSpeedFactor = V.turboSpeedFactor;
            this.turboStartScrollerConfig = V.turboStartScrollerConfig;
            this.scrollInterval = V.scrollInterval;
            this.stopScrollInterval = V.stopScrollInterval;
            this.interruptScrollStopScrollerConfig = V.interruptScrollStopScrollerConfig;
            var j = V.containerNode;
            j.height = O * w;
            j.width = F * J;
            var P = {
              containerNode: j,
              numberOfColumn: J,
              maskMargin: V.maskMargin,
              dontGenerateMask: V.dontGenerateMask,
              slotScrollerController: g["default"],
              slotView: q["default"]
            };
            var M = this.slot = Z.generateSlot(P);
            var B = this.slotHelper = new I["default"]();
            var y = new K["default"]();
            this.orl = V.reelData;
            B.init({
              'slotItem': H["default"],
              'slotItemPool': y,
              'numberOfColumn': J,
              'numberOfRow': w,
              'topBufferRow': V.topExtraBufferRow,
              'bottomBufferRow': V.bottomExtraBufferRow,
              'sortBottomItemToFront': true,
              'getSymbolZOrder': this.getSymbolZOrder.bind(this),
              'stopScroller': V.stopScroller,
              'startScrollerConfig': R,
              'stopScrollerConfig': x,
              'reelData': V.reelData,
              'symbolSize': U,
              'normalSymbolScale': V.symbolNormalScale,
              'blurSymbolScale': V.symbolBlurScale,
              'slotViews': M.slotViews,
              'slotScrollerController': M.slotScrollerController,
              'normalSymbolSpriteFrame': V.normalSymbolSpriteFrame,
              'blurSymbolSpriteFrame': V.blurSymbolSpriteFrame,
              'getRandomSymbol': V.getRandomSymbol,
              'calculateStopIndexOffset': V.calculateStopIndexOffset,
              'calculateStopDistanceIndexOffset': V.calculateStopDistanceIndexOffset,
              'runScroller': this.runScroller.bind(this),
              'blurSpeedFactor': V.blurSpeedFactor,
              'unblurSpeedFactor': V.unblurSpeedFactor,
              'slotDataHandler': new G["default"]()
            });
            B.setOnReelStopCallback(function (k) {
              var N0 = V.onReelStopCallbackWrapper;
              if (N0) {
                N0(k);
              }
              W.onReelStopCallbackWrapper(k);
            });
            B.setOnSlotStopCallback(function () {
              var k = V.onSpinStopCallbackWrapper;
              if (k) {
                k();
              }
              W.onSpinStopCallbackWrapper();
            });
            this.extraInitialization();
          };
          A.prototype.extraInitialization = function () {};
          A.prototype.preSpinningCleanup = function () {};
          Object.defineProperty(A.prototype, "onReelStart", {
            'set': function (V) {
              this.onReelStartCallback = V;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(A.prototype, "onSpinStop", {
            'set': function (V) {
              this.spinStopCallback = V;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(A.prototype, "onFastScrollEffectStart", {
            'set': function (V) {
              this.onFastScrollEffectStartCallback = V;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(A.prototype, "onFastScrollEffectStop", {
            'set': function (V) {
              this.onFastScrollEffectStopCallback = V;
            },
            'enumerable': false,
            'configurable': true
          });
          A.prototype.onReelStopCallbackWrapper = function () {};
          A.prototype.onSpinStopCallbackWrapper = function () {
            this.abortIterator = undefined;
            if (this.spinStopCallback) {
              this.spinStopCallback();
            }
          };
          A.prototype.reloadData = function (V) {
            var W = this.slotHelper;
            this.setReelData(V);
            W.reloadSlot();
          };
          A.prototype.spin = function (V) {
            if (undefined === V) {
              V = false;
            }
            this.preSpinningCleanup();
            var W = this.slotHelper;
            if (this.isTurbo !== V) {
              this.isTurbo = V;
              var J = this.maxSpeed * (V ? this.turboSpeedFactor : 0x1);
              var w = V ? this.turboStartScrollerConfig : this.startScrollerConfig;
              for (var O = 0x0; O < this.numberOfColumn; O++) {
                W.setStartScrollerConfig(O, __assign({
                  'maxSpeed': J
                }, w));
                W.setStopScrollerConfig(O, {
                  'maxSpeed': J
                });
              }
            }
            W.startScroll();
            this.isInterrupt = false;
            this.isFastStop = false;
            this.abortIterator = undefined;
            this.extraSpinInitialization();
            if (V) {
              this.setFastStop(false);
            }
          };
          A.prototype.stopSpin = function () {
            this.slotHelper.stopScroll();
          };
          A.prototype.setReelData = function (V) {
            this.setReelData(V);
          };
          A.prototype.setFastStop = function (V) {
            if (undefined === V) {
              V = false;
            }
            this.isInterrupt = V;
            this.isFastStop = true;
          };
          A.prototype.unsetFastStop = function () {
            this.isInterrupt = false;
            this.isFastStop = false;
          };
          A.prototype.fastStop = function () {
            this.isFastStop = true;
            this.extraFastStopAction();
            this.runInterrupt();
          };
          A.prototype.extraFastStopAction = function () {};
          A.prototype.getFastStop = function () {
            return this.isFastStop;
          };
          A.prototype.changeSymbol = function (V, W) {
            this.slotHelper.changeSymbol(V, W);
          };
          A.prototype.getSlotItemsWorldPosition = function (V) {
            var W;
            return (W = this.slotHelper).getItemsWorldPositionAR.apply(W, __spread(V));
          };
          A.prototype.setSlotItemsVisible = function (V, W) {
            var J;
            (J = this.slotHelper.slotItemHandler).getSlotItems.apply(J, __spread(W)).forEach(function (w) {
              if (w) {
                w.setActive(V);
              }
            });
          };
          A.prototype.getSlotItemByIndices = function (V) {
            var W;
            return (W = this.slotHelper.slotItemHandler).getSlotItems.apply(W, __spread(V));
          };
          Object.defineProperty(A.prototype, "mask", {
            'get': function () {
              return this.slot.mask;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(A.prototype, "slotViewNode", {
            'get': function () {
              return this.slot.slotScrollerController.node;
            },
            'enumerable': false,
            'configurable': true
          });
          A.prototype.getSymbolZOrder = function (V) {
            return V === E.SLOT_INDEX.WILD ? 0x2 : 0x1;
          };
          A.prototype.runScroller = function (V, W) {
            return V === b.SlotState.START ? this.runStartScroller(W) : V === b.SlotState.STOP ? this.runStopScroller(W) : undefined;
          };
          A.prototype.runStartScroller = function (V) {
            var W = this;
            var J = this.onReelStartCallback;
            if (!this.isTurbo && 0x0 !== this.scrollInterval) {
              var w = 0x0;
              var O = this.scheduleIterator(function (D, U) {
                V(D);
                if (J) {
                  J(D);
                }
                w++;
                U();
              }, this.scrollInterval, this.numberOfColumn);
              return function () {
                O();
                for (var D = w; D < W.numberOfColumn; D++) {
                  if (J) {
                    J(D);
                  }
                }
              };
            }
            for (var F = 0x0; F < this.numberOfColumn; F++) {
              V(F);
              if (J) {
                J(F);
              }
            }
          };
          A.prototype.runStopScroller = function (V) {
            var W = this;
            if (this.isFastStop) {
              this.runInterrupt();
            } else {
              var J;
              J = function (O, F) {
                if (W.isFastStop) {
                  W.runInterrupt();
                } else {
                  V(O);
                  if (F) {
                    F();
                  }
                }
              };
              var w = this.scheduleIterator(J, this.stopScrollInterval, this.numberOfColumn);
              this.abortIterator = w;
            }
          };
          A.prototype.runInterrupt = function () {
            for (var V = 0x0; V < this.numberOfColumn; V++) {
              this.slotHelper.scrollerAtIndex(V).updateRunTimeConfig(this.interruptScrollStopScrollerConfig);
            }
            var W = this.abortIterator;
            if (W) {
              W();
            }
            this.slotHelper.instantStopScroll();
            this.slotHelper.reloadSlot();
          };
          A.prototype.setReelData = function (V) {
            this.orl = V;
            this.slotHelper.setReelData(V);
          };
          A.prototype.extraSpinInitialization = function () {};
          A.prototype.scheduleIterator = function (V, W, J, w) {
            var O = 0x0;
            var F = 0x0;
            var D = function () {
              if (++F === J && w) {
                w();
              }
            };
            var U = function () {
              V(O, D);
              O++;
            };
            U();
            if (J >= 0x2) {
              Q.getSharedScheduler().schedule(U, W, J - 0x2);
            }
            return function () {
              if (J >= 0x2) {
                Q.getSharedScheduler().unschedule(U);
              }
              w = undefined;
            };
          };
          return A;
        }();
        Y.SlotHandler = X;
        cc._RF.pop();
      }
    }, L5],
    'SlotHelper': [function (L, Y, v) {
      'use strict';

      if (!cc._RF.push(Y, "f967cJUpgBPeZxa4E081RBj", "SlotHelper")) {
        var G = {
          value: true
        };
        Object.defineProperty(v, "__esModule", G);
        v.SlotState = undefined;
        var q;
        var g = L("SlotItem");
        var Z = L("SlotItemPool");
        var b = L("SlotItemHandler");
        var H = L("SlotDataHandler");
        var I = L("BaseScroller");
        var K = L("DefaultStartScroller");
        var E = L("DefaultStopScroller");
        (function (V) {
          V[V.IDLE = 0x0] = "IDLE";
          V[V.START = 0x1] = "START";
          V[V.STOP = 0x2] = "STOP";
        })(q = v.SlotState || (v.SlotState = {}));
        var Q = {
          spinType: undefined,
          reelData: undefined,
          symbolSize: undefined,
          numberOfColumn: undefined,
          numberOfRow: undefined,
          normalSymbolSpriteFrame: undefined,
          blurSymbolSpriteFrame: undefined,
          slotViews: undefined,
          slotScrollerController: undefined,
          getSymbolSize: undefined,
          getRandomSymbol: undefined,
          runScroller: undefined,
          topBufferRow: 0x1,
          bottomBufferRow: 0x1,
          normalSymbolScale: 0x1,
          blurSymbolScale: 0x1,
          blurSpeedFactor: 0.9,
          unblurSpeedFactor: 0.9,
          slotItem: g["default"],
          startScroller: K["default"],
          stopScroller: E["default"]
        };
        var A = function () {
          function J() {
            this.q_ = undefined;
            this.K_ = undefined;
            this.Q_ = undefined;
            this.Y_ = undefined;
            this.X_ = undefined;
            this.Z_ = undefined;
            this.tm = undefined;
            this.se = undefined;
            this.im = undefined;
            this.sm = undefined;
            this.ie = undefined;
            this.em = undefined;
            this.nm = undefined;
            this.om = undefined;
            this.P_ = undefined;
            this.cm = undefined;
          }
          var V = {
            get: function () {
              return this.em;
            },
            enumerable: false,
            configurable: true
          };
          var W = {
            get: function () {
              return this.nm;
            },
            enumerable: false,
            configurable: true
          };
          Object.defineProperty(J.prototype, "slotDataHandler", V);
          Object.defineProperty(J.prototype, "slotItemPool", W);
          Object.defineProperty(J.prototype, "slotItemHandler", {
            'get': function () {
              return this.om;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(J.prototype, "slotViews", {
            'get': function () {
              return this.se;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(J.prototype, "isSlotViewBlur", {
            'get': function () {
              return this.Q_;
            },
            'enumerable': false,
            'configurable': true
          });
          J.prototype.init = function (w) {
            Q.getScroller = this.getScroller.bind(this);
            Q.willChangeSlotState = this.willChangeSlotState.bind(this);
            Q.onSlotStateEnd = this.onScrollerEnd.bind(this);
            Q.slotViewGetItem = this.slotViewGetItem.bind(this);
            Q.slotViewReleaseItem = this.slotViewReleaseItem.bind(this);
            Q.onScrollerAccelerate = this.onScrollerAccelerate.bind(this);
            Q.onScrollerDecelerate = this.onScrollerDecelerate.bind(this);
            Q.onScrollerStop = this.onScrollerStop.bind(this);
            var O = (w = __assign(__assign({}, Q), w)).symbolSize;
            var F = this.q_ = w.numberOfColumn;
            var D = this.K_ = w.numberOfRow;
            var U = this.se = w.slotViews;
            var R = this.im = w.slotScrollerController;
            var x = !!w.getSymbolSize;
            this.Y_ = w.blurSpeedFactor;
            this.X_ = w.unblurSpeedFactor;
            var j = w.topBufferRow;
            var P = w.bottomBufferRow;
            this.Z_ = j * (x ? 0x2 : 0x1) + this.K_;
            this.tm = P * (x ? 0x2 : 0x1) + 0x1;
            var M = this.Q_ = [];
            for (var B = 0x0; B < D; B++) {
              M[B] = false;
            }
            (this.nm = w.slotItemPool ? w.slotItemPool : new Z["default"]()).init({
              'slotItem': w.slotItem,
              'normalSpriteFrame': w.normalSymbolSpriteFrame,
              'blurSpriteFrame': w.blurSymbolSpriteFrame,
              'normalScale': w.normalSymbolScale,
              'blurScale': w.blurSymbolScale,
              'getSymbolZOrder': w.getSymbolZOrder
            });
            (this.om = w.slotItemHandler ? w.slotItemHandler : new b["default"]()).init(D);
            (this.em = w.slotDataHandler ? w.slotDataHandler : new H["default"]()).init({
              'slotViews': U,
              'reelData': w.reelData,
              'largeSymbolDatas': w.largeSymbolDatas,
              'spinType': w.spinType,
              'numberOfColumn': F,
              'numberOfRow': D,
              'topBufferRow': j,
              'bottomBufferRow': P,
              'getSymbolSize': w.getSymbolSize,
              'getRandomSymbol': w.getRandomSymbol
            });
            var y = this.sm = [];
            var k = this.ie = [];
            var N0 = this.scrollerGetStopDistance.bind(this);
            var N1 = this.scrollerScroll.bind(this);
            for (B = 0x0; B < U.length; B++) {
              var N2 = {
                functionalRow: D,
                symbolSize: O,
                getItem: w.slotViewGetItem,
                releaseItem: w.slotViewReleaseItem,
                sortBottomItemToFront: w.sortBottomItemToFront
              };
              var N3 = {
                scrollCallback: N1
              };
              U[B].init(N2);
              (y[B] = new w.startScroller(__assign(N3, w.startScrollerConfig))).on(I.SCROLLER_EVENT.ACCELERATE, w.onScrollerAccelerate);
              var N4 = {
                scrollCallback: N1,
                getStopDistance: N0
              };
              var N5 = k[B] = new w.stopScroller(__assign(N4, w.stopScrollerConfig));
              N5.on(I.SCROLLER_EVENT.DECELERATE, w.onScrollerDecelerate);
              N5.on(I.SCROLLER_EVENT.END, w.onScrollerStop);
            }
            var N6 = {
              getScroller: w.getScroller,
              releaseScroller: w.releaseScroller,
              runScroller: w.runScroller,
              willChangeSlotState: w.willChangeSlotState,
              didChangeSlotState: w.didChangeSlotState,
              onSlotStateEnd: w.onSlotStateEnd
            };
            this.hm();
            R.init(U, N6);
            R.setSlotState(q.IDLE);
          };
          J.prototype.changeSymbol = function (w, O) {
            var F = this.om.getSlotItems(w)[0x0];
            this.nm.updateSlotItemSymbolIndex(F, O);
          };
          J.prototype.setOnReelStopCallback = function (w) {
            this.P_ = w;
          };
          J.prototype.setOnSlotStopCallback = function (w) {
            this.cm = w;
          };
          J.prototype.setSpinType = function (w) {
            this.em.setSpinType(w);
          };
          J.prototype.setReelData = function (w, O) {
            this.em.setReelData(w, O);
          };
          J.prototype.updateReelData = function (w, O) {
            this.em.updateReelData(w, O);
          };
          J.prototype.getReelStopPosition = function (w) {
            return this.em.getReelDataPosition(w);
          };
          J.prototype.getFormattedData = function (w) {
            return this.em.getFormattedData(w);
          };
          J.prototype.overwriteFormattedData = function (w, O, F) {
            this.em.overwriteFormattedData(w, O, F);
          };
          J.prototype.reloadSlot = function () {
            var w = this.em;
            var O = this.se;
            var F = 0x0;
            for (var D = this.se.length; F < D; F++) {
              w.setReelDataPosition(F, 0x0);
              O[F].reloadItems();
            }
            this.hm();
          };
          J.prototype.setFunctionalRow = function (w) {
            this.se.forEach(function (O) {
              return O.setFunctionalRow(w);
            });
          };
          J.prototype.setSlotAnchor = function (w) {
            this.se.forEach(function (O) {
              return O.setSlotAnchor(w);
            });
          };
          J.prototype.setItemsVisible = function (w) {
            var O;
            var F = [];
            for (var D = 0x1; D < arguments.length; D++) {
              F[D - 0x1] = arguments[D];
            }
            (O = this.om).getSlotItems.apply(O, __spread(F)).forEach(function (U) {
              return U.visible = w;
            });
          };
          J.prototype.setItemsBlur = function (w, O) {
            var F = this.se[O];
            this.Q_[O] = w;
            var D = F.getVisibleItems();
            var U = 0x0;
            for (var S = D.length; U < S; U++) {
              D[U].setBlur(w);
            }
          };
          J.prototype.getItemsVisible = function () {
            var w;
            var O = [];
            for (var F = 0x0; F < arguments.length; F++) {
              O[F] = arguments[F];
            }
            var D = [];
            (w = this.om).getSlotItems.apply(w, __spread(O)).forEach(function (U) {
              return D.push(U.visible);
            });
            return D;
          };
          J.prototype.getItemsWorldPositionAR = function () {
            var w;
            var O = [];
            for (var F = 0x0; F < arguments.length; F++) {
              O[F] = arguments[F];
            }
            var D = cc.v2();
            var U = [];
            (w = this.om).getSlotItems.apply(w, __spread(O)).forEach(function (S) {
              return U.push(S.node.convertToWorldSpaceAR(D));
            });
            return U;
          };
          J.prototype.scrollerAtIndex = function (w) {
            return this.im.scrollerAtIndex(w);
          };
          J.prototype.indexOfScroller = function (w) {
            return this.im.indexOfScroller(w);
          };
          J.prototype.getSlotState = function () {
            return this.im.getSlotState();
          };
          J.prototype.startScroll = function () {
            var w = this.im;
            if (w.getSlotState() === q.IDLE) {
              this.em.reset();
              w.setSlotState(q.START);
            }
          };
          J.prototype.stopScroll = function () {
            var w = this.im;
            if (w.getSlotState() === q.START) {
              w.setSlotState(q.STOP);
            }
          };
          J.prototype.instantStopScroll = function () {
            var w = this.im;
            if (w.getSlotState() !== q.IDLE) {
              w.setSlotState(q.STOP);
              w.endCurrentState();
            }
          };
          J.prototype.setStartScrollerConfig = function (w, O) {
            this.sm[w].setConfig(O);
          };
          J.prototype.setStopScrollerConfig = function (w, O) {
            this.ie[w].setConfig(O);
          };
          J.prototype.updateStartScrollerRunTimeConfig = function (w, O) {
            this.sm[w].updateRunTimeConfig(O);
          };
          J.prototype.updateStopScrollerRunTimeConfig = function (w, O) {
            this.ie[w].updateRunTimeConfig(O);
          };
          J.prototype.hm = function () {
            var w = this.om;
            w.reset();
            this.se.forEach(function (O, F) {
              O.getFunctionalItems().forEach(function (D) {
                if (-0x1 !== D.symbolIndex) {
                  w.setSlotItem(F, D);
                }
              });
            });
          };
          J.prototype.slotViewGetItem = function (w, O) {
            var F = this.em.getItemInfo(w, O);
            var D = this.se.indexOf(w);
            var U = this.nm.getSlotItem(F.symbolIndex, this.Q_[D]);
            U.positionIndex = F.positionIndex;
            U.symbolColumn = F.symbolColumn;
            U.symbolRow = F.symbolRow;
            return U;
          };
          J.prototype.slotViewReleaseItem = function (w, O) {
            this.nm.releaseSlotItem(O);
          };
          J.prototype.scrollerScroll = function (w, O) {
            var F = this.im.indexOfScroller(w);
            this.se[F].changePositionY(O);
          };
          J.prototype.scrollerGetStopDistance = function (w) {
            var O;
            var F = this.im.indexOfScroller(w);
            var D = this.se[F];
            O = w.getRunTimeConfig().maxSpeed > 0x0 ? D.getNextBottomIndex(this.Z_) : D.getNextTopIndex(this.tm);
            this.em.setReelDataPosition(F, O);
            return D.getDistanceToIndex(O);
          };
          J.prototype.onScrollerAccelerate = function (w) {
            var O = w.speedFactor;
            var F = this.Q_;
            var D = this.im.indexOfScroller(w.scroller);
            if (O > this.Y_ && !F[D]) {
              this.setItemsBlur(true, D);
            }
          };
          J.prototype.onScrollerDecelerate = function (w) {
            var O = w.speedFactor;
            var F = this.Q_;
            var D = this.im.indexOfScroller(w.scroller);
            if (O < this.X_ && F[D]) {
              this.setItemsBlur(false, D);
            }
          };
          J.prototype.onScrollerStop = function (w) {
            var O = this.im.indexOfScroller(w.scroller);
            var F = this.se[O];
            var D = this.om;
            F.resetPositionIndex();
            F.getFunctionalItems().forEach(function (S) {
              if (-0x1 !== S.symbolIndex) {
                D.setSlotItem(O, S);
              }
            });
            var U = this.P_;
            if (U) {
              U(O);
            }
          };
          J.prototype.getScroller = function (w, O, F) {
            return F === q.START ? this.sm[w] : F === q.STOP ? this.ie[w] : undefined;
          };
          J.prototype.willChangeSlotState = function (w, O) {
            if (w === q.IDLE && O === q.STOP) {
              this.im.endCurrentState();
            }
          };
          J.prototype.onScrollerEnd = function (w) {
            if (w === q.STOP) {
              this.im.setSlotState(q.IDLE);
              var O = this.cm;
              if (O) {
                O();
              }
            }
          };
          return J;
        }();
        v["default"] = A;
        cc._RF.pop();
      }
    }, L6],
    'SlotItemHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "cbfb0c2igtO8oHCc6bYN0xe", "SlotItemHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = function () {
          function v() {
            this.numberOfRow = undefined;
            this.functionalSlotItems = undefined;
          }
          v.prototype.init = function (G) {
            this.numberOfRow = G;
            this.functionalSlotItems = [];
          };
          v.prototype.reset = function () {
            this.functionalSlotItems.length = 0x0;
          };
          v.prototype.setSlotItem = function (G, q, f) {
            if (undefined === f) {
              f = 0x0;
            }
            var g = this.numberOfRow;
            var Z = g - 0x1 - (q.positionIndex - f);
            if (0x1 === q.symbolRow && 0x1 === q.symbolColumn) {
              this.functionalSlotItems[G * this.numberOfRow + Z] = q;
            } else {
              var b = Math.min(g - 0x1, Z);
              var H = Math.max(0x0, Z - q.symbolRow + 0x1);
              var I = G + q.symbolColumn - 0x1;
              for (var K = G; K <= I; K++) {
                for (var E = H; E <= b; E++) {
                  this.functionalSlotItems[K * g + E] = q;
                }
              }
            }
          };
          v.prototype.getSlotItems = function () {
            var G = [];
            for (var q = 0x0; q < arguments.length; q++) {
              G[q] = arguments[q];
            }
            var c = this.functionalSlotItems;
            if (G.length) {
              var f = [];
              G.forEach(function (g) {
                f.push(c[g]);
              });
              return f;
            }
            return __spread(c);
          };
          return v;
        }();
        Y["default"] = r;
        cc._RF.pop();
      }
    }, {}],
    'SlotItemPool': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "4cb49tzG5ZEy6QJghScmBDK", "SlotItemPool")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = function () {
          function v() {
            this.slotItemConstructor = undefined;
            this.slotItemPool = undefined;
            this.normalSpriteFrames = undefined;
            this.blurSpriteFrames = undefined;
            this.normalScale = undefined;
            this.blurScale = undefined;
            this.getSymbolZOrder = undefined;
          }
          v.prototype.init = function (G) {
            this.slotItemConstructor = G.slotItem;
            var q = G.normalSpriteFrame;
            this.normalSpriteFrames = q[0x0] instanceof Array ? q[0x0] : q;
            var c = G.blurSpriteFrame;
            this.blurSpriteFrames = c ? c[0x0] instanceof Array ? c[0x0] : c : this.normalSpriteFrames;
            this.normalScale = undefined === G.normalScale ? 0x1 : G.normalScale;
            this.blurScale = undefined === G.blurScale ? 0x1 : G.blurScale;
            this.getSymbolZOrder = G.getSymbolZOrder;
            this.slotItemPool = new cc.NodePool(G.slotItem);
          };
          v.prototype.getSlotItem = function (G, q) {
            if (undefined === q) {
              q = false;
            }
            if (G < 0x0) {
              var c = new cc.Node().addComponent(this.slotItemConstructor);
              c.symbolIndex = G;
              return c;
            }
            var f;
            var g = this.slotItemPool;
            (f = g.size() ? g.get().getComponent(this.slotItemConstructor) : this.createNewSlotItem()).setup(G, this.normalSpriteFrames[G], this.blurSpriteFrames[G], q);
            return f;
          };
          v.prototype.releaseSlotItem = function (G) {
            if (G.symbolIndex < 0x0) {
              G.node.destroy();
            } else {
              this.slotItemPool.put(G.node);
            }
          };
          v.prototype.updateSlotItemSymbolIndex = function (G, q) {
            G.setup(q, this.normalSpriteFrames[q], this.blurSpriteFrames[q]);
          };
          v.prototype.createNewSlotItem = function () {
            var G = new cc.Node("slot_item");
            var q = new cc.Node("sprite");
            q.parent = G;
            var c = q.addComponent(cc.Sprite);
            c.sizeMode = cc.Sprite.SizeMode.RAW;
            c.trim = false;
            var f = G.addComponent(this.slotItemConstructor);
            var g = {
              sprite: c,
              normalScale: this.normalScale,
              blurScale: this.blurScale,
              getSymbolZOrder: this.getSymbolZOrder
            };
            f.init(g);
            return f;
          };
          return v;
        }();
        Y["default"] = r;
        cc._RF.pop();
      }
    }, {}],
    'SlotItem': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "cba1dJ8KHJAlrAxCvyls0+u", "SlotItem")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("SlotSymbol");
        var v = cc._decorator.ccclass;
        var G = function (q) {
          function c() {
            var f = null !== q && q.apply(this, arguments) || this;
            f.positionIndex = 0x0;
            f.sprite = undefined;
            f.normalSpriteFrame = undefined;
            f.blurSpriteFrame = undefined;
            f.normalScale = undefined;
            f.blurScale = undefined;
            f.getSymbolZOrder = undefined;
            return f;
          }
          __extends(c, q);
          Object.defineProperty(c.prototype, "visible", {
            'get': function () {
              return this.sprite && this.sprite.node.active;
            },
            'set': function (f) {
              if (this.sprite) {
                this.sprite.node.active = f;
              }
            },
            'enumerable': false,
            'configurable': true
          });
          c.prototype.init = function (f) {
            this.sprite = f.sprite;
            var g = this.normalScale = undefined === f.normalScale ? 0x1 : f.normalScale;
            this.blurScale = undefined === f.blurScale ? g : f.blurScale;
            this.getSymbolZOrder = f.getSymbolZOrder;
          };
          c.prototype.setup = function (f, g, Z, b) {
            if (undefined === b) {
              b = false;
            }
            this.symbolIndex = f;
            this.normalSpriteFrame = g;
            this.blurSpriteFrame = Z;
            this.zOrder = this.getSymbolZOrder ? this.getSymbolZOrder(f) : 0x0;
            this.setZIndex();
            this.setBlur(b);
          };
          c.prototype.setZIndex = function (f) {
            if (undefined === f) {
              f = 0x0;
            }
            this.node.zIndex = f + 0x64 * this.zOrder;
          };
          c.prototype.unuse = function () {
            this.normalSpriteFrame = undefined;
            this.blurSpriteFrame = undefined;
            this.visible = true;
            q.prototype.unuse.call(this);
          };
          c.prototype.setBlur = function (f) {
            var g = this.sprite;
            if (g) {
              g.spriteFrame = f ? this.blurSpriteFrame : this.normalSpriteFrame;
              g.node.scale = f ? this.blurScale : this.normalScale;
            }
          };
          return __decorate([v], c);
        }(r["default"]);
        Y["default"] = G;
        cc._RF.pop();
      }
    }, L7],
    'SlotProperties': [function (q, c, f) {
      'use strict';

      var e = {
        value: true
      };
      var g = {
        width: 0x140,
        height: 0x131
      };
      var Z = {
        'x': 0x1,
        'y': 0x1
      };
      var b = {
        'x': 0x2,
        'y': 0x2
      };
      var H = {
        width: 0x408,
        height: 0x384
      };
      var I = {
        'x': 3.043,
        'y': 2.916
      };
      var K = {
        width: 0x196,
        height: 0x196
      };
      var E = {
        WILD: 0x0,
        SCATTER: 0x1,
        INGOTS: 0x2,
        RUYI: 0x3,
        MONEYBAG: 0x4,
        REDPACKETS: 0x5,
        FIRECRACKER: 0x6,
        ORANGE: 0x7,
        EMPTY: 0x63
      };
      if (!cc._RF.push(c, "23a69zGpqhNhJndUhrzZ/2c", "SlotProperties")) {
        Object.defineProperty(f, "__esModule", e);
        f.tenShake = f.createSymbolShake = f.parseRespinReelData = f.getSlotWildsAtReel = f.getSlotWilds = f.slotContainsWild = f.getRandomSlotSymbol = f.getIndicesFromReel = f.sortReelIndex = f.getRowFromIndex = f.getColumnFromIndex = f.getFilteredWinPositions = f.SLOT_INDEX = f.SLOT_ITEM_IMAGE_SIZE = f.MAX_NO_OF_BONUS_SLOT_ITEMS = f.BONUS_SYMBOL_SCALE = f.BONUS_SLOT_COLUMN = f.BONUS_SLOT_ROW = f.BONUS_SLOT_ITEM_SIZE = f.NO_OF_SLOT_ITEMS = f.BLUR_SCALE = f.NORMAL_SYMBOL_SCALE = f.NORMAL_SLOT_COLUMN = f.NORMAL_SLOT_ROW = f.NORMAL_SLOT_ITEM_SIZE = undefined;
        f.NORMAL_SLOT_ITEM_SIZE = g;
        f.NORMAL_SLOT_ROW = 0x3;
        f.NORMAL_SLOT_COLUMN = 0x3;
        f.NORMAL_SYMBOL_SCALE = Z;
        f.BLUR_SCALE = b;
        f.NO_OF_SLOT_ITEMS = 0x9;
        f.BONUS_SLOT_ITEM_SIZE = H;
        f.BONUS_SLOT_ROW = 0x1;
        f.BONUS_SLOT_COLUMN = 0x1;
        f.BONUS_SYMBOL_SCALE = I;
        f.MAX_NO_OF_BONUS_SLOT_ITEMS = 0x2;
        f.SLOT_ITEM_IMAGE_SIZE = K;
        f.SLOT_INDEX = cc.Enum(E);
        f.getFilteredWinPositions = function (Q) {
          var X = [];
          Q.winPositions.map(function (o) {
            return Q.getWinLinesByPosition(o);
          }).forEach(function (o) {
            X.push.apply(X, __spread(o));
          });
          return X.filter(function (o, A, V) {
            return V.indexOf(o) === A;
          });
        };
        f.getColumnFromIndex = function (Q, X) {
          if (undefined === X) {
            X = f.NORMAL_SLOT_ROW;
          }
          return Math.floor(Q / X);
        };
        f.getRowFromIndex = function (Q, X) {
          if (undefined === X) {
            X = f.NORMAL_SLOT_ROW;
          }
          return Q % X;
        };
        f.sortReelIndex = function (Q) {
          Q.sort(function (o, A) {
            return o - A;
          });
          return Q;
        };
        f.getIndicesFromReel = function (Q, X) {
          var o = X * f.NORMAL_SLOT_COLUMN;
          return [Q[0x0 + o], Q[0x1 + o], Q[0x2 + o]];
        };
        f.getRandomSlotSymbol = function (Q, X) {
          if (undefined === X) {
            X = 0x0;
          }
          var o = Math.floor(0x7 + Math.random() * (X - 0x7));
          if (Q && o === Q) {
            o = o + 0x1 > X ? Q === X ? 0x7 : X : o + 0x1;
          }
          return o;
        };
        f.slotContainsWild = function (Q) {
          return Q.includes(f.SLOT_INDEX.WILD);
        };
        f.getSlotWilds = function (Q) {
          var X = [];
          Q.forEach(function (o, A) {
            if (o === f.SLOT_INDEX.WILD) {
              X.push(A);
            }
          });
          return X;
        };
        f.getSlotWildsAtReel = function (Q, X) {
          var o = [];
          [0x0 + X * f.NORMAL_SLOT_ROW, 0x1 + X * f.NORMAL_SLOT_ROW, 0x2 + X * f.NORMAL_SLOT_ROW].forEach(function (A) {
            if (Q[A] === f.SLOT_INDEX.WILD) {
              o.push(A);
            }
          });
          return o;
        };
        f.parseRespinReelData = function (Q) {
          var X = new (Array.bind.apply(Array, __spread([undefined], Q)))();
          X[0x3] = X[0x4] = X[0x5] = f.SLOT_INDEX.EMPTY;
          return X;
        };
        f.createSymbolShake = function () {
          var Q = 0.001 * (Math.floor(Math.random()) + 0x1e);
          return cc.repeatForever(cc.sequence(cc.moveBy(Q, cc.v2(-8.5, 0x0)), cc.moveBy(Q, cc.v2(0xb, 1.5)), cc.moveBy(Q, cc.v2(-0x7, -0x4)), cc.moveBy(Q, cc.v2(-0x9, 4.5)), cc.moveBy(Q, cc.v2(0xa, -0x2)), cc.moveBy(Q, cc.v2(-0xa, -1.5)), cc.moveBy(Q, cc.v2(-0x1, 2.5)), cc.moveBy(Q, cc.v2(8.5, -0x1))));
        };
        f.tenShake = function () {
          var Q = 0.001 * (Math.floor(Math.random()) + 0x1e);
          return cc.sequence(cc.moveBy(Q, cc.v2(-8.5, 0x0)), cc.moveBy(Q, cc.v2(0xb, 1.5)), cc.moveBy(Q, cc.v2(-0x7, -0x4)), cc.moveBy(Q, cc.v2(-0x9, 4.5)), cc.moveBy(Q, cc.v2(0xa, -0x2)), cc.moveBy(Q, cc.v2(-0xa, -1.5)), cc.moveBy(Q, cc.v2(-0x1, 2.5)), cc.moveBy(Q, cc.v2(8.5, -0x1)));
        };
        cc._RF.pop();
      }
    }, {}],
    'SlotScrollerController.spec': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "e08af4I5BlAUaisYXf6Oz5Q", "SlotScrollerController.spec")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.onStateChange = undefined;
        Y.onStateChange = function (r) {
          var v = System.get("automation") && System.get("automation").GameData;
          if (r > 0x0 && v) {
            v.emit("ScrollEvent", 0x1 === r ? "start" : "stop");
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'SlotScrollerController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "3383aiogiFCOKC9u2Q0E3sA", "SlotScrollerController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("SlotScrollerController.spec");
        var v = z("AutomationDecorator");
        var G = cc._decorator.ccclass;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.slotViews = undefined;
            Z.isEnded = true;
            Z.slotState = undefined;
            Z.pendingSlotState = undefined;
            Z.scrollers = [];
            Z.abortRunScroller = undefined;
            Z.bindedRunScrollerAtIndex = undefined;
            return Z;
          }
          __extends(g, f);
          g.prototype.onEnable = function () {
            if (undefined !== this.pendingSlotState) {
              var Z = this.pendingSlotState;
              this.pendingSlotState = undefined;
              var b = this.slotState;
              if (b !== Z) {
                this.onStateChange(Z, b);
              }
            }
          };
          g.prototype.onDisable = function () {
            var Z;
            var b;
            try {
              var H = __values(this.scrollers);
              for (var I = H.next(); !I.done; I = H.next()) {
                var K = I.value;
                if (!K.isEnded) {
                  K.end();
                }
              }
            } catch (Q) {
              var E = {
                error: Q
              };
              Z = E;
            } finally {
              try {
                if (I && !I.done && (b = H["return"])) {
                  b.call(H);
                }
              } finally {
                if (Z) {
                  throw Z.error;
                }
              }
            }
          };
          g.prototype.update = function (Z) {
            var b;
            var H;
            var I;
            var K;
            if (this.isEnded) {
              try {
                var E = __values(this.scrollers);
                for (var Q = E.next(); !Q.done; Q = E.next()) {
                  if ((J = Q.value) && J.update) {
                    J.update(Z);
                  }
                }
              } catch (F) {
                var X = {
                  error: F
                };
                b = X;
              } finally {
                try {
                  if (Q && !Q.done && (H = E["return"])) {
                    H.call(E);
                  }
                } finally {
                  if (b) {
                    throw b.error;
                  }
                }
              }
            } else {
              var A = true;
              try {
                var V = __values(this.scrollers);
                for (var W = V.next(); !W.done; W = V.next()) {
                  var J;
                  if (J = W.value) {
                    if (J.update) {
                      J.update(Z);
                    }
                    if (!J.isEnded) {
                      A = false;
                    }
                  }
                }
              } catch (D) {
                var w = {
                  error: D
                };
                I = w;
              } finally {
                try {
                  if (W && !W.done && (K = V["return"])) {
                    K.call(V);
                  }
                } finally {
                  if (I) {
                    throw I.error;
                  }
                }
              }
              if (A) {
                this.isEnded = true;
                this.abortRunScroller = undefined;
                var O = this.callbacks.onSlotStateEnd;
                if (O) {
                  O(this.slotState);
                }
              }
            }
          };
          g.prototype.init = function (Z, b) {
            this.slotViews = Z;
            this.callbacks = b;
            this.bindedRunScrollerAtIndex = this.runScrollerAtIndex.bind(this);
          };
          g.prototype.scrollerAtIndex = function (Z) {
            return this.scrollers[Z];
          };
          g.prototype.indexOfScroller = function (Z) {
            return this.scrollers.indexOf(Z);
          };
          g.prototype.getSlotState = function () {
            return this.slotState;
          };
          g.prototype.setSlotState = function (Z) {
            if (this.enabledInHierarchy) {
              this.pendingSlotState = undefined;
              var b = this.slotState;
              if (b !== Z) {
                this.onStateChange(Z, b);
              }
            } else {
              this.pendingSlotState = Z;
            }
          };
          g.prototype.endCurrentState = function () {
            var Z;
            var b;
            var H = this.abortRunScroller;
            if (H) {
              this.abortRunScroller = undefined;
              H();
            }
            try {
              var I = __values(this.scrollers);
              for (var K = I.next(); !K.done; K = I.next()) {
                var E = K.value;
                if (E) {
                  E.end();
                }
              }
            } catch (X) {
              var Q = {
                error: X
              };
              Z = Q;
            } finally {
              try {
                if (K && !K.done && (b = I["return"])) {
                  b.call(I);
                }
              } finally {
                if (Z) {
                  throw Z.error;
                }
              }
            }
          };
          g.prototype.onStateChange = function (Z, b) {
            var H = this.slotViews;
            var I = this.scrollers;
            var K = this.callbacks;
            if (K.willChangeSlotState) {
              K.willChangeSlotState(Z, b);
            }
            var E = this.abortRunScroller;
            if (E) {
              this.abortRunScroller = undefined;
              E();
            }
            var Q = 0x0;
            for (var X = H.length; Q < X; Q++) {
              var A = I[Q];
              var V = K.getScroller(Q, H[Q], Z, b, A);
              I[Q] = V;
              if (A) {
                if (!A.isEnded) {
                  A.end();
                }
                if (K.releaseScroller) {
                  K.releaseScroller(Q, A);
                }
              }
              if (V) {
                V.reset();
                this.isEnded = false;
              }
            }
            this.slotState = Z;
            if (K.didChangeSlotState) {
              K.didChangeSlotState(Z, b);
            }
            this.abortRunScroller = K.runScroller(Z, this.bindedRunScrollerAtIndex);
          };
          g.prototype.runScrollerAtIndex = function (Z) {
            var b = this.scrollers[Z];
            if (b) {
              b.run();
            }
          };
          __decorate([v.automationDec({
            'func': r.onStateChange
          })], g.prototype, "onStateChange", null);
          return __decorate([G], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, L8],
    'SlotStateMachine': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "f1d53JqS5hGVbtNCz0JAnwN", "SlotStateMachine")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.StopStyle = Y.SlotStates = undefined;
        var r;
        var v;
        var G = z("Utils");
        (function (f) {
          f[f.SPINNING = 0x0] = "SPINNING";
          f[f.STOPPING = 0x1] = "STOPPING";
          f[f.STOPPED = 0x2] = "STOPPED";
        })(r = Y.SlotStates || (Y.SlotStates = {}));
        (function (f) {
          f[f.NORMAL = 0x0] = "NORMAL";
          f[f.FAST = 0x1] = "FAST";
        })(v = Y.StopStyle || (Y.StopStyle = {}));
        var q = function () {
          function f() {
            this.L = r.STOPPED;
            this.rm = v.NORMAL;
            this.am = false;
            this.um = false;
            this.lm = undefined;
            this.fm = undefined;
          }
          f.prototype.getState = function () {
            return this.L;
          };
          f.prototype.getStopStyle = function () {
            return this.rm;
          };
          f.prototype.spin = function (g, Z) {
            if (this.L === r.STOPPED) {
              this.L = r.SPINNING;
              G.delayCallback(g)(this.dm.bind(this));
              this.lm = G.delayCallback(Z)(this.vm.bind(this));
            }
          };
          f.prototype.markFastStop = function () {
            if (this.L === r.SPINNING) {
              this.rm = v.FAST;
            }
          };
          f.prototype.unmarkFastStop = function () {
            if (this.rm === v.FAST && this.L === r.SPINNING) {
              this.rm = v.NORMAL;
            }
          };
          f.prototype.fastStop = function (g) {
            if (!(this.L !== r.SPINNING && this.L !== r.STOPPING)) {
              this.rm = v.FAST;
              this.L = r.STOPPING;
              this.fm = g;
              if (this.am) {
                this._m();
              }
            }
          };
          f.prototype.stop = function (g) {
            if (this.L === r.SPINNING) {
              if (this.rm === v.FAST) {
                return;
              }
              this.L = r.STOPPING;
              this.fm = g;
              if (this.um) {
                this.mm();
              }
            }
          };
          f.prototype.stopped = function () {
            this.L = r.STOPPED;
            this.yc();
          };
          f.prototype.dm = function () {
            this.am = true;
            if (this.L === r.STOPPING && this.rm === v.FAST) {
              this._m();
            }
          };
          f.prototype.vm = function () {
            this.um = true;
            if (this.L === r.STOPPING && this.rm === v.NORMAL) {
              this.mm();
            }
          };
          f.prototype._m = function () {
            var g = this.lm;
            this.lm = undefined;
            if (g) {
              g();
            }
            this.mm();
          };
          f.prototype.mm = function () {
            var g = this.fm;
            this.fm = undefined;
            if (g) {
              g();
            }
          };
          f.prototype.yc = function () {
            this.rm = v.NORMAL;
            this.am = false;
            this.um = false;
            this.fm = undefined;
            this.lm = undefined;
          };
          return f;
        }();
        Y["default"] = q;
        cc._RF.pop();
      }
    }, L9],
    'SlotSymbol': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "95c9eiMihhJPZX0QzA3D4uZ", "SlotSymbol")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("BVFramework");
        var v = cc._decorator.ccclass;
        var G = function (q) {
          function c() {
            var f = null !== q && q.apply(this, arguments) || this;
            f.symbolRow = 0x1;
            f.symbolColumn = 0x1;
            f.pm = true;
            f.bm = false;
            return f;
          }
          __extends(c, q);
          Object.defineProperty(c.prototype, "visible", {
            'get': function () {
              return this.node.active;
            },
            'set': function (f) {
              this.node.active = f;
            },
            'enumerable': false,
            'configurable': true
          });
          c.prototype.onLoad = function () {
            if (this.pm) {
              r.getGameContext().emit("Game.SymbolCreated", this);
              this.bm = true;
            }
          };
          c.prototype.unuse = function () {
            this.symbolRow = 0x1;
            this.symbolColumn = 0x1;
            if (this.pm && this.bm) {
              r.getGameContext().emit("Game.SymbolRemoved", this);
            }
          };
          c.prototype.reuse = function () {
            if (this.pm && this.bm) {
              r.getGameContext().emit("Game.SymbolCreated", this);
            }
          };
          c.prototype.onDestroy = function () {
            if (this.pm && this.bm) {
              r.getGameContext().emit("Game.SymbolRemoved", this);
            }
          };
          c.prototype.enableEvent = function (f) {
            this.pm = f;
          };
          return __decorate([v], c);
        }(cc.Component);
        Y["default"] = G;
        cc._RF.pop();
      }
    }, LN],
    'SlotSystemModel': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "b8e48q3OlREgpqZ/fqigt7Z", "SlotSystemModel")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("SystemModel");
        var v = z("WinThresholdsModel");
        var G = function (q) {
          function c() {
            return null !== q && q.apply(this, arguments) || this;
          }
          __extends(c, q);
          c.prototype.updateGameInfo = function (f) {
            var g = f.cs;
            var Z = f.ml;
            var b = f.mxl;
            var H = f.fbbm;
            var I = f.wt;
            this.rd = g || [];
            this.ad = Z || [];
            this.Sm = b;
            this.gm = H;
            this.Cm = I ? new v.WinThresholdsModel(I) : undefined;
          };
          Object.defineProperty(c.prototype, "betLevelList", {
            'get': function () {
              return this.ad;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(c.prototype, "betSizeList", {
            'get': function () {
              return this.rd;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(c.prototype, "maxLineNumber", {
            'get': function () {
              return this.Sm;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(c.prototype, "featureBuyBetMultiplier", {
            'get': function () {
              return this.gm;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(c.prototype, "winThresholds", {
            'get': function () {
              return this.Cm;
            },
            'enumerable': false,
            'configurable': true
          });
          return c;
        }(r["default"]);
        Y["default"] = G;
        cc._RF.pop();
      }
    }, Lz],
    'SlotTintController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "a2d09YiJcRAgoIHw+TUmuSO", "SlotTintController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.slotTintHolder = undefined;
            return Z;
          }
          __extends(g, f);
          g.prototype.init = function () {
            this.slotTintHolder.width = 0x7d0;
            this.slotTintHolder.height = 0x7d0;
            this.slotTintHolder.opacity = 0x0;
          };
          g.prototype.fadeIn = function (Z, b) {
            if (undefined === Z) {
              Z = 0x0;
            }
            this.slotTintHolder.stopAllActions();
            this.slotTintHolder.runAction(cc.sequence(cc.fadeTo(Z, 0x8f), cc.callFunc(function () {
              if (b) {
                b();
              }
            })));
          };
          g.prototype.fadeOut = function (Z, b) {
            if (undefined === Z) {
              Z = 0x0;
            }
            this.slotTintHolder.stopAllActions();
            this.slotTintHolder.runAction(cc.sequence(cc.fadeOut(Z), cc.callFunc(function () {
              if (b) {
                b();
              }
            })));
          };
          __decorate([G(cc.Node)], g.prototype, "slotTintHolder", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'SlotTransactionModel': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "d5629sKgMRK16ZrOMxnkzm9", "SlotTransactionModel")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("WinValuesModel");
        var v = z("WinLinesModel");
        var G = z("BetRepository");
        var q = function (f) {
          function g() {
            return null !== f && f.apply(this, arguments) || this;
          }
          var Z = {
            get: function () {
              return this.ym;
            },
            enumerable: false,
            configurable: true
          };
          var b = {
            get: function () {
              return this.Mm;
            },
            enumerable: false,
            configurable: true
          };
          __extends(g, f);
          Object.defineProperty(g.prototype, "winLines", Z);
          Object.defineProperty(g.prototype, "winValues", b);
          Object.defineProperty(g.prototype, "betLevelValue", {
            'get': function () {
              return this.Am.selectedBetLevelValue;
            },
            'set': function (H) {
              this.Am.selectedBetLevelValue = H;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(g.prototype, "betSizeValue", {
            'get': function () {
              return this.Am.selectedBetSizeValue;
            },
            'set': function (H) {
              this.Am.selectedBetSizeValue = H;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(g.prototype, "reels", {
            'get': function () {
              return this.Im;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(g.prototype, "originalReels", {
            'get': function () {
              return this.wm;
            },
            'enumerable': false,
            'configurable': true
          });
          g.prototype.updateTransactionInfo = function (H) {
            var I = H.wp;
            var K = H.lw;
            var E = H.ml;
            var Q = H.cs;
            var X = H.orl;
            var A = H.rl;
            this.ym = I ? new v.WinLinesModel(I) : undefined;
            this.Mm = K ? new r.WinValuesModel(K) : undefined;
            if (!this.Am) {
              this.Am = new G.BetRepository(E, Q);
            }
            this.Am.updateRemoteBets(E, Q);
            this.Im = A;
            this.wm = X;
            this.updateSlotGameTransactionInfo(H);
          };
          return g;
        }(z("TransactionModel")["default"]);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, LC],
    'SlotView': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "dd04eu7yQpIx4UwS/QtQOjh", "SlotView")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.SlotAnchor = undefined;
        var r;
        var v = cc._decorator.ccclass;
        (function (q) {
          q[q.BOTTOM = -0x1] = "BOTTOM";
          q[q.MIDDLE = 0x0] = "MIDDLE";
          q[q.TOP = 0x1] = "TOP";
        })(r = Y.SlotAnchor || (Y.SlotAnchor = {}));
        var G = function () {
          function q(c, f) {
            if (undefined === f) {
              f = 0x0;
            }
            this.functionalRow = 0x0;
            this.symbolSize = undefined;
            this.viewHeight = 0x0;
            this.holder = undefined;
            this.offsetX = 0x0;
            this.sortBottomItemToFront = undefined;
            this.slotAnchor = r.MIDDLE;
            this.topIndex = 0x0;
            this.bottomIndex = 0x0;
            this.accumulatedPositionY = 0x0;
            this.slotItems = [];
            this.isDirty = true;
            this.bottomSlotIndex = undefined;
            this.holder = c;
            this.offsetX = f;
            this.viewHeight = c.height;
            c.on(cc.Node.EventType.SIZE_CHANGED, this.onSizeChanged, this);
          }
          q.prototype.init = function (c) {
            this.functionalRow = c.functionalRow;
            this.symbolSize = c.symbolSize;
            this.getItem = c.getItem;
            this.releaseItem = c.releaseItem;
            this.sortBottomItemToFront = c.sortBottomItemToFront;
            this.reloadItemsToIndex(0x0);
          };
          q.prototype.getFunctionalItems = function () {
            var f;
            var g;
            var Z = this.slotItems;
            var b = Z.length;
            var H = 0.5 * this.symbolSize.height;
            var I = this.functionalRow * H;
            for (var K = 0x0; K < b; K++) {
              var E = (Q = Z[K]).node.y - Q.symbolRow * H;
              if (E < I) {
                f = I - E >= H ? K : K + 0x1;
                break;
              }
            }
            for (K = b - 0x1; K >= 0x0; K--) {
              var Q;
              var X = (Q = Z[K]).node.y + Q.symbolRow * H;
              if (X > -I) {
                g = X + I > H ? K : K - 0x1;
                break;
              }
            }
            return Z.slice(f, g + 0x1);
          };
          q.prototype.getVisibleItems = function () {
            return this.slotItems;
          };
          q.prototype.getAccumulatedPositionY = function () {
            return this.accumulatedPositionY;
          };
          q.prototype.getItemAtIndex = function (f) {
            var g;
            var Z;
            if (this.isIndexVisible(f)) {
              try {
                var b = __values(this.slotItems);
                for (var H = b.next(); !H.done; H = b.next()) {
                  var I = H.value;
                  if (I.positionIndex <= f) {
                    return I;
                  }
                }
              } catch (E) {
                var K = {
                  error: E
                };
                g = K;
              } finally {
                try {
                  if (H && !H.done && (Z = b["return"])) {
                    Z.call(b);
                  }
                } finally {
                  if (g) {
                    throw g.error;
                  }
                }
              }
            }
          };
          q.prototype.getNextTopIndex = function (c) {
            return Math.max(this.topIndex + 0x1, this.getBottomSlotIndex() + this.functionalRow + c);
          };
          q.prototype.getNextBottomIndex = function (c) {
            return Math.min(this.bottomIndex - 0x1, this.getBottomSlotIndex() - c - 0x1);
          };
          q.prototype.getDistanceToIndex = function (c) {
            var f = this.symbolSize.height;
            var g = this.getBottomSlotIndex();
            var Z = this.getItemAtIndex(g);
            var b = (g - Z.positionIndex - (Z.symbolRow - 0x1) / 0x2) * f;
            var H = Z.node.y + b;
            return (g - c) * f + (0.5 * (0x1 - this.functionalRow) * f - H);
          };
          q.prototype.getAccumulatedPositionAtIndex = function (c) {
            return this.symbolSize.height * -c;
          };
          q.prototype.getOffsetX = function () {
            return this.offsetX;
          };
          q.prototype.isIndexVisible = function (c) {
            return c >= this.bottomIndex && c <= this.topIndex;
          };
          q.prototype.setFunctionalRow = function (c) {
            this.functionalRow = c;
            this.isDirty = true;
          };
          q.prototype.setSlotAnchor = function (c) {
            this.slotAnchor = c;
          };
          q.prototype.changePositionY = function (c) {
            this.accumulatedPositionY += c;
            var f = this.slotItems;
            var g = 0x0;
            for (var Z = f.length; g < Z; g++) {
              f[g].node.y += c;
            }
            this.reviseVisibleItem();
          };
          q.prototype.resetPositionIndex = function () {
            var c = this.slotItems;
            var f = this.getBottomSlotIndex();
            c.forEach(function (g) {
              return g.positionIndex -= f;
            });
            this.topIndex -= f;
            this.bottomIndex -= f;
            this.accumulatedPositionY += f * this.symbolSize.height;
            this.isDirty = true;
          };
          q.prototype.scrollTo = function (c) {
            var f = this.getItemAtIndex(c);
            if (f) {
              var g = this.symbolSize.height;
              var Z = 0.5 * (f.symbolRow - this.functionalRow) * g;
              var b = (c - f.positionIndex) * g;
              this.changePositionY(Z - f.node.y - b);
            } else {
              this.reloadItemsToIndex(c);
            }
          };
          q.prototype.reloadItems = function (c) {
            if (undefined === c) {
              c = true;
            }
            if (c) {
              this.reloadItemsToIndex(0x0);
            } else {
              this.reloadItemsToIndex(this.getBottomSlotIndex());
            }
          };
          q.prototype.onSizeChanged = function () {
            var c = this.holder.height;
            if (this.viewHeight !== c) {
              var f = this.viewHeight;
              this.viewHeight = c;
              var g = this.slotAnchor;
              if (g) {
                var Z = c - f;
                this.changePositionY(g * Z / 0x2);
              } else {
                this.reviseVisibleItem();
              }
            }
          };
          q.prototype.reloadItemsToIndex = function (f) {
            var g = this;
            var Z = this.slotItems;
            var b = this.symbolSize;
            if (Z.length) {
              Z.forEach(function (E) {
                return g.releaseItem(g, E);
              });
              Z.length = 0x0;
            }
            var H = Z[0x0] = this.getItem(this, f);
            var I = H.positionIndex;
            var K = H.node;
            K.parent = this.holder;
            K.y = ((H.symbolRow - this.functionalRow) / 0x2 + I) * b.height;
            K.x = (H.symbolColumn - 0x1) / 0x2 * b.width + this.offsetX;
            this.bottomIndex = I;
            this.topIndex = I + H.symbolRow - 0x1;
            this.accumulatedPositionY = -f * b.height;
            this.reviseVisibleItem();
          };
          q.prototype.reviseVisibleItem = function () {
            var c = this.slotItems;
            var f = this.symbolSize.height / 0x2;
            var g = this.viewHeight / 0x2 - 0.000005;
            var Z = c[0x0];
            var b = c[c.length - 0x1];
            var H = false;
            if (Z.node.y + Z.symbolRow * f < g) {
              do {
                this.addItemAtTop();
                Z = c[0x0];
              } while (Z.node.y + Z.symbolRow * f < g);
            } else if (Z.node.y - Z.symbolRow * f > g) {
              H = true;
            }
            if (b.node.y - b.symbolRow * f > -g) {
              do {
                this.addItemAtBottom();
                b = c[c.length - 0x1];
              } while (b.node.y - b.symbolRow * f > -g);
            } else if (b.node.y + b.symbolRow * f < -g) {
              do {
                this.removeItemAtBottom();
                b = c[c.length - 0x1];
              } while (b.node.y + b.symbolRow * f < -g);
            }
            if (H) {
              do {
                this.removeItemAtTop();
                Z = c[0x0];
              } while (Z.node.y - Z.symbolRow * f > g);
            }
            this.isDirty = true;
          };
          q.prototype.addItemAtTop = function () {
            var c = this.symbolSize;
            var f = this.slotItems;
            var g = f[0x0];
            var Z = this.topIndex + 0x1;
            var b = this.getItem(this, Z);
            var H = b.node;
            H.parent = this.holder;
            H.y = g.node.y + (g.symbolRow + b.symbolRow) / 0x2 * c.height;
            H.x = (b.symbolColumn - 0x1) / 0x2 * c.width + this.offsetX;
            f.unshift(b);
            b.positionIndex = Z;
            this.topIndex += b.symbolRow;
            if (this.sortBottomItemToFront) {
              b.setZIndex(this.getBottomSlotIndex() - b.positionIndex);
            }
          };
          q.prototype.addItemAtBottom = function () {
            var f = this.symbolSize;
            var g = this.slotItems;
            var Z = g[g.length - 0x1];
            var b = this.bottomIndex - 0x1;
            var H = this.getItem(this, b);
            var I = H.node;
            I.parent = this.holder;
            I.y = Z.node.y - (Z.symbolRow + H.symbolRow) / 0x2 * f.height;
            I.x = (H.symbolColumn - 0x1) / 0x2 * f.width + this.offsetX;
            g.push(H);
            H.positionIndex = this.bottomIndex -= H.symbolRow;
            if (this.sortBottomItemToFront) {
              var K = this.getBottomSlotIndex();
              var E = 0x0;
              for (var Q = g.length; E < Q; E++) {
                g[E].setZIndex(K - g[E].positionIndex);
              }
            }
          };
          q.prototype.removeItemAtTop = function () {
            var c = this.slotItems.shift();
            c.node.parent = undefined;
            this.topIndex -= c.symbolRow;
            this.releaseItem(this, c);
          };
          q.prototype.removeItemAtBottom = function () {
            var c = this.slotItems;
            var f = c.pop();
            f.node.parent = undefined;
            this.bottomIndex += f.symbolRow;
            this.releaseItem(this, f);
            if (this.sortBottomItemToFront) {
              var g = this.getBottomSlotIndex();
              var Z = 0x0;
              for (var b = c.length; Z < b; Z++) {
                c[Z].setZIndex(g - c[Z].positionIndex);
              }
            }
          };
          q.prototype.getBottomSlotIndex = function () {
            if (!this.isDirty) {
              return this.bottomSlotIndex;
            }
            this.isDirty = false;
            var f = this.slotItems;
            var g = 0.5 * this.symbolSize.height;
            var Z = (0x1 - this.functionalRow) * g;
            for (var b = f.length - 0x1; b >= 0x0; b--) {
              var H = f[b];
              var I = H.node.y + H.symbolRow * g;
              if (I > Z) {
                var K = Math.ceil((I - Z) / this.symbolSize.height);
                return this.bottomSlotIndex = H.positionIndex + H.symbolRow - K;
              }
            }
            return -0x1;
          };
          return __decorate([v], q);
        }();
        Y["default"] = G;
        cc._RF.pop();
      }
    }, {}],
    'SoundButton': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "47f2aqFJBBCiYjiG/SqB5jv", "SoundButton")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("GenericSettingButton");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.sprite = undefined;
            b.soundOn = undefined;
            b.soundOff = undefined;
            b.title = undefined;
            return b;
          }
          __extends(Z, g);
          Z.prototype.setTitle = function (b) {
            this.title.string = b;
          };
          __decorate([q(cc.Sprite)], Z.prototype, "sprite", undefined);
          __decorate([q(cc.SpriteFrame)], Z.prototype, "soundOn", undefined);
          __decorate([q(cc.SpriteFrame)], Z.prototype, "soundOff", undefined);
          __decorate([q(cc.Label)], Z.prototype, "title", undefined);
          return __decorate([G], Z);
        }(r["default"]);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, LT],
    'SpaceBarInterrupter': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "676cajSckdANomyB/3kyE3c", "SpaceBarInterrupter")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.spaceBarInterrupter = undefined;
        var r = z("BVFramework");
        var v = cc._decorator.ccclass;
        var G = new (function (q) {
          function c() {
            var f = q.call(this) || this;
            f.Om = [];
            f.Hm = false;
            f.Bm = false;
            r.getGameContext().on("Game.TransactionInfoUpdated", f.Gm, f);
            return f;
          }
          __extends(c, q);
          c.prototype.init = function (f) {
            this.Nm = this.Tm.bind(this, f);
            this.Pm = this.Lm.bind(this);
            this.subscribeEventInterrupter("default", undefined, f.reelClickCallback);
            var g = r.getGameContext();
            g.on("Game.TransactionStateTransition", this.Nm);
            cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.Pm);
            g.on("Game.SkipEvent", this.Rm, this);
          };
          c.prototype.subscribeEventInterrupter = function (f, g, Z) {
            var b = this.Om;
            var H = 0x0;
            for (var I = b.length; H < I; H++) {
              if (b[H].event === f) {
                return;
              }
            }
            var K = {
              event: f,
              node: g,
              callback: Z
            };
            b.push(K);
          };
          c.prototype.unsubscribeEventInterrupter = function (f) {
            var g = this.Om;
            var Z = 0x0;
            for (var b = g.length; Z < b; Z++) {
              if (g[Z].event === f) {
                g.splice(Z, 0x1);
                break;
              }
            }
          };
          c.prototype.pause = function () {
            if (this.Nm) {
              if (!this.Hm) {
                cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.Pm);
                this.Hm = true;
              }
            }
          };
          c.prototype.resume = function () {
            if (this.Nm && this.Hm) {
              cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.Pm);
              this.Hm = false;
            }
          };
          c.prototype.stop = function () {
            var f = r.getGameContext();
            f.off("Game.TransactionStateTransition", this.Nm);
            cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.Pm);
            f.off("Game.SkipEvent", this.Rm, this);
            this.Nm = undefined;
            this.Pm = undefined;
            this.Om.length = 0x0;
          };
          c.prototype.Tm = function (f, g) {
            var Z = g.payload.to;
            var b = this.Om[0x0];
            var H = f.spinButtonClickCallback;
            var I = f.reelClickCallback;
            if ("action" === Z && this.Bm) {
              b.callback = H;
            } else if ("result" === Z && b.callback !== I) {
              b.callback = I;
            }
          };
          c.prototype.Lm = function (f) {
            if (f.keyCode === cc.macro.KEY.space) {
              this.Rm();
            }
          };
          c.prototype.Rm = function () {
            var f = this.Om;
            for (var g = f.length - 0x1; g >= 0x0; g--) {
              var Z = f[g];
              var b = Z.node;
              if (!b) {
                if (H = Z.callback) {
                  H();
                }
                break;
              }
              if (cc.isValid(b)) {
                if (b.active) {
                  var H;
                  if (H = Z.callback) {
                    H();
                  }
                  break;
                }
              } else {
                f.splice(g, 0x1);
              }
            }
          };
          c.prototype.Gm = function (f) {
            var g = f.payload;
            this.Bm = 0x1 === g.nst;
          };
          return __decorate([v("SpaceBarInterrupter")], c);
        }(cc.Object))();
        Y.spaceBarInterrupter = G;
        cc._RF.pop();
      }
    }, LL],
    'SpinButtonController.spec': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "19f67zHH4dJhr5p+qxj4Jky", "SpinButtonController.spec")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.setButtonInteractivity = Y.initSpinButtonControllerNodes = undefined;
        Y.initSpinButtonControllerNodes = function (r) {
          var v = System.get("automation") && System.get("automation").GameConfigs;
          if (v) {
            v.initNodeConfig(r.spinButtonNode, "spin_button");
          }
        };
        Y.setButtonInteractivity = function (r) {
          var v = System.get("automation") && System.get("automation").GameData;
          if (v) {
            v.emit("SpinButtonInteractivity", r);
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'SpinButtonController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "43d12n8a1BInJvBu7QtjALE", "SpinButtonController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.SpinButtonMode = Y.SpinButtonAnimationState = undefined;
        var v;
        var G;
        var q = z("SettingMenuHelper");
        var f = z("ButtonHitTest");
        var g = cc._decorator.ccclass;
        (function (b) {
          b[b.IDLE = 0x1] = "IDLE";
          b[b.SPINNING = 0x2] = "SPINNING";
          b[b.STOPPED = 0x3] = "STOPPED";
        })(v = Y.SpinButtonAnimationState || (Y.SpinButtonAnimationState = {}));
        (function (b) {
          b[b.ENABLED = 0x0] = "ENABLED";
          b[b.DISABLED = 0x1] = "DISABLED";
          b[b.AUTOSPIN = 0x2] = "AUTOSPIN";
        })(G = Y.SpinButtonMode || (Y.SpinButtonMode = {}));
        var Z = function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.Em = G.DISABLED;
            I.km = v.STOPPED;
            I.Um = false;
            I.jm = undefined;
            I.Dm = undefined;
            return I;
          }
          __extends(H, b);
          H.prototype.showAutoSpinLook = function () {
            if (this.Dm) {
              this.Dm();
            }
          };
          Object.defineProperty(H.prototype, "mode", {
            'get': function () {
              return this.Em;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "animationState", {
            'get': function () {
              return this.km;
            },
            'enumerable': false,
            'configurable': true
          });
          H.prototype.setOnClickCallback = function (I) {
            this.jm = I;
          };
          H.prototype.clearOnClickCallback = function () {
            this.jm = undefined;
          };
          H.prototype.destroy = function () {
            this.jm = undefined;
            this.Dm = undefined;
            this.Wm();
            this.node.destroy();
            return b.prototype.destroy.call(this);
          };
          H.prototype.Wm = function () {
            this.xm();
            if (this.onHideMouseOverEffect) {
              this.onHideMouseOverEffect();
            }
            if (this.onStopAllAnimations) {
              this.onStopAllAnimations();
            }
          };
          H.prototype.init = function () {
            this.Fm();
            this.onDisableButton();
            if (this.onInit) {
              this.onInit();
            }
          };
          H.prototype.idle = function () {
            this.km = v.IDLE;
            if (this.Em !== G.AUTOSPIN) {
              if (this.onShowIdleAnimation) {
                this.onShowIdleAnimation();
              }
              if (this.Um) {
                this.Vm();
              }
            }
          };
          H.prototype.spin = function () {
            this.km = v.SPINNING;
            if (this.Em !== G.AUTOSPIN) {
              if (this.Em !== G.DISABLED && this.onReplaceSpinBlurredSpriteFrame) {
                this.onReplaceSpinBlurredSpriteFrame();
              }
              if (this.onHideMouseOverEffect) {
                this.onHideMouseOverEffect();
              }
              if (this.onShowSpinAnimation) {
                this.onShowSpinAnimation();
              }
            }
          };
          H.prototype.stopSpin = function () {
            this.km = v.STOPPED;
            if (this.Em !== G.AUTOSPIN && this.onShowStopSpinningAnimation) {
              this.onShowStopSpinningAnimation();
            }
          };
          H.prototype.enableButton = function () {
            if (this.Em === G.DISABLED) {
              this.Em = G.ENABLED;
              if (this.onEnableButton) {
                this.onEnableButton();
              }
            }
          };
          H.prototype.disableButton = function () {
            if (this.Em === G.ENABLED) {
              this.Em = G.DISABLED;
              if (this.onDisableButton) {
                this.onDisableButton();
              }
            }
          };
          H.prototype.show = function () {
            this.node.active = true;
          };
          H.prototype.hide = function () {
            this.node.active = false;
          };
          H.prototype.isAutoSpin = function () {
            return this.Em === G.AUTOSPIN;
          };
          H.prototype.enterAutoSpinMode = function (I, K) {
            if (this.km === v.IDLE && I > 0x0) {
              this.Em = G.AUTOSPIN;
              this.Dm = K;
              this.showAutoSpinLook(I);
            }
          };
          H.prototype.updateAutoSpinCount = function (I) {
            if (this.Em === G.AUTOSPIN && this.onUpdateAutoSpinCount) {
              this.onUpdateAutoSpinCount(I);
            }
          };
          H.prototype.exitAutoSpinMode = function () {
            if (this.Em === G.AUTOSPIN) {
              this.Em = G.ENABLED;
              if (this.onHideMouseOverEffect) {
                this.onHideMouseOverEffect();
              }
              if (this.onExitAutoSpinMode) {
                this.onExitAutoSpinMode();
              }
              switch (this.km) {
                case v.IDLE:
                  if (this.onResumeIdle) {
                    this.onResumeIdle();
                  }
                  break;
                case v.SPINNING:
                  if (this.onResumeSpin) {
                    this.onResumeSpin();
                  }
                  break;
                case v.STOPPED:
                  if (this.onResumeStop) {
                    this.onResumeStop();
                  }
              }
              if (q.settingMenuHelper.stopSpinOptionButtonAnim) {
                q.settingMenuHelper.stopSpinOptionButtonAnim();
              }
            }
          };
          H.prototype.clickSpinButton = function () {
            if (true === this.node.active && this.Em !== G.DISABLED && f.buttonHitTest(this.node)) {
              var I = this.jm;
              if (I) {
                I();
              }
            }
          };
          H.prototype.Fm = function () {
            this.node.on("mouseenter", this.zm, this);
            this.node.on("mouseleave", this.Jm, this);
          };
          H.prototype.xm = function () {
            this.node.off("mouseenter", this.zm, this);
            this.node.off("mouseleave", this.Jm, this);
          };
          H.prototype.zm = function () {
            this.Um = true;
            this.Vm();
          };
          H.prototype.Jm = function () {
            this.Um = false;
            if (this.onHideMouseOverEffect) {
              this.onHideMouseOverEffect();
            }
          };
          H.prototype.Vm = function () {
            var I = this.Em;
            var K = this.km;
            if ((I === G.AUTOSPIN || I !== G.DISABLED && K !== v.STOPPED) && this.onPlayMouseOverEffect) {
              this.onPlayMouseOverEffect();
            }
          };
          return __decorate([g], H);
        }(cc.Component);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, LY],
    'SpinConfigHandler': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "932b5xCb0FH57DavWl/zOYi", "SpinConfigHandler")) {
        var r = {
          value: true
        };
        Object.defineProperty(l, "__esModule", r);
        l.initSpinConfig = l.featureConfig = undefined;
        var v = {
          minimumSpinningTime: 0x0,
          regularSpinningTime: 0x1,
          fastStopFeature: false,
          turboSpinFeature: false
        };
        l.featureConfig = v;
        l.initSpinConfig = function (q) {
          var g = q.jurisdictionModel.singlePlayMinDuration;
          var Z = g > 0x0 ? q.minimumSpinningTimeOffset || 0x0 : q.minimumSpinningTime;
          var b = g > 0x0 ? q.regularSpinningTimeOffset || 0x0 : q.regularSpinningTime;
          v.minimumSpinningTime = g + Z;
          v.regularSpinningTime = g + b;
          v.turboSpinFeature = q.jurisdictionModel.turboSpinEnable;
          v.fastStopFeature = q.jurisdictionModel.turboSpinEnable;
          l.featureConfig = Object.freeze(v);
        };
        cc._RF.pop();
      }
    }, {}],
    'SpinOptionsButton': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "3ee68qGxY9G3q+WVKsHebfZ", "SpinOptionsButton")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("GenericSettingButton");
        var G = z("UIAppearanceHelper");
        var q = z("Utils");
        var f = cc._decorator;
        var g = f.ccclass;
        var Z = f.property;
        var b = function (H) {
          function I() {
            var K = null !== H && H.apply(this, arguments) || this;
            K.holder = undefined;
            K.autoSpinTurn = undefined;
            K.autoSpinIcon = undefined;
            K.autoSpinIconShadow = undefined;
            K.qm = undefined;
            return K;
          }
          __extends(I, H);
          I.prototype.onLoad = function () {
            H.prototype.onLoad.call(this);
            if (this.buttonTheme) {
              var K = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              q.setNodeColorWithOpacity(this.autoSpinTurn, K);
              q.setNodeColorWithOpacity(this.autoSpinIcon, K);
              q.setNodeColorWithOpacity(this.autoSpinIconShadow, K);
            }
          };
          I.prototype.setAutoSpinSprite = function (K) {
            this.iconSprite.getComponent(cc.Sprite).spriteFrame = K;
          };
          I.prototype.playAutoSpinAnim = function () {
            this.stopAutoSpinAnim();
            var K = cc.repeatForever(cc.rotateBy(0x6, 0x168));
            this.autoSpinTurn.runAction(K);
            this.autoSpinIconShadow.parent.opacity = 0x0;
            this.Km();
          };
          I.prototype.stopAutoSpinAnim = function () {
            var K = this.qm;
            this.qm = undefined;
            if (K) {
              K();
            }
            this.autoSpinTurn.stopAllActions();
            this.autoSpinIconShadow.parent.stopAllActions();
            this.autoSpinIconShadow.parent.opacity = 0x0;
            this.autoSpinIconShadow.parent.scale = 0x1;
          };
          I.prototype.changeButtonPressedColor = function (K) {
            if (K) {
              this.node.runAction(cc.scaleTo(0.05, 0.9));
            } else {
              this.node.runAction(cc.sequence(cc.scaleTo(0.05, 1.1), cc.scaleTo(0.05, 1.05), cc.scaleTo(0.05, 0x1)));
            }
          };
          I.prototype.Km = function () {
            var K = this;
            this.qm = q.delayCallback(0x3)(function () {
              K.autoSpinIconShadow.parent.opacity = 0xb4;
              K.autoSpinIconShadow.parent.scale = 0x1;
              K.autoSpinIconShadow.parent.runAction(cc.sequence(cc.spawn(cc.scaleTo(1.2, 2.2), cc.fadeOut(1.2)), cc.callFunc(function () {
                K.Km();
              })));
            });
          };
          I.prototype.interactableButtonColor = function (K) {
            if (this.buttonTheme) {
              var E = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".normal");
              var Q = G.uiAppearanceHelper.v(this.buttonTheme.domainKey + '.' + this.buttonTheme.colorKey + ".disabled");
              var X = K ? E : Q;
              this.holder.opacity = X.a;
              q.setNodeColorWithOpacity(this.iconSprite, X);
              q.setNodeColorWithOpacity(this.autoSpinTurn, X);
              q.setNodeColorWithOpacity(this.autoSpinIcon, X);
              q.setNodeColorWithOpacity(this.autoSpinIconShadow, X);
            }
          };
          I.prototype.destroy = function () {
            var K = this.qm;
            this.qm = undefined;
            if (K) {
              K();
            }
            this.autoSpinTurn.stopAllActions();
            return H.prototype.destroy.call(this);
          };
          __decorate([Z(cc.Node)], I.prototype, "holder", undefined);
          __decorate([Z(cc.Node)], I.prototype, "autoSpinTurn", undefined);
          __decorate([Z(cc.Node)], I.prototype, "autoSpinIcon", undefined);
          __decorate([Z(cc.Node)], I.prototype, "autoSpinIconShadow", undefined);
          return __decorate([g], I);
        }(v["default"]);
        Y["default"] = b;
        cc._RF.pop();
      }
    }, Ll],
    'SpinState': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "f1de36UCZVLKpe2qk9vzSaC", "SpinState")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("SlotAnalyticsEnum");
        var v = z("SlotAnalyticsHelper");
        var G = z("Utils");
        var q = z("SpinConfigHandler");
        var f = function () {
          function g(Z, b, H, I) {
            this.name = "Spin State";
            this.dataSource = undefined;
            this.generalControllers = undefined;
            this.finalCallback = undefined;
            this.stateDecorator = undefined;
            this.dataSource = Z;
            this.generalControllers = b.generalControllers;
            this.finalCallback = H;
            if (I) {
              this.stateDecorator = I;
              I.triggerFastStop = this.triggerFastStop.bind(this);
            }
          }
          g.prototype.setAvailableActions = function () {};
          g.prototype.clearAvailableActions = function () {};
          g.prototype.preExitStateCleanup = function () {};
          g.prototype.additionalDestroyCleanups = function () {};
          g.prototype.triggerFastStop = function (Z) {
            var b = this.generalControllers;
            var H = b.slotController;
            v.sendFastStopGA(Z, b.spinButtonController.isAutoSpin());
            H.setOnClickCallback(undefined);
            H.markFastStop();
            if (this.stateDecorator && this.stateDecorator.slotFastStopTriggered) {
              this.stateDecorator.slotFastStopTriggered();
            }
            this.slotFastStopTriggered();
          };
          g.prototype.slotFastStopTriggered = function () {};
          g.prototype.run = function () {
            if (this.stateDecorator) {
              if (this.stateDecorator.stateWillStartSpin) {
                this.stateDecorator.stateWillStartSpin();
              }
              if (this.stateDecorator.setAvailableActions) {
                this.stateDecorator.setAvailableActions();
              }
            }
            this.stateWillStartSpin();
            this.setAvailableActions();
            this.Qm();
            this.Ym();
          };
          g.prototype.Ym = function () {
            this.callApi(this.Xm.bind(this));
          };
          g.prototype.Qm = function () {
            var Z = this.generalControllers.slotController;
            if (q.featureConfig.fastStopFeature) {
              Z.setOnClickCallback(this.triggerFastStop.bind(this, r.SpinTrigger.CLICK));
            }
            if (this.stateDecorator && this.stateDecorator.startSlotController) {
              this.stateDecorator.startSlotController();
            } else {
              this.Zm();
            }
          };
          g.prototype.Xm = function () {
            this.Is();
          };
          g.prototype.Is = function () {
            if (this.stateDecorator) {
              if (this.stateDecorator.clearAvailableActions) {
                this.stateDecorator.clearAvailableActions();
              }
              if (this.stateDecorator.preExitStateCleanup) {
                this.stateDecorator.preExitStateCleanup();
              }
            }
            this.clearAvailableActions();
            this.preExitStateCleanup();
            var Z = this.finalCallback;
            this.finalCallback = undefined;
            this.destroy();
            G.deferCallback(true)(function () {
              G.deferCallback(true)(Z);
            });
          };
          g.prototype.destroy = function () {
            this.generalControllers.slotController.setOnClickCallback(undefined);
            this.dataSource = undefined;
            this.finalCallback = undefined;
            this.generalControllers = undefined;
            if (this.stateDecorator) {
              this.stateDecorator.destroy();
              this.stateDecorator = undefined;
            }
            this.additionalDestroyCleanups();
          };
          g.prototype.Zm = function () {
            this.generalControllers.slotController.spin();
          };
          return g;
        }();
        Y["default"] = f;
        cc._RF.pop();
      }
    }, Lr],
    'SpineConfigHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "41ed4d0xT1Izbrt84+ace0R", "SpineConfigHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.spineConfigHandler = undefined;
        var r = function () {
          function v() {
            this.$m = [];
          }
          v.prototype.setSymbolSpine = function (G) {
            this.$m = G;
          };
          v.prototype.getNormalSymbolSpine = function (G) {
            return this.$m[G];
          };
          return v;
        }();
        Y.spineConfigHandler = new r();
        cc._RF.pop();
      }
    }, {}],
    'StickyController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "ad358E+oKdDwIThq37L8ZXx", "StickyController")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("Utils");
        var q = z("GeneralAudioConstant");
        var g = z("SlotProperties");
        var Z = z("AudioManager");
        var b = cc._decorator;
        var H = b.ccclass;
        var I = b.property;
        var K = [-0x140, 0x0, 0x140];
        var E = [0x131, 0x0, -0x131];
        var Q = ["featureWinLine1", "featureWinLine2", "featureWinLine3", "featureWinLine4", "featureWinLine5"];
        var X = function (A) {
          function V() {
            var W = null !== A && A.apply(this, arguments) || this;
            W.stickyPrefab = undefined;
            W.stickyHolder = undefined;
            W.bigSymbolNode = undefined;
            W.tint = undefined;
            W.tp = undefined;
            W.ip = [];
            W.sp = [];
            W.ep = 0x0;
            return W;
          }
          __extends(V, A);
          V.prototype.init = function () {
            this.tp = new cc.NodePool("StickyItemController");
            this.np(0x9);
          };
          V.prototype.resetAudioCount = function () {
            this.ep = 0x0;
          };
          V.prototype.playSticky = function (W, J, w, O) {
            var F = this;
            var D = J.rawData;
            var U = Object.keys(J.rawData);
            var S = new Set();
            U.forEach(function (x) {
              D[x].forEach(function (j) {
                S.add(j);
              });
            });
            if (this.sp.length !== U.length) {
              var R = q.GENERAL_AUDIO[Q[this.ep]].key;
              Z.stopAudioIfPlaying(R);
              Z.playAudioIfNotPlaying(R);
              this.ep++;
              if (this.ep >= 0x5) {
                this.ep = 0x0;
              }
            }
            this.sp = U;
            W.forEach(function (x, j) {
              if (x === w || x === g.SLOT_INDEX.WILD) {
                if (F.ip[j]) {
                  if (S.has(j) && (p = F.ip[j])) {
                    (y = p.getComponent("StickyItemController")).play(x);
                  }
                } else {
                  var P = g.getRowFromIndex(j);
                  var m = g.getColumnFromIndex(j);
                  var p = F.op();
                  var M = K[m];
                  var B = E[P];
                  p.parent = F.stickyHolder;
                  p.position = cc.v3(M, B);
                  var y = p.getComponent("StickyItemController");
                  if (S.has(j)) {
                    y.play(x);
                  } else {
                    y.show(x);
                  }
                  F.ip[j] = p;
                }
              }
            });
            G.delayCallback(0.3)(function () {
              if (O) {
                O();
              }
            });
          };
          V.prototype.stopSticky = function (W) {
            var J = this;
            var w = 0x1;
            var O = function () {
              if (! --w) {
                if (W) {
                  W();
                }
              }
            };
            this.ip.forEach(function (F, D) {
              if (F) {
                w++;
                F.getComponent("StickyItemController").hide(function () {
                  J.ip[D] = undefined;
                  J.cp(F);
                  O();
                });
              }
            });
            O();
          };
          V.prototype.clearSticky = function () {
            var W = this;
            this.ip.forEach(function (J, w) {
              if (J) {
                W.ip[w] = undefined;
                W.cp(J);
              }
            });
          };
          V.prototype.playLargeSymbol = function (W, J, w, O) {
            var F = function () {
              if (O) {
                O();
              }
            };
            if (J && J.rawData) {
              if (J.winPositions.length >= 0x5) {
                var D = __spread(new Set(W));
                if (0x2 === D.length && D.indexOf(g.SLOT_INDEX.WILD) || 0x1 === D.length) {
                  var U = D[0x0];
                  if (0x2 === D.length) {
                    U = D.filter(function (x) {
                      return x !== g.SLOT_INDEX.WILD;
                    })[0x0];
                  }
                  var S = this.bigSymbolNode.getComponent("BigSymbolItemController");
                  this.tint.stopAllActions();
                  this.tint.runAction(cc.fadeTo(0.4, 0xff));
                  S.playBigSymbol(U, F);
                  if (w) {
                    w();
                  }
                  this.ip.forEach(function (x) {
                    if (x) {
                      x.opacity = 0x0;
                    }
                  });
                } else {
                  F();
                }
                var R = q.GENERAL_AUDIO.prizeWinFullscreen.key;
                Z.stopAudioIfPlaying(R);
                Z.playAudioIfNotPlaying(R);
              } else {
                F();
              }
            } else {
              F();
            }
          };
          V.prototype.playWin = function (W) {
            var J = W.rawData;
            var w = Object.keys(W.rawData);
            var O = new Set();
            w.forEach(function (F) {
              J[F].forEach(function (D) {
                O.add(D);
              });
            });
            this.stickyMap.forEach(function (F, D) {
              if (F) {
                var U = F.getComponent("StickyItemController");
                if (O.has(D)) {
                  U.playWin();
                } else {
                  U.hide();
                }
              }
            });
          };
          Object.defineProperty(V.prototype, "stickyMap", {
            'get': function () {
              return this.ip;
            },
            'enumerable': false,
            'configurable': true
          });
          V.prototype.clearLargeSymbol = function (W) {
            this.tint.stopAllActions();
            this.tint.runAction(cc.fadeTo(0.4, 0x0));
            this.ip.forEach(function (J) {
              if (J) {
                J.opacity = 0xff;
              }
            });
            this.bigSymbolNode.getComponent("BigSymbolItemController").stopBigSymbol(W);
          };
          V.prototype.np = function (W) {
            for (var J = 0x0; J < W; J++) {
              this.tp.put(cc.instantiate(this.stickyPrefab));
            }
          };
          V.prototype.op = function () {
            return this.tp.size() > 0x0 ? this.tp.get() : cc.instantiate(this.stickyPrefab);
          };
          V.prototype.cp = function (W) {
            this.tp.put(W);
          };
          __decorate([I(cc.Prefab)], V.prototype, "stickyPrefab", undefined);
          __decorate([I(cc.Node)], V.prototype, "stickyHolder", undefined);
          __decorate([I(cc.Node)], V.prototype, "bigSymbolNode", undefined);
          __decorate([I(cc.Node)], V.prototype, "tint", undefined);
          return __decorate([H], V);
        }(cc.Component);
        Y["default"] = X;
        cc._RF.pop();
      }
    }, Lt],
    'StickyItemController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "09093gTG49IL6y7P7Ay2KSq", "StickyItemController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("GConstants");
        var G = z("SymbolImageHandler");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.symbolSprite = undefined;
            I.shine = undefined;
            I.shineParticle = undefined;
            I.shineCircle = undefined;
            return I;
          }
          __extends(H, b);
          H.prototype.play = function (I) {
            this.symbolSprite.spriteFrame = G.symbolImageHandler.symbolImages[I];
            this.symbolSprite.node.runAction(cc.scaleTo(0.3, 1.1).easing(cc.easeCircleActionOut()));
            this.shine.runAction(cc.fadeIn(0.5));
            this.shineParticle.play();
          };
          H.prototype.show = function (I) {
            this.symbolSprite.spriteFrame = G.symbolImageHandler.symbolImages[I];
            this.symbolSprite.node.runAction(cc.scaleTo(0.3, 1.1).easing(cc.easeCircleActionOut()));
          };
          H.prototype.playWin = function () {
            this.shineCircle.node.runAction(cc.tintTo(0.25, v.WHITE));
            this.shineCircle.play();
          };
          H.prototype.stopWin = function () {
            this.shineCircle.node.stopAllActions();
            this.shineCircle.stop();
            this.shineCircle.setCurrentTime(0x0);
            this.shineCircle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.shineCircle.node.color = v.BLACK;
          };
          H.prototype.hide = function (I) {
            var K = this;
            this.symbolSprite.node.runAction(cc.spawn(cc.fadeOut(0.3), cc.scaleTo(0.3, 0x1).easing(cc.easeCircleActionOut())));
            this.shine.runAction(cc.sequence(cc.fadeOut(0.3), cc.callFunc(function () {
              K.symbolSprite.spriteFrame = undefined;
              K.symbolSprite.node.opacity = 0xff;
              if (I) {
                I();
              }
            })));
            this.shineParticle.stop();
            this.shineParticle.setCurrentTime(0x0);
            this.shineParticle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.stopWin();
          };
          H.prototype._t = function () {
            this.symbolSprite.node.stopAllActions();
            this.symbolSprite.node.opacity = 0xff;
            this.symbolSprite.spriteFrame = undefined;
            this.shine.stopAllActions();
            this.shine.opacity = 0x0;
            this.shineParticle.stop();
            this.shineParticle.setCurrentTime(0x0);
            this.shineParticle.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.stopWin();
          };
          H.prototype.reuse = function () {
            this._t();
          };
          H.prototype.unuse = function () {
            this._t();
          };
          __decorate([g(cc.Sprite)], H.prototype, "symbolSprite", undefined);
          __decorate([g(cc.Node)], H.prototype, "shine", undefined);
          __decorate([g(cc.Animation)], H.prototype, "shineParticle", undefined);
          __decorate([g(cc.Animation)], H.prototype, "shineCircle", undefined);
          return __decorate([f], H);
        }(cc.Component);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, Lv],
    'SubControllerConfig': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "24ea0V+c1hBKJve2dHxdOZ/", "SubControllerConfig")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.SubControllers = undefined;
        (function (r) {
          r[r.AUTOSPIN = 0x0] = "AUTOSPIN";
          r[r.BET = 0x1] = "BET";
          r[r.USER_SETTING = 0x2] = "USER_SETTING";
          r[r.HISTORY = 0x3] = "HISTORY";
          r[r.PAYTABLE = 0x4] = "PAYTABLE";
          r[r.RULE = 0x5] = "RULE";
          r[r.WALLET = 0x6] = "WALLET";
        })(Y.SubControllers || (Y.SubControllers = {}));
        cc._RF.pop();
      }
    }, {}],
    'SymbolImageHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "e5abbnVc/1Ov4XANddRxDja", "SymbolImageHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.symbolImageHandler = Y.SymbolImageHandler = undefined;
        var r = z("SlotProperties");
        var v = function () {
          function G() {
            this.hp = [];
            this.rp = [];
          }
          G.prototype.setSymbolImage = function (q) {
            this.hp[r.SLOT_INDEX.FIRECRACKER] = q.getSpriteFrame("h_firecracker");
            this.hp[r.SLOT_INDEX.INGOTS] = q.getSpriteFrame("h_ingot");
            this.hp[r.SLOT_INDEX.MONEYBAG] = q.getSpriteFrame("h_pouch");
            this.hp[r.SLOT_INDEX.ORANGE] = q.getSpriteFrame("h_orange");
            this.hp[r.SLOT_INDEX.REDPACKETS] = q.getSpriteFrame("h_angbao");
            this.hp[r.SLOT_INDEX.RUYI] = q.getSpriteFrame("h_ruyi");
            this.rp[r.SLOT_INDEX.FIRECRACKER] = q.getSpriteFrame("h_firecracker_blur");
            this.rp[r.SLOT_INDEX.INGOTS] = q.getSpriteFrame("h_ingot_blur");
            this.rp[r.SLOT_INDEX.MONEYBAG] = q.getSpriteFrame("h_pouch_blur");
            this.rp[r.SLOT_INDEX.ORANGE] = q.getSpriteFrame("h_orange_blur");
            this.rp[r.SLOT_INDEX.REDPACKETS] = q.getSpriteFrame("h_angbao_blur");
            this.rp[r.SLOT_INDEX.RUYI] = q.getSpriteFrame("h_ruyi_blur");
          };
          G.prototype.setLocalizedWildImage = function (q) {
            this.hp[r.SLOT_INDEX.WILD] = q.getSpriteFrame("s_wild");
            this.rp[r.SLOT_INDEX.WILD] = q.getSpriteFrame("s_wild_blur");
          };
          Object.defineProperty(G.prototype, "symbolImages", {
            'get': function () {
              return this.hp;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(G.prototype, "blurredSymbolImages", {
            'get': function () {
              return this.rp;
            },
            'enumerable': false,
            'configurable': true
          });
          G.prototype.getLocalizedWildImage = function () {
            return this.hp[r.SLOT_INDEX.WILD];
          };
          return G;
        }();
        Y.SymbolImageHandler = v;
        Y.symbolImageHandler = new v();
        cc._RF.pop();
      }
    }, LG],
    'SymbolPayoutController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "7c05ali6OlCEJ+GOnxbYWHT", "SymbolPayoutController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("SymbolPayoutPanelGenerator");
        var G = z("SinglePayoutModel");
        var q = z("Utils");
        var f = z("PopOutItemHandler");
        var g = cc._decorator;
        var Z = g.ccclass;
        var b = g.property;
        var H = function (I) {
          function K() {
            var E = null !== I && I.apply(this, arguments) || this;
            E.popOutItem = undefined;
            E.popOutTint = undefined;
            E.ap = [];
            E.lp = undefined;
            E.fp = undefined;
            E.dp = new f["default"]();
            E.vp = undefined;
            E._p = new G["default"]();
            E.mp = v.symbolPayoutPanelGenerator;
            return E;
          }
          __extends(K, I);
          K.prototype.init = function (E) {
            E.containerNode = E.containerNode ? E.containerNode : this.node;
            this.pp = E;
            var Q = E.numberOfTint ? E.numberOfTint : 0x1;
            this.mp.generatePanel(E);
            if (Q > 0x1) {
              this.ap = [];
              for (var X = 0x0; X < Q; X++) {
                var A = cc.instantiate(this.popOutTint);
                if (Array.isArray(this.bp)) {
                  this.bp[X].addChild(A);
                } else {
                  this.bp.addChild(A);
                }
                var V;
                var W = A.getComponent("PopOutTintController");
                V = Array.isArray(this.Sp) ? this.Sp[X] : this.Sp;
                this.ap.push(W);
                W.setup(V);
              }
            } else {
              A = cc.instantiate(this.popOutTint);
              this.bp.addChild(A);
              this.ap = A.getComponent("PopOutTintController");
              this.ap.setup(this.Sp);
            }
            this.dp.init(this.popOutItem, this.gp);
            this._p.payoutData = E.payoutData;
            if (this.vp) {
              this.vp(E);
            }
          };
          K.prototype.resetPanel = function (E) {
            E.containerNode = E.containerNode ? E.containerNode : this.node;
            this.pp = E;
            this.mp.regeneratePanel(E);
            this._p.payoutData = E.payoutData ? E.payoutData : this._p.payoutData;
          };
          K.prototype.setExtraInitialzation = function (E) {
            this.vp = E;
          };
          K.prototype.setPopOutDisplayHolder = function (E) {
            this.gp = E;
          };
          K.prototype.setPopOutTintHolder = function (E) {
            this.bp = E;
          };
          K.prototype.setReelData = function (E, Q, X) {
            this._p.reelData = E;
            this._p.extendSymbolData = Q;
            this._p.extendBlockData = X;
          };
          K.prototype.setAdditionalData = function (E) {
            this._p.additionalData = E;
          };
          K.prototype.setTintConfig = function (E) {
            this.Sp = E;
          };
          K.prototype.setupButtonEvent = function (E) {
            var Q = this;
            if (undefined === E) {
              E = [];
            }
            var X = this.mp.getButtonControllerList();
            var A = this.mp.getButtonComponentList();
            X.forEach(function (V, W) {
              if (E.includes(W)) {
                V.setClickCallback(undefined);
                A[W].clickEvents = [];
              } else {
                var J = Q.Cp.bind(Q, W, Q._p.reelData[W], Q._p.payoutData);
                V.setClickCallback(J);
                var w = V.getControllerAndHandlerName();
                var O = w.ControllerName;
                var F = w.HandlerName;
                var D = new cc.Component.EventHandler();
                D.target = V.node;
                D.component = O;
                D.handler = F;
                A[W].clickEvents = [];
                A[W].clickEvents.push(D);
              }
            });
          };
          K.prototype.setAdditionalOnClickCallback = function (E) {
            this.lp = E;
          };
          K.prototype.setAdditionalOnCancelCallback = function (E) {
            this.fp = E;
          };
          K.prototype.clearOnClickCallback = function () {
            this.mp.getButtonControllerList().forEach(function (E) {
              E.clearClickCallback();
            });
          };
          K.prototype.enablePanel = function () {
            this.node.active = true;
            this.mp.getButtonComponentList().forEach(function (E) {
              E.interactable = true;
            });
          };
          K.prototype.disablePanel = function () {
            this.mp.getButtonComponentList().forEach(function (E) {
              E.interactable = false;
            });
            this.node.active = false;
          };
          K.prototype.hidePopOutItem = function (E) {
            this.yp(E);
          };
          Object.defineProperty(K.prototype, "buttonList", {
            'get': function () {
              return this.mp.getButtonList();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(K.prototype, "buttonControllerList", {
            'get': function () {
              return this.mp.getButtonControllerList();
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(K.prototype, "buttonComponentList", {
            'get': function () {
              return this.mp.getButtonComponentList();
            },
            'enumerable': false,
            'configurable': true
          });
          K.prototype.Cp = function (E, Q, X) {
            var A = this;
            this.Mp(this.yp.bind(this));
            q.spawnCallback(this.Ap.bind(this, E, Q), this.Ip.bind(this, E, Q, X))(function () {
              A.Op();
            });
          };
          K.prototype.setPopOutItemLayout = function (E, Q) {
            var X;
            X = Q < Math.round(this.pp.numberOfColumn / 0x2) * this.pp.numberOfRow;
            var A = E.parent.convertToWorldSpaceAR(E.position);
            return {
              'isLeftToRight': X,
              'position': this.gp.convertToNodeSpaceAR(A)
            };
          };
          K.prototype.Ip = function (E, Q, X, A) {
            var V = this._p;
            var W = V.extendSymbolData;
            var J = V.extendBlockData;
            var w = V.additionalData;
            if (W) {
              Object.keys(W).forEach(function (S) {
                if (W[S].includes(E)) {
                  var R = W[S].length;
                  E = W[S][R - 0x1];
                }
              });
            }
            var O = this.mp.getButtonList()[E];
            var F = this.setPopOutItemLayout(O, E);
            var D = F.isLeftToRight;
            var U = F.position;
            this.dp.runPopoutItemShowCallback(A, X, E, Q, cc.v2(U), D, W, J, w);
          };
          K.prototype.Mp = function (E) {
            this.dp.setCancelCallback(E);
          };
          K.prototype.Ap = function (E, Q, X) {
            var A = function () {
              if (X) {
                X();
              }
            };
            if (Array.isArray(this.ap)) {
              var V = [];
              this.ap.forEach(function (W) {
                V.push(W.show.bind(W));
              });
              q.spawnCallback(V)(A);
            } else {
              this.ap.show(function () {
                A();
              });
            }
          };
          K.prototype.yp = function (E) {
            this.dp.runPopoutItemHideCallback();
            var Q = function () {
              if (E) {
                E();
              }
            };
            if (Array.isArray(this.ap)) {
              var X = [];
              this.ap.forEach(function (A) {
                X.push(A.hide.bind(A));
              });
              q.spawnCallback(X)(Q);
            } else {
              this.ap.hide(Q);
            }
            this.Hp();
          };
          K.prototype.Op = function () {
            if (this.lp) {
              this.lp();
            }
          };
          K.prototype.Hp = function () {
            if (this.fp) {
              this.fp();
            }
          };
          Object.defineProperty(K.prototype, "singlePayoutModel", {
            'get': function () {
              return this._p;
            },
            'enumerable': false,
            'configurable': true
          });
          __decorate([b(cc.Prefab)], K.prototype, "popOutItem", undefined);
          __decorate([b(cc.Prefab)], K.prototype, "popOutTint", undefined);
          return __decorate([Z], K);
        }(cc.Component);
        Y["default"] = H;
        cc._RF.pop();
      }
    }, Lq],
    'SymbolPayoutPanelGenerator': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "b4807S7wZxNyKaQIPwkQNfI", "SymbolPayoutPanelGenerator")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.regeneratePanel = Y.getButtonList = Y.getButtonComponentList = Y.getButtonControllerList = Y.generatePanel = Y.symbolPayoutPanelGenerator = undefined;
        var r = z("ButtonController");
        var v = function () {
          function G() {
            this.Zi = [];
            this.Bp = [];
            this.Gp = [];
            this.Np = new cc.NodePool();
          }
          G.prototype.Tp = function (q, g, Z, b, H, I, K) {
            var E = Math.floor(Z % K);
            var Q = Math.floor(Z / K);
            var X = H * (0x1 - q.anchorY);
            var A = b * q.anchorX;
            var V = X - g.height / 0x2;
            var W = -(A - g.width / 0x2);
            var J = V - g.height * E;
            var w = W + g.width * Q;
            g.setPosition(w, J);
          };
          G.prototype.generatePanel = function (q) {
            var g = q.containerNode;
            var Z = q.containerSize ? q.containerSize : g.getContentSize();
            var b = Z.width;
            var H = Z.height;
            g.width = b;
            g.height = H;
            var I = q.numberOfColumn;
            var K = q.numberOfRow;
            var E = q.numberOfButton ? q.numberOfButton : I * K;
            var Q = b / I;
            var X = H / K;
            for (var A = 0x0; A < E; A++) {
              var V = this.Np.get();
              var W = undefined;
              var J = undefined;
              if (V) {
                W = V.getComponent(r["default"]);
                J = V.getComponent(cc.Button);
              } else {
                V = new cc.Node("payout_button");
                var w = new cc.Node("background");
                V.addChild(w);
                J = V.addComponent(cc.Button);
                W = V.addComponent(r["default"]);
                J.target = w;
                V.height = q.buttonHeight ? q.buttonHeight : X;
                V.width = q.buttonWidth ? q.buttonWidth : Q;
                J.transition = cc.Button.Transition.COLOR;
                J.pressedColor = cc.Color.GRAY;
                var O = w.addComponent(cc.Sprite);
                O.sizeMode = cc.Sprite.SizeMode.CUSTOM;
                if (q.buttonBase) {
                  O.spriteFrame = q.buttonBase.spriteFrame;
                }
                w.height = X;
                w.width = Q;
              }
              V.parent = g;
              var F = q.buttonPosition;
              if (F) {
                V.setPosition(F[A]);
              } else {
                this.Tp(g, V, A, b, H, I, K);
              }
              this.Zi.push(V);
              this.Bp.push(W);
              this.Gp.push(J);
            }
          };
          G.prototype.getButtonList = function () {
            return this.Zi;
          };
          G.prototype.getButtonControllerList = function () {
            return this.Bp;
          };
          G.prototype.getButtonComponentList = function () {
            return this.Gp;
          };
          G.prototype.regeneratePanel = function (q) {
            var c = this;
            this.Zi.forEach(function (f) {
              c.Np.put(f);
            });
            this.Zi = [];
            this.Gp = [];
            this.Bp = [];
            this.generatePanel(q);
          };
          return G;
        }();
        Y["default"] = v;
        Y.symbolPayoutPanelGenerator = new v();
        Y.generatePanel = Y.symbolPayoutPanelGenerator.generatePanel.bind(Y.symbolPayoutPanelGenerator);
        Y.getButtonControllerList = Y.symbolPayoutPanelGenerator.getButtonControllerList.bind(Y.symbolPayoutPanelGenerator);
        Y.getButtonComponentList = Y.symbolPayoutPanelGenerator.getButtonComponentList.bind(Y.symbolPayoutPanelGenerator);
        Y.getButtonList = Y.symbolPayoutPanelGenerator.getButtonList.bind(Y.symbolPayoutPanelGenerator);
        Y.regeneratePanel = Y.symbolPayoutPanelGenerator.regeneratePanel.bind(Y.symbolPayoutPanelGenerator);
        cc._RF.pop();
      }
    }, Lc],
    'SystemFeatureHandler': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "c93d5OmEfVKSLl/iM1N4BVc", "SystemFeatureHandler")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.checkSpinValidity = Y.getReevaluateBet = Y.handleSystemEvent = undefined;
        var r = z("SlotAnalyticsEnum");
        z("LaunchConfig");
        z("ErrorHandler");
        var v = z("Utils");
        Y.handleSystemEvent = function (f) {
          var g = f.autoSpinCount;
          var Z = f.exitAutoSpinHandler;
          var b = f.walletHelper;
          var H = f.settingMenuHelper;
          var I = f.betChangedHandler;
          v.sequenceCallback(q(b, g, Z), G(H, I))(f.callback);
        };
        Y.getReevaluateBet = G;
        Y.checkSpinValidity = function (f) {
          var g;
          var b = f.callback;
          g = f.walletHelper;
          (function (H) {
            if (g.isFreeGameMode() && g.hasFreeGame()) {
              b(r.SpinCredits.FREE_GAME);
            } else if (H) {
              H();
            }
          })(function () {
            b(r.SpinCredits.CASH);
          });
        };
        cc._RF.pop();
      }
      function G(f, g) {
        return function (Z) {
          if (f.reevaluateBet()) {
            if (g) {
              g(Z);
            } else {
              f.updateBetValues();
              if (Z) {
                Z();
              }
            }
          } else if (Z) {
            Z();
          }
        };
      }
      function q(f, g, Z) {
        return function (b) {
          if (f.isWalletCompleted() && g > 0x0 && Z) {
            Z();
          }
          if (b) {
            b();
          }
        };
      }
    }, Lf],
    'SystemModel': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "daa8eblXeJHyaG5qwoh+Te0", "SystemModel")) {
        var L = System.get("bvframework").SystemModel;
        z.exports["default"] = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'TabBarController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "b2f70mOAvdOxZtKjfDu/lHM", "TabBarController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("TabBar");
        var G = z("TabBarItem");
        var q = z("TransitionContext");
        var f = z("ViewController");
        var g = cc._decorator;
        var Z = g.ccclass;
        var b = g.property;
        var H = function (I) {
          function K() {
            var E = null !== I && I.apply(this, arguments) || this;
            E.content = undefined;
            E.tabBar = undefined;
            E.bottomNode = undefined;
            E.tabBarItemPrefab = undefined;
            E.Pp = [];
            E.Na = [];
            E.Lp = undefined;
            E.Rp = 0x0;
            E.Ta = false;
            return E;
          }
          __extends(K, I);
          K.prototype.onLoad = function () {
            this.Ep();
            this.kp();
            this.Up();
            this.node.on("size-changed", this.La, this);
          };
          K.prototype.onEnable = function () {
            var E = this.Lp;
            if (E) {
              E.enabled = true;
            }
          };
          K.prototype.onDisable = function () {
            var E = this.Lp;
            if (E) {
              E.enabled = false;
            }
          };
          K.prototype.viewWillAppear = function (E) {
            var Q = this.Lp;
            if (Q) {
              Q.viewWillAppear(E);
            }
          };
          K.prototype.viewDidAppear = function (E) {
            var Q = this.Lp;
            if (Q) {
              Q.viewDidAppear(E);
            }
          };
          K.prototype.viewWillDisappear = function (E) {
            var Q = this.Lp;
            if (Q) {
              Q.viewWillDisappear(E);
            }
          };
          K.prototype.viewDidDisappear = function (E) {
            var Q = this.Lp;
            if (Q) {
              Q.viewDidDisappear(E);
            }
          };
          K.prototype.viewDidLayoutSubviews = function () {};
          K.prototype.setControllers = function (E, Q, X) {
            if (undefined === Q) {
              Q = 0x0;
            }
            if (undefined === X) {
              X = false;
            }
            if (Array.isArray(E)) {
              this.Rp = Q;
              this.Na = E;
              this.jp();
              this.Pp = [];
              var A = this.Pp;
              for (var V = 0x0; V < E.length; V++) {
                var W = E[V];
                W.node.parent = this.content;
                this.Dp(V);
                var J = W.tabBarItem;
                if (!(J && J instanceof G["default"])) {
                  var w = W.title;
                  (J = cc.instantiate(this.tabBarItemPrefab).getComponent(G["default"])).init(w, undefined, undefined, V);
                  W.tabBarItem = J;
                }
                J.selectAction = this.Wp.bind(this, V, X);
                A.push(J);
                W.enabled = V === Q;
              }
              this.tabBar.setItems(A, Q);
              var O = E[Q];
              this.Lp = O;
              O.viewWillAppear(false);
              O.viewDidAppear(false);
              if (O.tabBarItem && O.tabBarItem.animFinish) {
                O.tabBarItem.animFinish();
              }
              this.xp(Q);
            }
          };
          K.prototype.getSelectedController = function () {
            return this.Lp;
          };
          K.prototype.getSelectedTabBarItem = function () {
            return this.tabBar.getSelectedItem();
          };
          K.prototype.hideTabBar = function () {
            if (this.tabBar.node.active || this.bottomNode.active) {
              this.tabBar.node.active = false;
              this.bottomNode.active = false;
              this.La();
            }
          };
          K.prototype.showTabBar = function () {
            if (!(this.tabBar.node.active && this.bottomNode.active)) {
              this.tabBar.node.active = true;
              this.bottomNode.active = true;
              this.La();
            }
          };
          K.prototype.Dp = function (E) {
            var Q = this.Na[E];
            var X = this.content;
            if (Q && Q.node.getContentSize() !== X.getContentSize()) {
              var A = Q.node;
              var V = X.width;
              var W = X.height;
              var J = X.anchorX;
              var w = X.anchorY;
              var O = (A.anchorX - J + E) * V;
              var F = (A.anchorY - w) * W;
              A.setContentSize(V, W);
              A.setPosition(O, F);
            }
          };
          K.prototype.Fp = function () {
            return true === this.tabBar.node.active ? this.safeAreaInsets.bottom : 0x0;
          };
          K.prototype.Ep = function () {
            var E = this.Fp();
            var Q = this.node;
            var X = Q.width;
            var A = Q.height;
            this.content.setContentSize(X, A - E);
          };
          K.prototype.kp = function () {
            var E = this.Fp();
            var Q = this.node.height;
            this.tabBar.node.y = E + this.tabBar.node.height - Q;
          };
          K.prototype.Up = function () {
            if (this.tabBar.node.active) {
              var E = this.Fp();
              var Q = this.node;
              var X = Q.width;
              var A = Q.height;
              var V = this.bottomNode;
              V.setContentSize(X, E);
              V.y = E - A;
            }
          };
          K.prototype.La = function () {
            var E = this.Rp;
            this.Ep();
            this.kp();
            this.Up();
            this.Dp(E);
          };
          K.prototype.xp = function (E) {
            this.content.x = -E * this.content.width;
          };
          K.prototype.Wp = function (E, Q) {
            if (!this.Ta && E !== this.Rp) {
              var X = this.Na;
              if (!(E >= X.length)) {
                var A = this.Lp;
                var V = X[E];
                if (undefined !== A && undefined !== V) {
                  this.Vp(E);
                  this.Ta = true;
                  this.tabBar.selectItemAtIndex(E);
                  this.Rp = E;
                  this.Lp = V;
                  if (V.setSelect) {
                    V.setSelect();
                  }
                  V.enabled = true;
                  if (A.viewWillDisappear) {
                    A.viewWillDisappear(Q);
                  }
                  if (V.viewWillAppear) {
                    V.viewWillAppear(Q);
                  }
                  if (Q) {
                    if (this.tabBarControllerDelegate && (this.tabBarControllerDelegate.transitionAnimationForTabBarToRight || this.tabBarControllerDelegate.transitionAnimationForTabBarToLeft)) {
                      var W;
                      if (W = E > this.Rp ? this.tabBarControllerDelegate.transitionAnimationForTabBarToRight() : this.tabBarControllerDelegate.transitionAnimationForTabBarToLeft()) {
                        this.zp(W, A, V, E);
                      } else {
                        this.xp(E);
                        this.Jp(A, V, E);
                      }
                    } else {
                      this.xp(E);
                      this.Jp(A, V, E);
                    }
                  } else {
                    this.xp(E);
                    this.qp(A, V, E, false);
                  }
                }
              }
            }
          };
          K.prototype.zp = function (E, Q, X, A) {
            var V = this;
            var W = new q.TransitionContext(Q, X, Q.view, X.view, this.content);
            E.animateTransition(W, function () {
              V.qp(Q, X, A, true);
            });
          };
          K.prototype.Jp = function (E, Q, X) {
            var A = this;
            var V = Q.navigator ? Q.navigator : Q;
            V.node.opacity = 0x0;
            var W = cc.sequence(cc.fadeTo(0x1, 0xff).easing(cc.easeSineIn()), cc.callFunc(function () {
              V.node.opacity = 0xff;
              A.qp(E, Q, X, true);
            }));
            V.node.runAction(W);
          };
          K.prototype.qp = function (E, Q, X, A) {
            if (Q.tabBarItem && Q.tabBarItem.animFinish) {
              Q.tabBarItem.animFinish();
            }
            if (Q) {
              Q.viewDidAppear(A);
            }
            if (E) {
              E.viewDidDisappear(A);
            }
            if (E) {
              E.enabled = false;
            }
            this.Ta = false;
            this.jp();
          };
          K.prototype.Vp = function (E) {
            var Q;
            var X;
            var A = this.Rp;
            var V = this.Na;
            if (A > E) {
              Q = E;
              X = A;
            } else {
              Q = A;
              X = E;
            }
            for (var W = Q; W <= X; W++) {
              V[W].node.opacity = 0xff;
            }
          };
          K.prototype.jp = function () {
            var E = this.Rp;
            var Q = this.Na;
            for (var X = 0x0; X < Q.length; X++) {
              if (X !== E) {
                Q[X].node.opacity = 0x0;
              }
            }
          };
          __decorate([b(cc.Node)], K.prototype, "content", undefined);
          __decorate([b(v["default"])], K.prototype, "tabBar", undefined);
          __decorate([b(cc.Node)], K.prototype, "bottomNode", undefined);
          __decorate([b(cc.Prefab)], K.prototype, "tabBarItemPrefab", undefined);
          return __decorate([Z], K);
        }(f["default"]);
        Y["default"] = H;
        cc._RF.pop();
      }
    }, Le],
    'TabBarItem': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "cd0fbm4LQBEVL5LzWleSsGj", "TabBarItem")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.icon = undefined;
            Z.titleLabel = undefined;
            Z.tintColor = undefined;
            Z.selectedTintColor = undefined;
            Z.Kp = undefined;
            Z.Qp = undefined;
            Z.Yp = undefined;
            Z.Xp = undefined;
            Z.Zp = undefined;
            return Z;
          }
          __extends(g, f);
          Object.defineProperty(g.prototype, "tag", {
            'get': function () {
              return this.Xp;
            },
            'set': function (Z) {
              this.Xp = Z;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(g.prototype, "selectAction", {
            'set': function (Z) {
              this.Zp = Z;
            },
            'enumerable': false,
            'configurable': true
          });
          g.prototype.init = function (Z, b, H, I) {
            if (Z) {
              this.titleLabel.string = Z;
            }
            if (b) {
              this.icon.spriteFrame = b;
              this.Kp = b;
            }
            this.Yp = H;
            this.Xp = I;
            this.Qp = false;
          };
          g.prototype.setupTouchAction = function () {
            this.node.on(cc.Node.EventType.TOUCH_START, this.$, this);
            this.node.on(cc.Node.EventType.TOUCH_END, this.it, this);
          };
          g.prototype.setTintColor = function (Z) {
            if (!this.Qp) {
              this.icon.node.color = Z;
              this.titleLabel.node.color = Z;
            }
            this.tintColor = Z;
          };
          g.prototype.setSelectedTintColor = function (Z) {
            if (this.Qp) {
              this.icon.node.color = Z;
              this.titleLabel.node.color = Z;
            }
            this.selectedTintColor = Z;
          };
          g.prototype.setTitleAttributes = function (Z) {
            var b = Z.getFontSize();
            var H = Z.getNormalFontColor();
            var I = Z.getFontName();
            var K = Z.getLineHeight();
            this.titleLabel.fontSize = b;
            this.titleLabel.font = I;
            this.titleLabel.node.color = H;
            this.titleLabel.lineHeight = K;
          };
          g.prototype.setSelect = function () {
            var Z = this.selectedTintColor;
            this.icon.node.color = Z;
            this.titleLabel.node.color = Z;
            this.icon.spriteFrame = this.Yp;
            this.Qp = true;
          };
          g.prototype.setUnselected = function () {
            var Z = this.tintColor;
            this.icon.node.color = Z;
            this.titleLabel.node.color = Z;
            this.icon.spriteFrame = this.Kp;
            this.Qp = false;
          };
          g.prototype.animFinish = function () {};
          g.prototype.$ = function () {};
          g.prototype.it = function (Z) {
            Z.stopPropagation();
            if (this.Zp) {
              this.Zp();
            }
          };
          __decorate([G(cc.Sprite)], g.prototype, "icon", undefined);
          __decorate([G(cc.Label)], g.prototype, "titleLabel", undefined);
          __decorate([G(cc.Color)], g.prototype, "tintColor", undefined);
          __decorate([G(cc.Color)], g.prototype, "selectedTintColor", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'TabBar': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "b8f7436fYdNnryqvtnVtqIL", "TabBar")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator;
        var v = r.ccclass;
        var G = r.property;
        var q = function (f) {
          function g() {
            var Z = null !== f && f.apply(this, arguments) || this;
            Z.background = undefined;
            Z.itemsContainer = undefined;
            Z.shadow = undefined;
            Z.Pp = [];
            Z.$p = undefined;
            return Z;
          }
          __extends(g, f);
          g.prototype.onLoad = function () {
            var Z = this.node.width;
            var b = this.node.height;
            this.background.node.setContentSize(Z, b);
            this.shadow.node.width = Z;
            this.itemsContainer.setContentSize(Z, b);
          };
          g.prototype.setItems = function (Z, b) {
            var H = Z.length;
            if (H && !(H < 0x1)) {
              for (var I = 0x0; I < H; I++) {
                var K = Z[I];
                K.setupTouchAction();
                K.node.parent = this.itemsContainer;
              }
              var E = Z[b];
              E.setSelect();
              this.$p = E;
              this.Pp = Z;
            }
          };
          g.prototype.getItems = function () {
            return this.Pp;
          };
          g.prototype.selectItemAtIndex = function (Z) {
            if (!(Z >= this.Pp.length)) {
              var b = this.$p;
              if (b) {
                b.setUnselected();
              }
              var H = this.Pp[Z];
              H.setSelect();
              this.$p = H;
            }
          };
          g.prototype.getSelectedItem = function () {
            return this.$p;
          };
          g.prototype.setTintColor = function (Z) {
            var b = this.Pp;
            for (var H = 0x0; H < b.length; H++) {
              b[H].setTintColor(Z);
            }
          };
          g.prototype.setSelectedTintColor = function (Z) {
            var b = this.Pp;
            for (var H = 0x0; H < b.length; H++) {
              b[H].setSelectedTintColor(Z);
            }
          };
          g.prototype.setTitleAttributes = function (Z) {
            var b = this.Pp;
            for (var H = 0x0; H < b.length; H++) {
              b[H].setTitleAttributes(Z);
            }
          };
          g.prototype.setBackgroundImage = function (Z, b) {
            if (Z) {
              this.background.spriteFrame = Z;
            } else if (b) {
              this.background.node.color = b;
            }
          };
          __decorate([G(cc.Sprite)], g.prototype, "background", undefined);
          __decorate([G(cc.Node)], g.prototype, "itemsContainer", undefined);
          __decorate([G(cc.Sprite)], g.prototype, "shadow", undefined);
          return __decorate([v], g);
        }(cc.Component);
        Y["default"] = q;
        cc._RF.pop();
      }
    }, {}],
    'TigerController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "ac8aaXi1jdK56Xm1MRmZZeQ", "TigerController")) {
        var v = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", v);
        var G = z("Utils");
        var q = z("GeneralAudioConstant");
        var f = z("AudioManager");
        var g = cc._decorator;
        var Z = g.ccclass;
        var b = g.property;
        var H = ["voxSmallwin1a", "voxSmallwin1b", "voxSmallwin1c"];
        var I = ["voxSmallwin2a", "voxSmallwin2b"];
        var K = function (E) {
          function Q() {
            var X = null !== E && E.apply(this, arguments) || this;
            X.tiger = undefined;
            X.ingotHolder = undefined;
            X.shine = undefined;
            X.shine2 = undefined;
            X.rain = undefined;
            X.tb = undefined;
            X.ib = 0x0;
            X.sb = 0x0;
            return X;
          }
          __extends(Q, E);
          Q.prototype.init = function () {};
          Q.prototype.getIngotWorldPos = function () {
            return this.node.convertToWorldSpaceAR(this.ingotHolder.position);
          };
          Q.prototype.getTigerPosition = function () {
            return this.node.parent.convertToWorldSpaceAR(this.node.position);
          };
          Q.prototype.setRespin = function () {
            var X = this.tb;
            this.tb = undefined;
            if (X) {
              X();
            }
            this.node.position = cc.v3(0x0, -0x46);
            this.rain.node.active = true;
            this.rain.play();
            this.tiger.setAnimation(0x0, "rs_idle", true);
          };
          Q.prototype.setNormal = function (X) {
            this.node.position = cc.v3(0x0, 0x0);
            this.rain.stop();
            this.rain.setCurrentTime(0x0);
            this.rain.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.rain.node.active = false;
            this.eb(X);
          };
          Q.prototype.playRespin = function (X) {
            this.rain.node.active = true;
            this.rain.play();
            this.rain.node.runAction(cc.fadeIn(0x1));
            if (X) {
              X();
            }
          };
          Q.prototype.playNormal = function (X) {
            if (X) {
              X();
            }
            this.rain.stop();
            this.rain.setCurrentTime(0x0);
            this.rain.node.getComponent(cc.Sprite).spriteFrame = undefined;
            this.rain.node.active = false;
          };
          Q.prototype.playIngot = function (X) {
            var A = this.tb;
            this.tb = undefined;
            if (A) {
              A();
            }
            var V = "fx_wild_collect";
            if (X >= 0x14) {
              V = "fx_wild_collect3";
            } else if (X >= 0xc) {
              V = "fx_wild_collect2";
            }
            this.tiger.setAnimation(0x0, "wild_collect", false);
            this.tiger.setAnimation(0x1, V, false);
            this.eb(X);
          };
          Q.prototype.playWin = function (X) {
            var A = this.tb;
            this.tb = undefined;
            if (A) {
              A();
            }
            var V = q.GENERAL_AUDIO[H[this.ib]].key;
            f.stopAudioIfPlaying(V);
            f.playAudioIfNotPlaying(V);
            this.ib++;
            if (this.ib >= 0x3) {
              this.ib = 0x0;
            }
            this.tiger.setAnimation(0x0, "win", false);
            this.eb(X);
          };
          Q.prototype.playBigWin = function (X) {
            var A = this.tb;
            this.tb = undefined;
            if (A) {
              A();
            }
            var V = q.GENERAL_AUDIO[I[this.sb]].key;
            f.stopAudioIfPlaying(V);
            f.playAudioIfNotPlaying(V);
            this.sb++;
            if (this.sb >= 0x2) {
              this.sb = 0x0;
            }
            this.tiger.setAnimation(0x0, "win2", false);
            this.eb(X);
          };
          Q.prototype.playRespinWin = function () {
            var X = this.tb;
            this.tb = undefined;
            if (X) {
              X();
            }
            this.tiger.clearTracks();
            this.tiger.setToSetupPose();
            var A = q.GENERAL_AUDIO.voxRsWin.key;
            f.stopAudioIfPlaying(A);
            f.playAudioIfNotPlaying(A);
            this.tiger.setAnimation(0x0, "rs_win", false);
            this.tiger.addAnimation(0x0, "rs_win_idle", true);
          };
          Q.prototype.zoomOut = function () {
            var X = this.tb;
            this.tb = undefined;
            if (X) {
              X();
            }
            this.tiger.clearTracks();
            this.tiger.setToSetupPose();
            this.tiger.setAnimation(0x0, "zo_start", false);
            this.tiger.addAnimation(0x0, "zo_idle", false);
            this.tiger.addAnimation(0x0, "rs_start", false);
            this.tiger.addAnimation(0x0, "rs_idle", true);
            this.node.stopAllActions();
            this.node.position = cc.v3(0x0, 0x0);
            this.node.runAction(cc.sequence(cc.delayTime(0.35), cc.moveTo(1.75, cc.v2(0x0, -0x46)).easing(cc.easeCubicActionInOut())));
          };
          Q.prototype.zoomIn = function () {
            var X = this.tb;
            this.tb = undefined;
            if (X) {
              X();
            }
            this.node.stopAllActions();
            this.node.position = cc.v3(0x0, -0x46);
            this.node.runAction(cc.moveTo(1.75, cc.v2(0x0, 0x0)).easing(cc.easeCubicActionInOut()));
            var A = this.tiger.addAnimation(0x0, "rs_win_exit", false);
            this.eb(0x0, A.animation.duration);
          };
          Q.prototype.teaseZoomOut = function () {
            var X = this.tb;
            this.tb = undefined;
            if (X) {
              X();
            }
            this.tiger.setAnimation(0x0, "zo_start", false);
            this.tiger.addAnimation(0x0, "zo_idle", true);
            this.node.stopAllActions();
            this.node.position = cc.v3(0x0, 0x0);
            this.node.runAction(cc.sequence(cc.delayTime(0.35), cc.moveTo(0.85, cc.v2(0x0, -0x23)).easing(cc.easeCubicActionInOut())));
          };
          Q.prototype.teaseZoomIn = function (X) {
            var A = this.tb;
            this.tb = undefined;
            if (A) {
              A();
            }
            this.node.stopAllActions();
            this.node.position = cc.v3(0x0, -0x23);
            this.node.runAction(cc.moveTo(0.85, cc.v2(0x0, 0x0)).easing(cc.easeCubicActionInOut()));
            var V = q.GENERAL_AUDIO.voxZoExit.key;
            f.stopAudioIfPlaying(V);
            f.playAudioIfNotPlaying(V);
            this.tiger.setAnimation(0x0, "zo_exit", false);
            this.eb(X);
          };
          Q.prototype.noSpin = function (X) {
            var A = this.tb;
            this.tb = undefined;
            if (A) {
              A();
            }
            var V = q.GENERAL_AUDIO.voxIdle4.key;
            f.stopAudioIfPlaying(V);
            f.playAudioIfNotPlaying(V);
            this.tiger.setAnimation(0x0, "idle4", false);
            this.eb(X);
          };
          Q.prototype.noWin = function (X) {
            var A = this.tb;
            this.tb = undefined;
            if (A) {
              A();
            }
            this.tiger.addAnimation(0x0, "idle5", false);
            this.eb(X);
          };
          Q.prototype.eb = function (X, A) {
            var V = this;
            if (undefined === A) {
              A = 0x0;
            }
            var W = this.tb;
            this.tb = undefined;
            if (W) {
              W();
            }
            var J = "fx_idle";
            if (X >= 0x14) {
              J = "fx_idle3";
            } else if (X >= 0xc) {
              J = "fx_idle2";
            }
            this.tiger.addAnimation(0x0, "idle", true);
            this.tiger.addAnimation(0x1, J, true, A);
            var w = "idle3";
            var O = function () {
              var F = Math.floor(0x14 * Math.random() + 0xc);
              V.tb = G.delayCallback(F)(function () {
                V.tiger.addAnimation(0x0, "idle2", false);
                V.tiger.addAnimation(0x0, w, true);
                w = "idle";
                O();
              });
            };
            O();
          };
          Q.prototype.resetTiger = function (X) {
            var A = this;
            var V = this.tb;
            this.tb = undefined;
            if (V) {
              V();
            }
            var W = "fx_idle";
            if (X >= 0x14) {
              W = "fx_idle3";
            } else if (X >= 0xc) {
              W = "fx_idle2";
            }
            this.tiger.setAnimation(0x0, "idle", true);
            this.tiger.setAnimation(0x1, W, true);
            var J = "idle3";
            var w = function () {
              var O = Math.floor(0x14 * Math.random() + 0xc);
              A.tb = G.delayCallback(O)(function () {
                A.tiger.addAnimation(0x0, "idle2", false);
                A.tiger.addAnimation(0x0, J, true);
                J = "idle";
                w();
              });
            };
            w();
          };
          __decorate([b(sp.Skeleton)], Q.prototype, "tiger", undefined);
          __decorate([b(cc.Node)], Q.prototype, "ingotHolder", undefined);
          __decorate([b(cc.Node)], Q.prototype, "shine", undefined);
          __decorate([b(cc.Node)], Q.prototype, "shine2", undefined);
          __decorate([b(cc.Animation)], Q.prototype, "rain", undefined);
          return __decorate([Z], Q);
        }(cc.Component);
        Y["default"] = K;
        cc._RF.pop();
      }
    }, Lg],
    'TimedWinRollBaseController': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "12aa3hO3pdL6oUvYmprts/7", "TimedWinRollBaseController")) {
        var v = {
          value: true
        };
        Object.defineProperty(l, "__esModule", v);
        var q = L("NumberDisplayInterface");
        var g = cc._decorator;
        var Z = g.ccclass;
        var b = g.property;
        var H = function (K) {
          function E() {
            var Q = null !== K && K.apply(this, arguments) || this;
            Q.displayController = undefined;
            Q.nb = 0x0;
            Q.ob = 0x0;
            Q.Pu = -0x1;
            Q.cb = 0x0;
            Q.hb = [];
            Q.rb = undefined;
            Q.ab = undefined;
            Q.ub = undefined;
            Q.lb = [];
            Q.fb = false;
            Q.vb = -0x1;
            Q._b = -0x1;
            Q.mb = [];
            Q.pb = [];
            Q.zo = [];
            Q.bb = [];
            Q.Sb = [];
            return Q;
          }
          __extends(E, K);
          E.prototype.update = function () {};
          E.prototype.setNumbersCallback = function (Q) {
            this.hb = Q;
          };
          E.prototype.setTimeCallback = function (Q, X) {
            this.lb = Q;
            this.ab = X;
          };
          E.prototype.init = function (Q) {
            this.zo = [Q.bigWinThreshold, Q.megaWinThreshold, Q.superMegaWinThreshold];
            this.bb = [Q.bigWinDuration, Q.megaWinDuration, Q.superMegaWinDuration];
            this.Pu = Q.totalWin;
            this.Sb = [];
            for (var X = 0x0; X < 0x3; X++) {
              this.Sb[X] = this.bb[X].reduce(function (A, V) {
                return A + V;
              });
            }
            this.gb();
          };
          E.prototype.getWinType = function () {
            var Q = {
              winStyle: this.vb,
              winStep: this._b
            };
            return Q;
          };
          E.prototype.play = function (Q) {
            if (this.Cb()) {
              this.nb = 0x0;
              this.cb = 0x0;
              this.ob = 0x0;
              this.rb = Q;
              this.displayController.clear();
              this.update = this.yb;
              this.fb = true;
            }
          };
          E.prototype.skip = function () {
            var Q = this;
            if (this.fb) {
              this.stop(false);
              this.displayController.displayNumber(this.Pu, true, function () {
                if (Q.rb) {
                  Q.rb(Q.Pu);
                }
              });
            }
          };
          E.prototype.stop = function (Q) {
            if (undefined === Q) {
              Q = true;
            }
            if (Q) {
              this.displayController.clear();
              this.rb = undefined;
              this.ab = undefined;
            }
            this.nb = 0x0;
            this.fb = false;
            this.update = function () {};
          };
          E.prototype.Cb = function () {
            if (!!this.hb) {
              this.hb.length;
            }
            return !(!this.bb || !this.zo || this.Pu < 0x0);
          };
          E.prototype.gb = function () {
            var Q = this.Pu;
            var X = this.zo;
            var A = this.Sb;
            var W = X[0x2] + (X[0x2] - X[0x1]) * A[0x2] / A[0x1];
            var J = [];
            var w = [];
            if (Q < X[0x1]) {
              this.vb = 0x0;
              w[0x0] = Q;
              J[0x0] = this.Mb(Q, 0x0, X[0x1], 0x0, 0x0);
            } else if (Q < X[0x2]) {
              this.vb = 0x1;
              w[0x0] = X[0x1];
              J[0x0] = A[0x0];
              w[0x1] = Q;
              J[0x1] = this.Mb(Q, X[0x1], X[0x2], 0x1, X[0x1] / A[0x0]);
            } else if (Q < W) {
              this.vb = 0x2;
              w[0x0] = X[0x1];
              J[0x0] = A[0x0];
              w[0x1] = X[0x2];
              J[0x1] = A[0x1];
              w[0x2] = Q;
              J[0x2] = this.Mb(Q, X[0x2], W, 0x2, (X[0x2] - X[0x1]) / A[0x1]);
            } else {
              this.vb = 0x3;
              this._b = 0x0;
              w[0x0] = X[0x1];
              w[0x1] = X[0x2];
              w[0x2] = Q;
              J = A;
            }
            this.mb = J;
            this.pb = w;
            this.ub = I(0x0, this.pb[0x0]);
          };
          E.prototype.Mb = function (Q, X, A, V, W) {
            var J = this.Sb[V];
            var w = this.bb[V];
            var O = (Q - X) / (A - X);
            var F = 0x0;
            for (var D = 0x0; D < w.length; D++) {
              var U = F + w[D];
              if (O < U / J) {
                return W ? (Q - X) / U >= W ? (this._b = D + 0x1, U) : (this._b = D, F) : F && O < (U + F) / 0x2 / J ? (this._b = D, F) : (this._b = D + 0x1, U);
              }
              F = U;
            }
            return F;
          };
          E.prototype.yb = function (Q) {
            var X;
            var A;
            var V;
            var W;
            var J;
            var w = (this.nb += Q) - this.ob;
            var O = this.mb[0x0];
            if (w < O) {
              w += Q * (0.2 * Math.random() - 0.1);
              X = this.ub.evaluate(w / O);
            } else {
              var F = undefined;
              var D = undefined;
              do {
                F = this.mb.shift();
                O = this.mb[0x0];
                D = this.pb.shift();
                this.ob += F;
                w -= F;
              } while (undefined !== O && w >= O);
              if (undefined === O) {
                this.ub = undefined;
                this.fb = false;
                this.update = function () {};
                X = this.Pu;
              } else {
                if (this.vb === 0x3 && 0x1 === this.mb.length) {
                  var U = this.ub.getDistance() / F;
                  A = D;
                  V = this.pb[0x0];
                  J = V - A - (W = U * O);
                  this.ub = {
                    'evaluate': function (S) {
                      return A + W * S + J * Math.pow(0x2, 0x14 * (S - 0x1));
                    }
                  };
                } else {
                  this.ub = I(D, this.pb[0x0]);
                }
                w += Q * (0.2 * Math.random() - 0.1);
                X = this.ub.evaluate(w / O);
              }
            }
            this.Ab(X);
            if (this.ab) {
              this.Ib(this.nb);
            }
          };
          E.prototype.Ab = function (Q) {
            var X = this.hb;
            var A = this.Pu;
            var V = Q;
            var W = false;
            var J = [];
            var w = this.rb;
            if (undefined !== X) {
              for (; X.length && X[0x0] <= Q;) {
                var O = X.shift();
                J.push(O);
              }
            }
            if (A <= Q) {
              this.stop(false);
              V = A;
              W = true;
              J.push(A);
              this.rb = undefined;
            }
            this.displayController.displayNumber(V, W, function () {
              J.forEach(function (F) {
                if (w) {
                  w(F);
                }
              });
            });
          };
          E.prototype.Ib = function (Q) {
            var X = this.lb;
            if (undefined !== X && X.length && X[0x0] <= Q) {
              var A = X.shift();
              this.ab(A);
            }
          };
          __decorate([b({
            'type': q["default"],
            'override': true
          })], E.prototype, "displayController", undefined);
          return __decorate([Z], E);
        }(cc.Component);
        l["default"] = H;
        cc._RF.pop();
      }
      function I(K, E) {
        var Q = E - K;
        var X = {
          evaluate: function (A) {
            return K + Q * A;
          },
          getDistance: function () {
            return Q;
          }
        };
        return X;
      }
    }, Ls],
    'TimedWinRollController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "bbc6c4tBJdFQ76rTU5OtO2a", "TimedWinRollController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("NumberDisplayController");
        var G = z("TimedWinRollBaseController");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function I() {
            var K = null !== b && b.apply(this, arguments) || this;
            K.displayController = undefined;
            return K;
          }
          var H = {
            type: v["default"],
            override: true
          };
          __extends(I, b);
          __decorate([g(H)], I.prototype, "displayController", undefined);
          return __decorate([f], I);
        }(G["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, LZ],
    'TimedWinRollCurveController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "ac3b0Ey1QlMtZGe7RPoOsSH", "TimedWinRollCurveController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("NumberCurvedController");
        var G = z("TimedWinRollBaseController");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var K = null !== b && b.apply(this, arguments) || this;
            K.displayController = undefined;
            return K;
          }
          var I = {
            type: v["default"],
            override: true
          };
          __extends(H, b);
          __decorate([g(I)], H.prototype, "displayController", undefined);
          return __decorate([f], H);
        }(G["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, Li],
    'TimedWinRollLabelController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "aa2360L0o1DHbvfzQuldvyg", "TimedWinRollLabelController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("NumberLabelController");
        var G = z("TimedWinRollBaseController");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function I() {
            var K = null !== b && b.apply(this, arguments) || this;
            K.displayController = undefined;
            return K;
          }
          var H = {
            type: v["default"],
            override: true
          };
          __extends(I, b);
          __decorate([g(H)], I.prototype, "displayController", undefined);
          return __decorate([f], I);
        }(G["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, Lb],
    'TrailParticleEffectController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "e655bq0JEFHRJPA8Vxz7abO", "TrailParticleEffectController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("SlotProperties");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.trailParticleItemHolderNode = undefined;
            b.trailParticleItemPrefab = undefined;
            b.wildParticleItemPrefab = undefined;
            b.wb = new cc.NodePool("TrailParticleItemController");
            b.Ob = new cc.NodePool("WildParticleItemController");
            return b;
          }
          __extends(Z, g);
          Z.prototype.init = function () {
            this.Hb(r.NO_OF_SLOT_ITEMS + 0x1);
          };
          Z.prototype.playWildCollectEffect = function (b, H, I, K, E) {
            var Q = this;
            if (b.length <= 0x0) {
              if (E) {
                E();
              }
            } else {
              var X = 0x0;
              var A = function () {
                if (K) {
                  K();
                }
                if (X === b.length - 0x1) {
                  if (E) {
                    E();
                  }
                } else {
                  X++;
                }
              };
              b.forEach(function (V, W) {
                var J = 0.15 * W;
                var w = V.worldPosition;
                var O = cc.v2(w.x - 0x64, w.y);
                var F = Q.Bb();
                var D = Q.Gb();
                var U = F.getComponent("TrailParticleItemController");
                var S = D.getComponent("WildParticleItemController");
                V.showWildShine(J, function () {
                  var R = {
                    'x': -0x12c,
                    'y': 0x0
                  };
                  D.setParent(Q.trailParticleItemHolderNode);
                  S.play(O, 0x0, Q.Ob);
                  F.setParent(Q.trailParticleItemHolderNode);
                  F.position = Q.trailParticleItemHolderNode.convertToNodeSpaceAR(O);
                  U.wildCollectEffectSetup();
                  U.fly(O, H, 0.25, 0x0, R, Q.wb, A);
                });
              });
            }
          };
          Z.prototype.Hb = function (b) {
            for (var H = 0x0; H < b; H++) {
              this.wb.put(cc.instantiate(this.trailParticleItemPrefab));
              this.Ob.put(cc.instantiate(this.wildParticleItemPrefab));
            }
          };
          Z.prototype.Bb = function () {
            return this.wb.size() > 0x0 ? this.wb.get() : cc.instantiate(this.trailParticleItemPrefab);
          };
          Z.prototype.Gb = function () {
            return this.Ob.size() > 0x0 ? this.Ob.get() : cc.instantiate(this.wildParticleItemPrefab);
          };
          __decorate([q(cc.Node)], Z.prototype, "trailParticleItemHolderNode", undefined);
          __decorate([q(cc.Prefab)], Z.prototype, "trailParticleItemPrefab", undefined);
          __decorate([q(cc.Prefab)], Z.prototype, "wildParticleItemPrefab", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, LH],
    'TrailParticleItemController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "5f8f55wzsNMjqYq3mN49W0b", "TrailParticleItemController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("Utils");
        var G = z("GConstants");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.emitterA = undefined;
            I.emitterHolder = undefined;
            I.ballAnim = undefined;
            return I;
          }
          __extends(H, b);
          H.prototype.mouseShiftEffectSetup = function () {
            this.emitterA.node.position.x = 0x28;
          };
          H.prototype.wildCollectEffectSetup = function () {
            this.emitterA.node.position.x = 0x14;
          };
          H.prototype.fly = function (I, K, E, Q, X, A, V) {
            var W = this;
            var J = {
              'x': 0x0,
              'y': 0x0
            };
            if (undefined === E) {
              E = 0x1;
            }
            if (undefined === X) {
              X = J;
            }
            var w = this.node.convertToNodeSpaceAR(I);
            var O = this.node.convertToNodeSpaceAR(K);
            var F = this.emitterA.life + this.emitterA.lifeVar;
            var D = this.Nb(w, O, E, X.x, X.y);
            var U = this.Tb(w, O);
            this.emitterHolder.stopAllActions();
            this.emitterA.resetSystem();
            this.ballAnim.play();
            this.ballAnim.node.stopAllActions();
            this.emitterHolder.angle = -U;
            this.emitterHolder.position = w;
            this.emitterHolder.runAction(cc.sequence(D, cc.callFunc(function () {
              W.emitterA.stopSystem();
              W.ballAnim.node.runAction(cc.tintTo(0.3, G.BLACK));
            }), cc.callFunc(function () {
              v.delayCallback(F)(function () {
                A.put(W.node);
              });
              if (V) {
                V();
              }
            })));
          };
          H.prototype.unuse = function () {
            this.emitterA.resetSystem();
            this.emitterA.stopSystem();
            this.emitterHolder.stopAllActions();
            this.ballAnim.node.stopAllActions();
            this.ballAnim.node.color = G.WHITE;
            this.ballAnim.stop();
            this.ballAnim.setCurrentTime(0x0);
            this.ballAnim.getComponent(cc.Sprite).spriteFrame = undefined;
          };
          H.prototype.reuse = function () {
            this.emitterA.resetSystem();
            this.emitterA.stopSystem();
            this.emitterHolder.stopAllActions();
            this.ballAnim.node.stopAllActions();
            this.ballAnim.node.color = G.WHITE;
            this.ballAnim.stop();
            this.ballAnim.setCurrentTime(0x0);
            this.ballAnim.getComponent(cc.Sprite).spriteFrame = undefined;
          };
          H.prototype.destroy = function () {
            this.unuse();
            return b.prototype.destroy.call(this);
          };
          H.prototype.Nb = function (I, K, E, Q, X) {
            if (undefined === E) {
              E = 0.5;
            }
            var A = (K.x + I.x) * Math.sin(this.Pb(0x3c)) + Q;
            var V = (K.y + I.y) * Math.cos(this.Pb(0x46)) + X;
            var W = [I, cc.v2(A, V), K];
            return cc.bezierTo(E, W);
          };
          H.prototype.Tb = function (I, K) {
            var X = {
              'x': K.x - I.x,
              'y': K.y - I.y
            };
            var A = Math.atan2(X.y, X.x);
            var V = this.Lb(A);
            if (V < 0x0) {
              V += 0x168;
            }
            return 0x168 - V;
          };
          H.prototype.Lb = function (I) {
            return 0xb4 * I / Math.PI;
          };
          H.prototype.Pb = function (I) {
            return I * Math.PI / 0xb4;
          };
          __decorate([g(cc.ParticleSystem)], H.prototype, "emitterA", undefined);
          __decorate([g(cc.Node)], H.prototype, "emitterHolder", undefined);
          __decorate([g(cc.Animation)], H.prototype, "ballAnim", undefined);
          return __decorate([f], H);
        }(cc.Component);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, LI],
    'TransactionModel': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "54c92i9GeNK1JtqIIU4fhIX", "TransactionModel")) {
        var L = System.get("bvframework").TransactionModel;
        z.exports["default"] = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'TransactionStateMachineHandler': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "c42f8INb4ZMyJTA7LnNSlci", "TransactionStateMachineHandler")) {
        var L = System.get("bvframework").TransactionStateMachineHandler;
        for (var Y in L) if (L.hasOwnProperty(Y)) {
          z.exports[Y] = L[Y];
        }
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'TransitionContext': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "9fd10r5SF9AY7ViKPJFg+fR", "TransitionContext")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.TransitionContext = undefined;
        var r = function () {
          function v(G, q, c, f, g) {
            this.Rb = G;
            this.Eb = q;
            this.kb = c;
            this.Ub = f;
            this.jb = g;
          }
          v.prototype.getFromController = function () {
            return this.Rb;
          };
          v.prototype.getToController = function () {
            return this.Eb;
          };
          v.prototype.getFromView = function () {
            return this.kb;
          };
          v.prototype.getToView = function () {
            return this.Ub;
          };
          v.prototype.getContainer = function () {
            return this.jb;
          };
          return v;
        }();
        Y.TransitionContext = r;
        cc._RF.pop();
      }
    }, {}],
    'TransitionEnum': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "ba325vamDZMr5FAGrgPtoRH", "TransitionEnum")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.NavigationControllerOperation = undefined;
        (function (r) {
          r[r.None = 0x0] = "None";
          r[r.Push = 0x1] = "Push";
          r[r.Pop = 0x2] = "Pop";
        })(Y.NavigationControllerOperation || (Y.NavigationControllerOperation = {}));
        cc._RF.pop();
      }
    }, {}],
    'Transitions': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "33e4esYSRxEnZ3KD136K54g", "Transitions")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.ToRespinTransition = Y.ToNormalSpinTransition = undefined;
        var r = z("Utils");
        var v = z("SettingMenuHelper");
        var G = z("GDataSource");
        var q = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.ps = undefined;
            return b;
          }
          __extends(Z, g);
          Z.prototype.instanceRun = function (b, H) {
            this.ps = b.generalControllers;
            this.Db(H);
          };
          Z.prototype.run = function (b, H) {
            this.ps = b.generalControllers;
            this.Wb(H);
          };
          Z.prototype.xb = function () {
            var b = this.ps.spinButtonController;
            if (v.settingMenuHelper.isIdle()) {
              b.show();
            }
            b.enableButton();
          };
          Z.prototype.Vr = function () {
            var b = this.ps.slotController;
            b.stopRespin();
            b.setupNormalSpinSlotConfig();
          };
          Z.prototype.Wb = function (b) {
            var H = this.ps.stickyController;
            this.xb();
            this.Vr();
            H.stopSticky();
            if (b) {
              b();
            }
          };
          Z.prototype.Db = function (H) {
            var I = this.ps;
            var K = I.stickyController;
            var E = I.slotController;
            var Q = I.backgroundController;
            var X = I.backgroundController2;
            var A = I.uiShiftController;
            var V = I.tigerController;
            var W = I.angpaoController;
            var J = I.infoboardController;
            var w = G.gDataSource.transactionModel;
            var O = w.accumulatedWinAmount;
            var F = w.betLevelValue;
            var D = w.betSizeValue;
            var U = w.wildCount;
            var S = G.gDataSource.systemModel.maxLineNumber;
            var R = G.gDataSource.systemModel.winThresholds.getAllThresholds(D, F, S);
            this.xb();
            this.Vr();
            K.clearSticky();
            if (O > 0x0) {
              J.setThreshold(R);
              J.playDynamicWin(O);
              v.settingMenuHelper.setWinAmount(O);
            } else {
              J.resetInfoboard(false);
              J.resumeInfoboard();
            }
            W.setupToNormalState();
            Q.setupToNormalState();
            X.setupToNormalState();
            A.setupToNormalState();
            E.setupToNormalState();
            V.setNormal(U);
            if (H) {
              H();
            }
          };
          Z.prototype.destroy = function () {
            this.ps = undefined;
            return g.prototype.destroy.call(this);
          };
          return Z;
        }(cc.Object);
        Y.ToNormalSpinTransition = q;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.ps = undefined;
            return b;
          }
          __extends(Z, g);
          Z.prototype.run = function (b, H) {
            this.ps = b.generalControllers;
            r.sequenceCallback(this.Fb.bind(this), this.Vb.bind(this))(H);
          };
          Z.prototype.instanceRun = function (b, H) {
            this.ps = b.generalControllers;
            r.sequenceCallback(this.zb.bind(this), this.Fb.bind(this))(H);
          };
          Z.prototype.Vb = function (b) {
            this.ps.spinButtonController.disableButton();
            if (b) {
              b();
            }
          };
          Z.prototype.zb = function (H) {
            var I = this.ps;
            var K = I.backgroundController;
            var E = I.backgroundController2;
            var Q = I.infoboardController;
            var X = I.uiShiftController;
            var A = I.tigerController;
            var V = I.stickyController;
            var W = I.slotController;
            var J = I.spinButtonController;
            var w = I.payLineNumberController;
            var O = I.payLineController;
            var F = I.angpaoController;
            var D = G.gDataSource.transactionModel;
            var U = D.featureWinSymbol;
            var S = D.reels;
            var R = D.winLines;
            W.setSlotItemsVisible(false, [0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8]);
            F.setupToRespinState();
            K.setupToRespinState();
            E.setupToRespinState();
            W.setupToRespinState();
            W.playRespin();
            X.setupToRespinState();
            J.disableButton();
            Q.playRespin(U);
            Q.resumeInfoboard();
            V.playSticky(S, R, U, H);
            var x = R.winPositions;
            x.forEach(function (j, P) {
              x[P] = parseInt(j, 0xa);
            });
            w.show(x);
            O.showLine(x);
            A.setRespin(U);
          };
          Z.prototype.Fb = function (b) {
            var H = this.ps.slotController;
            var I = G.gDataSource.transactionModel.featureWinSymbol;
            H.setupRespinSlotConfig();
            H.setRespinSymbol(I);
            if (b) {
              b();
            }
          };
          Z.prototype.destroy = function () {
            this.ps = undefined;
            return g.prototype.destroy.call(this);
          };
          return Z;
        }(cc.Object);
        Y.ToRespinTransition = f;
        cc._RF.pop();
      }
    }, LK],
    'TurboButtonEffect': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "5e837vEECVAj4O05haO7Gt+", "TurboButtonEffect")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = cc._decorator.ccclass;
        var v = function (G) {
          function q() {
            var c = null !== G && G.apply(this, arguments) || this;
            c.Jb = undefined;
            return c;
          }
          __extends(q, G);
          q.prototype.setUpdateTurboMiddleIconCallback = function (c) {
            this.Jb = c;
          };
          q.prototype.changeTurboSprite = function () {
            if (this.Jb) {
              this.Jb();
            }
          };
          return __decorate([r], q);
        }(cc.Component);
        Y["default"] = v;
        cc._RF.pop();
      }
    }, {}],
    'TweaksConfig': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "0602bmSQ0NBZrhW+yhcJtSb", "TweaksConfig")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        z("RtConfig");
        z("GamePreference");
        z("CreatorTweaks");
        z("Utils");
        z("QuitGame");
        z("Printer");
        z("TweaksData");
        Y["default"] = undefined;
        cc._RF.pop();
      }
    }, LE],
    'TweaksData': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "b0089xUdQRLiZXeZmKk7dCG", "TweaksData")) {
        z.exports = {};
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'UIAppearanceHelper': [function (K, E, Q) {
      'use strict';

      if (!cc._RF.push(E, "f4549VlHlxOL4w7V7h4rhZg", "UIAppearanceHelper")) {
        var X = {
          value: true
        };
        Object.defineProperty(Q, "__esModule", X);
        Q.uiAppearanceHelper = Q.getOffsetY = undefined;
        var A = {
          native: 0x4,
          non_native: 0x3
        };
        var V = {
          native: 0x4,
          non_native: 0x5
        };
        var W = {
          native: 0x2,
          non_native: 0x2
        };
        var J = {
          native: 0x5,
          non_native: 0x4
        };
        var w = {
          windows: A,
          macos: V,
          ios: W,
          android: J
        };
        var O = {
          native: 0x0,
          non_native: 0x5
        };
        var F = {
          native: 0x2,
          non_native: 0x3
        };
        var D = {
          native: 0x0,
          non_native: 0x3
        };
        var U = {
          native: 0x4,
          non_native: 0x4
        };
        var S = {
          windows: O,
          macos: F,
          ios: D,
          android: U
        };
        var R = K("BACKUP_DATA");
        var x = function () {
          function N2() {}
          N2.prototype.interpret = function (N3) {
            return N3[0x0];
          };
          return N2;
        }();
        var j = function () {
          function N2() {}
          N2.prototype.interpret = function (N3) {
            return new cc.Color(N3[0x0], N3[0x1], N3[0x2], N3[0x3]);
          };
          return N2;
        }();
        var P = cc._decorator.ccclass;
        var m = function (N2) {
          function N3() {
            var N4 = N2.call(this) || this;
            N4.qb = undefined;
            var N5 = N4.qb = shell.uiAppearance;
            if (N5) {
              N5.registerInterpreter("font", new x());
              N5.registerInterpreter("value", new x());
              N5.registerInterpreter("path", new x());
              N5.registerInterpreter("color", new j());
              N5.registerInterpreter("classname", new x());
            }
            return N4;
          }
          __extends(N3, N2);
          N3.prototype.v = function (N4) {
            var N5 = this.qb && this.qb.v(N4);
            if (null === N5) {
              N5 = N1(N4);
            }
            return N5;
          };
          N3.prototype.unregisterInterpreter = function (N4) {
            return this.qb && this.qb.unregisterInterpreter(N4);
          };
          return __decorate([P("UIAppearanceHelper")], N3);
        }(cc.Object);
        var p = Object.freeze(w);
        var M = Object.freeze(S);
        var B = shell.I18n.currentLocale;
        var y = shell.getBrowserBaseType().toLowerCase();
        var k = 'zh' === B || 'ko' === B || 'ja' === B ? M : p;
        Q.getOffsetY = function () {
          switch (cc.sys.os) {
            case cc.sys.OS_WINDOWS:
              return 'ie' === y || "edge" === y ? k.windows.native : k.windows.non_native;
            case cc.sys.OS_ANDROID:
              return "chrome" === y ? k.android.native : k.android.non_native;
            case cc.sys.OS_OSX:
              return "safari" === y ? k.macos.native : k.macos.non_native;
            case cc.sys.OS_IOS:
              return "mobile safari" === y ? k.ios.native : k.ios.non_native;
            default:
              return k.macos.non_native;
          }
        };
        var N0 = new m();
        Q.uiAppearanceHelper = N0;
        cc._RF.pop();
      }
      function N1(N2) {
        var N3;
        var N4 = N2.split('.');
        var N5 = 0x0;
        for (var N6 = N4.length; N5 < N6; N5++) {
          var N7 = N4[N5];
          if (undefined === (N3 = N3 && N3[N7] || R["default"][N7])) {
            return null;
          }
        }
        return N3;
      }
    }, LQ],
    'UIKitUtils': [function (z, L, Y) {
      'use strict';

      function l() {
        return cc.sys.os === cc.sys.OS_IOS;
      }
      var r = {
        value: true
      };
      if (!cc._RF.push(L, "b3045XdzRhDNrJLCqWLZ6eT", "UIKitUtils")) {
        Object.defineProperty(Y, "__esModule", r);
        Y.isNotBrowserMode = Y.deviceHasNotch = Y.isIphoneX = Y.isIphone = undefined;
        Y.isIphone = l;
        Y.isIphoneX = function () {
          var v = cc.view.getFrameSize();
          return cc.sys.os === cc.sys.OS_IOS && (0x32c === v.width && 0x177 === v.height || 0x177 === v.width && 0x32c === v.height);
        };
        Y.deviceHasNotch = function () {
          return shell.environment.hasNotch();
        };
        Y.isNotBrowserMode = function () {
          return window.navigator.standalone || "app" === shell.getEnvironment();
        };
        cc._RF.pop();
      }
    }, {}],
    'UIKit': [function (Z, b, H) {
      'use strict';

      var I = {
        value: true
      };
      var K = {
        height: 139.5,
        item_space_x: 0x30
      };
      var E = {
        height: 0xba,
        item_space_x: 0x30
      };
      var Q = {
        landscape: K,
        portrait: E
      };
      var X = {
        bar: Q
      };
      var o = {
        height: 0xb4
      };
      var A = {
        height: 0xb4
      };
      var V = {
        landscape: o,
        portrait: A
      };
      var W = {
        bar: V
      };
      var J = {
        top: 0x50,
        left: 0x0,
        bottom: 0x66,
        right: 0x0
      };
      var w = {
        top: 0x32,
        left: 0x0,
        bottom: 0x0,
        right: 0x0
      };
      var O = {
        top: 0x0,
        left: 0x0,
        bottom: 0x0,
        right: 0x0
      };
      var a = {
        iphone_x: J,
        iphone: w,
        normal: O
      };
      if (!cc._RF.push(b, "cfcacQ0hpxOzKvh1YNNRBbk", "UIKit")) {
        Object.defineProperty(H, "__esModule", I);
        H.safeArea = H.TabBarConfigs = H.NavigationConfigs = undefined;
        H.NavigationConfigs = X;
        H.TabBarConfigs = W;
        H.safeArea = Object.freeze(a);
        cc._RF.pop();
      }
    }, {}],
    'UIShiftController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "feb71KMpjlDuYJBTJhGMq3H", "UIShiftController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("GeneralAudioConstant");
        var G = z("AudioManager");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.shiftNode = undefined;
            I.Kb = undefined;
            I.Qb = 0.92;
            I.Yb = 0.95;
            I.Z = undefined;
            I.X = undefined;
            I.Xb = undefined;
            return I;
          }
          __extends(H, b);
          H.prototype.init = function () {
            this.Kb = 0x1;
          };
          H.prototype.setupToNormalState = function () {
            this.shiftNode.scale = this.Kb;
          };
          H.prototype.setupToRespinState = function () {
            this.shiftNode.scale = this.Qb;
          };
          H.prototype.shiftDown = function (I, K) {
            this.shiftNode.stopAllActions();
            this.shiftNode.getComponent(cc.Animation).play("ui_shift");
            this.shiftNode.getComponent(cc.Animation).once(cc.Animation.EventType.FINISHED, function () {
              if (K) {
                K();
              }
            });
            var E = v.GENERAL_AUDIO.featureTease.key;
            G.stopAudioIfPlaying(E);
            G.playAudioIfNotPlaying(E);
          };
          H.prototype.shiftUp = function (I, K) {
            this.shiftNode.getComponent(cc.Animation).play("ui_shift_in");
            this.shiftNode.getComponent(cc.Animation).once(cc.Animation.EventType.FINISHED, function () {
              if (K) {
                K();
              }
            });
          };
          H.prototype.teaseDown = function (I, K) {
            var E = this;
            this.X = K;
            var Q = v.GENERAL_AUDIO.featureTease.key;
            G.stopAudioIfPlaying(Q);
            G.playAudioIfNotPlaying(Q);
            this.shiftNode.getComponent(cc.Animation).play("ui_shift_tease");
            this.shiftNode.getComponent(cc.Animation).once(cc.Animation.EventType.FINISHED, function () {
              var X = E.X;
              E.X = undefined;
              if (X) {
                X();
              }
            });
          };
          H.prototype.teaseUp = function (I, K) {
            var E = this;
            this.Z = K;
            this.shiftNode.getComponent(cc.Animation).play("ui_shift_in_tease");
            this.shiftNode.getComponent(cc.Animation).once(cc.Animation.EventType.FINISHED, function () {
              var Q = E.Z;
              E.Z = undefined;
              if (Q) {
                Q();
              }
            });
          };
          __decorate([g(cc.Node)], H.prototype, "shiftNode", undefined);
          return __decorate([f], H);
        }(cc.Component);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, LX],
    'Utils': [function (z, L) {
      'use strict';

      if (!cc._RF.push(L, "03755Dj0/VFQbz7rFuRrlJG", "Utils")) {
        var Y = {
          convertNodeSpace: "convertToNodeSpace",
          convertNodeSpaceAR: "convertToNodeSpaceAR",
          getAbsolutePos: "getAbsolutePosition",
          getAbsoluteXPos: "getAbsoluteX",
          getAbsoluteYPos: "getAbsoluteY",
          setAbsolutePos: "setAbsolutePosition",
          setAbsoluteXPos: "setAbsoluteX",
          setAbsoluteYPos: "setAbsoluteY",
          transferToNewParent: "transferToParent",
          getSharedSimpleScheduler: "getSharedScheduler",
          delay: "delayCallback",
          timeout: "timeoutCallback",
          selector: "selectorCallback",
          sequence: "sequenceCallback",
          spawn: "spawnCallback",
          waterfall: "waterfCallback",
          condition: "condCallback",
          defer: "deferCallback",
          tick: "tickCallback",
          observe: "observeCallback",
          formatLeadingZero: "formatTwoDigit",
          formatDateTime: "formatDate",
          isRightToLeft: "isRTL",
          getLocationProtocol: "getProtocol",
          getLocationOrigin: "getOrigin"
        };
        var l = System.get("common").Utils;
        var r = function (G, q) {
          var c = {};
          for (var f in q) if (G.hasOwnProperty(f)) {
            c[G[f]] = q[f];
          } else {
            c[f] = q[f];
          }
          return c;
        }(Y, l);
        for (var v in r) if (r.hasOwnProperty(v)) {
          L.exports[v] = r[v];
        }
        L.exports.__esModule = true;
        if (null == l.sharedScheduler) {
          L.exports.sharedScheduler = r.getSharedScheduler();
        }
        cc._RF.pop();
      }
    }, {}],
    'ViewControllerTransition': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "8e202781KBBRIxVxe3NWQ9e", "ViewControllerTransition")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = function () {
          function v() {}
          v.prototype.transitionDuration = function () {
            return 0.3;
          };
          v.prototype.animateTransition = function () {};
          v.prototype.animationEnd = function () {};
          return v;
        }();
        Y["default"] = r;
        cc._RF.pop();
      }
    }, {}],
    'ViewController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "ef8ab8zk59N1LEX0M2uhmRU", "ViewController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("UIKitUtils");
        var G = z("UIKit");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.title = '';
            I.leftItem = undefined;
            I.middleItem = undefined;
            I.rightItem = undefined;
            I.fa = undefined;
            I.Zb = undefined;
            return I;
          }
          __extends(H, b);
          Object.defineProperty(H.prototype, "navigator", {
            'get': function () {
              return this.fa;
            },
            'set': function (I) {
              this.fa = I;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "view", {
            'get': function () {
              return this.node;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(H.prototype, "safeAreaInsets", {
            'get': function () {
              var I;
              var K;
              var E;
              var Q;
              if (!this.Zb) {
                I = v.deviceHasNotch();
                K = v.isIphone();
                E = v.isNotBrowserMode();
                Q = shell.is1959Supported;
                this.Zb = I && E && Q ? G.safeArea.iphone_x : I && Q ? {
                  'top': G.safeArea.normal.top,
                  'left': G.safeArea.iphone_x.left,
                  'bottom': G.safeArea.iphone_x.bottom,
                  'right': G.safeArea.iphone_x.right
                } : K && E ? G.safeArea.iphone : G.safeArea.normal;
              }
              return this.Zb;
            },
            'enumerable': false,
            'configurable': true
          });
          H.prototype.onEnable = function () {};
          H.prototype.onDisable = function () {};
          H.prototype.viewWillAppear = function () {};
          H.prototype.viewDidAppear = function () {};
          H.prototype.viewWillDisappear = function () {};
          H.prototype.viewDidDisappear = function () {};
          H.prototype.viewWillLayoutSubviews = function () {};
          H.prototype.viewDidLayoutSubviews = function () {};
          __decorate([g(cc.String)], H.prototype, "title", undefined);
          return __decorate([f], H);
        }(cc.Component);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, Lo],
    'WalletHandlers': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "16fa48YcbZClp+85Xk1WOH4", "WalletHandlers")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.setupWallets = undefined;
        Y.setupWallets = function (r) {
          var v = r.dataSource;
          var G = r.settingMenuHelper;
          var q = r.walletHelper;
          var c = r.callback;
          var f = v.playerModel.currencySymbol;
          q.setup({
            'openWalletMenuFunc': G.openWalletMenu.bind(G),
            'setFreeGameModeFunc': G.setFreeGameMode.bind(G),
            'currencySymbol': f,
            'footerController': r.settingWalletPanelController
          });
          q.setupWallet(v.lastTransactionRawData);
          if (c) {
            c();
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'WalletHelper': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "1ca2eEH71NDaahNBchOvZgw", "WalletHelper")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.walletHelper = undefined;
        var v;
        var G = z("SettingInfoFooterController");
        var q = z("Utils");
        var f = z("BVFramework");
        (function (b) {
          b[b.INACTIVE = 0x0] = "INACTIVE";
          b[b.ACTIVE = 0x1] = "ACTIVE";
          b[b.EXPIRED = 0x2] = "EXPIRED";
          b[b.CONVERTED = 0x3] = "CONVERTED";
          b[b.COMPLETED = 0x4] = "COMPLETED";
          b[b.NEW = 0x5] = "NEW";
          b[b.DISCARDED = 0x6] = "DISCARDED";
          b[b.LOCKED = 0x7] = "LOCKED";
        })(v || (v = {}));
        var g = cc._decorator.ccclass;
        var Z = new (function (b) {
          function H() {
            var I = null !== b && b.apply(this, arguments) || this;
            I.$b = false;
            I.tS = false;
            return I;
          }
          __extends(H, b);
          H.prototype.init = function (I) {
            var K = this;
            this.ta = I.getGameInfo;
            var E = f.getGameContext();
            E.on("Game.TransactionInfoUpdated", function (Q) {
              K.iS = Q.payload;
              if (K.tS) {
                var X = K.iS;
                if (K.isFreeGameMode()) {
                  K.sS(X.wfg.gc);
                } else if (K.isBonusGameMode()) {
                  K.eS(X.wbn.bra);
                }
                K.tS = false;
              }
            });
            E.on("Game.HasNewWallet", function () {
              K.nS.activateWalletNotify(true);
            });
          };
          H.prototype.processInitGameInfo = function (I, K) {
            var E = this;
            var Q = I.dt.ls.si;
            this.$b = I.dt.inwe;
            var X = function (A) {
              if (A) {
                switch (A.s) {
                  case v.EXPIRED:
                  case v.DISCARDED:
                  case v.INACTIVE:
                    if (!E.ta) {
                      throw Error("Wallethelper :: processInitGameInfo : getGameInfo callback not found!");
                    }
                    return void E.ta("0_C", function () {
                      if (K) {
                        K();
                      }
                    });
                }
              }
              if (K) {
                K();
              }
            };
            switch (Q.wt) {
              case 'B':
                X(Q.wbn);
                break;
              case 'G':
                X(Q.wfg);
                break;
              default:
                if (K) {
                  K();
                }
            }
          };
          H.prototype.setup = function (I) {
            this.oS = I.setFreeGameModeFunc;
            this.nS = I.footerController;
            this.nS.activateWalletNotify(this.$b);
          };
          H.prototype.setupWallet = function (I) {
            var K = this.nS;
            var E = this.oS;
            var Q = I.wfg;
            var X = I.wbn;
            if (X) {
              var A = X.bra !== X.ibra;
              if (E) {
                E(false);
              }
              K.showCustomInfoFooter();
              this.eS(X.bra, A);
              K.setWalletNavigateIcon(G.WALLET_FOOTER_TYPE.BONUS);
            } else if (Q) {
              A = Q.gc !== Q.tg;
              if (E) {
                E(true);
              }
              K.showCustomInfoFooter();
              this.sS(Q.gc, A);
              K.setWalletNavigateIcon(G.WALLET_FOOTER_TYPE.FREE_GAME);
            } else {
              if (E) {
                E(false);
              }
              K.hideCustomInfoFooter();
              K.setWalletNavigateIcon(G.WALLET_FOOTER_TYPE.CASH);
            }
            this.iS = I;
          };
          H.prototype.hasFreeGame = function () {
            return this.isFreeGameMode() && this.iS.wfg.gc > 0x0;
          };
          H.prototype.spin = function (I) {
            if (this.isFreeGameMode()) {
              var K = this.iS.wfg.gc;
              this.sS(K - 0x1);
              this.tS = true;
            } else if (this.isBonusGameMode()) {
              var E = this.iS.wbn.bra;
              var Q = I > E ? 0x0 : E - I;
              this.eS(Q);
              this.tS = true;
            }
          };
          H.prototype.isFreeGameMode = function () {
            return this.iS && this.iS.wfg;
          };
          H.prototype.isBonusGameMode = function () {
            return this.iS && this.iS.wbn;
          };
          H.prototype.isWalletCompleted = function () {
            var I = this.iS;
            var K = I.wfg;
            var E = I.wbn;
            if (K || E) {
              switch (K ? K.s : E.s) {
                case v.CONVERTED:
                case v.COMPLETED:
                  return true;
              }
            }
            return false;
          };
          H.prototype.cleanUp = function () {
            this.nS = undefined;
          };
          H.prototype.sS = function (I, K) {
            if (undefined === K) {
              K = true;
            }
            this.nS.setCustomMiddleInfoFooter(I, K);
          };
          H.prototype.eS = function (I, K) {
            if (undefined === K) {
              K = true;
            }
            this.nS.setCustomMiddleInfoFooter(q.formatCurrency(I), K);
          };
          return __decorate([g("WalletHelper")], H);
        }(cc.Object))();
        Y.walletHelper = Z;
        cc._RF.pop();
      }
    }, LA],
    'WebSocketHandler': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "d571cdfj6pHMqHdyAI82QnG", "WebSocketHandler")) {
        var L = System.get("bvframework").WebSocketHandler;
        for (var Y in L) if (L.hasOwnProperty(Y)) {
          z.exports[Y] = L[Y];
        }
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'WildItemController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "9d45e1LqR9AHbq4NAqXoeWW", "WildItemController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("Utils");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.wildSpine = undefined;
            return b;
          }
          __extends(Z, g);
          Z.prototype.init = function (b) {
            this.wildSpine.skeletonData = b;
          };
          Z.prototype.setup = function () {
            this.wildSpine.clearTracks();
            this.wildSpine.setToSetupPose();
          };
          Z.prototype.playIdle = function () {
            var b = this;
            this.wildSpine.timeScale = 0x1;
            this.wildSpine.clearTracks();
            this.wildSpine.setToSetupPose();
            r.deferCallback()(function () {
              b.wildSpine.setAnimation(0x0, "idle", true);
            });
          };
          Z.prototype.unuse = function () {
            this.cS();
          };
          Z.prototype.cS = function () {
            this.node.stopAllActions();
            this.wildSpine.clearTracks();
            this.wildSpine.setToSetupPose();
          };
          Z.prototype.destroy = function () {
            this.unuse();
            return g.prototype.destroy.call(this);
          };
          __decorate([q(sp.Skeleton)], Z.prototype, "wildSpine", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, LV],
    'WildParticleItemController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "ce19axFpJNLbbqVTwfZz+hx", "WildParticleItemController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var r = z("Utils");
        var v = cc._decorator;
        var G = v.ccclass;
        var q = v.property;
        var f = function (g) {
          function Z() {
            var b = null !== g && g.apply(this, arguments) || this;
            b.anim = undefined;
            return b;
          }
          __extends(Z, g);
          Z.prototype.play = function (b, H, I, K) {
            var E = this;
            var Q = this.node.parent.convertToNodeSpaceAR(b);
            this.node.position = Q;
            r.delayCallback(H)(function () {
              E.anim.play();
            });
            this.anim.on(cc.Animation.EventType.FINISHED, function () {
              I.put(E.node);
              if (K) {
                K();
              }
            });
          };
          Z.prototype.unuse = function () {
            this.anim.stop();
            this.anim.setCurrentTime(0x0);
            this.anim.node.getComponent(cc.Sprite).spriteFrame = undefined;
          };
          Z.prototype.reuse = function () {
            this.anim.stop();
            this.anim.setCurrentTime(0x0);
            this.anim.node.getComponent(cc.Sprite).spriteFrame = undefined;
          };
          __decorate([q(cc.Animation)], Z.prototype, "anim", undefined);
          return __decorate([G], Z);
        }(cc.Component);
        Y["default"] = f;
        cc._RF.pop();
      }
    }, LW],
    'WinLine.spec': [function (z, L, Y) {
      'use strict';

      var l = {
        value: true
      };
      if (!cc._RF.push(L, "1ad51xvdcdBSrnjptTWh1P+", "WinLine.spec")) {
        Object.defineProperty(Y, "__esModule", l);
        Y.winHighlightShown = undefined;
        Y.winHighlightShown = function () {
          var r = System.get("automation") && System.get("automation").GameData;
          if (r) {
            r.emit("WinHighlightShown");
          }
        };
        cc._RF.pop();
      }
    }, {}],
    'WinLinesModel': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "24a5eWztK9Pkb2VKy4b0JAV", "WinLinesModel")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.WinLinesModel = undefined;
        var r = function () {
          function v(G) {
            if (G) {
              this.hS = JSON.parse(JSON.stringify(G));
              this.rS = Object.keys(this.hS);
            }
          }
          v.prototype.getWinLinesByPosition = function (G) {
            return this.hS[G];
          };
          Object.defineProperty(v.prototype, "winPositions", {
            'get': function () {
              return this.rS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(v.prototype, "rawData", {
            'get': function () {
              return JSON.parse(JSON.stringify(this.hS));
            },
            'enumerable': false,
            'configurable': true
          });
          return v;
        }();
        Y.WinLinesModel = r;
        cc._RF.pop();
      }
    }, {}],
    'WinRollBaseController': [function (L, Y, l) {
      'use strict';

      if (!cc._RF.push(Y, "adab7txcZBOsJ6NClaGwrmO", "WinRollBaseController")) {
        var v = {
          value: true
        };
        Object.defineProperty(l, "__esModule", v);
        var G = {
          playing: -0x1,
          stop: -0x1
        };
        var q = L("NumberDisplayInterface");
        var f = cc.Enum(G);
        var g = cc._decorator;
        var Z = g.ccclass;
        var b = g.property;
        var H = function (I) {
          function K() {
            var E = null !== I && I.apply(this, arguments) || this;
            E.aS = 0x2;
            E.uS = 0x2;
            E.lS = 0x2;
            E.fS = false;
            E.dS = false;
            E.nb = 0x0;
            E.vS = 0x0;
            E.Pu = 0x0;
            E._S = 0x0;
            E.Vo = f.stop;
            E.hb = [];
            E.rb = undefined;
            E.mS = undefined;
            E.defaultVelocityStallDuration = 0x8;
            E.displayController = undefined;
            return E;
          }
          __extends(K, I);
          K.prototype.setNumbersCallback = function (E) {
            this.hb = E;
          };
          K.prototype.setWinThresholds = function (E, Q, X) {
            this.pS = E;
            this.bS = Q;
            this.SS = X;
            this.fS = true;
          };
          K.prototype.gS = function (E, Q, X) {
            return X < this.defaultVelocityStallDuration ? Q : E + Math.pow(0x2, X - this.defaultVelocityStallDuration);
          };
          K.prototype.setWinDurations = function (E, Q) {
            this.aS = E;
            this.uS = Q;
            this.dS = true;
          };
          K.prototype.setVelocityCalculation = function (E) {
            this.mS = E;
          };
          K.prototype.play = function (E, Q) {
            if (this.Cb()) {
              this.Vo = f.playing;
              this.rb = Q;
              this.displayController.clear();
              this.nb = 0x0;
              this.CS = 0x0;
              this.vS = 0x0;
              this.Pu = E;
              var X = this.bS;
              this.yS = this._S = X / this.aS;
            }
          };
          K.prototype.skip = function () {
            var E = this;
            if (this.Vo === f.playing) {
              this.stop(false);
              this.displayController.displayNumber(this.Pu, true, function () {
                E.MS(E.Pu);
                E.rb = null;
              });
            }
          };
          K.prototype.Cb = function () {
            this.dS;
            if (!!this.hb) {
              this.hb.length;
            }
            if (!this.mS) {
              this.mS = this.gS;
            }
            return !!this.fS;
          };
          K.prototype.stop = function (E) {
            if (undefined === E) {
              E = true;
            }
            if (E) {
              this.displayController.clear();
              this.rb = null;
            }
            this.nb = 0x0;
            this.Vo = f.stop;
          };
          K.prototype.update = function (E) {
            if (this.Vo === f.playing) {
              if (this.CS >= this.SS) {
                this.nb += E;
                this._S = this.mS(this.yS, this._S, this.nb, E);
                this.CS = this.CS + this._S * E * (0.9 + 0.2 * Math.random());
              } else {
                this.CS = this.CS + this._S * E * (0.9 + 0.2 * Math.random());
              }
              this.Ab();
            }
          };
          K.prototype.MS = function (E) {
            var Q = this.uS;
            var X = this.SS;
            var A = this.bS;
            if (E === A) {
              var V = X - A;
              this.yS = this._S = V / Q;
            }
            if (E === X) {
              this.yS = this._S = (X - A) / Q;
            }
            if (this.rb) {
              this.rb(E);
            }
          };
          K.prototype.Ab = function () {
            var E = this;
            var Q = this.CS;
            var X = this.hb;
            var A = this.Pu;
            if (A <= Q) {
              this.stop(false);
              return void this.displayController.displayNumber(A, true, function () {
                E.MS(A);
                E.rb = null;
              });
            }
            if (undefined !== X && X.length && X[0x0] <= Q) {
              var V = X.shift();
              this.displayController.displayNumber(Q, false, function () {
                E.MS(V);
              });
            } else {
              this.displayController.displayNumber(Q, false);
            }
          };
          __decorate([b(cc.Float)], K.prototype, "defaultVelocityStallDuration", undefined);
          __decorate([b({
            'type': q["default"],
            'override': true
          })], K.prototype, "displayController", undefined);
          return __decorate([Z], K);
        }(cc.Component);
        l["default"] = H;
        cc._RF.pop();
      }
    }, LJ],
    'WinRollController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "00616+xbv9I/qAMwXqWbdkY", "WinRollController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("NumberDisplayController");
        var G = z("WinRollBaseController");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function H() {
            return null !== b && b.apply(this, arguments) || this;
          }
          var I = {
            type: v["default"],
            override: true
          };
          __extends(H, b);
          __decorate([g(I)], H.prototype, "displayController", undefined);
          return __decorate([f], H);
        }(G["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, Lw],
    'WinRollCurveController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "a210c4WXCdAmKbdwKdx5P30", "WinRollCurveController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("NumberCurvedController");
        var G = z("WinRollBaseController");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function I() {
            return null !== b && b.apply(this, arguments) || this;
          }
          var H = {
            type: v["default"],
            override: true
          };
          __extends(I, b);
          __decorate([g(H)], I.prototype, "displayController", undefined);
          return __decorate([f], I);
        }(G["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, LO],
    'WinRollLabelController': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "f7e1diBGQ5A8KF1oMrYEMNU", "WinRollLabelController")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        var v = z("NumberLabelController");
        var G = z("WinRollBaseController");
        var q = cc._decorator;
        var f = q.ccclass;
        var g = q.property;
        var Z = function (b) {
          function I() {
            return null !== b && b.apply(this, arguments) || this;
          }
          var H = {
            type: v["default"],
            override: true
          };
          __extends(I, b);
          __decorate([g(H)], I.prototype, "displayController", undefined);
          return __decorate([f], I);
        }(G["default"]);
        Y["default"] = Z;
        cc._RF.pop();
      }
    }, La],
    'WinThresholdsModel': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "43fa7kpruFLXK4fYDhrIgSc", "WinThresholdsModel")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.WinThresholdsModel = undefined;
        var r = z("Utils");
        var v = function () {
          function G(q) {
            if (q) {
              this.hS = JSON.parse(JSON.stringify(q));
              this.AS = q.mw;
              this.IS = q.bw;
              this.wS = q.mgw;
              this.OS = q.smgw;
            }
          }
          G.prototype.getAllThresholds = function (q, c, f) {
            var g = q * c * f;
            return {
              'mediumWinThreshold': r.toDecimalWithExp(g * this.AS, 0x2),
              'bigWinThreshold': r.toDecimalWithExp(g * this.IS, 0x2),
              'megaWinThreshold': r.toDecimalWithExp(g * this.wS, 0x2),
              'superMegaWinThreshold': r.toDecimalWithExp(g * this.OS, 0x2)
            };
          };
          Object.defineProperty(G.prototype, "rawData", {
            'get': function () {
              return this.hS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(G.prototype, "mediumWin", {
            'get': function () {
              return this.AS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(G.prototype, "bigWin", {
            'get': function () {
              return this.IS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(G.prototype, "megaWin", {
            'get': function () {
              return this.wS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(G.prototype, "superMegaWin", {
            'get': function () {
              return this.OS;
            },
            'enumerable': false,
            'configurable': true
          });
          return G;
        }();
        Y.WinThresholdsModel = v;
        cc._RF.pop();
      }
    }, LF],
    'WinValuesModel': [function (z, L, Y) {
      'use strict';

      if (!cc._RF.push(L, "501f6RTfh9LVInQJ/Y+n54G", "WinValuesModel")) {
        var l = {
          value: true
        };
        Object.defineProperty(Y, "__esModule", l);
        Y.WinValuesModel = undefined;
        var r = function () {
          function v(G) {
            if (G) {
              this.hS = JSON.parse(JSON.stringify(G));
              this.HS = Object.keys(this.hS);
            }
          }
          v.prototype.getWinValueByPosition = function (G) {
            return this.hS[G];
          };
          Object.defineProperty(v.prototype, "winValuePositions", {
            'get': function () {
              return this.HS;
            },
            'enumerable': false,
            'configurable': true
          });
          Object.defineProperty(v.prototype, "rawData", {
            'get': function () {
              return JSON.parse(JSON.stringify(this.hS));
            },
            'enumerable': false,
            'configurable': true
          });
          return v;
        }();
        Y.WinValuesModel = r;
        cc._RF.pop();
      }
    }, {}],
    'XHRFactory': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "f3dd4hmiBJHSqrMVzx2qXWg", "XHRFactory")) {
        var L = System.get("common").XHR;
        z.exports.XHRFactory = L;
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'XHRHandler': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "77926JsF5hDL5NbzKF89qZh", "XHRHandler")) {
        var L = System.get("bvframework").XHRHandler;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}],
    'XHRHelper': [function (N, z) {
      'use strict';

      if (!cc._RF.push(z, "d29eaTApqFCCLK6u/sH0xO/", "XHRHelper")) {
        var L = System.get("bvframework").XHRHelper;
        for (var Y in L) z.exports[Y] = L[Y];
        z.exports.__esModule = true;
        cc._RF.pop();
      }
    }, {}]
  }, {}, ["GameLayout", "AnimParticleSystem", "AnimParticleSystemPoolHandler", "AnimParticleSystemUtils", "Appearance", "ButtonTheme", "LabelTheme", "AdapterEventEmitter", "AudioAdapter", "AudioAdapterConstant", "AudioFactory", "NoSoundAdapter", "AutomationDecorator", "ButtonHitTest", "APIClient", "AnalyticsHelper", "BVFramework", "BVFrameworkEnum", "DataSource", "ErrorHandler", "GameEventHandler", "GameHeaderHelper", "GameInitializationHandler", "GameMaintenanceHandler", "GameMaintenanceModel", "GamePluginModel", "GameTitle", "GameUtils", "LaunchConfig", "NotifyHelper", "OperatorJurisdictionModel", "PlayerModel", "Printer", "QuitGame", "QuitGameWithEvent", "RegionUtils", "RequestHandler", "ResourceQualifierHelper", "RetryHandler", "SystemModel", "TransactionModel", "TransactionStateMachineHandler", "WebSocketHandler", "XHRHandler", "XHRHelper", "ClickEffectController", "CanvasResizeBroadcaster", "CommonDummy", "Deserializer", "JSONSerializer", "MultiResHandler", "Preference", "ResRC", "Serializer", "Utils", "XHRFactory", "CreatorTweaks", "TweaksData", "HitPassThrough", "InfoboardMessageController", "InfoboardMessageController.spec", "JakeSlotGameTemplate", "SpinButtonController", "TweaksConfig", "SlotAnalyticsEnum", "SlotGameConstants", "NormalPrizeDecorator", "NormalResultDecorator", "NormalSpinDecorator", "AutoSpinHandler", "SettingMenuHandlers", "SpinConfigHandler", "SystemFeatureHandler", "WalletHandlers", "SlotAnalyticsHelper", "BetRepository", "SlotSystemModel", "SlotTransactionModel", "WinLinesModel", "WinThresholdsModel", "WinValuesModel", "SlotStateMachine", "IdleState", "PrizeState", "ResultState", "SpinState", "NumberCurvedController", "NumberDisplayController", "NumberDisplayInterface", "NumberLabelController", "NumberRollBaseController", "NumberRollController", "NumberRollCurveController", "NumberRollLabelController", "TimedWinRollBaseController", "TimedWinRollController", "TimedWinRollCurveController", "TimedWinRollLabelController", "WinRollBaseController", "WinRollController", "WinRollCurveController", "WinRollLabelController", "RefreshWorldHandler", "ResourceLoader", "BetModifierButton", "GenericSettingButton", "SettingMenuController", "SettingSlider", "SettingSliderNum", "SettingSliderSingle", "SettingSliderSingleNum", "SettingTurboSpinButton", "SoundButton", "SpinOptionsButton", "SubControllerConfig", "TurboButtonEffect", "NumberLabelControllerLite", "SettingInfoFooterController", "LandscapeSettingInfoFooterController", "ButtonBackground", "LandscapeSettingMenuController", "LandscapeSoundButton", "MaxBetButton", "SettingMenuButtonHelper", "SettingMenuHelper", "SlotScrollerController.spec", "SlotDataHandler", "SlotHelper", "SlotItemHandler", "SlotSymbol", "BaseScroller", "DefaultStartScroller", "DefaultStopScroller", "SlotScrollerController", "SlotGenerator", "SlotItem", "SlotItemPool", "SlotView", "SpaceBarInterrupter", "ButtonController", "PopOutItem", "PopOutItemHandler", "PopOutTintController", "SinglePayoutModel", "SymbolPayoutController", "SymbolPayoutPanelGenerator", "BACKUP_DATA", "UIAppearanceHelper", "BaseListViewCell", "BookView", "Button", "DrawLine", "GridView", "LabelLocalized", "ListView", "ListViewCellUpdateAnim", "ListViewEnum", "NavigationBar", "NavigationController", "NavigationDefaultTransition", "PageControl", "PageControlButton", "ScrollViewEx", "SliderEx", "TabBar", "TabBarController", "TabBarItem", "TransitionContext", "TransitionEnum", "UIKit", "UIKitUtils", "ViewController", "ViewControllerTransition", "WalletHelper", "Line", "LineController", "LinePrefabController", "AngpaoController", "BackgroundController", "BackgroundControllerTwo", "BigSymbolItemController", "BigWinController", "BigWinFireworkController", "BigWinFireworkItem", "ColumnTintController", "CustomAnimParticleSystem", "FeatureWinController", "FireworkItem", "ForegroundController", "GApiClient", "GConstants", "GPopOutItem", "GSpinButtonController", "GeneralAudioConstant", "InfoboardController", "Main", "PayLineController", "PayLineItemController", "PayLineNumberController", "PayLineNumberItem", "PayOutEffectController", "PayOutItem", "PaySelectEffectController", "PaySelectItem", "SlotTintController", "StickyController", "StickyItemController", "TigerController", "TrailParticleEffectController", "TrailParticleItemController", "Transitions", "UIShiftController", "WildItemController", "WildParticleItemController", "APIClient.spec", "BigWinController.spec", "SlotController.spec", "SpinButtonController.spec", "WinLine.spec", "BGMHandler", "GRefreshWorldHandler", "NodePoolHandler", "ReplayModeHandler", "RespinReelStatusHandler", "SkipHandler", "SpineConfigHandler", "BaseUIHelper", "NormalUIHelper", "RespinUIHelper", "AudioAssetConfig", "CustomAssetConfig", "GeneralAssetConfig", "LoadingController", "GameTweaksConfig", "GameTweaksData", "GDataSource", "GSlotTransactionModel", "GNormalStopScroller", "GSlotHelper", "GSlotItem", "GSlotItemPool", "NormalSlotHandler", "SlotController", "SlotHandler", "SlotProperties", "SymbolImageHandler", "GRespinDecorator", "GResultDecorator", "GNormalGameState", "GRespinGameState", "GIdleState", "GNormalResultState", "GPrizeState", "GRespinResultState", "GRespinState", "GSpinState", "AudioManager", "GameAudioAdapter", "GamePreference", "RtConfig"]);
}();
//# sourceMappingURL=index.js.map